; $ID:	D3_INTERP_DEMO.PRO,	2020-07-01-12,	USER-KJWH	$
;+
; ######################################################################### 
  PRO D3_INTERP_DEMO

; THIS PROGRAM IS A DEMO ROUTINE FOR D3_INTERP 
;   [DEMONSTRATING THAT D3_INTERP MAY BE RUN AFTER EACH TIME MORE FILES HAVE BEEN ADDED TO THE D3_FILE BY D3_MAKE]
;  
; CATEGORY: D3 FAMILY
;
; CALLING SEQUENCE:  D3_INTERP_DEMO
;
; INPUTS: 

; OPTIONAL INPUTS:
;   NONE:
; KEYWORD PARAMETERS: NONE

; MODIFICATION HISTORY:
;     APR 20, 2017  WRITTEN BY: J.E.O'REILLY
;     MAY 04, 2017 - JEOR: PRODS_2PNG,FILE,/BUFFER,/OVERWRITE,/ADD_DATE_BAR,DIR_OUT=DIR_OUT,TAG='DATA', BIT_DEPTH=0
;     AUG 03, 2017 - KJWH: Updated TEST_DAYS_KEEP block
;     AUG 04, 2016 - KJWH: Added LOOP_ON_YEARS block
;
;-
; #########################################################################

;**************************
  ROUTINE  = 'D3_INTERP_DEMO'
;**************************
  SL = PATH_SEP()
  
  
;###############################################################################
  PRINT,'DEFINE DIRIRECTORIES FOR ALL STEPS BELOW'
  PRINT,'IN APPROXIMATE ORDER OF PROCESSING'
  FOLDERS = ['DATA','STATS','D3','INTERP_SAV','PNG','AVI','PSERIES']
  ; DIR = FILE_FOLDERS(!S.DATASETS + 'RI_SOUND_CHLOR_A\', FOLDERS=FOLDERS)  ; JAY - I don't have FILE_FOLDERS - Kim
  DIR = !S.DEMO + ROUTINE + SL 
  
;D3_FILE = FLS(DIR.D3 , 'D3*-DAT.FLT')
;|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
;
;===> SWITCHES CONTROLLING WHICH PROCESSING STEPS TO DO [ IN THE CORRECT ORSER]:

DO_D3_MAKE_LOOP  	       = '';'SVI' [USE 'I' ONLY THE FIRST TIME] ! AFTERWARDS DO NOT USE 'I' [INITIALIZE-REWRITES THE ENTIRE D3_FILE]
TEST_DAYS_KEEP           = ''
TEST_AVHRR_L3            = ''
TEST_L3B_SUBSET          = 'V'
LOOP_ON_YEARS            = ''
DO_D3_INTERP_SAVES       = ''
DO_D3_INTERP_SAVES_2PNG  = ''; 'VO' [VERBOSE,OVERWRITE]
DO_PNG_2MOVIE            = ''; 'VO' [VERBOSE,OVERWRITE]
D3_2PSERIES              = ''
DO_PSERIES_LNP           = ''
;SSSSS     END OF SWITCHES     SSSSS
;|||||||||||||||||||||||||||||||||||




;*********************************
IF KEY(DO_D3_MAKE_LOOP) THEN BEGIN
;*********************************
  PRINT,'THIS STEP LOOPS ON YEARS RUNNING D3_MAKE THEN D3_INTERP TO TEST THE NEW SCHEME OF INTERPOLATING '
  , 'DO_D3_MAKE_LOOP'
  SWITCHES,DO_D3_MAKE_LOOP,STOPP=STOPP,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,INIT=INIT,R_FILES=R_FILES,R_DATASETS=R_DATASETS
  FILES = FLS(DIR.STATS,'D_*.SAV') & PN,FILES
  FP = PARSE_IT(FILES)

  IF STOPP THEN STOP
  SETS = WHERE_SETS(FP.YEAR_START)
  ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
  FOR NTH = 0,NOF(SETS) -1 DO BEGIN
; FOR NTH = 0,1 DO BEGIN ; FOR TESTING DAYS_KEEP & PKEEP
    FILES = FLS(DIR.STATS,'D_*.SAV') & PN,FILES
    FP = PARSE_IT(FILES)
    SET = SETS[NTH]
    YEAR = SET.VALUE
    POF,NTH,SETS
    P,'YEAR  ',YEAR
  IF NTH EQ 0 THEN INIT = 1 ELSE INIT = 0
    OK = WHERE(FP.YEAR_START EQ YEAR,COUNT)
    IF COUNT GE 1 THEN FILES = FILES[OK] & PN,FILES,'D_FILES'
    D3_MAKE,FILES,VERBOSE = VERBOSE,DIR_D3=DIR_D3,D3_FILE=D3_FILE,INIT=INIT
;    IF NTH EQ 1 THEN STOP
    D3_INTERP,D3_FILE,SPAN=30,VERBOSE=VERBOSE
  ENDFOR;FOR NTH = 0,NOF(SETS) -1 DO BEGIN
  ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
  
  , 'DO_D3_MAKE_LOOP'
ENDIF ; IF KEY(DO_D3_MAKE_LOOP)THEN BEGIN
; ||||||||||||||||||||||||||||||||||


; *********************************
  IF KEY(TEST_DAYS_KEEP) THEN BEGIN
; *********************************
    PRINT,'THIS STEP  TESTS DAYS_BEFORE AND DAYS_KEEP IN D3_INTERP '
    , 'TEST_DAYS_KEEP'
    SWITCHES,TEST_DAYS_KEEP,STOPP=STOPP,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,INIT=INIT,R_FILES=R_FILES,R_DATASETS=R_DATASETS
    
    DIR_FILES = DIR + 'SAVE' + SL
    DIR_D3    = DIR + 'D3' + SL
    DIR_SAV   = DIR_D3 + 'INTERP_SAV' + SL
    DIR_PNG   = DIR_D3 + 'INTERP_PNG' + SL & DIR_TEST, DIR_PNG
    DIR_MOV   = DIR_D3 + 'INTERP_MOV' + SL & DIR_TEST, DIR_MOV
    
    D3_FILE = FLS(DIR_D3 + 'D3-*',COUNT=COUNT) & IF COUNT GE 1 THEN FILE_DELETE, D3_FILE,/VERBOSE ; DELETE FILES TO START NEW
    
    FILES = FLS(DIR_FILES+'D_*.SAV',DATERANGE=[20020101,20020131]) & PN,FILES
    IF STOPP THEN STOP
    TIC
    D3_MAKE, FILES, VERBOSE=VERBOSE, DIR_D3=DIR_D3, D3_FILE=D3_FILE, INIT=INIT
    D3_INTERP,D3_FILE,SPAN=30,VERBOSE=VERBOSE
    TOC
    
    FILES = FLS(DIR_FILES+'D_*.SAV',DATERANGE=[2002,2003]) & PN,FILES
    IF STOPP THEN STOP
    TIC
    D3_MAKE,FILES,VERBOSE = VERBOSE,DIR_D3=DIR_D3,D3_FILE=D3_FILE
    D3_INTERP,D3_FILE,SPAN=30,VERBOSE=VERBOSE
    TOC
    
    IF STOPP THEN STOP
    D3_INTERP_FILE= FLS(DIR_D3+'D3*-INTERP.FLT')
    D3_SAVES,D3_INTERP_FILE,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE
    
    FILES = FLS(DIR_SAV,'D_*.SAV') & PN,FILES
    FOR NTH = 0,N_ELEMENTS(FILES)-1 DO BEGIN
      PNG = REPLACE(FILES[NTH],[DIR_SAV,'.SAV'],[DIR_PNG,'.PNG'])
      IF FILE_MAKE(FILES[NTH],PNG,OVERWRITE=OVERWRITE) EQ 0 THEN CONTINUE
      PRODS_2PNG,FILES[NTH], BUFFER=1, OVERWRITE=OVERWRITE, DIR_OUT=DIR_PNG, BIT_DEPTH=0, /ADD_DATE_BAR, VERBOSE=VERBOSE
    ENDFOR;FOR NTH = 0,N_ELEMENTS(FILES)-1 DO BEGIN

    FILES = FLS(DIR_PNG ,'D_*.PNG') & PN,FILES,'PNG FILES'
    MOVIE, FILES, TYPE='MP4', DIR_OUT=DIR_MOV, VERBOSE=VERBOSE, OVERWRITE=OVERWRITE   
    
    IF STOPP THEN STOP
    
  
  , 'TEST_DAYS_KEEP'
ENDIF ; IF KEY(TEST_DAYS_KEEP)THEN BEGIN
; ||||||||||||||||||||||||||||||||||


; *********************************
IF KEY(TEST_AVHRR_L3) THEN BEGIN
  ; *********************************
  PRINT,'THIS STEP  TESTS DAYS_BEFORE AND DAYS_KEEP IN D3_INTERP '
  , 'TEST_DAYS_KEEP'
  SWITCHES,TEST_DAYS_KEEP,STOPP=STOPP,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,INIT=INIT,R_FILES=R_FILES,R_DATASETS=R_DATASETS

  DIR_FILES = !S.SST + 'AVHRR' + SL + 'L3B4' + SL + 'SAVE' + SL + 'SST' + SL
  DIR_D3    = DIR + 'D3' + SL + 'TEST_AVHRR_L3' + SL
  DIR_SAV   = DIR_D3 + 'INTERP_SAV' + SL & DIR_TEST, DIR_SAV
  DIR_PNG   = DIR_D3 + 'INTERP_PNG' + SL & DIR_TEST, DIR_PNG
  DIR_MOV   = DIR_D3 + 'INTERP_MOV' + SL & DIR_TEST, DIR_MOV

  D3_FILE = FLS(DIR_D3 + 'D3-*',COUNT=COUNT) & IF COUNT GE 1 AND KEY(INIT) THEN FILE_DELETE, D3_FILE,/VERBOSE ; DELETE FILES TO START NEW

  FILES = FLS(DIR_FILES+'D_*.SAV',DATERANGE=[20020101,20020131]) & PN,FILES
  IF STOPP THEN STOP
  TIC
  D3_MAKE, FILES, VERBOSE=VERBOSE, DIR_D3=DIR_D3, D3_FILE=D3_FILE, INIT=INIT
  D3_INTERP,D3_FILE,SPAN=30,VERBOSE=VERBOSE
  TOC

  FILES = FLS(DIR_FILES+'D_*.SAV',DATERANGE=[2002,2003]) & PN,FILES
  IF STOPP THEN STOP
  TIC
  D3_MAKE,FILES,VERBOSE = VERBOSE,DIR_D3=DIR_D3,D3_FILE=D3_FILE
  D3_INTERP,D3_FILE,SPAN=30,VERBOSE=VERBOSE
  TOC

  IF STOPP THEN STOP
  D3_INTERP_FILE= FLS(DIR_D3+'D3*-INTERP.FLT')
  D3_SAVES,D3_INTERP_FILE,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE

  FILES = FLS(DIR_SAV,'D_*.SAV') & PN,FILES
  FOR NTH = 0,N_ELEMENTS(FILES)-1 DO BEGIN
    PNG = REPLACE(FILES[NTH],[DIR_SAV,'.SAV'],[DIR_PNG,'.PNG'])
    IF FILE_MAKE(FILES[NTH],PNG,OVERWRITE=OVERWRITE) EQ 0 THEN CONTINUE
    PRODS_2PNG,FILES[NTH], BUFFER=1, OVERWRITE=OVERWRITE, DIR_OUT=DIR_PNG, BIT_DEPTH=0, /ADD_DATE_BAR, VERBOSE=VERBOSE
  ENDFOR;FOR NTH = 0,N_ELEMENTS(FILES)-1 DO BEGIN

  FILES = FLS(DIR_PNG ,'D_*.PNG') & PN,FILES,'PNG FILES'
  MOVIE, FILES, TYPE='MP4', DIR_OUT=DIR_MOV, VERBOSE=VERBOSE, OVERWRITE=OVERWRITE

  IF STOPP THEN STOP


  , 'TEST_DAYS_KEEP'
ENDIF ; IF KEY(TEST_DAYS_KEEP)THEN BEGIN
; ||||||||||||||||||||||||||||||||||

; *********************************
IF KEY(TEST_L3B_SUBSET) THEN BEGIN
  ; *********************************
  PRINT,'THIS STEP TEST THE L3BMAP SUBSET FUCTION OF D3_MAKE '
  , 'TEST_L3B_SUBSET'
  SWITCHES,TEST_L3B_SUBSET,STOPP=STOPP,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,INIT=INIT,R_FILES=R_FILES,R_DATASETS=R_DATASETS

  AMAP = 'L3B2'
  APROD = 'PAR'
  L3BMAP = 'NEC'

  DIR_FILES = !S.OC + 'MODISA' + SL + AMAP  + SL + 'NC' + SL + APROD + SL
  DIR_D3    = DIR + 'D3' + SL + 'TEST_L3B_SUBSET' + SL
  DIR_SAV   = DIR_D3 + 'INTERP_SAV' + SL & DIR_TEST, DIR_SAV
  DIR_PNG   = DIR_D3 + 'INTERP_PNG' + SL & DIR_TEST, DIR_PNG
  DIR_MOV   = DIR_D3 + 'INTERP_MOV' + SL & DIR_TEST, DIR_MOV

  D3_FILE = FLS(DIR_D3 + 'D3-*',COUNT=COUNT) & IF COUNT GE 1 AND KEY(INIT) THEN FILE_DELETE, D3_FILE,/VERBOSE ; DELETE FILES TO START NEW

  FILES = FLS(DIR_FILES+'A*PAR*.nc',DATERANGE=[20030601,20030611]) & PN,FILES
 
  IF STOPP THEN STOP
  TIC
  D3_MAKE, FILES, VERBOSE=VERBOSE, D3_PROD=APROD,DIR_OUT=DIR_D3, D3_FILE=D3_FILE, INIT=INIT, L3BMAP=L3BMAP
  D3_INTERP,D3_FILE,N_GOOD=5,VERBOSE=VERBOSE
  TOC

  D3_INTERP_FILE= FLS(DIR_D3+'D3*-INTERP.FLT')
  D3_SAVES,D3_INTERP_FILE,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE

  SFILES = FLS(DIR_SAV,'D_*.SAV',DATERANGE=[20030601,20030611])
  FILES = FLS(DIR_FILES+'A*PAR*.nc',DATERANGE=[20030601,20030611]) 
  FOR NTH = 0,N_ELEMENTS(SFILES)-1 DO BEGIN
    PNG = REPLACE(SFILES[NTH],[DIR_SAV,'.SAV'],[DIR_PNG,'.PNG'])
    IF FILE_MAKE(SFILES[NTH],PNG,OVERWRITE=OVERWRITE) EQ 0 THEN CONTINUE
    W = WINDOW(DIMENSIONS=[1024,512],BUFFER=BUFFER)
    PRODS_2PNG, FILES[NTH], MAPP=L3BMAP, DIR_OUT=DIR_PNG, PROD=APROD, /CURRENT, IMG_POS=[0,0,.5,1],TXT_TAGS=['PERIOD','NAME']
    PRODS_2PNG,SFILES[NTH], MAPP=L3BMAP,BUFFER=0, OVERWRITE=OVERWRITE, DIR_OUT=DIR_PNG, BIT_DEPTH=0, VERBOSE=VERBOSE,/CURRENT,IMG_POS=[.5,0,1,1],TXT_TAGS=['PERIOD','NAME']
    W.SAVE, PNG & W.CLOSE
  ENDFOR;FOR NTH = 0,N_ELEMENTS(FILES)-1 DO BEGIN

  FILES = FLS(DIR_PNG ,'D_*.PNG') & PN,FILES,'PNG FILES'
  MOVIE, FILES, TYPE='MP4', DIR_OUT=DIR_MOV, VERBOSE=VERBOSE, OVERWRITE=OVERWRITE

  IF STOPP THEN STOP


  , 'TEST_L3B_SUBSET'
ENDIF ; IF KEY(TEST_L3B_SUBSET)THEN BEGIN


; *********************************
  IF KEY(LOOP_ON_YEARS) THEN BEGIN
  ; *********************************
  PRINT,'THIS STEP RUNS THROUGH THE ENTIRE D3 PROCESSING STEPS, LOOPING ON YEARS '
  , 'LOOP_ON_YEARS'
  SWITCHES,LOOP_ON_YEARS,STOPP=STOPP,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,INIT=INIT,R_FILES=R_FILES,R_DATASETS=R_DATASETS

  DIR_FILES = DIR + 'SAVE' + SL
  DIR_D3    = DIR + 'D3' + SL
  DIR_SAV   = DIR_D3 + 'INTERP_SAV' + SL
  DIR_PNG   = DIR_D3 + 'INTERP_PNG' + SL & DIR_TEST, DIR_PNG
  DIR_MOV   = DIR_D3 + 'INTERP_MOV' + SL & DIR_TEST, DIR_MOV

  YEARS = YEAR_RANGE(2002,2005,/STRING)
  FOR N=0, N_ELEMENTS(YEARS)-1 DO BEGIN
    CASE N OF
      0:                   DATERANGE = [YEARS(N)+'0101',YEARS(N+1)+'0131']
      N_ELEMENTS(YEARS)-1: DATERANGE = [YEARS(N-1)+'1201',YEARS(N)+'1231']
      ELSE:                DATERANGE = [YEARS(N-1)+'1201',YEARS(N+1)+'0131']
    ENDCASE  
    SDATERANGE = [YEARS(N)+'0101',YEARS(N)+'1231']
  
    FILES = FLS(DIR_FILES+'D_*.SAV',DATERANGE=DATERANGE) & PN,FILES
    IF STOPP THEN STOP

    TIC
    D3_MAKE, FILES, VERBOSE=VERBOSE, DIR_D3=DIR_D3, D3_FILE=D3_FILE, INIT=INIT, DATERANGE=DATERANGE, OVERWRITE=OVERWRITE
    D3_INTERP,D3_FILE,SPAN=30,VERBOSE=VERBOSE
    D3_INTERP_FILE= FLS(DIR_D3+'D3_'+STRJOIN(DATERANGE,'_')+'-*-INTERP.FLT')
    D3_SAVES,D3_INTERP_FILE,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,DATERANGE=SDATERANGE
    TOC

  ENDFOR ; FOR N=0, N_ELEMENTS(YEARS)-1 DO BEGIN
  IF STOPP THEN STOP


  , 'LOOP_ON_YEARS'
ENDIF ; IF KEY(LOOP_ON_YEARS)THEN BEGIN
; ||||||||||||||||||||||||||||||||||

;*************************************
IF KEY(DO_D3_INTERP_SAVES) THEN BEGIN
;*************************************
  SWITCHES,DO_D3_INTERP_SAVES,STOPP=STOPP,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,INIT=INIT,R_FILES=R_FILES,R_DATASETS=R_DATASETS
  IF STOPP THEN STOP
  D3_FILE = FLS(DIR.D3,'D3-*DAT.FLT')
  IF EXISTS(D3_FILE) EQ 0 THEN STOP
  D3_INTERP_FILE= REPLACE(D3_FILE,'-DAT.FLT','-INTERP.FLT')
  IF EXISTS(D3_INTERP_FILE) EQ 0 THEN STOP
  D3_SAVES,D3_INTERP_FILE,DIR_SAV=DIR.INTERP_SAV,OVERWRITE=OVERWRITE
ENDIF;IF KEY(DO_D3_INTERP_SAVES) THEN BEGIN
;||||||||||||||||||||||||||||||||||||||||||

;******************************************
IF KEY(DO_D3_INTERP_SAVES_2PNG) THEN BEGIN
;******************************************
  , 'DO_D3_INTERP_SAVES_2PNG'
  SWITCHES,DO_D3_INTERP_SAVES_2PNG,STOPP=STOPP,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,INIT=INIT,R_FILES=R_FILES,R_DATASETS=R_DATASETS
  IF STOPP THEN STOP
  DIR_IN = DIR.INTERP_SAV
  FILES = FLS(DIR_IN,'D_*.SAV') & PN,FILES 
  DIR_OUT = DIR.PNG
  IF STOPP THEN STOP
  ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
  FOR NTH = 0,N_ELEMENTS(FILES)-1 DO BEGIN
    FILE = FILES[NTH]
    POF,NTH,FILES
    ;===> SKIP IF PNG EXISTS
    PNG = REPLACE(FILE,[DIR_IN,'-INTERP','.SAV'],[DIR_OUT,'-INTERP-DATA','.PNG'])
;    IF FILE_MAKE(FILE,PNG,OVERWRITE=OVERWRITE) 
     IF EXISTS(PNG) THEN CONTINUE;>>>>>
    PRODS_2PNG,FILE,/BUFFER,/OVERWRITE,/ADD_DATE_BAR,DIR_OUT=DIR_OUT,TAG='DATA', BIT_DEPTH=0
  ENDFOR;FOR NTH = 0,N_ELEMENTS(FILES)-1 DO BEGIN
  ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
  , 'DO_D3_INTERP_SAVES_2PNG'
ENDIF ;IF KEY(DO_D3_INTERP_SAVES_2PNG) THEN BEGIN
; |||||||||||||||||||||||||||||||||||||||||||||||


;********************************
IF KEY(DO_PNG_2MOVIE) THEN BEGIN
;********************************
  SWITCHES,DO_PNG_2MOVIE,STOPP=STOPP,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,INIT=INIT,R_FILES=R_FILES,R_DATASETS=R_DATASETS
  IF STOPP THEN STOP

  FILES = FLS( DIR.PNG ,'D_*.PNG') & PN,FILES,'PNG FILES'
 
  MOVIE, FILES,TYPE = 'AVI',DIR_OUT = DIR.AVI
ENDIF;IF KEY(DO_PNG_2MOVIE) THEN BEGIN
;|||||||||||||||||||||||||||||||||||||




;*******************************
IF KEY(D3_2PSERIES)THEN BEGIN
;*******************************
  , 'D3_2PSERIES'
  SWITCHES,D3_2PSERIES,STOPP=STOPP,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,INIT=INIT,R_FILES=R_FILES,R_DATASETS=R_DATASETS
  
  D3_FILE = FIRST(FLS(DIR.D3,'D3-*DAT.FLT'))
  IF EXISTS(D3_FILE) EQ 0 THEN STOP
  NAME = (FILE_PARSE(D3_FILE)).NAME_EXT
  D3_PSERIES_FILE= DIR.PSERIES + REPLACE(NAME,'-DAT.FLT','-PSERIES.FLT')
  PFILE,D3_FILE,/U

  IF STOPP THEN STOP
    ;===> LOOP METHOD IS MUCH SLOWER THAN MATRIX METHOD
;  D3_PSERIES,D3_FILE,METHOD='LOOP',DIR_OUT=DIR_OUT,VERBOSE=VERBOSE,OVERWRITE=OVERWRITE
;  D3_PSERIES,D3_FILE,METHOD='MATRIX',DIR_OUT=DIR_OUT,VERBOSE=VERBOSE,OVERWRITE=OVERWRITE

;===> USE D3_2PSERIES [FASTER]
  D3_2PSERIES,D3_FILE,D3_PSERIES_FILE,OVERWRITE=OVERWRITE
  
  , 'D3_2PSERIES'

ENDIF ; IF KEY(D3_2PSERIES)THEN BEGIN
; ||||||||||||||||||||||||||||||||||
;


;********************************
IF KEY(DO_PSERIES_LNP) THEN BEGIN
  ;********************************
  SWITCHES,DO_PSERIES_LNP,STOPP=STOPP,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,INIT=INIT,R_FILES=R_FILES,R_DATASETS=R_DATASETS
  IF STOPP THEN STOP
  DIR_OUT = DIR_OUT + 'LNP' + PATH_SEP()
  DIR_TEST,DIR_OUT
  IF STOPP THEN STOP

  PSERIES_FILE = FLS(DIR.PSERIES ,'-PSERIES-MATRIX.FLT')
  PSERIES_LNP,PSERIES_FILE,DIR_OUT=DIR_OUT,OVERWRITE=OVERWRITE

  ,'DO_PSERIES_LNP'

ENDIF;IF KEY(DO_PSERIES_LNP) THEN BEGIN
;||||||||||||||||||||||||||||



END; #####################  END OF ROUTINE ################################
