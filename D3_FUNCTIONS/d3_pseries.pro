; $ID:	D3_PSERIES.PRO,	2020-07-01-12,	USER-KJWH	$
;+
;#############################################################################################################
	PRO D3_PSERIES,D3_FILE,METHOD=METHOD,DIR_OUT=DIR_OUT,VERBOSE=VERBOSE,OVERWRITE=OVERWRITE
;
; PURPOSE:  1) MAKES A PSERIES FROM A D3 SHARED-MEMORY FILE 
;           
; CATEGORY:	D3 FAMILY
;
; CALLING SEQUENCE: D3_PSERIES,D3_FILE
;
; INPUTS: D3_FILE-  NAME OF THE D3_FILE MADE WITH D3_MAKE        
;		
; OPTIONAL INPUTS: NONE
;			
;		
; KEYWORD PARAMETERS: 
;         DIR_OUT...... OUTPUT DIRECTORY FOR THE PSERIES FILE
;         METHOD......  MATRIX, OR  LOOP [SLOWER]
;         VERBOSE...... ALLOW PRINT COMMANDS
;         OVERWRITE.... OVERWRITE OUTPUT IF IT EXISTS


; OUTPUTS: A PSERIES [PIXEL TIME SERIES FILE]
;		
; NOTES:
;   
; MODIFICATION HISTORY:
;			DEC 21,2014,  WRITTEN BY J.O'REILLY
;     MAR 30,2015,JOR REVISED,STREAMLINED TO ONLY MAKE THE PSERIES
;     MAR 31,2015,JOR ADDED METHOD 'TRANSPOSE' [MAY BE FASTER WITH GEQ THAN LOOP ?]
;     APR 9,2015,JOR TESTED TRANSPOSE METHOD USING D3-PXY_1024_1024-NEC-CHLOR_A-OC4-DATA.FLT
;                           IT IS FASTER THAN THE LOOP METHOD  MATRIX
;     APR 23,2015,JOR OPTIMIZED BUFSIZE FOR LOOP METHOD
;			
;#################################################################################
;-
;***************************
ROUTINE_NAME  = 'D3_PSERIES'
;***************************
;===> DEFAULTS
IF NONE(DIR_OUT) THEN DIR_OUT = !S.IDL_TEMP
BUFSIZE = 2L^24; BUFFER SIZE FOR LOOP METHOD
IF NONE(METHOD) THEN METHOD=  'MATRIX' 
IF METHOD NE 'MATRIX' AND METHOD NE 'LOOP' THEN METHOD = 'MATRIX'
PFILE,METHOD,/U & WAIT,1
TIC
IF NONE(D3_FILE) THEN D3_FILE=!F
IF NONE(D3_FILE) THEN MESSAGE,'ERROR: MUST PROVIDE THE D3_FILE'
PFILE,D3_FILE,/U
D3_DB_FILE = REPLACE(D3_FILE,'-DATA.FLT','-DB.SAV')
DB = STRUCT_READ(D3_DB_FILE)
N_FILES= NOF(DB)
FA = FILE_ALL(D3_FILE) & PX = FA.PX & PY = FA.PY & PZ = FA.PZ  & MAPP = FA.MAP & PROD = FA.PROD
;===> CONSTRUCT NAME FOR PSERIES FILE
PSERIES_FILE = REPLACE(D3_FILE,'-DATA.FLT','-PSERIES-' + METHOD + '.FLT')
METHOD = STRUPCASE(METHOD)


;####################################################################################
IF METHOD EQ 'MATRIX' THEN  BEGIN
  
  ;===> USE BOB COX'S MATRIX
  OPENR,1,D3_FILE
  OPENW,2,PSERIES_FILE
  D3_TRANSPOSE, 1, 2, [PX,PY,N_FILES], [2, 0, 1], $
    'FLT', MEMGB=MEMGB, PROGRESS=1, COMPLETE=COMPLETE, TOTAL=TOTAL
  CLOSE,1
  CLOSE,2
  
ENDIF;IF METHOD EQ 'MATRIX' THEN  BEGIN
;||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||



;##################################################################################
IF METHOD EQ 'LOOP' THEN BEGIN
  
;===> MAP THE D3 ARRAY TO THE D3_FILE
  SHMMAP ,'D3',/FLOAT,DIMENSION= [PX,PY,N_FILES] , FILENAME=D3_FILE
  
  ;===> GET THE D3 ARR
  D3 = SHMVAR('D3')
;===> OPEN PSERIES FILE FOR WRITING
;BUFSIZE =N_FILES*100
OPENW,LUN_PSERIES,PSERIES_FILE,/GET_LUN,BUFSIZE = BUFSIZE

;===> LOOP OVER EVERY PIXEL X,Y COORDINATE
;FFFFFFFFFFFFFFFFFFFFFFFFFF
FOR YP = 0L,PY-1L DO BEGIN  
  POF,YP,PY
; FFFFFFFFFFFFFFFFFFFFFFFFFFF
  FOR XP = 0L,PX-1L DO BEGIN   
    WRITEU,LUN_PSERIES,REFORM(D3(XP,YP,*))    
  ENDFOR;FOR XP = 0L,PX-1 DO BEGIN
  ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
ENDFOR;FOR YP = 0L,PY-1L DO BEGIN 
;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF

ENDIF;IF METHOD EQ 'LOOP' THEN BEGIN
;|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||



;===> CLEAN UP
IF IS_SHM(D3_FILE) THEN SHMUNMAP,'D3'
IF IS_SHM(PSERIES_FILE) THEN SHMUNMAP,'P3'

GONE,D3
GONE,P3
CLOSE,/ALL


TOC
END; #####################  END OF ROUTINE ################################
