; $ID:	D3_STRUCT.PRO,	2015-02-26	$
;+
;#############################################################################################################
	FUNCTION D3_STRUCT,PX=PX,PY=PY,N=N,FILES = FILES,JDS=JDS,FILL=FILL,DB=DB
;
; PURPOSE: RETURN A STANDARD D3 [3D] ARRAY STRUCTURE
;
; CATEGORY:	D3
;
;
; INPUTS: VIA KEYWORDS
;		
;		
; OPTIONAL INPUTS:
;		NONE:	
;		 
;		
; KEYWORD PARAMETERS:
;     PX ARRAY WIDTH IN PIXELS
;     PY ARRAY HEIGHT IN PIXELS
;		  N: NUMBER OF IMAGES [FILES,THE THIRD DIMENSION]
;     JDS: JULIAN DAY 
;     FILES: NAMES OF SAV FILES [FROM STATS_WRITE]
;     DB: THE TAGS FROM THE D3 STRUCTURE WITHOUT THE 3D DATA ARRAY

; OUTPUTS: A 3-D ARRAY
;		
; EXAMPLES: 
;          ST,D3_STRUCT() 
;          ST,D3_STRUCT(N = 21,PX = 600,PY = 600) 
;          D = D3_STRUCT(N = 250,PX = 1024,PY = 1024,/FILL) 
;
; MODIFICATION HISTORY:
;			WRITTEN FEB  13,2014 J.O'REILLY
;			FEB 15,2014,JOR ADDED FILES,DATE_NOW()
;			FEB 18,2014,JOR,ADDED SAVFILE
;			JUL 12,2014,JOR, DOCUMENTATION, EXAMPLES
;			JUL 14,2014,JOR, ADDED CODE TO DETERMINE N JDS,SEQ,INTERPOLATED JDS
;			JUL 17,2014,JOR ADDED KEY FILL
;			FEB 11,2015,JOR REMOVED SAVFILE [ALWAYS RETURN THE D3 STRUCTURE]
;			FEB 12,2015,JOR ADDED MTIMES TO STRUCTURE
;			FEB 18,2015,JOR ADDED KEY DB [DATABASE INFO SANS 3D DATA ARRAY]
;			FEB 26,2015,JOR ADDED MAX_SIZE & ERROR MESSAGE IF EXCEEDED
;			
;			
;#################################################################################
;-
;**************************
ROUTINE_NAME  = 'D3_STRUCT'
;**************************
;===> DEFAULTS
MAX_SIZE = ULONG64(1024)* 1024 * 500
IF NONE(PX) THEN PX = 2 
IF NONE(PY) THEN PY = 2
IF KEY(FILES) THEN N = N_ELEMENTS(FILES)
IF NONE(N) THEN N = 11  
IF ULONG(PX)*PY*N GT MAX_SIZE THEN MESSAGE,'ERROR: NOT ENOUGH MEMORY TO MAKE THE STRUCT'
IF N_ELEMENTS(JDS) EQ 0 THEN JDS = DINDGEN(N)
IF NONE(FILES)  THEN BEGIN
  FILES = STRTRIM(SINDGEN(N),2)
  I_JDS = JDS  
  MTIMES = REPLICATE('',NOF(JDS))
ENDIF ELSE BEGIN
  FA= FILE_ALL(FILES)& JDS = PERIOD_2JD(FA.PERIOD) & MTIMES = FA.MTIME
  ; ================> GET JD RANGE FOR THE INTERPOLATION TO STANDARD DAYS
  MIN_JD = ULONG(MIN(JDS))
  MAX_JD = ULONG(MAX(JDS))
  I_JDS = ULONG(INTERVAL([MIN_JD,MAX_JD],1))
  SEQ = I_JDS -MIN_JD
  N = N_ELEMENTS(I_JDS)
  ;OK = WHERE_IN(I_JDS,ULONG(JDS),COUNT)
  JDS = JDS(SORT(JDS))
ENDELSE;IF NONE(FILES)  THEN BEGIN

DATA = REPLICATE(MISSINGS(0.0),[PX,PY,N])
IF KEY(FILL) THEN BEGIN

;FFFFFFFFFFFFFFFFFFFFFFFFF
FOR I = 0,N-1 DO BEGIN
  DATA(*,*,I) = I
ENDFOR;FOR I = 0,N-1 DO BEGIN
;FFFFFFFFFFFFFFFFFFFFFFFFFFFF

ENDIF;IF KEY(FILL) THEN BEGIN
;||||||||||||||||||||||||||||

;===> [DATABASE INFO WITHOUT THE 3D DATA ARRAY]
DB = CREATE_STRUCT('JDS',JDS,'I_JDS',I_JDS,'PX',PX,'PY',PY,'N',N,'FILES',FILES,'MTIMES',MTIMES,'DATE',DATE_NOW())


RETURN, CREATE_STRUCT('DATA',DATA,'JDS',JDS,'I_JDS',I_JDS,'PX',PX,'PY',PY,'N',N,'FILES',FILES,'MTIMES',MTIMES,'DATE',DATE_NOW())

END; #####################  END OF ROUTINE ################################
