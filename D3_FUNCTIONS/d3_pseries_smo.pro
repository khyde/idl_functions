; $ID:	D3_PSERIES_SMO.PRO,	2020-07-01-12,	USER-KJWH	$
;+
;;#############################################################################################################
	PRO D3_PSERIES_SMO,D3_FILE,FILTER=FILTER,SHOW=SHOW
;
; PURPOSE: THIS FUNCTION SMOOTHS PSERIES DATA FROM A D3 STRUCTURE 
; 
; 
; CATEGORY:	D3 FAMILY		 
;
; CALLING SEQUENCE: RESULT = D3_PSERIES_SMO(D3_FILE)
;
; INPUTS: D3_FILE  [FROM D3_READ]

; OPTIONAL INPUTS:
;		NONE:	
;		
; KEYWORD PARAMETERS:
;   FILTER - SAVGOL OR DANIELL
;    SHOW - PLOT THE SMOOTHED INTERPOLATED PSERIES & PRINT MINMAX,PSERIES,INTP,SMO
; OUTPUTS: 
;		
;; EXAMPLES:
;          D3_FILE = !S.IDL_TEMP + 'D3.SAV' & D3_PSERIES_SMO,D3_FILE,FILTER='DANIELL'
;	NOTES:

;		
;
;
; MODIFICATION HISTORY:
;			WRITTEN JUL 14, 2014 J.O'REILLY
;			JUL 14,2014,JOR ADDED KEY SHOW
;			JUL 15,2014,JOR ADDED INTERPX, FOR INTERPOLATION & FILTER_DANIELL FOR SMOOTHING
;#################################################################################
;-
;******************************
ROUTINE_NAME  = 'D3_PSERIES_SMO'
;******************************
;
COMMON _D3_READ,D3,FILE
;===> DEFAULTS
IF NONE(FILTER) THEN FILTER = 'DANIELL'
IF NONE(D3_FILE) THEN D3_FILE = !S.IDL_TEMP + 'D3.SAV'

;********************************
IF FILTER EQ 'DANIELL' THEN BEGIN
  ;******************************
  FILT = FILTER_DANIELL()
ENDIF;IF FILTER EQ 'DANIELL' THEN BEGIN
;|||||||||||||||||||||||||||||||||||||

;********************************
IF FILTER EQ 'SAVGOL' THEN BEGIN
;********************************
;NLEFT = 2 BECAUSE NLEFT OF 1 MATCHES DATA TOO MUCH-NO SMOOTHING
NLEFT = 2 & NRIGHT = NLEFT & ORDER = 0  & DEGREE = 2 & DOUBLE = 1 & WIDTH = NLEFT+ NRIGHT
FILT = SAVGOL( NLEFT, NRIGHT, ORDER, DEGREE,DOUBLE=DOUBLE )
IF NONE(D3_FILE) THEN D3_FILE = !S.IDL_TEMP + 'JUNK.SAV'
ENDIF;IF FILTER EQ 'SAVGOL' THEN BEGIN
;|||||||||||||||||||||||||||||||||||||
;
;
;===> GET LENGTH OF PSERIES
SERIES = D3_READ(D3_FILE,/NUM) & SERIES = LONG(SERIES) & HELP,SERIES 
;===> GET DATA DIMENSIONS [PX,PY]
S = D3_READ(D3_FILE,/STRUCT) & HELP,S 
PX = S.PX & PY = S.PY & JDS = S.JDS & I_JDS = S.I_JDS
;FFFFFFFFFFFFFFFFFFFFFFFFF
FOR YP = 0L,PY-1 DO BEGIN
  POF,YP,PY
  ;FFFFFFFFFFFFFFFFFFFFFFFF
  FOR XP = 0L,PX-1 DO BEGIN
    PSERIES = D3_READ(D3_FILE,XP=XP,YP=YP,/PSERIES)
    OK = WHERE(PSERIES NE MISSINGS(PSERIES),COUNT)
    IF COUNT EQ 0 THEN CONTINUE;>>>>>>>>>>>>> LAND ?>>>>>>>>>>>>>>>>>>>
  STOP
    _PSERIES= PSERIES[OK]
    DAYS = I_JDS-FIRST(I_JDS)
    _DAYS = DAYS[OK]
    
    ;===> LINEARLY INTERPOLATE _PSERIES TO ALL THE DAYS IN THIS PSERIES 
    INTP = INTERPX( _DAYS,_PSERIES,DAYS, HELP=HLP, BAD=BAD, GAP=GAP, FIXBAD=XBAD)
    
    ;===> SMOOTH INTP USING DANIELL
    SMO = FILTER_DANIELL(INTP)
    
    ;**********************
    IF KEY(SHOW) THEN BEGIN
    ;**********************
      PRINT,'PSERIES :',ROUNDS(MM(_PSERIES),4,/SIG)
      PRINT,'INTP :',ROUNDS(MM(INTP),4,/SIG)
      PRINT,'SMO :',ROUNDS(MM(SMO),4,/SIG)
      P=PLOT(INTP,THICK = 3,COLOR = 'BLACK') & P=PLOT(SMO,THICK = 3,COLOR = 'RED',/OVERPLOT,/CURRENT)
      P.CLOSE
      PLT_XY,DAYS,SMO,SYMBOL = 'CIRCLE',/GRID_ADD,/SYM_FILLED,/CLOSE,DELAY = 2
    ENDIF;IF KEY(SHOW) THEN BEGIN
    ;||||||||||||||||||||||||||||
    
    ;===> REPLACE THE D3 WITH THE SMOOTHED PSERIES
   STOP 
    D3.DATA(XP,YP,*) = SMO
  ENDFOR;FOR XP = 0L,PX-1 DO BEGIN
  ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
ENDFOR;FOR YP = 0L,PY-1 DO BEGIN
;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
STOP
STOP
;********************
IF KEY(SG) THEN BEGIN
;********************
  TYPE = 'SG'
; INPUTS FOR SAVGOL NLEFT = 2 BECAUSE NLEFT OF 1 MATCHES DATA TOO MUCH-NO SMOOTHING
  NLEFT = 2 & NRIGHT = NLEFT & ORDER = 0  & DEGREE = 2 & DOUBLE = 1 & WIDTH = NLEFT+ NRIGHT
  FILT = SAVGOL( NLEFT, NRIGHT, ORDER, DEGREE,DOUBLE=DOUBLE )
  SMO = CONVOL(ARR, FILT, /EDGE_TRUNCATE,/CENTER,/NAN)
  TITLE = 'SG-WIDTH-' + ROUNDS(WIDTH) + '-ORDER-' + ROUNDS(ORDER)
  STOP

  INTP = INTERPOL( SMO,JDS, I_JDS,/NAN)
  P=PLOT(INTP)
ENDIF;IF KEY(SG) THEN BEGIN
;||||||||||||||||||||||||||
 
;********************
IF KEY(TS) THEN BEGIN
;********************;
  ;===> REMOVE MISSING
  OK = WHERE(ARR NE MISSINGS(ARR),COUNT)
  IF COUNT GE 1 THEN ARR = ARR[OK] 
  PN,ARR,'POINTS IN THE ARR'
 
  WIDTH = 3
  ORDER = 10   & DOUBLE = 1 
  SMO = TS_SMOOTH(ARR, WIDTH,ORDER=ORDER,/NAN,/DOUBLE)
  TITLE = 'TS-WIDTH-' + ROUNDS(WIDTH) + '-ORDER-' + ROUNDS(ORDER)
ENDIF;IF KEY(TS) THEN BEGIN
;||||||||||||||||||||||||||
;
;*********************
IF KEY(SP) THEN BEGIN
;********************* 
  S = D3_READ(D3_FILE,NTH,/STRUCT)
  X = S.JDS
  ARR = S.PSERIES & Y=ARR
  OK = WHERE(Y NE MISSINGS(Y),COUNT)
  IF COUNT GE 1 THEN  BEGIN
    X = X[OK]
    Y= Y[OK]
  ENDIF
  
  
 
;;;Z = SPLINE(X,Y,T)
  
  
ENDIF;IF KEY(SP) THEN BEGIN
;||||||||||||||||||||||||||

;SMO = SMO > MIN(ARR)
;SMO = SMO < MAX(ARR)

P=PLOT(ARR,COLOR = 'RED',THICK = 7)
P=PLOT(SMO,COLOR = 'MAGENTA',THICK = 3,/CURRENT,/OVERPLOT)
PLT_GRIDS,P
IF NONE(DELAY) THEN DELAY = 4
WAIT,DELAY
& PRINT,MM(ARR),MM(SMO)
P.CLOSE
;P = PLOT(FILTER) & PLT_GRIDS,P & WAIT,3 & P.CLOSE
IF KEY(XY) THEN PLT_XY,ARR,SMO,/SYM_ADD,TITLE=TITLE,$
DELAY=DELAY,/STATS_ADD,/REG_ADD,/GRID_ADD,/XLOG,/YLOG,FILE = TITLE +'.PNG'
DONE: 
         
	END; #####################  END OF ROUTINE ################################
