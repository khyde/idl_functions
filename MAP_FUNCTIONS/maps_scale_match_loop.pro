; $ID:	MAPS_SCALE_MATCH_LOOP.PRO,	2022-03-21-16,	USER-KJWH	$
; #########################################################################; 
PRO MAPS_SCALE_MATCH_LOOP
;+
; PURPOSE:  
;        LOOP ON EXISTING MSTR SCALES TO MATCH THE SCALE IN MAPS_MAIN 
;        WITH THE SCALE IN THE ORIGINAL MAP PROGRAM

; CATEGORY: MAPS;
;
; CALLING SEQUENCE: 
;
; INPUTS: NONE
;
;
; KEYWORDS:NONE

; OUTPUTS: UPDATES MAPS_MAIN WITH THE NEW SCALES
;
;
; MODIFICATION HISTORY:
;     FEB 26, 2016  WRITTEN BY: J.E. O'REILLY
;-
; #########################################################################

;**************************************
ROUTINE_NAME  = 'MAPS_SCALE_MATCH_LOOP'
;**************************************
; #####  MAKE A BACKUP BEFORE EDITING MAIN
MPMAIN = !S.ILD_MAINFILES + 'MAPS_MAIN.csv'
IF FILE_TEST(MPMAIN) EQ 0 THEN STOP
COPY = REPLACE(MPMAIN,'.CSV', '-'+ DATE_STAMP() + '.CSV')
FILE_COPY,MPMAIN,COPY,/VERBOSE,/OVERWRITE
UPDATE_MPMAIN = 1

;===> GET JUST THE 104 MAPS HAVING A NUMERIC SCALE
D = MAPS_READ()
OK = WHERE(D.SCALE NE '',COUNT) & P,COUNT
MAPS = D[OK].MAP
;===> GET ALL SCALES PREVIOUSLY USED
SCALES = D[OK].SCALE

OLD_COLOR = 1
NEW_COLOR = 2
DIR_OUT = !S.IDL_TEMP
FONT_HELVETICA
PAL_36,R,G,B
DEG = 1.0/6.0


;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FOR NTH = 0,N_ELEMENTS(MAPS)-1 DO BEGIN
  MAPP = MAPS[NTH] & PFILE,MAPP,/U
  M = MAP_SIZE(MAPP) & PX = M.PX  & PY = M.PY
  ;===> DO OLD MAP_SET PROGRAM AND GET ITS SCALE AS PRO_SCALE
  ZWIN,[PX,PY]
  ;===> SEE IF KEY SCALE IS IN THE OLD MAP PROGRAM?
  PRO_FILE = !S.OBSOLETE + MAPP + '.PRO'
  
  CALL_PROCEDURE,'MAP_'+MAPP ,SCALE = PRO_SCALE
  IF IDLTYPE(PRO_SCALE) EQ 'UNDEFINED' THEN PRO_SCALE = ''
  PLOTGRAT,DEG_,COLOR = OLD_COLOR
  OLD = TVRD()
  OK_OLD = WHERE(OLD EQ OLD_COLOR,COUNT_OLD)
  ZWIN
   
 ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
 FOR _SCALE = 0,NOF(SCALES) -1  DO BEGIN
;  POF,_SCALE,SCALES
    S = MAPS_READ(MAPP)
    MSTR_SCALE = S.SCALE
    NEW_SCALE= SCALES(_SCALE)
    S.SCALE = NEW_SCALE
    MAPS_SET,MAPP,BKG_COLOR=255,STRUCT=S
    PLOTGRAT,DEG_,COLOR = NEW_COLOR
    NEW = TVRD()
    ZWIN
    OK_NEW = WHERE(NEW EQ NEW_COLOR,COUNT_NEW)
    OK = WHERE(OLD EQ OLD_COLOR AND NEW EQ NEW_COLOR,COUNT) 
    PCT= (100. *COUNT/ COUNT_OLD )
    IF PCT EQ 100 THEN BEGIN
       D = CREATE_STRUCT('MAP',MAPP,'METHOD','LOOP','PRO_SCALE',ROUNDS(PRO_SCALE,1),'MSTR_SCALE',MSTR_SCALE,'NEW_SCALE',NEW_SCALE,'PCT',PCT)
      IF NONE(DB) THEN DB = D ELSE DB = [DB,D]
      BREAK
    ENDIF;IF PCT EQ 100 THEN BEGIN
   ; PRINT,'PERCENT OVERLAP : ' + ROUNDS(PCT,1)
  ENDFOR;FOR AN = 0,NOF(SCALES) -1  DO BEGIN
  ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
  
ENDFOR;FOR NTH = 0,N_ELEMENTS(MAPS)-1 DO BEGIN
;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF

;###########################################################################################

CSV = !S.IDL_TEMP + ROUTINE_NAME + '.CSV'
CSV_WRITE,CSV,DB


IF UPDATE_MPMAIN EQ 1 THEN   MAPS_SCALE_EDIT,DB



END; #####################  END OF ROUTINE ################################
