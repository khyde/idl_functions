; $ID:	MAPS_MUR_SUBSET.PRO,	2020-06-26-15,	USER-KJWH	$
; #########################################################################; 
FUNCTION MAPS_MUR_SUBSET,ARRAY, MAP_OUT=MAP_OUT, INIT=INIT, LONMIN=LONMIN, LONMAX=LONMAX, LATMIN=LATMIN, LATMAX=LATMAX
;+
; PURPOSE:  RETURN AN EXTRACTED ARRAY FROM THE INPUT MUR ARRAY WHICH COVERS THE DOMAIN OF THE MAP_OUT
;
; CATEGORY: MAPS;
;
;
; INPUTS:  ARRAY [MUR DATA ARRAY]
;          PROGRAM ASSUMES THAT THE MAP_IN = MUR
;          PROGRAM GETS LON AND LAT FROM MUR_LON.SAV & MUR_LAT.SAV IN MASTER
;
; KEYWORDS:  
;          MAP_OUT.... NAME OF OUTPUT MAP
;          LONMIN..... MIN LONGITUDE (optional)
;          LONMAX..... MAX LONGITUDE (optional)
;          LATMIN..... MIN LATITUDE (optional)
;          LATMAX..... MAX LATITUDE (optional)
;         
; OUTPUTS: A SUBSET OF THE LARGE MUR ARRAY [36000x17999] COVERING THE DOMAIN OF THE MAP_OUT 
; EXAMPLES: SIMULATE THE MUR ARRAY WITH BYTES [FOR SPEED]>
;          HELP, MAPS_MUR_SUBSET(BINDGEN([36000,17999]),MAP_OUT ='NEC')
;          HELP, MAPS_MUR_SUBSET(BINDGEN([36000,17999]),MAP_OUT ='EC')
;          HELP, MAPS_MUR_SUBSET(BINDGEN([36000,17999]),MAP_OUT ='NEC_ECO')
;          HELP, MAPS_MUR_SUBSET(BINDGEN([36000,17999]), LONMIN=-80, LONMAX=-60, LATMIN=35, LATMAX=45)
;
; MODIFICATION HISTORY:
;     APR 28, 2016  WRITTEN BY: K.J.W.HYDE & J.E.O'REILLY
;     APR 29, 2016 - KJWH: Updated with correct LON and LAT files
;                          Added LON and LAT common
;     MAY 02, 2016 - KJWH: Added STRUCT_MAPS_SUBSET common
;                          Added optional coorindate inputs
;     MAY 03, 2016 - JEOR: Documented  new keywords
;                          Edited examples with correct array sizes 
;     MAY 11, 2016 - JEOR: Fixed major error - LATMIN & LATMAX were not used : RETURN, ARRAY(SUB_LONMIN:SUB_LONMAX,SUB_LATMIN:SUB_LATMAX)
;     MAY 11, 2016 - KJWH: Added coorindate input example
;     MAY 11, 2016 - JEOR: REPLACED WHERE_NEAREST WITH WHERE_ARE
;     AUG 19, 2016 - KJWH: Changed !S.MASTER to !S.MAPINFO
;     AUG 23, 2016 - KJWH: Updated the MUR-LON/LAT file names
;     AUG 09, 2019 - KJWH: Changed DATATYPE() to IDLTYPE()
;                                               
; #########################################################################
;-

;*******************************
ROUTINE_NAME  = 'MAPS_MUR_SUBSET'
;*******************************
;===> ENSURE ARRAY AND MAP_OUT ARE PROVIDED
  IF NONE(ARRAY)   THEN MESSAGE,'ERROR: ARRAY IS REQUIRED'
  IF NONE(MAP_OUT) AND NONE(LONMIN) THEN MESSAGE,'ERROR: EITHER MAP_OUT OR LON/LAT MIN/MAX ARE REQUIRED'

;===> GET MUR GLOBAL LAT & LON ARRAYS FROM MASTER

  COMMON MAPS_MUR_SUBSET_, LON, LAT, STRUCT_MAPS_SUBSET
  
  IF KEY(INIT) THEN BEGIN
    LON = []
    LAT = []
    STRUCT_MAPS_SUBSET = []
  ENDIF
  
  SZ = SIZEXYZ(ARRAY)
  IF SZ.PX NE 36000 AND SZ.PY NE 17999 THEN RETURN, 'ERROR: input array deminsions must be 36000 x 17999'
  
  IF NONE(LON) THEN LON = IDL_RESTORE(!S.MAPINFO + 'MUR-PX_36000-LON.SAV')
  IF NONE(LAT) THEN LAT = IDL_RESTORE(!S.MAPINFO + 'MUR-PY_17999-LAT.SAV')
  
  IF IDLTYPE(LONS) EQ 'STRING' OR IDLTYPE(LATS) EQ 'STRING' THEN BEGIN
    LON = []
    LAT = []
    RETURN, 'ERROR: Unable to read the MASTER LON/LAT files'
  ENDIF

  IF NONE(MAP_OUT) THEN MAP_OUT = 'LONLAT_' + ROUNDS(LONMIN) + '_' + ROUNDS(LONMAX) + '_' + ROUNDS(LATMIN) + '_' + ROUNDS(LATMAX) 
  MAP_OUT = REPLACE(MAP_OUT,'-','N') ; REPLACE DASHES ('-') WITH N (FOR NEGATIVE) BECAUSE DASHES ARE NOT ALLOWED IN IDL TAGNAMES
  
; ===> Look for the MAP_OUT tag in STRUCT_MAPS_SUBSET if it is not already present
  IF NONE(STRUCT_MAPS_SUBSET) OR KEY(INIT) THEN STRUCT_MAPS_SUBSET=CREATE_STRUCT('_','')
  OK_TAG = WHERE(TAG_NAMES(STRUCT_MAPS_SUBSET) EQ MAP_OUT,COUNT_MAP)  
  IF COUNT_MAP EQ 0 THEN BEGIN

;===> DETERMINE LON/LAT CORNERS OF MAP_OUT
    IF VALIDS('MAPS',MAP_OUT) EQ STRUPCASE(MAP_OUT) THEN BEGIN
      MAPS_SET,MAP_OUT     
      S=MAPS_LL_BOX() 
      ZWIN
      LONMIN = S.LONMIN
      LONMAX = S.LONMAX
      LATMIN = S.LATMIN
      LATMAX = S.LATMAX
    ENDIF ; IF VALIDS('MAPS',MAP_OUT) EQ MAP_OUT THEN BEGIN

;===> GET NEAREST SUBS FOR LONMIN,LONMAX
;    OK = WHERE_NEAREST(LON, LONMIN,NEAR = 0.1,COUNT_LONMIN)
;    IF COUNT_LONMIN GE 1 THEN SUB_LONMIN = FIRST[OK]
;    OK = WHERE_NEAREST(LON, LONMAX,NEAR = 0.1,COUNT_LONMAX)
;    IF COUNT_LONMAX GE 1 THEN SUB_LONMAX = FIRST[OK]
    OK = WHERE_ARE(LON, LONMIN,COUNT_LONMIN)
    IF COUNT_LONMIN GE 1 THEN SUB_LONMIN = FIRST(OK)
    OK = WHERE_ARE(LON, LONMAX,COUNT_LONMAX)
    IF COUNT_LONMAX GE 1 THEN SUB_LONMAX = FIRST(OK)

;===> GET NEAREST SUBS FOR LATMIN,LATMAX 
;    OK = WHERE_NEAREST(LAT, LATMIN,NEAR = 0.1,COUNT_LATMIN) 
;    IF COUNT_LATMIN GE 1 THEN SUB_LATMIN = FIRST[OK]
;    OK = WHERE_NEAREST(LAT, LATMAX,NEAR = 0.1,COUNT_LATMAX)
;    IF COUNT_LATMAX GE 1 THEN SUB_LATMAX = FIRST[OK]
    OK = WHERE_ARE(LAT, LATMIN,COUNT_LATMIN)
    IF COUNT_LATMIN GE 1 THEN SUB_LATMIN = FIRST(OK)
    OK = WHERE_ARE(LAT, LATMAX,COUNT_LATMAX)
    IF COUNT_LATMAX GE 1 THEN SUB_LATMAX = FIRST(OK)

  
; ===> ADD ANOTHER MAP_OUT-PX_OUT LAYER (TAG) TO THE STRUCT_MAPS_SUBSET STRUCTURE
  STRUCT_MAPS_SUBSET=CREATE_STRUCT(TEMPORARY(STRUCT_MAPS_SUBSET),MAP_OUT,$
    CREATE_STRUCT('MAP_OUT',MAP_OUT,'LONMIN', LONMIN, 'SUB_LONMIN', SUB_LONMIN, $
                                    'LONMAX', LONMAX, 'SUB_LONMAX', SUB_LONMAX, $
                                    'LATMIN', LATMIN, 'SUB_LATMIN', SUB_LATMIN, $
                                    'LATMAX', LATMAX, 'SUB_LATMAX', SUB_LATMAX ))  
  
  ENDIF
 
; ===> LOOK FOR THE MAP_OUT TAG IN STRUCT_MAPS_SUBSET IF IT IS NOT ALREADY PRESENT
  OK_TAG = WHERE(TAG_NAMES(STRUCT_MAPS_SUBSET) EQ MAP_OUT,COUNT_MAP)
  SUB_LONMIN = STRUCT_MAPS_SUBSET.(OK_TAG).SUB_LONMIN
  SUB_LONMAX = STRUCT_MAPS_SUBSET.(OK_TAG).SUB_LONMAX
  SUB_LATMIN = STRUCT_MAPS_SUBSET.(OK_TAG).SUB_LATMIN
  SUB_LATMAX = STRUCT_MAPS_SUBSET.(OK_TAG).SUB_LATMAX

  RETURN, ARRAY(SUB_LONMIN:SUB_LONMAX,SUB_LATMIN:SUB_LATMAX)


END; #####################  END OF ROUTINE ################################
