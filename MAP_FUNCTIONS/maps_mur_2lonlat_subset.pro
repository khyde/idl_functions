; $ID:	MAPS_MUR_2LONLAT_SUBSET.PRO,	2019-08-09-11,	USER-KJWH	$
; #########################################################################; 
PRO MAPS_MUR_2LONLAT_SUBSET, MP, INIT=INIT, LONMIN=LONMIN, LONMAX=LONMAX, LATMIN=LATMIN, LATMAX=LATMAX, OUTNAME=OUTNAME
;+
; PURPOSE:  SAVE EXTRACTED LON AND LAT ARRAYS THAT MATCH A SPECIFIC MAP PROJECTION OR LON/LAT AREA
;
; CATEGORY: MAPS;
;
;
; INPUTS:  ARRAY [MUR DATA ARRAY]
;          PROGRAM ASSUMES THAT THE MAP_IN = MUR
;          PROGRAM GETS LON AND LAT FROM MUR_LON.SAV & MUR_LAT.SAV IN MASTER
;
; KEYWORDS:  
;          MP......... NAME OF OUTPUT MAP
;          LONMIN..... MIN LONGITUDE (optional)
;          LONMAX..... MAX LONGITUDE (optional)
;          LATMIN..... MIN LATITUDE (optional)
;          LATMAX..... MAX LATITUDE (optional)
;         
; OUTPUTS: A SUBSET OF THE LARGE MUR ARRAY [36000x17999] COVERING THE DOMAIN OF THE MAP_OUT 
; EXAMPLES: 
;
; MODIFICATION HISTORY:
;     AUG 19, 2016  WRITTEN BY: K.J.W.Hyde, 28 Tarzwell Drive, NMFS, NOAA 02882 (kimberly.hyde@noaa.gov)
;     AUG 23, 2016 - KJHW: Updated the MUR and output file names to include 'PXY'
;     AUG 09, 2019 - KJWH: Changed DATATYPE() to IDLTYPE()     
;                                               
; #########################################################################
;-

;****************************************
ROUTINE_NAME  = 'MAPS_MUR_2LONLAT_SUBSET'
;***************************************
;===> ENSURE ARRAY AND MAP_OUT ARE PROVIDED
  
  IF NONE(MP) AND NONE(LONMIN) THEN MESSAGE,'ERROR: EITHER MAP OR LON/LAT MIN/MAX ARE REQUIRED'
  IF NONE(OUTNAME) AND ANY(MP)  THEN OUTNAME = MP + '_SUBSET'
  IF NONE(OUTNAME) AND NONE(MP) THEN OUTNAME = ROUNDS(LATMIN)+'_'+ROUNDS(LONMIN)+'_'+ROUNDS(LATMAX)+'_'+ROUNDS(LONMAX)+'_SUBSET'
  MAP_OUT = REPLACE(OUTNAME,'-','N') ; REPLACE DASHES ('-') WITH N (FOR NEGATIVE) BECAUSE DASHES ARE NOT ALLOWED IN IDL TAGNAMES

;===> GET MUR GLOBAL LAT & LON ARRAYS FROM MASTER

  COMMON MAPS_MUR_2LONLAT_SUBSET_, LON, LAT
  
  IF KEY(INIT) THEN BEGIN
    LON = []
    LAT = []
  ENDIF
   
  IF NONE(LON) THEN LON = IDL_RESTORE(!S.MAPINFO + 'MUR-PXY_36000_17999-LON.SAV')
  IF NONE(LAT) THEN LAT = IDL_RESTORE(!S.MAPINFO + 'MUR-PXY_36000_17999-LAT.SAV')
  
  IF IDLTYPE(LONS) EQ 'STRING' OR IDLTYPE(LATS) EQ 'STRING' THEN BEGIN
    LON = []
    LAT = []
    PRINT, 'ERROR: Unable to read the MASTER LON/LAT files'
    GOTO, DONE
  ENDIF
  
;===> DETERMINE LON/LAT CORNERS OF MAP_OUT
  IF VALIDS('MAPS',MP) EQ STRUPCASE(MP) THEN BEGIN
    MAPS_SET,MP     
    S=MAPS_LL_BOX() 
    ZWIN
    LONMIN = S.LONMIN
    LONMAX = S.LONMAX
    LATMIN = S.LATMIN
    LATMAX = S.LATMAX
  ENDIF ; IF VALIDS('MAPS',MAP_OUT) EQ MAP_OUT THEN BEGIN

  SUBSET_LATS = MAPS_REMAP(LAT, MAP_IN='MUR', MAP_OUT=MP, MAP_SUBSET=1, LONMIN=LONMIN, LONMAX=LONMAX, LATMIN=LATMIN, LATMAX=LATMAX)
  SUBSET_LONS = MAPS_REMAP(LON, MAP_IN='MUR', MAP_OUT=MP, MAP_SUBSET=1, LONMIN=LONMIN, LONMAX=LONMAX, LATMIN=LATMIN, LATMAX=LATMAX)
  SZ = SIZEXYZ(SUBSET_LATS,PX=PX,PY=PY)
  
  FILE_LAT = !S.MAPINFO + OUTNAME + '-PXY_' + ROUNDS(PX) + '_' + ROUNDS(PY) + '-LAT.SAV'
  FILE_LON = !S.MAPINFO + OUTNAME + '-PXY_' + ROUNDS(PX) + '_' + ROUNDS(PY) + '-LON.SAV'

  SAVE, SUBSET_LATS, FILENAME=FILE_LAT
  SAVE, SUBSET_LONS, FILENAME=FILE_LON


  DONE:


 



END; #####################  END OF ROUTINE ################################
