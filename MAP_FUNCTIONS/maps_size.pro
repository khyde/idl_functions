; $ID:	MAPS_SIZE.PRO,	2020-05-12-15,	USER-KJWH	$
;#################################################################
FUNCTION MAPS_SIZE, MAPP, PX=PX, PY=PY, STRING=STRING
;+
; THIS FUNCTION RETURNS A STRUCTURE CONTAINING THE 
; DIMENSIONS (PX,PY) OF STANDARD MAPS
;
; EXAMPLES:
; ST,MAPS_SIZE('NEC')
; ST,MAPS_SIZE('EC')
; ST,MAPS_SIZE('GEQ')
; ST,MAPS_SIZE('SMI')
; ST,MAPS_SIZE('BALTIC_SEA'); ERROR 
; ST,MAPS_SIZE('LME_BALTIC_SEA')
; ST,MAPS_SIZE('BALTIC_SEA_J')
; ST,MAPS_SIZE('FAO_NORTHWEST_ATLANTIC')

; HISTORY:
;   JAN 31, 2005 WRITTEN BY: J.E. O'REILLY,  NOAA, 28 TARZWELL DRIVE, NARRAGANSETT, RI 02882;
;		OCT 04, 2006 - KJWH: MASS BAY MAP PROJECTION AND SIZE WERE REVAMPED
;		APR 22, 2008 - KJWH: ADDED LME MAP AND LME_CODE AND LME_NAME KEYWORDS
;	  APR 28, 2008 - TD:   ADDED MEX_LABRADOR MAP
;	  NOV 27, 2013 - JEOR: ADDED KEYWORD OLD [TO USE THE ORIGINAL METHOD/CODE AND NOT THE NEW MAPS SYSTEM]
;	  DEC 07, 2013 - JEOR: ADDED EXAMPLES 
;	  DEC 10, 2014 - JEOR: RENAMED TO MAPS_SIZE, REMOVED KEY OLD AND ALL REFERENCES TO LME AND FAO MAPS
;	                       REMOVED ALL SPECIFICS FOR MAPS [SINCE THE MASTER MAPS HAS THESE SPECIFICS]
;	  JAN 07, 2016 - KJWH: ADDED PX AND PY OUTPUTS IN ORDER TO SAVE STEPS IN SUBSEQUENT PROGRAMS      
;	                       CHANGED MAP TO MAPP TO AVOID IDL CONFLICTS    
;	  MAR 28, 2017 - KJWH: Added keyword STRING to convert the PX and PY output variables to STRINGS   
;	  MAY 12, 2020 - KJWH: Added MAP_PXY variable to the output structure to return a text string with the MAP, PX and PY information                             
;#################################################################################################
;-

;**************************
  ROUTINE_NAME  = 'MAPS_SIZE'
;**************************

  IF NONE(MAPP) OR TYPENAME(MAPP) NE 'STRING' OR MAPP EQ '' THEN MESSAGE,'ERROR: MAP IS REQUIRED'

  M = CREATE_STRUCT('MAP','','INIT','','PX',0L,'PY',0L,'MAP_PXY','','ERROR',0)

  _MAP = STRUPCASE(MAPP)
  VALID_ = VALID_MAPS(_MAP)

  IF VALID_ NE STRUPCASE(_MAP) THEN BEGIN
  	M.ERROR=1
  	PX = 0
  	PY = 0
  	RETURN,M
  ENDIF
  
  M.MAP = _MAP
  S = MAPS_READ(_MAP)
  STRUCT_ASSIGN,S,M
    
  PX = M.PX
  PY = M.PY
  
  IF KEY(STRING) THEN BEGIN
    PX = NUM2STR(PX)
    PY = NUM2STR(PY)
  ENDIF ; KEY(STRING)
  
  M.MAP_PXY = _MAP + '_PXY_' + NUM2STR(PX) + '_' + NUM2STR(PY)
  
  RETURN, M
   
END; #####################  END OF ROUTINE ################################
