; $ID:	WHERE_FLANK.PRO,	2020-07-08-15,	USER-KJWH	$
; #########################################################################
FUNCTION WHERE_FLANK, ARR,RANGE_,COUNT,VALUES=VALUES,NCOMPLEMENT=NCOMPLEMENT,COMPLEMENT=COMPLEMENT
 
;+
; PURPOSE: RETURN SUBSCRIPTS OF ARR THAT FLANK [BRACKET] THE  RANGE_ PROVIDED
;
; CATEGORY: WHERE FAMILY
;
;
; INPUTS:   ARR.......... ARR OF DATA IN WHICH TO FIND RANGE_
;           RANGE_......... SCALAR,VECTOR, OR ARRAY 
;
;
; KEYWORDS:  
;           VALUES......... RETURN VALUES FROM THE ARR NOT SUBSCRIPTS
;           NCOMPLEMENT.... NUMBER OUTSIDE THE RANGE_
;           COMPLEMENT..... SUBSCRIPTS OF THE ARR OUTSIDE THE RANGE_
;           

; OUTPUTS:  THE PART OF THE ARR THAT IS WITHIN THE MIN,MAX OF RANGE_
;           COUNT........ THE NUMBER OF ARR FOUND THAT INCLUDES THE RANGE_
;
;; EXAMPLES:
;   PRINT,WHERE_FLANK(INDGEN(9),7) 
;   PRINT,WHERE_FLANK(INDGEN(9),[6,7]) 
;   PRINT,WHERE_FLANK(INDGEN(9),[6,7],/VAL) 
;   HELP,WHERE_FLANK(INDGEN(9),[8,9],/VAL) ;= NULL
;   PRINT,WHERE_FLANK(INDGEN(9),[4,5,6],NCOMPLEMENT = NCOMPLEMENT,COMPLEMENT=COMPLEMENT,COUNT) & P,COUNT,COMPLEMENT,NCOMPLEMENT;  
;   PRINT,WHERE_FLANK(INDGEN(9),[4,5,6],NCOMPLEMENT = NCOMPLEMENT,COMPLEMENT=COMPLEMENT,COUNT,/VAL) & P,COUNT,COMPLEMENT,NCOMPLEMENT;     
;   PRINT,WHERE_FLANK( ['0.01','0.03','0.10','0.3','1','3','10','30','100','300'],[0.3,30],/VAL)
;
; MODIFICATION HISTORY:
;     MAR 17, 2017  WRITTEN BY: J.E. O'REILLY 
;     MAR 18, 2017  ADDED CASE BLOCK
;-
; ###################################################################################################

;*************************
ROUTINE = 'WHERE_FLANK'
;*************************
N = NOF(ARR)
NTH = N - 1L
MIN_ = FLOAT(MIN(RANGE_,/NAN))
MAX_ = FLOAT(MAX(RANGE_,/NAN))

OK_MIN = WHERE(ARR LT MIN_,COUNT_BELOW)
IF COUNT_BELOW GE 1 THEN BELOW = (0L > LAST(OK_MIN))
OK_MAX = WHERE(ARR GT MAX_,COUNT_ABOVE)
IF COUNT_ABOVE GE 1 THEN ABOVE = (FIRST(OK_MAX) < NTH)
IF COUNT_BELOW EQ 0 OR COUNT_ABOVE EQ 0 THEN RETURN, [];>>>>
I = LINDGEN(N)
COMPLEMENT = WHERE(I LT BELOW OR I GT ABOVE,NCOMPLEMENT)
;CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CASE [1] OF
  COUNT_BELOW EQ 0 OR COUNT_ABOVE EQ 0: RETURN, [];>>>>
  KEY(VALUES): BEGIN
    COUNT = ABOVE - BELOW+ 1
    RETURN,ARR(BELOW:ABOVE) ;>>>>
  END
  ELSE: BEGIN
    COUNT = 2
    RETURN,[BELOW,ABOVE] ;>>>>
  END
ENDCASE
;CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC


END; #####################  END OF ROUTINE ################################
