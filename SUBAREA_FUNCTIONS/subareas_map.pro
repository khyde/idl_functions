; $ID:	SUBAREAS_MAP.PRO,	2020-07-08-15,	USER-KJWH	$
;+
;#############################################################################################################
	PRO SUBAREAS_MAP,MAP=MAP,REGION=REGION,SUBAREAS = SUBAREAS,DIR_OUT=DIR_OUT

;
; PURPOSE: MAKES A MAP OF THE SUBAREAS IN A REGION OR OF SPECIFIED  SUBAREAS
;
; CATEGORY:	SUBAREAS FAMILY
;
; CALLING SEQUENCE: SUBAREAS_MAP,REGION=REGION
;
; INPUTS: STRUCTURE [SPREAD SHEET TYPE DATABASE]
;		
; OPTIONAL INPUTS:
;		NONE:	
;		
; KEYWORD PARAMETERS:
;   MAP - THE MAP TO USE FOR PLOTTING THE SUBAREAS
;		REGION - THE REGION CONTAINING THE SUBAREAS TO PLOT
;   SUBAREAS - THE SUBAREA(S) TO PLOT
;   DIR_OUT - OUTPUT DIRECTORY 
; OUTPUTS: A PNG MAP IMAGE OF THE SUBAREAS
;		
; EXAMPLES: 
;
; MODIFICATION HISTORY:
;			MAY 21, 2014,  WRITTEN BY J.O'REILLY 
;			APR 7,  2015 - KJWH: Changed default shapefile directory to !S.IDL_SHAPEFILES
;			                     Commented out FONT_HELVIETICA and SET_PLOT,'WIN'
;			                     Changed color to NTH + 1 because CODE is not saved in the master
;			                     Changed name of shapefile because SOURCE refers to a set location on JOR's computer
;			NOV 22, 2017 - KJWH: Changed PLT_SHP to READ_SHPFILE                     
;			
;			
;			
;#################################################################################
;-
;********************************
  ROUTINE_NAME  = 'SUBAREAS_MAP'
;********************************
;===> CONSTANTS
  IF NONE(DIR_OUT) THEN DIR_OUT = !S.IDL_TEMP
  DIR_SHP = !S.IDL_SHAPEFILES

  
  
  IF NONE(REGION) AND NONE(SUBAREAS) THEN MESSAGE,'ERROR: REGION OR SUBAREAS ARE  REQUIRED'
  MASTER = !S.MASTER + 'SUBAREAS_MASTER.SAV'
  IF FILE_TEST(MASTER) EQ 1 THEN BEGIN
    SAV = IDL_RESTORE(MASTER)
  ENDIF ELSE BEGIN
    PFILE,MASTER,/X
  ENDELSE;IF FILE_TEST(MASTER) EQ 1 THEN BEGIN
  ;===> FIND THE REGION
  OK = WHERE(SAV.REGION EQ REGION,COUNT)
  IF COUNT GE 1 THEN SAV=SAV[OK]
  ;===> FIND THE SUBAREAS
  OK = WHERE_STRING(SAV.SUBAREA, SUBAREAS,COUNT)
  IF COUNT GE 1 THEN SAV=SAV[OK]
  ;===> IF MAP NOT PROVIDED THEN GET IT FROM THE MASTER SAV
  IF NONE(MAP) THEN MAP = GET(SAV.MAP)
  MAPS_SET,MAP
  ERASE,255
  MAP_CONTINENTS,/HIRES,/COASTS,COLOR = 252
  TXT = REGION + '!C' + STRJOIN(SUBAREAS,'-')
  XYOUTS,0.15,0.75,STRTRIM(TXT,2),/NORMAL,CHARSIZE = 7,COLOR = 0
  LL = !MAP.LL_BOX & LATMIN = LL[0] & LONMIN = LL[1] & LATMAX = LL(2) &LONMAX = LL(3)
  
  ;===> FIND SUBAREAS WITHIN MAP DOMAIN
  OK = WHERE(SAV.LATMIN GE LATMIN AND SAV.LONMIN GE LONMIN AND SAV.LATMAX LE LATMAX AND SAV.LONMAX LE LONMAX,COUNT)
  IF COUNT GE 1 THEN DB = SAV[OK]
  
 

;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FOR NTH = 0,N_ELEMENTS(DB) -1 DO BEGIN
  D = DB[NTH]
  FP = FILE_PARSE(D.SOURCE)
  SUBAREA = D.SUBAREA
  COLOR = NTH + 1  
  IF D.NPTS LE 10 THEN AROUND = 10
  SHP_FILE =  DIR_SHP + REGION + PATH_SEP()+ FP.NAME_EXT
  IF FILE_TEST(SHP_FILE) EQ 0 THEN CONTINUE ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
  READ_SHPFILE, SHP_FILE,COLOR = COLOR,FILL=1,THICK=THICK,VERBOSE=VERBOSE,$
    GET_RANGE=GET_RANGE,TAGNAME='SUBAREA',VALUE=SUBAREA,$
    RANGE_LON = RANGE_LON, RANGE_LAT = RANGE_LAT,NORMAL=NORMAL,$
    DO_ALL = DO_ALL, AUTO=AUTO,LONS=LONS,LATS=LATS,AROUND=AROUND,$
    PSYM = PSYM,SYMSIZE=SYMSIZE,$
    _EXTRA=_EXTRA

 
ENDFOR;FOR _SUB = 0,N_ELEMENTS(SUBS) -1 DO BEGIN
;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF

IMG = TVRD()
ZWIN
PNGFILE = DIR_OUT +ROUTINE_NAME +'-'+ REGION + '.PNG'
PAL_SUBAREAS,R,G,B
WRITE_PNG,PNGFILE,IMG,R,G,B & PFILE,PNGFILE




END; #####################  END OF ROUTINE ################################
