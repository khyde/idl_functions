; $ID:	SUBAREAS_LONLAT_2SHP.PRO,	2020-07-01-12,	USER-KJWH	$
	PRO SUBAREAS_LONLAT_2SHP,FILE=FILE,LON=LON,LAT = LAT, $
	    SOURCE=SOURCE,REGION=REGION,SUBAREA=SUBAREA,CODE=CODE,AROUND=AROUND,OVERWRITE=OVERWRITE
;##############################################################################
;+
; NAME:
;		SUBAREAS_LONLAT_2SHP
;
; PURPOSE:	THIS PROCEDURE MAKES A SHAPE FILE FROM  A LON,LAT POINT
;
; CATEGORY:
;		SUBAREAS FAMILY
;
; INPUTS: SEE KEYWORDS;

; KEYWORDS:
;    LON - FULL NAME OF THE SUBAREA MASK FILE
;    LAT - FULL NAME OF THE SUBAREA CSV FILE WITH TAGS SUBAREA_CODE AND SUBAREA_NAME
;    BACKGROUND: BACKGROUND COLOR TO IGNORE [DEFAULT = 255, AND 0]
;    LON - LONGITUDE OF POINT
;    LAT - LATITUDE OF POINT
;    REGION - THE NAME OF THE REGION TO WHICH THE SUBAREAS BELONG [DEFAULT = MAP]
;    SUBAREA - THE SUBAREA NAME
;    REGION - THE NAME OF THE REGION
;    AROUND - THE NUMBER OF PIXELS AROUND THE POINT [DEFAULT = 1]
;    	
; OUTPUTS:
;		 A SHP FILE [SHAPE FILE] FOR THE LON,LAT COORDINATE
;

; EXAMPLE:

;   SUBAREAS_LONLAT_2SHP,LON=-64.1000,LAT = 31.6667, REGION = 'ATLANTIC',SUBAREA = 'BATS',AROUND=0
;

; MODIFICATION HISTORY:
; 
;			WRITTEN JUN 4,2014, BY J.O'REILLY
;			JUN 5,2014,JOR: ENTNEW.VERTICES = PTR_NEW(LONLAT , /ALLOCATE_HEAP, /NO_COPY ) 
;     JUN 7,2014,JOR  GETTING LON LAT DIRECTLY FROM PATH_INFO & PATH_XY
;     JUN 8,2014,JOR  ADDED KEYWORDS MASKFILE,CSVFILE
;                     CLOSED=0 TO AVOID INCLUDING OUTSIDE BOUNDARIES IN OUTPUT
;                     ADDED CHECK THAT SUBAREA_CODES IN CSVFILE MATCH COLORS IN MASKFILE
;                     ADDED ENTITIES IN LOOP ON PATH_INFO TO DEAL WITH UNCONNECTED SUBAREAS 
;                    [E.G. SNE NEAR SHORE HAS 2 COLOR BLOBS]
;     JUN 10,2014,JOR ADDED AROUND
;     JUN 14,2014,JOR ADDED SOURCE
;     SHP->ADDATTRIBUTE, 'REGION', 7, STRLEN(REGION), PRECISION=0
;     JUN 15,2014,JOR PAL_SUBAREAS
;     APR 17,2015,JOR ADDED FILE, LONLAT TO SHP_FILE NAME,
;     NOV 22, 2017 - KJWH: Changed PLT_SHP to READ_SHPFILE
;			
;##############################################################################
;-
;	************************************
ROUTINE_NAME  = 'SUBAREAS_LONLAT_2SHP'
;*************************************
;
;===> CONSTANTS
SET_PLOT,'WIN'
IF NONE(AROUND) THEN AROUND = 1
IF NONE(CODE) THEN CODE = 26
IF NONE(SOURCE) THEN SOURCE = ROUTINE_NAME
AMAP = VALID_MAPS(SOURCE)

IF NONE(REGION) THEN REGION = ROUTINE_NAME
REGION = STRUPCASE(REPLACE(REGION,' ', '_'))
METHOD = ROUTINE_NAME
ICOLOR = 26      
;===> MAKE A REGION SUBFOLDER
    DIR_REGION = !S.IDL_SHAPEFILES + REGION + PATH_SEP()
    DIR_TEST,DIR_REGION
    SHP_FILE= DIR_REGION + REGION + '-'+ SUBAREA + '-LONLAT.SHP'
    IF FILE_MAKE(FILE,SHP_FILE,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE) EQ 0 THEN  GOTO,DONE;>>>>>>>>>>>
    
;################################################################################
      ; CREATE THE NEW SHAPEFILE AND DEFINE THE ENTITY_TYPE AS A POINT [TYPE 1]
;################################################################################
      SHP = OBJ_NEW('IDLFFSHAPE',SHP_FILE, ENTITY_TYPE=1)
;===> SET THE ATTRIBUTE DEFINITIONS FOR THE NEW SHAPEFILE
      SHP->ADDATTRIBUTE, 'REGION', 7, STRLEN(REGION), PRECISION=0
      SHP->ADDATTRIBUTE, 'SUBAREA', 7, STRLEN(SUBAREA), PRECISION=0
      SHP->ADDATTRIBUTE, 'CODE', 7, STRLEN(CODE), PRECISION=0
      SHP->ADDATTRIBUTE, 'METHOD', 7, STRLEN(METHOD), PRECISION=0
      SHP->ADDATTRIBUTE, 'SOURCE', 7, STRLEN(SOURCE), PRECISION=0
      SHP->ADDATTRIBUTE, 'DATE', 7, STRLEN(DATE_NOW()), PRECISION=0
      SHP->ADDATTRIBUTE, 'MAP', 7, STRLEN(AMAP),PRECISION=0
;===> CREATE STRUCTURE FOR NEW ATTRIBUTES
      ATTRNEW = SHP->GETATTRIBUTES(/ATTRIBUTE_STRUCTURE)
      ; DEFINE THE VALUES FOR THE NEW ATTRIBUTES
      ATTRNEW.ATTRIBUTE_0 = REGION
      ATTRNEW.ATTRIBUTE_1 = SUBAREA
      ATTRNEW.ATTRIBUTE_2 = STRTRIM(CODE,2)
      ATTRNEW.ATTRIBUTE_3 = ROUTINE_NAME
      ATTRNEW.ATTRIBUTE_4 = SOURCE
      ATTRNEW.ATTRIBUTE_5 = DATE_NOW()
      ATTRNEW.ATTRIBUTE_6 = AMAP
      ;==> ADD THE ATTRIBUTES TO NEW SHAPEFILE.
      SHP->SETATTRIBUTES, 0, ATTRNEW           
          LONLAT = DBLARR(2,N_ELEMENTS(LON)) & LONLAT(0,*) = LON & LONLAT(1,*) = LAT
          ;===> CREATE STRUCTURE FOR NEW ENTITY
          ENTNEW = {IDL_SHAPE_ENTITY}
          ; DEFINE THE VALUES FOR THE NEW ENTITIES
          ENTNEW.SHAPE_TYPE = 1
          ENTNEW.BOUNDS[0] = MIN(LON)
          ENTNEW.BOUNDS[1] = MIN(LAT)
          ENTNEW.BOUNDS[2] = 0.D
          ENTNEW.BOUNDS[3] = 0.D
          ENTNEW.BOUNDS[4] = MAX(LON)
          ENTNEW.BOUNDS[5] = MAX(LAT)
          ENTNEW.BOUNDS[6] = 0.D
          ENTNEW.BOUNDS[7] = 0.D
          ENTNEW.N_VERTICES = N_ELEMENTS(LON)
          ENTNEW.VERTICES = PTR_NEW(LONLAT , /ALLOCATE_HEAP, /NO_COPY )

          ; ADD THE NEW ENTITY TO NEW SHAPEFILE
          SHP->PUTENTITY, ENTNEW
          ;===> CLOSE/DESTROY THE SHAPEFILE
          OBJ_DESTROY, SHP
          PFILE,SHP_FILE
   
    ;===> MAKE A MAP FROM THE SHP FILE
    MAPS_SET,AMAP
    ERASE,255
    MAP_CONTINENTS,/HIRES,/COASTS, COLOR = 0
    
    READ_SHPFILE, SHP_FILE,COLOR=ICOLOR,FILL=1,THICK=0,VERBOSE=VERBOSE,$
      GET_RANGE=GET_RANGE,TAGNAME='SUBAREA',VALUE=SUBAREA,$
      RANGE_LON = RANGE_LON, RANGE_LAT = RANGE_LAT,NORMAL=NORMAL,$
      AUTO=AUTO,LONS=LONS,LATS=LATS,SYMSIZE = 1,AROUND=AROUND,_EXTRA=_EXTRA
    ;===> ADD SUBAREA NAME AND CODE
    FONT_HELVETICA
    TXT = SUBAREA + '!CCODE:!C' + STRTRIM(ICOLOR,2)
    XYOUTS,0.05,0.90,TXT,/NORMAL,CHARSIZE = 4,COLOR = 0,CHARTHICK = 2
    XYOUTS,0.05,0.90,TXT,/NORMAL,CHARSIZE = 4,COLOR = 0; ICOLOR
    IMG = TVRD()
    ZWIN
    PAL_36,R,G,B
    PNGFILE= DIR_REGION + REGION + '-'+ SUBAREA + '-LONLAT.PNG'
    WRITE_PNG,PNGFILE,IMG,R,G,B    & PF,PNGFILE
 

DONE:
END; #####################  END OF ROUTINE ################################
