; $ID:	DATE_2JD.PRO,	2020-06-30-17,	USER-KJWH	$
;###################################################
  FUNCTION DATE_2JD, DATE, ERROR=ERROR
;+
; NAME:
;       DATE_2JD
;
; PURPOSE:
;       CONVERT DATE INTO JULIAN DAY
;
; CATEGORY:
;       DATE_TIME
;
; EXAMPLES:
;
;       JD = DATE_2JD(['2000','200001','20001209','2000120912','200012091230','20001209123059'])
;
; INPUTS:
;       A DATE STRING FORMATTED AS ANY OF THE FOLLOWING:
;					 YYYY, YYYYMM, YYYYMMDD, YYYYMMDDHH,YYYYMMDDHHMM,YYYYMMDDHHMMSS
;
; OUTPUTS:
;       AN IDL JULIAN DATE
;
; OPTIONAL OUTPUTS:
;		ERROR:   ANY ERROR MESSAGES ARE PLACED IN ERROR, IF NO ERRORS THEN ERROR = ''
;
;
; RESTRICTIONS:
;
;      INPUT DATE IS STRING TYPE THEN FORMAT OF DATE TIME STRING MUST BE ORDERED
;       AS IN THE FOLLOWING EXAMPLES:
;       YYYY,
;       YYYYMM, YYYYMMDD, YYYYMMDDHH, YYYYMMDDHHMM,YYYYMMDDHHMMSS
;
; MODIFICATION HISTORY:
;       WRITTEN BY:  J.E.O'REILLY, OCT 7,2000
;       MAY 28,2012,JOR :   RETURN,ERROR STRING 

;-

; *****************************
	ROUTINE_NAME = 'DATE_2JD'
; *****************************
	ERROR = ''

  IF N_ELEMENTS(DATE) EQ 0 THEN BEGIN
  	ERROR = 'MUST PROVIDE DATE: YYYYMMDD OR YYYYMMDDHH OR YYYYMMDDHHMMSS'
  	PRINT,ERROR
  	RETURN,ERROR
  ENDIF

;	===> MAKE OUTPUT ARRAY
	JD = REPLICATE(MISSINGS(0.0D),N_ELEMENTS(DATE))

;	===> FIND VALID DATES
	OK = WHERE(FINITE(DATE) AND DATE NE MISSINGS(DATE),COUNT)

;	===> CONVERT TO JULIAN DAY
	IF COUNT GE 1 THEN BEGIN
;		===> CONVERT TO STRING
		DT=STRTRIM(DATE[OK],2)
		JD[OK] = JULDAY( (FIX(STRMID(DT,4,2))>1),(FIX(STRMID(DT,6,2))>1),(FIX(STRMID(DT,0,4))>0),(FIX(STRMID(DT,8,2))>0),(FIX(STRMID(DT,10,2))>0),(FIX(STRMID(DT,12,2)))>0)
	ENDIF ELSE BEGIN
		ERROR='NO VALID INPUT DATES'
		PRINT,ERROR
		RETURN,ERROR
	ENDELSE

	IF N_ELEMENTS(JD) EQ 1 THEN RETURN, JD[0] ELSE RETURN, JD

END; #####################  END OF ROUTINE ################################


