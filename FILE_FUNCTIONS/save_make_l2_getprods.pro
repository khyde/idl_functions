; $ID:	SAVE_MAKE_L2_GETPRODS.PRO,	2020-06-30-17,	USER-KJWH	$

FUNCTION SAVE_MAKE_L2_GETPRODS, ADDPRODS

  ;+
  ; NAME:
  ;		SAVE_MAKE_L2_GETPRODS
  ;
  ; PURPOSE:
  ;		This procedure will get the RRS and other products needed to calculate non-standard NASA products
  ;
  ; CATEGORY:
  ;		SAVE_MAKE
  ;
  ; CALLING SEQUENCE:
  ;   PRODS = ['A_CDOM-MANNINO','POC-MANNINO']
  ;   SD_HDF_ADDPRODS, ADDPRODS
  ;
  ; INPUTS:
  ;		PRODS:  Product names with alogirthms
  ;
  ; OPTIONAL INPUTS:
  ;   
  ; KEYWORD PARAMETERS:
  ;
  ; OUTPUTS:
  ;		This function returns the NASA standard products to extract from the .nc file
  ;
  ; OPTIONAL OUTPUTS:
  ;
  ; SIDE EFFECTS:	 
  ;
  ; RESTRICTIONS:
  ;
  ;	PROCEDURE:
  ;
  ; EXAMPLE:
  ;
  ;	NOTES:
  ;  Will need to update with new algorithms
  ;
  ;
  ; MODIFICATION HISTORY:
  ;			Written March 18, 2011 by K.J.W. Hyde, 28 Tarzwell Drive, NMFS, NOAA 02882 (kimberly.hyde@noaa.gov)
  ;			
  ;-
  ;	****************************************************************************************************
  ROUTINE_NAME = 'SAVE_MAKE_L2_GETPRODS'
  
  DISK=!S.DATASETS
  SL = DELIMITER(/PATH)
  
  IF NONE(ADDPRODS) THEN RETURN, []    ; If no input products, return null variable
  
  CURRENT_PRODS = ['A_CDOM-MANNINO',$  ; List of available products (note, if new algorithms are added, must add the name to the CURRENT_PRODS list)
                   'CHLOR_A-PAN',   $
                   'DOC-MANNINO',   $
                   'PIGMENTS-PAN',  $ 
                   'POC-MANNINO',   $
                   'POC-STRAMSKI']
   
  OK = WHERE_MATCH(ADDPRODS, CURRENT_PRODS, COUNT, COMPLEMENT=COMPLEMENT, NCOMPLEMENT=NCOMPLEMENT, VALID=VALID, INVALID=INVALID, NINVALID=NINVALID)
  IF COUNT EQ 0 THEN BEGIN
    PRINT, 'No input PRODUCTS were recognized'
    RETURN, []
  ENDIF
  PRODS = ADDPRODS[OK]
  
  GET_PRODS = []
  FOR PTH = 0L, N_ELEMENTS(PRODS)-1 DO BEGIN ; Find products to extract from the HDF files (note a_cdom_355_mannino is necessary to calculate doc_mannino)
    APROD = PRODS(PTH)
    CASE APROD OF
      'A_CDOM-MANNINO': GET_PRODS = [GET_PRODS,'RRS_443','RRS_555','RRS_670','AT_412','AT_443']
      'CHLOR_A-PAN':        GET_PRODS = [GET_PRODS,'RRS_490','RRS_555','RRS_670']
      'DOC-MANNINO':        GET_PRODS = [GET_PRODS,'RRS_443','RRS_555','RRS_670'];'A_CDOM_412_MAN_MLR']
      'PIGMENTS-PAN':       GET_PRODS = [GET_PRODS,'RRS_490','RRS_555','RRS_670']
      'POC-MANNINO':        GET_PRODS = [GET_PRODS,'RRS_490','RRS_555']
      'POC-STRAMSKI':       GET_PRODS = [GET_PRODS,'RRS_490','RRS_555']
    ENDCASE
  ENDFOR
  GET_PRODS = GET_PRODS[SORT(GET_PRODS)]
  GET_PRODS = GET_PRODS[UNIQ(GET_PRODS)]
  RETURN, GET_PRODS 
;  IF SENSOR EQ 'MODIS' THEN SD_PRODS = REPLACE(GET_PRODS,['RRS_490','RRS_555','RRS_670'],['RRS_488','RRS_547','RRS_667']) ELSE SD_PRODS = GET_PRODS
  
  
  
;    IF COUNT GE 1 THEN SD_PRODS = SD_PRODS[OK] ELSE CONTINUE ; >>>>>>>>>>>>>>>>>>>>>>>
;    IF WHERE(SD_PRODS EQ 'CHLOR_A')            GE 0 THEN CHLOR_A = (STRUCT.SD.CHLOR_A.IMAGE * STRUCT.SD.CHLOR_A.SLOPE[0]) + STRUCT.SD.CHLOR_A.INTERCEPT[0]
;    IF WHERE(SD_PRODS EQ 'RRS_412')            GE 0 THEN RRS_412 = (STRUCT.SD.RRS_412.IMAGE * STRUCT.SD.RRS_412.SLOPE[0]) + STRUCT.SD.RRS_412.INTERCEPT[0]
;    IF WHERE(SD_PRODS EQ 'RRS_443')            GE 0 THEN RRS_443 = (STRUCT.SD.RRS_443.IMAGE * STRUCT.SD.RRS_443.SLOPE[0]) + STRUCT.SD.RRS_443.INTERCEPT[0]
;    IF WHERE(SD_PRODS EQ 'RRS_488')            GE 0 THEN RRS_490 = (STRUCT.SD.RRS_488.IMAGE * STRUCT.SD.RRS_488.SLOPE[0]) + STRUCT.SD.RRS_488.INTERCEPT[0]
;    IF WHERE(SD_PRODS EQ 'RRS_490')            GE 0 THEN RRS_490 = (STRUCT.SD.RRS_490.IMAGE * STRUCT.SD.RRS_490.SLOPE[0]) + STRUCT.SD.RRS_490.INTERCEPT[0]
;    IF WHERE(SD_PRODS EQ 'RRS_547')            GE 0 THEN RRS_555 = (STRUCT.SD.RRS_547.IMAGE * STRUCT.SD.RRS_547.SLOPE[0]) + STRUCT.SD.RRS_547.INTERCEPT[0]
;    IF WHERE(SD_PRODS EQ 'RRS_555')            GE 0 THEN RRS_555 = (STRUCT.SD.RRS_555.IMAGE * STRUCT.SD.RRS_555.SLOPE[0]) + STRUCT.SD.RRS_555.INTERCEPT[0]
;    IF WHERE(SD_PRODS EQ 'RRS_667')            GE 0 THEN RRS_670 = (STRUCT.SD.RRS_667.IMAGE * STRUCT.SD.RRS_667.SLOPE[0]) + STRUCT.SD.RRS_667.INTERCEPT[0]
;    IF WHERE(SD_PRODS EQ 'RRS_670')            GE 0 THEN RRS_670 = (STRUCT.SD.RRS_670.IMAGE * STRUCT.SD.RRS_670.SLOPE[0]) + STRUCT.SD.RRS_670.INTERCEPT[0]
;    IF WHERE(SD_PRODS EQ 'AT_412')             GE 0 THEN AT_412  = (STRUCT.SD.AT_412.IMAGE  * STRUCT.SD.AT_412.SLOPE[0])  + STRUCT.SD.AT_412.INTERCEPT[0]
;    IF WHERE(SD_PRODS EQ 'AT_443')             GE 0 THEN AT_443  = (STRUCT.SD.AT_443.IMAGE  * STRUCT.SD.AT_443.SLOPE[0])  + STRUCT.SD.AT_443.INTERCEPT[0]
;    IF WHERE(SD_PRODS EQ 'A_CDOM_412-MAN_MLR') GE 0 THEN A_CDOM_412 = STRUCT.SD.A_CDOM_412_MAN_MLR.IMAGE
;    IF WHERE(SD_PRODS EQ 'SST')                GE 0 THEN SST = STRUCT.SD.SST4.IMAGE
;    GONE, STRUCT
    
;    SAMPLE_PROD = HDF_PRODS[WHERE(STRUPCASE(HDF_PRODS) EQ STRUPCASE(PROD_TAGS[0]))]
;    SAMPLE_PROD = SAMPLE_PROD[0]
;    
;    PRODS = PRODS[UNIQ(PRODS)]
;    IF WHERE(PRODS EQ 'A_CDOM_355-MANNINO')        GE 0 THEN BEGIN & A_CDOM_355   = A_CDOM_MANNINO(RRS_412=RRS_412, RRS_555=RRS_555,ERROR=ERRORS,ERR_MSG=ERR_MSGS)                                                                            & ERROR=[ERROR,ERRORS] & ERR_MSG=[ERR_MSG,ERR_MSGS] & ENDIF
;    IF WHERE(PRODS EQ 'POC-MANNINO')               GE 0 THEN BEGIN & POC_MANNINO  = POC_MANNINO(RRS490=RRS_490, RRS555=RRS_555, MISSING=MISSING,ERROR=ERRORS,ERR_MSG=ERR_MSGS)                                                              & ERROR=[ERROR,ERRORS] & ERR_MSG=[ERR_MSG,ERR_MSGS] & ENDIF
;    IF WHERE(PRODS EQ 'POC-STRAMSKI')              GE 0 THEN BEGIN & POC_STRAMSKI = POC_STRAMSKI(RRS490=RRS_490, RRS555=RRS_555,SATELLITE=SENSOR,ERROR=ERRORS,ERR_MSG=ERR_MSGS)                                                             & ERROR=[ERROR,ERRORS] & ERR_MSG=[ERR_MSG,ERR_MSGS] & ENDIF
;    IF WHERE(PRODS EQ 'DOC-MANNINO')               GE 0 THEN BEGIN & DOC_MANNINO  = DOC_MANNINO(A_CDOM_355=A_CDOM_355,DATE=ADATE,ERROR=ERRORS,ERR_MSG=ERR_MSGS)                                                                             & ERROR=[ERROR,ERRORS] & ERR_MSG=[ERR_MSG,ERR_MSGS] & ENDIF
;    IF WHERE(PRODS EQ 'DOC-MANNINO_WINTER')        GE 0 THEN BEGIN & DOC_WINTER   = DOC_MANNINO(A_CDOM_355=A_CDOM_355,DATE=ADATE,DOC_WINTER=DOC_WINTER,ERROR=ERRORS,ERR_MSG=ERR_MSGS)                                                       & ERROR=[ERROR,ERRORS] & ERR_MSG=[ERR_MSG,ERR_MSGS] & ENDIF
;    IF WHERE(PRODS EQ 'DOC-MANNINO_SUMMER')        GE 0 THEN BEGIN & DOC_SUMMER   = DOC_MANNINO(A_CDOM_355=A_CDOM_355,DATE=ADATE,DOC_SUMMER=DOC_SUMMER,ERROR=ERRORS,ERR_MSG=ERR_MSGS)                                                       & ERROR=[ERROR,ERRORS] & ERR_MSG=[ERR_MSG,ERR_MSGS] & ENDIF
;    IF WHERE(PRODS EQ 'DOC-MANNINO_GOM')           GE 0 THEN BEGIN & DOC_GOM      = DOC_MANNINO(A_CDOM_355=A_CDOM_355,DATE=ADATE,/GOM,ERROR=ERRORS,ERR_MSG=ERR_MSGS)                                                                        & ERROR=[ERROR,ERRORS] & ERR_MSG=[ERR_MSG,ERR_MSGS] & ENDIF
;    IF WHERE(PRODS EQ 'DOC-MANNINO_SMAB')          GE 0 THEN BEGIN & DOC_SMAB     = DOC_MANNINO(A_CDOM_355=A_CDOM_355,DATE=ADATE,/SMAB,ERROR=ERRORS,ERR_MSG=ERR_MSGS)                                                                       & ERROR=[ERROR,ERRORS] & ERR_MSG=[ERR_MSG,ERR_MSGS] & ENDIF
;    IF WHERE(PRODS EQ 'DOC-MANNINO_NYB')           GE 0 THEN BEGIN & DOC_NYB      = DOC_MANNINO(A_CDOM_355=A_CDOM_355,DATE=ADATE,/NYB, ERROR=ERRORS,ERR_MSG=ERR_MSGS)                                                                       & ERROR=[ERROR,ERRORS] & ERR_MSG=[ERR_MSG,ERR_MSGS] & ENDIF
;    IF WHERE(PRODS EQ 'CHLOR_A-PAN')               GE 0 THEN BEGIN & CHLOR_PAN    = CHLOR_A_PAN(RRS490=RRS_490,RRS488=RRS_490,RRS555=RRS_555,RRS547=RRS_555,RRS670=RRS_670,RRS667=RRS_670,SATELLITE=SENSOR,ERROR=ERRORS,ERR_MSG=ERR_MSGS)   & ERROR=[ERROR,ERRORS] & ERR_MSG=[ERR_MSG,ERR_MSGS] & ENDIF
;    IF MIN(WHERE(STRMID(PRODS,0,8) EQ 'PIGMENTS')) GE 0 THEN BEGIN & PIGMENTS     = PIGMENTS_PAN(RRS490=RRS_490,RRS488=RRS_490,RRS555=RRS_555,RRS670=RRS_670,RRS667=RRS_670,SENSOR='SEAWIFS',ERROR=ERRORS,ERR_MSG=ERR_MSGS)  & ERROR=[ERROR,ERRORS] & ERR_MSG=[ERR_MSG,ERR_MSGS] & ENDIF
    
  
END; #####################  End of Routine ################################


