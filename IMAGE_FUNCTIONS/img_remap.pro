; $ID:	IMG_REMAP.PRO,	2015-01-24	$
;+
;;#############################################################################################################
	FUNCTION IMG_REMAP,IMG,MAP_IN=MAP_IN,MAP_OUT=MAP_OUT,PX_OUT = PX_OUT,PY_OUT = PY_OUT

; PURPOSE: RETURNS A REMAPPED IMAGE [USING MAP_REMAP]
; 
; 
; CATEGORY:	UTILITY;		 
;
; CALLING SEQUENCE: RESULT = IMG_REMAP(FILES)
;
; INPUTS: IMG A VALID BYTE IMAGE ARRAY WITH 1 TO 4 COLOR PLANES [SEE ISIMG FUNCTION]  

; OPTIONAL INPUTS:
;		
; KEYWORD PARAMETERS:
;          MAP_IN NAME OF MAP FOR INPUT IMG
;          MAP_OUT NAME OF OUTPUT MAP [USING MAP_REMAP]
;          PX_OUT PIXEL X DIMENSIONS FOR MAP_OUT
;          PY_OUT PIXEL Y DIMENSIONS FOR MAP_OUT

; OUTPUTS:  REMAPED IMAGE OF SAME DIMENSIONS AS INPUT IMG
;		
;; EXAMPLES:
;
; MODIFICATION HISTORY:
;			WRITTEN JAN 22, 2015 J.O'REILLY
;#################################################################################
;-
;**************************
ROUTINE_NAME  = 'IMG_REMAP'
;**************************
IF NONE(MAP_IN) OR NONE(MAP_OUT) THEN MESSAGE,'ERROR: MAP_IN & MAP_OUT ARE REQUIRED'
IF NOT ISIMG(IMG)  THEN MESSAGE,'ERROR: IMG IS NOT AN BYTE IMAGE ARRAY'
SZ =SIZEXYZ(IMG)
IF SZ.N_DIMENSIONS EQ 3 THEN BEGIN
  N_PLANES = 3 
  TRUE = 1
  ;FFFFFFFFFFFFFFFFFFFFFFFFFFFF
  FOR NTH = 0,N_PLANES-1 DO BEGIN
    IM = REFORM(IMG(NTH,*,*)) 
    NEW = MAP_REMAP(IM,MAP_IN=MAP_IN,MAP_OUT = MAP_OUT,PX_OUT = PX_OUT,PY_OUT = PY_OUT)
    IF NTH EQ 0 THEN BEGIN
      S = SIZEXYZ(NEW)
      OUT = REFORM(REPLICATE(FIRST(NEW),[N_PLANES,S.PX,S.PY]))
    ENDIF;IF NTH EQ 0 THEN BEGIN
      
    OUT(NTH,*,*)= NEW
  ENDFOR;FOR NTH = 0,N_DIMS-1 DO BEGIN
  ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
ENDIF ELSE BEGIN
  RETURN,MAP_REMAP(IMG,MAP_IN=MAP_IN,MAP_OUT = MAP_OUT,PX_OUT = PX_OUT,PY_OUT = PY_OUT)
ENDELSE;IF SZ.N_DIMENSIONS EQ 3 THEN BEGIN



RETURN, OUT
          
	END; #####################  END OF ROUTINE ################################
