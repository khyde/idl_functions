; $ID:	JUNK_BLEND_SST_FRONTS.PRO,	2020-07-08-15,	USER-KJWH	$
PRO JUNK_BLEND_SST_FRONTS, MERGE_SWITCH

  SL = GET_PATH()
  SWITCHES,MERGE_SWITCH,STOPP=STOPP,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,INIT=INIT,R_FILES=R_FILES,R_DATASETS=R_DATASETS,R_MAPS=R_MAPS,R_PRODS=R_PRODS,DPRODS=D_PRODS,DMAPS=D_MAPS,DPERIODS=D_PERIODS,DATERANGE=DATERANGE,DATASETS=DATASETS

  SENSORS = []
  IF DATASETS EQ [] THEN DATASETS = ['SST-ATM']
  IF KEY(R_DATASETS) THEN DATASETS = REVERSE(DATASETS)
  FOR N=0,N_ELEMENTS(DATASETS)-1 DO BEGIN
    DATASET = DATASETS(N)
    DR = DATERANGE
    SENSOR  = VALIDS('SENSORS',DATASET)
    SERVER = !S.DATASETS
    PERIODS = 'D'
    FILL_SENSOR=[]
    CASE DATASET OF
      'OC-SA':  BEGIN & MAPS=['NWA','NES'] & PRODS=['GRAD_CHL-BOA'] & STATS_SENSORS=['SEAWIFS','MODISA']  & END
      'OC-AT':  BEGIN & MAPS=['NWA','NES'] & PRODS=['GRAD_CHL-BOA'] & STATS_SENSORS=['MODISA', 'MODIST'] & END
      'OC-SAT': BEGIN & MAPS=['NWA','NES'] & PRODS=['GRAD_CHL-BOA'] & STATS_SENSORS=['SEAWIFS','MODISA','MODIST']  & END
      'SST-AT': BEGIN & MAPS=['NWA','NES'] & PRODS=['GRAD_SST-BOA'] & STATS_SENSORS=['MODISA', 'MODIST'] & END
      'SST-ATM': BEGIN & MAPS='NES' & PRODS='GRAD_SST-BOA' & STATS_SENSORS=['MODISA','MODIST'] & FILL_SENSOR='MUR' & PERIODS='D8' & DR = ['2006','2008']& END
    ENDCASE
    
    SENSORS = [STATS_SENSORS,FILL_SENSOR]

    BRK = STR_BREAK(DATASET,'-')
    DATASET = BRK[1]

    IF ANY(D_MAPS)  THEN IF D_MAPS(N)  NE [] THEN MAPS = STR_BREAK(D_MAPS(N),',')
    IF ANY(D_PRODS) THEN IF D_PRODS(N) NE [] THEN PRODS = STR_BREAK(D_PRODS(N),',')
    IF ANY(D_PERIODS) THEN IF D_PERIODS(N) NE [] THEN PERIODS = STR_BREAK(D_PERIODS(N),',')
    IF STRJOIN(DR,'_') EQ '19780101_21001231' THEN DR = SENSOR_DATES(VALIDS('SENSORS',DATASET))

    IF KEY(R_MAPS) THEN MAPS = REVERSE(MAPS)
    FOR M=0, N_ELEMENTS(MAPS)-1 DO BEGIN
      AMAP = MAPS(M)
      IF R_PRODS EQ 1 THEN PRODS = REVERSE(PRODS)
      FOR P=0, N_ELEMENTS(PRODS)-1 DO BEGIN
        PROD = PRODS(P)
        PROD = PRODS(P)
        APROD = VALIDS('PRODS',PROD)
        AALG  = VALIDS('ALGS',PROD)

        FOR R=0, N_ELEMENTS(PERIODS)-1 DO BEGIN
          APER = PERIODS(R)
          
          IF APER EQ 'D' THEN FILES = FILE_SEARCH(!S.FRONTS + SENSORS + SL + AMAP + SL + 'SAVE'  + SL + PRODS(P) + SL + '*' + AMAP + '*' + APROD + '*.SAV') $
                         ELSE FILES = FILE_SEARCH(!S.FRONTS + SENSORS + SL + AMAP + SL + 'STATS' + SL + PRODS(P) + SL + APER + '_*' + AMAP + '*' + PRODS(P) + '*STATS.SAV')
          FILES = DATE_SELECT(FILES,DR,COUNT=BFILES)
          IF BFILES EQ 0 THEN CONTINUE ; ===> CONTINUE IF NO FILES ARE FOUND

          FP = FILE_PARSE(FILES)
          IF SAME(FP.DIR) EQ 1 THEN CONTINUE ; ===> CONTINUE BECAUSE THERE ARE ONLY ONE SET OF FILES

          ;DIR_SAVE = !S.FRONTS + [SENSORS] + SL + AMAP + SL + 'SAVE'      + SL + PROD + SL
          DIR_OUT  = !S.FRONTS + DATASET   + SL + AMAP + SL + 'SAVE'      + SL + PROD + SL
          DIR_OLD  = !S.FRONTS + DATASET   + SL + AMAP + SL + 'OLD_STATS' + SL + PROD + SL
          DIR_TEST,[DIR_OUT,DIR_OLD]

          PRINT, 'MAKING MERGED DAILY FRONTS FILES FROM ' + STRJOIN(SENSORS,' & ') + ' - ' + AMAP + ' (' + PROD + ')' + ' ' + STRJOIN(DR,'-')
          DN = DATE_NOW(/GMT)

          FILE_LABEL=FILE_LABEL_MAKE(FILES[0])
          FILE_LABEL = REPLACE(FILE_LABEL,VALIDS('SENSORS',FILE_LABEL),SENSOR)
          FORCE_STATS = 0
          
          BLENDED_FRONTS, FILES, FILL_SENSOR=FILL_SENSOR, DIR_OUT=DIR_OUT, FILE_LABEL=FILE_LABEL,  DO_STATS=STAT_TYPES, OVERWRITE=OVERWRITE, VERBOSE=VERBOSE

        ENDFOR ; PERIODS
        STATS_CLEANUP,DIR_STATS=DIR_OUT,DIR_OUT=DIR_OLD,/MOVE_FILES,DATERANGE=DR
      ENDFOR ; PRODS
    ENDFOR ; MAPS
  ENDFOR ; SENSORS



end
