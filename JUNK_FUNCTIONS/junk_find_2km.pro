; $ID:	JUNK_FIND_2KM.PRO,	2020-06-30-17,	USER-KJWH	$
PRO JUNK_FIND_2KM

  SL = PATH_SEP()
  DS = '-'
  
  SENSORS = ['SEAWIFS','MODISA','OCCCI']
  MAPS    = ['L3B2','L3B2','L3B4']
  DIRS = ['STATS','ANOMS']
  ALGS = ['PAN','UITZ','HIRATA','WERDELL']
  
  FOR S=0, N_ELEMENTS(SENSORS)-1 DO BEGIN
    FOR D=0, N_ELEMENTS(DIRS)-1 DO BEGIN
      FOR A=0, N_ELEMENTS(ALGS)-1 DO BEGIN
        ADIRS = FILE_SEARCH(!S.OC + SENSORS(S) + SL + MAPS(S) + SL + DIRS(D) + SL + '*-' + ALGS(A),/MARK_DIRECTORY)
        FOR R=0, N_ELEMENTS(ADIRS)-1 DO BEGIN
          FILES = FLS(ADIRS(R) + '*-' + ALGS(A) + '*.SAV',COUNT=COUNT)
          IF COUNT EQ 0 THEN CONTINUE
          F = STRUCT_READ(FILES[0],  STRUCT=FS)
          L = STRUCT_READ(FILES(-1), STRUCT=LS)         
          IF FS.ALG EQ ALGS(A) AND LS.ALG EQ ALGS(A) THEN CONTINUE
          FOR F=0, N_ELEMENTS(FILES)-1 DO BEGIN
            FP = PARSE_IT(FILES(F),/ALL)
            M = STRUCT_READ(FILES(F),STRUCT=STR)
            IF STR.ALG EQ '' THEN BEGIN
              STR.ALG = FP.ALG
              SAVE, FILENAME=FILES(F), STR, /COMPRESS
              PFILE, FILES(F),/W
            ENDIF  
          ENDFOR
        ENDFOR
        
        
      ENDFOR
    ENDFOR
    
    
  ENDFOR
  
  
 STOP 
  
  DATASETS = ['FRONTS']
  FOR D=0, N_ELEMENTS(DATASETS)-1 DO BEGIN
    SDIRS = FILE_SEARCH(!S.DATASETS + DATASETS(D) + SL + '*',COUNT=COUNTF,/TEST_DIRECTORY, /MARK_DIRECTORY)
    FOR S=0,COUNTF-1 DO BEGIN
      MDIRS = FILE_SEARCH(SDIRS(S) + '*',COUNT=COUNTF,/TEST_DIRECTORY, /MARK_DIRECTORY)
      FOR M=0, COUNTF-1 DO BEGIN
        DIRS = FILE_SEARCH(MDIRS(M) + '*',COUNT=COUNTF,/TEST_DIRECTORY, /MARK_DIRECTORY)
        FOR N=0, COUNTF-1 DO BEGIN
          IF HAS(DIRS(N),'OLD_STATS') THEN CONTINUE
          PDIRS = FILE_SEARCH(DIRS(N) + '*',COUNT=COUNTF,/TEST_DIRECTORY, /MARK_DIRECTORY)
          FOR R=0, COUNTF-1 DO BEGIN
            FILES = FLS(PDIRS(R) + '*.*',COUNT=COUNTF)
            IF COUNTF EQ 0 THEN CONTINUE
            FOR F=0, N_ELEMENTS(FILES)-1 DO BEGIN
              IF HAS(FILES(F),'2KM') OR HAS(FILES(F),'4KM') THEN CONTINUE
              SI = SENSOR_INFO(FILES(F))
              CASE SI.SENSOR OF
                'AVHRR': COV = '4KM'
                'OCCCI': COV = '4KM'
                ELSE: COV = '2KM'
              ENDCASE
              IF STRUPCASE(SI.EXT) EQ 'PNG' THEN BEGIN
                FILE_RENAME, FILES(F), NAME_CHANGE=[SI.SENSOR+DS+SI.MAP,SI.SENSOR+DS+COV+DS+SI.MAP]
                CONTINUE 
              ENDIF
              D = STRUCT_READ(FILES(F),STRUCT=STR)
              OFILE = REPLACE(FILES(F),SI.SENSOR+DS+SI.MAP,SI.SENSOR+DS+COV+DS+SI.MAP) 
              FP = PARSE_IT(OFILE)
              STR.NAME = FP.NAME
              
              IF HAS(TAG_NAMES(STR),'INFILES') THEN FOR I=0, N_ELEMENTS(STR.INFILES)-1 DO STR.INFILES(I) = REPLACE(STR.INFILES(I),SI.SENSOR+DS+SI.MAP,SI.SENSOR+DS+COV+DS+SI.MAP) 
              SAVE, FILENAME=OFILE, STR, /COMPRESS
              FILE_DELETE, FILES(F),/VERBOSE
     
            ENDFOR ; F
          ENDFOR ; R
        ENDFOR ; N
      ENDFOR ; M
    ENDFOR ; S
  ENDFOR ; D
  
 STOP
  
  SENSORS = ['MODISA','SEAWIFS','VIIRS','OCCCI']
  DATES = LIST(['2002','2018'],['1997','2008','2009','2010'],['2018'],['1997','2018'])
  COVERAGE = ['2','2','2','4']
  DATASETS = ['OC','PP']
  
  FOR D=0, N_ELEMENTS(DATASETS)-1 DO BEGIN
    FOR S=0, N_ELEMENTS(SENSORS)-1 DO BEGIN
      DIRS = FILE_SEARCH(!S.DATASETS + DATASETS(D) + SL + SENSORS(S) + SL + 'L3B' + COVERAGE(S) + SL + 'STATS' + SL + '*',COUNT=COUNTF,/TEST_DIRECTORY, /MARK_DIRECTORY)
      DTS = DATES(S)
      IF COUNTF EQ 0 THEN CONTINUE
      CT = []
      FOR R=0, N_ELEMENTS(DIRS)-1 DO BEGIN
        FOR T=0, N_ELEMENTS(DTS)-1 DO BEGIN
          F = FLS(DIRS(R) + 'A*' + DTS(T) + '*.*',COUNT=C)
          IF C EQ 0 THEN CONTINUE
          CT = [CT,F]
        ENDFOR
      ENDFOR
      IF CT NE [] THEN BEGIN
        LI, CT
        STOP
        FILE_DELETE, CT, /VERBOSE
      ENDIF
    ENDFOR    
  ENDFOR
  
  SL = PATH_SEP()
  SENSORS = ['MODISA','SEAWIFS','VIIRS','OCCCI']
  DATES = LIST(['2002','2018'],['1997','2008','2009','2010'],['2018'],['1997','2018'])
  COVERAGE = ['2','2','2','4']


  

  
  
  
  
END
