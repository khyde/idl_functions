; $ID:	STATS_PERIOD_ALL_DEMO.PRO,	2020-07-08-15,	USER-KJWH	$
;########################################################################3
PRO STATS_PERIOD_ALL_DEMO, DATE_RANGE = DATE_RANGE
;+
; NAME:
;	STATS_PERIOD_ALL_DEMO.PRO
;
; PURPOSE:
;		PLOTS TIME SERIES RESULTS FOR STATISTICS GENERATED BY 
;		STATS_PERIOD_ALL AND STATS_PERIOD
;
; CATEGORY:
;		STATS
;
; MODIFICATION HISTORY:
;	 WRITTEN BY J.O'REILLY,JAN 30, 2004
;	 MAY 5,2014,JOR  UPDATED
;######################################################################################
;******************************************************
	ROUTINE_NAME='STATS_PERIOD_ALL_DEMO'
;******************************************************

;===> CONSTANTS
	MIN_CPY = 0.02
	MAX_CPY = 100.0
;SSSSSSSSSSSSSSSSSSSSSSS SWITCHES SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
  DO_CSV = 0
 	SUBAREA_CODE =	0
 	DO_SYNTHETIC_DATA  =  1
;SSSSSSSSSSSSSSSSSSSSSSS SWITCHES SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
;************************************
 IF DO_SYNTHETIC_DATA GE 1 THEN BEGIN
;************************************
  DATE_RANGE = ['20000101','20151231']
  DATES = DATE_GEN(DATE_RANGE) 
  PN,DATES,'DATES'
  P,MM(DATES)
  JD = DATE_2JD(DATES)
  YEARS = DATE_2YEAR(DATES) &  DATA = FLOAT(YEARS)
  ;DATA = REPLICATE(1.0,(N_ELEMENTS(JD)))

  PROD = 'SYN'
  P = STATS_PERIOD_ALL( JD, DATA, PROD=PROD)
  A=ALPHABET(/INIT)
  PSFILE = !S.IDL_TEMP + ROUTINE_NAME + '.PS'
  PSPRINT,FILENAME = PSFILE,/COLOR,/FULL
  
;  'DO_M',$
;    'DO_M_BLOCK',$
;    'DO_AC',$
;    'DO_M_AC',$
;    'DO_DOY',$
;    'DO_M_ANOM_TREND',$
;    'DO_Y_TREND',$
;    'DO_M_ANOM_BLOCK',$
;    'DO_MONTH_ANOM_TREND', $
;    'DO_Y',$
;    'DO_Y_SPAN',$
;    'DO_LNP_D',$
;    'DO_LNP_M_ANOM',$
;    'DO_Y_AND_Y_TREND'$
;    ;#####  PANEL PLOT
;  PROD_STEPS = ['PAR-DO_AC','SST-DO_AC','CHLOR_A-DO_AC','PPD-DO_AC',$
;'CHLOR_A-DO_M-DO_M_ANOM_TREND','PPD-DO_M_ANOM_TREND']
  
  STEPS = ['DO_AC','DO_M','DO_M_ANOM_TREND','DO_Y_TREND','DO_Y_AND_Y_TREND']
  STEPS = ['DO_AC','DO_M']
  FRAMES = N_ELEMENTS(STEPS) > 5  & !P.MULTI = [0,1,8]
;!P.MULTI = [0,1,14]
  FONT_HELVETICA
  STATS_PERIOD_PLOT, P, DATE_RANGE=DATE_RANGE ,MIN_CPY=MIN_CPY,MAX_CPY=MAX_CPY, STEPS=STEPS ,LABEL=LABEL,PAGE_TITLE=PAGE_TITLE,$
    USE_PROD=USE_PROD,MAX_LABELS=MAX_LABELS,FRAMES=FRAMES,$
    LON=LON, LAT=LAT, XP=XP,YP=YP,N_PIXELS=N_PIXELS,$
    DO_X_AXIS=1,DO_Y_AXIS=1,NO_TITLE=NO_TITLE,SKIP_LEGENDS=SKIP_LEGENDS,MPY_MIN=MPY_MIN
  PSPRINT
  PF,PSFILE
  STOP
ENDIF;IF DO_SYNTHETIC_DATA GE 1 THEN BEGIN
;|||||||||||||||||||||||||||||||||||||||||
  ;GOTO, SKIP



	IF PROD EQ 'SST' THEN BEGIN
		PATH='D:\SST_GEQ-NEC\TS_SUBAREAS\SAVE\'
		IF COMPUTER EQ 'LAPSANG' THEN  PATH='D:\TS_SUBAREAS\SAVE\'
		;DB=READALL('D:\TS_SUBAREAS\SAVE\!M-MASK_SUBAREA-NEC-PXY_1024_1024-GFISH4-N4ATG-SST.SAVE')
		FILE=PATH+'!M-MASK_SUBAREA-NEC-PXY_1024_1024-GFISH4-N4ATG-SST.SAVE'

		PATH='D:\WORK\TS_SUBAREAS\SAVE\'
;		FILE = PATH+'!M-MASK_SUBAREA-NEC-PXY_1024_1024-ESSGSS-N4ATG-SST.SAVE
;		FILE = PATH+'!M-MASK_SUBAREA-NEC-PXY_1024_1024-ESTUARY_SHELF-N4ATG-SST.SAVE
;		DB=READALL(FILE)
 		DB=READALL(PATH+'!M-MASK_SUBAREA-NEC-PXY_1024_1024-GFISH4-N4AT-SST.SAVE')
		OK=WHERE(DB.SUBAREA_CODE EQ SUBAREA_CODE)
		DATA = DB[OK].MEAN
		LABEL = DB(OK[0]).SUBAREA_NAME

		JD = PERIOD_2JD(DB[OK].FIRST_NAME)
;		BECAUSE DATA ARE NOT TO DAILY MAKE THE MONTHLY JDS MID MONTH TO BE CONGRUENT WITH MONTHYL PLOTS
		JD = JD_2JD(JD,/MONTH,/MID)

	ENDIF

	IF PROD EQ 'CHLOR_A' THEN BEGIN
	PATH='D:\IDL\IMAGES_TERESA\IMAGES\'
 ;		DB=READALL('D:\TS_SUBAREAS\SAVE\!M-MASK_SUBAREA-NEC-PXY_1024_1024-GFISH4-N4ATG-CHLOR_A.SAVE')
 	FILE = PATH+'!M-MASK_SUBAREA-NEC-PXY_1024_1024-OSCI-REPRO5-CHLOR_A.SAVE'
 	FILE= PATH+'MASK_SUBAREA-NEC-PXY_1024_1024-OSCI.CSV'
 ;	FILE = PATH+'!M-MASK_SUBAREA-NEC-PXY_1024_1024-GFISH4-REPRO5-CHLOR_A.SAVE'
 		DB=READALL(FILE)
		OK=WHERE(DB.SUBAREA_CODE EQ SUBAREA_CODE)
		DATA = DB[OK].MEAN
		LABEL = DB(OK[0]).SUBAREA_NAME
		JD = PERIOD_2JD(DB[OK].FIRST_NAME)
;		BECAUSE DATA ARE NOT TO DAILY MAKE THE MONTHLY JDS MID MONTH TO BE CONGRUENT WITH MONTHYL PLOTS
		JD = JD_2JD(JD,/MONTH,/MID)

	ENDIF


SKIP:



PRINT,'SHOW REMOVAL OF SEASONAL TREND AND AVERAGING OF 12 MONTHS TO GET 
PRINT,'A YEARLY SERIES FOR TREND ANALYSIS
PRINT,'NEED 1 STANDARD DEVIATION ON THE ANOMALIES
PRINT,'DO STD ANOMALIES'
PRINT, 'PLOT ANOMALIES AS COLOR SCALED DEPARTURES FROM THE !MONTH
PRINT,'PLOT ALL YEARS ON ONE DOY PLOT
PRINT, 'CHL SHOULD BE A RATIO ANOMALY'
PRINT, 'COMPUTE SLOPE FROM MAX MONTH TO MIN MONTH AND VICE VERSA: 
PRINT,' COOLING SPEED AND WARMING SPEED'
PRINT, 'PLOT TIME SERIES OF EACH MONTH'
PRINT, 'DO PERIODICITY ON THE ANNUAL SPAN'
PRINT, 'DO PERCENTILE ON COLDEST YEAR AND WARMEST YEAR'
PRINT, 'FIND OUT OTHER THAN NAO INDEX TO RELATE (SEE THOMAS, GREENE).
PRINT, 'PERCENT COVERAGE VARIES OVER THE YEARS SO COMPARE INDIVIDUAL PIXELS WITH GFISH4'
PRINT, 'DO GFISH4 JUST CONTINENTAL SHELF PORTION.
PRINT, 'IS SPAN CORRELATED WITH NAO ?
PRINT, 'IS THE RAPID COOLING IN WINTER, OUTBREAKS OF COLD AIR AND CONVECTIVE MIXING,CORRELATED TO NAO?
PRINT, 'MAKE PHASE MAP OF SST AND CHLOROPHYLL RANDOM WALK'
PRINT, 'TIMING OF SPRING BLOOM IN MAB IS COINCIDENT WITH COLDEST (MARCH 1) SST AND LOWEST GRAZING PRESSURE'
PRINT, 'DO AUTOCORRELATION ANALYSIS OF ANOMALIES TO SEE ANY PHASE DIFFERENCES IN GB AND MAB, GOM'
PRINT, ' ANNUAL SST ON GB IS CORRELATED WITH SPAN, ELSEWHERE NOT SO.
PRINT, 'DO LNP ON RAW AND ON DESEASONLIZED'



IF PROD EQ 'CHLOR_A' THEN BEGIN
 		TS=TIME_SERIES('MAB_SLOPE')
 		LABEL = 'MAB_SLOPE'
 		FILE_LABEL = 'MAB_SLOPE'
 		PROD = TS.PROD
 		JD 	= DOUBLE(TS.TIME)
 		DATA	=	DOUBLE(TS.DATA);
 		MAP = 'NEC'
 		DATE_RANGE = ['19850101','20200101']
ENDIF;IF PROD EQ 'CHLOR_A' THEN BEGIN





IF N_ELEMENTS(MAP) NE 1 THEN MAP = VALID_MAPS(FILE)
FILE_LABEL = 	LABEL
PS_FILE = ROUTINE_NAME+'-'+PROD+'-'+STRTRIM(FILE_LABEL,2)+'.PS'

PSPRINT,FILENAME=PS_FILE,/COLOR,/FULL




;	===> GET A DATE RANGE TO THE NEAREST WHOLE YEAR
	IF N_ELEMENTS(DATE_RANGE) NE 2 THEN BEGIN
 		YEARS = FIX((PERIOD_2STRUCT(DB.FIRST_NAME)).YEAR_START)
	  JD_RANGE = DATE_2JD(MINMAX(YEARS,/FIN))
	  JD_RANGE[0]=JD_2JD(JD_RANGE[0],/START,/YEAR) & JD_RANGE[1]=JD_2JD(JD_RANGE[1],/YEAR,/END)
 	ENDIF	ELSE BEGIN
 		JD_RANGE 		= DATE_2JD(DATE_RANGE)

	ENDELSE



;	IF PROD EQ 'SST' 			THEN DATE_RANGE 	= ['19850101','20051231']
;	IF PROD EQ 'CHLOR_A' 	THEN DATE_RANGE 	= ['19970101','20051231']


	OK=WHERE(JD GE JD_RANGE[0] AND JD LE JD_RANGE[1],COUNT)

;	===> TRUNCATE JD TO YEAR BOUNDARIES
  IF COUNT GE 1 THEN BEGIN
  	_JD=JD[OK]
  	_DATA = DATA[OK]
  ENDIF



 DO_LNP = 1
 DO_DFT = 0
CRITERIA_RANGE=[5,10]
 TIMER
 STATS_P=STATS_PERIOD_ALL(_JD, _DATA, PROD=PROD, MPY_MIN = 10,CRITERIA_RANGE = CRITERIA_RANGE,CRITERIA_OPER=CRITERIA_OPER,MIN_CPY=MIN_CPY,MAX_CPY=MAX_CPY,DO_LNP=DO_LNP,DO_DFT=DO_DFT)
 TIMER,/STOP



;STATS_P=STATS_PERIOD_ALL(_JD, _DATA, PROD=PROD, MPY_MIN = 10,CRITERIA_RANGE = CRITERIA_RANGE,CRITERIA_OPER=CRITERIA_OPER,MIN_CPY=MIN_CPY,MAX_CPY=MAX_CPY,DO_LNP=0,DO_DFT=0)



;	*****************************************
;	*** D E F A U L T    S W I T C H E S  ***
;	*****************************************
	ALL_SWITCHES= 	['DO_M','DO_M_BLOCK','DO_AC','DO_M_AC','DO_DOY','DO_M_ANOM','DO_M_ANOM_BLOCK','DO_M_MONTH','DO_Y','DO_MONTH_ANOM_TREND','DO_Y_SPAN','DO_LNP_D','DO_LNP_M_ANOM']
	USUAL_SWITCHES= ['DO_M','DO_M_BLOCK','DO_AC','DO_M_AC','DO_DOY','DO_M_ANOM','DO_M_ANOM_BLOCK',							'DO_Y','DO_Y_SPAN','DO_LNP_D', 'DO_LNP_M_ANOM']
	SUBSET1_SWITCHES=['DO_M','DO_M_BLOCK','DO_AC','DO_M_AC','DO_DOY','DO_M_ANOM','DO_M_ANOM_BLOCK','DO_M_MONTH','DO_Y']
;  SUBSET1_SWITCHES=['DO_M_AC'];,'DO_M_BLOCK','DO_AC','DO_M_AC','DO_M_ANOM','DO_M_ANOM_BLOCK','DO_M_MONTH','DO_Y']

;SUBSET1_SWITCHES=['DO_M','DO_M_BLOCK','DO_AC','DO_M_AC', 'DO_M_ANOM_BLOCK']
 SUBSET2_SWITCHES= ['DO_M','DO_M_BLOCK','DO_AC','DO_M_AC','DO_DOY','DO_M_ANOM','DO_M_ANOM_BLOCK',	'DO_MONTH_ANOM_TREND',		'DO_Y','DO_Y_SPAN','DO_LNP_D', 'DO_LNP_M_ANOM']

	FILE_LABEL = 	LABEL
;	STATS_PERIOD_PLOT,STATS_P, SWITCHES=SUBSET1_SWITCHES, LABEL=LABEL
 	STATS_PERIOD_PLOT,STATS_P, SWITCHES=ALL_SWITCHES, LABEL=LABEL
 ;STATS_PERIOD_PLOT,STATS_P, SWITCHES=USUAL_SWITCHES, LABEL=LABEL

;STATS_PERIOD_PLOT,STATS_P, SWITCHES=ALL_SWITCHES, LABEL=LABEL

PSPRINT

STOP


;	************************************
	IF DO_CSV GE 1 THEN BEGIN
;	************************************

	FN=FILE_PARSE(FILE)
	CSV_FILE =  'ANNUAL '+PROD+'-'+STRTRIM(FILE_LABEL,2)+'.CSV'
	S=STRUCT_COPY(STATS_P.!Y, TAGNAMES=['PERIOD','N','MEAN'])
	S.PERIOD = JD_2DATE(PERIOD_2JD(S.PERIOD))
	S=STRUCT_RENAME(S,'PERIOD','DATE')
	S.DATE = STRMID(S.DATE,0,4)
	OK=WHERE(S.N EQ 12)
	S=S[OK]
	IF PROD EQ 'CHLOR_A' THEN S.MEAN= EXP(S.MEAN)
	STRUCT_2CSV,CSV_FILE,S

	MONTHS=MONTH_NAMES(/SHORT)

	;	LLLLLLLLLLLLLLLLLLLLLLLL
	FOR _MONTH = 9,10 DO BEGIN
		AMONTH = MONTHS(_MONTH)

		FN=FILE_PARSE(FILE)
		CSV_FILE =  AMONTH+' '+PROD+'-'+STRTRIM(FILE_LABEL,2)+'.CSV'
		S=STRUCT_COPY(STATS_P.!M, TAGNAMES=['PERIOD','N','MEAN'])
		S.PERIOD = JD_2DATE(PERIOD_2JD(S.PERIOD))

		S=STRUCT_RENAME(S,'PERIOD','DATE')
		S.DATE = STRMID(S.DATE,0,6)
		NMONTHS =  JD_2MONTH(DATE_2JD(S.DATE))
		OK=WHERE(NMONTHS EQ _MONTH)

		S=S[OK]
		IF PROD EQ 'CHLOR_A' THEN S.MEAN= EXP(S.MEAN)
		STRUCT_2CSV,CSV_FILE,S
	ENDFOR
ENDIF
STOP
END; #####################  END OF ROUTINE ################################
