; $ID:	STRUCT_2DBL.PRO,	2020-07-08-15,	USER-KJWH	$
;###################################################################
	FUNCTION STRUCT_2DBL, STRUCT

;+
; THIS FUNCTION CONVERTS ALL NUMERIC TAGS IN A SIMPLE SPREADSHEET
;               STRUCTURE TO DOUBLE-PRECISION
; SYNTAX:
;   RESULT = STRUCT_2DBL(STRUCT)
; ARGUMENTS:
;   STRUCT: IDL STRUCTURE

; EXAMPLE:
;		MAKE A SIMPLE SPREADSHEET TYPE STRUCTURE
;		STRUCT = REPLICATE(CREATE_STRUCT('AA',0B,'BB',1L,'CC',0D, 'TXT_ALPHA','CAT', 'TXT_NUMERIC','1.2'),3)
;		STRUCT[1].TXT_ALPHA = '1.2'
;		STRUCT[1].TXT_NUMERIC = '3.333'
;		STRUCT = STRUCT_2DBL(STRUCT)
;
;
;	PROCEDURE:
;		IF A TAG CONTAINS NUMERIC DATA OR STRING DATA FOR WHICH ALL ELEMENTS CAN BE CONVERTED INTO NUMERIC DATA
;		THEN THE RESULT.TAG WILL BE DOUBLE-PRECISION
;
; NOTES:
;		
;   THE INPUT STRUCTURE IS NOT ALTERED.

; HISTORY:
;   AUG 11,2001 WRITTEN BY: J.E. O'REILLY, NOAA, 28 TARZWELL DRIVE, NARRAGANSETT, RI 02882
;   OCT 18,2013,JOR, FORMATTING
;   DEC 11,2014,JOR: IF IDLTYPE(STRUCT)  NE 'STRUCT' THEN MESSAGE,'ERROR: STRUCT MUST BE AN IDL STRUCTURE'

;###################################################################
;-
;***************************
ROUTINE_NAME='STRUCT_2DBL'
;***************************
 
  IF IDLTYPE(STRUCT)  NE 'STRUCT' THEN MESSAGE,'ERROR: STRUCT MUST BE AN IDL STRUCTURE'
 
 	NEW = STRUCT_2NUM(STRUCT) 	  
  NTAGS = N_TAGS(NEW)
  TAGNAMES = TAG_NAMES(NEW)
	NUM = N_ELEMENTS(NEW)

; ===> CREATE A NEW STRUCTURE WITH TAG NAMES SAME AS ORIGINAL BUT TYPE=DOUBLE AND SET TO MISSINGS CODE
  ;FFFFFFFFFFFFFFFFFFFFFFFFFFFF
  FOR N = 0L, NTAGS-1L DO BEGIN
;		IF NUMERIC THEN CONVERT TO DOUBLE OTHERWISE CONSERVE THE DATA TYPE
  	IF NUMERIC(NEW.(N)) THEN TEMPLATE = MISSINGS(0.0D) ELSE TEMPLATE = NEW[0].(N)

  	IF N EQ 0 THEN 	_STRUCT	=	CREATE_STRUCT(TAGNAMES(N),TEMPLATE) ELSE $
  									_STRUCT = CREATE_STRUCT(_STRUCT,TAGNAMES(N),TEMPLATE)
  ENDFOR;FOR N = 0L, NTAGS-1L DO BEGIN
  ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF

  _STRUCT=REPLICATE(_STRUCT,NUM)


;	FFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FOR N = 0L, NTAGS-1L DO BEGIN
		TYPE_SOURCE	= IDLTYPE(NEW.(N),/CODE)
		TYPE_DEST		= IDLTYPE(_STRUCT.(N),/CODE)

		IF TYPE_DEST EQ TYPE_SOURCE THEN BEGIN
			_STRUCT.(N) = NEW.(N)
		ENDIF ELSE BEGIN
		  _STRUCT.(N) = STR2NUM(NEW.(N))
;			===> CONVERT MISSING CODES FROM THOSE IN NEW TO THE APPROPRIATE MISSING CODES FOR THE TAGS IN _STRUCT
		  OK=WHERE(NEW.(N) EQ MISSINGS(NEW.(N)) ,COUNT)
		  IF COUNT GE 1 THEN _STRUCT[OK].(N) = MISSINGS(_STRUCT[OK].(N))
		ENDELSE;IF TYPE_DEST EQ TYPE_SOURCE THEN BEGIN
		  
  ENDFOR;FOR N = 0L, NTAGS-1L DO BEGIN
  ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF

  RETURN,_STRUCT

END; #####################  END OF ROUTINE ################################
