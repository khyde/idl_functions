; $ID:	CHL_PROFILES_WEIGHTS.PRO,	2014-10-04-13	$
;+
;;#############################################################################################################
	FUNCTION CHL_PROFILES_WEIGHTS,LON=LON,LAT=LAT,DOY=DOY,CHL=CHL,NUM=NUM,WT_METERS=WT_METERS,WT_DAYS=WT_DAYS,WT_CHL=WT_CHL
	
	
; PURPOSE: THIS FUNCTION RETURNS THE RELATIVE WEIGHTS FOR FINDING THE NEAREST CHL PROFILES
; 
; 
; CATEGORY:	CHL_PROFILES;		 
;
; CALLING SEQUENCE: RESULT = CHL_PROFILES_WEIGHTS(A_SURFACE,ALL_SURFACE)
;
; INPUTS: A_SURFACE THE SURFACE RECORD 
;         SURFACE ALL THE SURFACE RECORDS
;      
; KEYWORDS:
;     LON : LONGITUDE OF CHL VALUE [DECIMAL DEGREES]
;     LAT : LATITUDE OF CHL VALUE [DECIMAL DEGREES]
;     DOY : DAY OF YEAR [1-366] OF CHL VALUE
;     CHL : CHLOR_A VALUE [MG/M3]
;     NUM : NUMBER OF NEAREST PROFILES TO FIND [DEFAULT = 5]
;     WT_METERS : WEIGHTING FACTOR FOR DISTANCE [DEFAULT = 10000]
;     WT_DAYS   : WEIGHTING FACTOR FOR TIME  [DEFAULT = 15 DAYS]
;     WT_CHL    : WEIGHTING FACTOR FOR CHLOR_A [DEFAULT = 0.25 MG/M3]


; OUTPUTS:  USES THE WEIGHTING FACTORS FOR ALL THE SURFACE RECORDS
;           AND RETURNS THE PROFILE NUMBERS PNUM HAVING THE SMALLEST WEIGHTS
;		
;; EXAMPLES:
;  
;	NOTES:
;	    FROM NATHAN:
;     USED IN CHL_PROFILES TO DETERMINE WEIGHTS
;     10KM=15DAYS=.25CHL
;     %TWEAK AS NECESSARY
;     TOTALDIST=(METERS_DIF/10000)+(DAYS_DIF/15)+(CHL_DIF/0.25);

;
; MODIFICATION HISTORY:
;			WRITTEN SEP 25, 2014 J.O'REILLY
;			SEP 28,JOR, ADDED KEYWORDS  WT_METERS,WT_DAYS,WT_CHL AND COMMON BLOCK
;			SEP 30,2014,JOR REVISED TO HANDLE A SINGLE RECORD VS ALL THE SURFACE RECORDS
;			OCT 1,2014,JOR REVISED TO INCORPORATE SEVERAL SEPARATE FUNCTIONS
;#################################################################################
;-
;************************************
ROUTINE_NAME  = 'CHL_PROFILES_WEIGHTS'
;************************************
;COMMON CHL_PROFILES_,SAV

IF NONE(NUM) THEN NUM = 5
IF NONE(WT_METERS) THEN WT_METERS = 10000.
IF NONE(WT_DAYS) THEN WT_DAYS = 15.
IF NONE(WT_CHL) THEN WT_CHL = 0.25

;===> GET ALL THE SURFACE RECORDS AND REMOVE RECORDS WITH BAD DATA
ALL_SURFACE = CHL_PROFILES_READ(/S)
;;ALL_SURFACE = STRUCT_CLEAN(ALL_SURFACE,EXCLUDE = ['TEMP','CODE','SOURCE'])


;===> ADJUST DOY 
DOY = ABS(DOY-183)

;|||||||||||||||||||||||||||

;===> EXTRACT INFO FROM ALL THE  SURFACE RECORDS
ALL_LON = ALL_SURFACE.LON 
ALL_LAT = ALL_SURFACE.LAT 
ALL_DOY = ALL_SURFACE.DOY 
ALL_CHL = ALL_SURFACE.CHL
ALL_DOY = ALL_DOY-183
;|||||||||||||||||||||||||||||||||

;===> COMPUTE METERS_DIF 
METERS_DIF =LONLAT_2METERS(LON, LAT, ALL_LON, ALL_LAT)
;|||||||||||||||||||||||||||||||||||||||||||||||||||||||||
;
;===> COMPUTE  DAYS_DIF
DAYS_DIF = ABS((REPLICATE(1,N_ELEMENTS(ALL_DOY)) # DOY )-ALL_DOY)
;|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

;===>COMPUTE CHL DIF
CHL_DIF = ABS(ALL_CHL - CHL)
;||||||||||||||||||||||||||||||||

N_METERS_DIF    = N_ELEMENTS(METERS_DIF) 
N_DAYS_DIF    = N_ELEMENTS(DAYS_DIF) 
N_CHL_DIF  = N_ELEMENTS(CHL_DIF) 
NUM_IN  = TOTAL([N_METERS_DIF,N_DAYS_DIF,N_CHL_DIF])/3.
IF NUM_IN EQ 0 OR NUM_IN NE N_ELEMENTS(METERS_DIF) THEN MESSAGE,'ERROR:SIZES OF INPUT MUST BE THE SAME '



WEIGHTS =((METERS_DIF/WT_METERS)+(DAYS_DIF/WT_DAYS)+(CHL_DIF/WT_CHL))
S = SORT(WEIGHTS)
WEIGHTS = WEIGHTS(S)
;===> ALSO SORT THE ALL_SURFACE 
ALL_SURFACE = ALL_SURFACE(S)

;===> GET 5 LOWEST WEIGHTS
W = WEIGHTS(0:NUM-1)
;===> GET THE PNUMS FOR THE 5 LOWEST WEIGHTS
D = ALL_SURFACE(0:NUM-1)
PNUMS = ULONG(D.PNUM)

RETURN,PNUMS   
STOP

    
	END; #####################  END OF ROUTINE ################################
