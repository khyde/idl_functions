; $ID:	STRUCT_2CSV.PRO,	2020-06-30-17,	USER-KJWH	$
;#######################################################################################################
	PRO STRUCT_2CSV, FILE, STRUCT, TAGNAMES=TAGNAMES, LOOP=LOOP, TRANSP=TRANSP, APPEND=APPEND, NO_HEADING=NO_HEADING
;+
;	THIS PROGRAM WRITES A COMMA-DELIMITED CSV FILE FROM AN IDL SIMPLE STRUCTURE
; 
; SYNTAX:
;	  STRUCT_2CSV,FILE, STRUCT
; 
; OUTPUT:
;		AN ASCII CSV COMMA-DELIMITED FILE WITH HEADING
; 
; ARGUMENTS:
; 	FILE:	COMPLETE NAME FOR THE OUTPUT CSV FILE
;	  STRUCT:	THE SIMPLE STRUCTURE TO BE WRITTEN
; 
; KEYWORDS:
;		TAGNAMES: IF A LIST OF TAGNAMES IS PROVIDED THEN OUTPUT WILL BE JUST THE TARGET TAGNAMES.
;		LOOP:	FORCES PROGRAM TO LOOP, PROCESSING ONE RECORD AT A TIME, INSTEAD OF THE ENTIRE STRUCTURE AT ONCE
;		TRANSP: TRANSPOSES OUTPUT
;		APPEND: APPENDS STRUCT INFO TO CSV 
;		NO_HEADING: SUPPRESS A TAGNAME HEADING
; 
; EXAMPLE:
;  	STRUCT = CREATE_STRUCT('AA',0B,'BB',1,'CC',2L,'DD',3.0,'EE',4.0D)
;  	STRUCT = REPLICATE(STRUCT,4)
;   STRUCT_2CSV,!S.TEST + 'TEST.CSV',STRUCT
; 	OPEN TEST.CSV FILE WITH EXCEL OR WORD PROCESSOR ... IT SHOULD LOOK LIKE THIS ...
;	    AA,BB,CC,DD,EE
;	    0,1,2,3.000000,4.000000000000000
;	    0,1,2,3.000000,4.000000000000000
;   	0,1,2,3.000000,4.000000000000000
;	    0,1,2,3.000000,4.000000000000000
;
; CATEGORY:
;	  STRUCTURES
; 
; NOTES:
;	  WORKS WITH SIMPLE STRUCTURES (SPREADSHEET OR DATABASE TYPES OF STRUCTURES).
;	  CALLS STRUCT_2CSV.PRO
;
; VERSION:
;	  JAN 22,2001
; 
; HISTORY:
;	  OCT 12,2001	WRITTEN BY:	J.E. O'REILLY, NOAA, 28 TARZWELL DRIVE, NARRAGANSETT, RI 02882
;	  DEC 11,2012,JOR, FORMATTING
;	  AUG 22,2013,JOR ADDED KEYWORD APPEND
;	  AUG 23,2013,JOR, DEFAULT IS  HEADING = 1,ADDED KEYWORD NO_HEADING
;   AUG 28,2013,JOR,  IF KEYWORD_SET(APPEND) THEN HEADING = 0
;   DEC 9, 2013,KJWH, CHANGED TEXT TO TXT IN ORDER TO NO CONFLICT WITH IDL'S TEXT PRO
;   
;-
;###############################################################################################


;********************************** 
  ROUTINE_NAME  = 'STRUCT_2CSV'
;**********************************
 
  IF KEY(NO_HEADING) EQ 1 THEN  HEADING = 0 ELSE HEADING = 1 
  IF KEY(APPEND) THEN HEADING = 0 ;===> BUT IF APPEND THEN WE DO NOT WANT A HEADING EVERY TIME DATA ARE APPENDED TO THE CSV FILE

  OPENW, LUN, FILE, /GET_LUN, APPEND=APPEND

;	===> IF TAGNAMES NOT PROVIDED THEN ASSUME OUTPUT WILL HAVE ALL THE TAGS
	IF N_ELEMENTS(TAGNAMES) GE 1  THEN BEGIN
		TAGS =WHERE_IN(TAG_NAMES(STRUCT),TAGNAMES,COUNT)
		IF COUNT EQ 0 THEN TAGS = -1L
	ENDIF ELSE TAGS = -1L
	

;	===> IF KEYWORD SET, LOOP THROUGH EACH ROW IN THE STRUCTURE
	IF ~KEY(LOOP) THEN BEGIN
		IF TAGS[0] EQ -1L THEN TXT=STRUCT_2STRING(STRUCT,HEADING=HEADING,ARR=TRANSP) $
		                  ELSE TXT=STRUCT_2STRING(STRUCT_COPY(STRUCT,TAGS=TAGS),HEADING=HEADING,ARR=TRANSP)
  	FOR N=0L,N_ELEMENTS(TXT)-1L DO PRINTF,LUN,TXT[N]
  ENDIF ELSE BEGIN
  	IF TAGS[0] EQ -1L THEN TXT=STRUCT_2STRING(STRUCT(0L),/TAGNAMES) $
                      ELSE TXT=STRUCT_2STRING(STRUCT_COPY(STRUCT[0],TAGS=TAGS),/TAGNAMES)
		PRINTF,LUN,TXT
		IF TAGS[0] EQ -1L THEN BEGIN
  		FOR N=0L,N_ELEMENTS(STRUCT)-1L DO BEGIN
				TXT=STRUCT_2STRING(STRUCT[N])
     		PRINTF,LUN,TXT
  		ENDFOR
		ENDIF ELSE BEGIN
  		FOR N=0L,N_ELEMENTS(STRUCT)-1L DO BEGIN
				TXT=STRUCT_2STRING(STRUCT_COPY(STRUCT[N],TAGS=TAGS))
     		PRINTF,LUN,TXT
  		ENDFOR
		ENDELSE
	ENDELSE

  CLOSE,LUN & FREE_LUN,LUN
 END; #####################  END OF ROUTINE ################################
