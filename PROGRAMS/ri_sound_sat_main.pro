; $ID:	RI_SOUND_SAT_MAIN.PRO,	2021-04-15-17,	USER-KJWH	$


 PRO RI_SOUND_SAT_MAIN
;+
; NAME:
;       BI_SOUND_SAT_MAIN
;
; PURPOSE:
;          Main routine for analyzing Mass Bay and SeaWiFS chlorophyll data from start to finish
;						1)
;						2)
;						3)
;						4)
;						5)
;						6)
;
;
; MODIFICATION HISTORY:
;       Written by:   K. Whitman Hyde November, 2004
;				Modified by:  K.J.W.Hyde November, 2006 - used SD_SAT_SHIP to extract the satellite data and STRUCT_JOIN to combine the structures
;											K.J.W.Hyde November, 2006 - added the satellite chlorophyll correction and primary productivity files
;-

	ROUTINE_NAME='RI_SOUND_SAT_MAIN'

  TIMER

;	===> Load simple color palette
 	PAL_36
  SL = DELIMITER(/PATH)
; **************************************************
; ***** SWITCHES CONTROLLING PROCESSING STEPS  *****
; **************************************************
;		Switch	Operation
;		0  			Do not do Step
;		1				Do Step (unless output from this step already exists, then skip this step)
; 	2     	Do Step (make output file from step and overwrite output if it already exists)


    DO_SATSHIP_HDF                  = 0 ; Added 11-21-2011
    DO_SATSHIP_ADD                  = 0 ; Added 1-24-2012
    DO_SATSHIP_PLOTS                = 0 ; Added 11-21-2011
    DO_INSITU_PP                    = 0 ; Added 7-3-2012
    DO_SATSHIP_PP                   = 0 ; Added 11-22-2011, Modified 6-27-2012 
    DO_SATSHIP_PP_PLOT              = 0 ; Added 6-27-2012
    DO_STATION_PLOT                 = 0 ; Added 6-29-2012
    DO_MAKE_SUBAREA_MAP             = 0 ; Added 1-5-2012    
    DO_TS_SUBAREAS                  = 1 ; Added 1-24-2012
    DO_SUBAREAS_PLOT                = 0 ; Added 6-26-2012   
    DO_MONTHLY_COMPOSITES           = 1 ; Added 5-22-2014  
    DO_CTD_PROFILES                 = 0
    DO_NEC_REMAP_2_RI_SOUND         = 0
    DO_USEABLE_TIME_SERIES_PLOT     = 0
		DO_SAT_CHLOR_A_MB								= 0
		DO_PPD													= 0 ; Modified 11-21-2011
		DO_SEAWIFS_RI_SOUND_ANALYSES		= 0
		DO_TS_ISERIES_SAVE_2PNG 				= 0
		DO_COMBO_TITLE_SLIDE            = 0
		DO_COMBO_PNGS										= 0
		DO_COMBO_MOVIES									= 0
		DO_TS_SUBAREAS_STATS						= 0
		DO_TS_SUBAREAS_ANOMS						= 0
		DO_TS_SUBAREAS_ANNUAL_PROD      = 0
		DO_BLOOM_TABLE									= 0
		DO_SAT_SHIP                     = 0
		DO_SAT_SHIP_FIG									= 0
		DO_STATION_EXTRACTS							= 0
		DO_MAKE_TIMELINES								= 0
		DO_MAKE_BATHY_FIG								= 0
		DO_MAKE_FIGURES									= 0
		DO_M_COMPOSITE                  = 0
		DO_Y_COMPOSITE									= 0
		DO_PPD_COMPOSITE								= 0
		DO_PS_2PNG                      = 0
		DO_DATA_2LONLAT                 = 0

;	*** Define names of input and output files so that they are available to various steps
   	ASTER = '*'
   	DASH  = '-'
   	UL    = '_'

    DIR_PLOTS = FIX_PATH(!S.PROJECTS + 'RI_SOUND\PLOTS\')
    
; ********************************************
  IF DO_SATSHIP_HDF GE 1 THEN BEGIN
; ********************************************
    OVERWRITE = DO_SATSHIP_HDF GT 1
    SL = DELIMITER(/PATH)
    PRODUCTS = ['CHLOR_A-PAN','CHLOR_A']
    
    SHIP_FILE = !S.PROJECTS + 'RI_SOUND' + SL + 'DATA' + SL + 'LAT_LON_STATIONS_RI_SOUND.csv' 
    OUTNAME = 'RI_SOUND'
    DIR_OUT   = !S.PROJECTS + 'RI_SOUND' + SL + 'DATA' + SL + 'SAT_SHIP' + SL        
    DIR_DATASETS = !S.DATASETS+'OC-SEAWIFS-MLAC' + SL + 'L2A' + SL
    FILES = FILE_SEARCH(DIR_DATASETS+'S_*.hdf*')
 
    SATSHIP= SD_HDF_SAT_SHIP(SHIP_FILE=SHIP_FILE,SAT_FILES=FILES,GET_FILES=1,AROUND=AROUND,PROD='CHLOR_A',ALG='OC4',$
                        HOURS=24,OUTNAME=OUTNAME,RANGE=RANGE,DIR_OUT=DIR_OUT,CSV=CSV,OVERWRITE=OVERWRITE)

    FP = PARSE_IT(SATSHIP)
    OK = WHERE(FP.EXT NE 'hdf',COUNT)
    IF COUNT GE 1 THEN ZIP, FILES = SATSHIP[OK]
    
    CSV = 1
    GET_FILES = 0
    AROUND = 1
    HOURS = 12    
    IF N_ELEMENTS(FILES[0]) EQ '' THEN STOP
    SATSHIP= SD_HDF_SAT_SHIP(SHIP_FILE=SHIP_FILE,SAT_FILES=FILES,GET_FILES=GET_FILES,AROUND=AROUND,PRODS=PRODUCTS,$
             HOURS=HOURS,OUTNAME=OUTNAME,RANGE=RANGE,DIR_OUT=DIR_OUT,CSV=CSV,OVERWRITE=OVERWRITE)
  ENDIF  ; DO_SATSHIP_HDF

; ********************************************
  IF DO_SATSHIP_ADD GE 1 THEN BEGIN
; ********************************************
    OVERWRITE = DO_SATSHIP_ADD GT 1
    SL = DELIMITER(/PATH)
    DIR_SHIP  = FIX_PATH(!S.PROJECTS + 'RI_SOUND\DATA\SAT_SHIP\')
    DIR_DATA  = FIX_PATH(!S.PROJECTS + 'RI_SOUND\DATA\')
    DIR_PLOTS = FIX_PATH(!S.PROJECTS + 'RI_SOUND\PLOTS\')  
    
    DATA  = READALL(DIR_SHIP + 'SD_HDF_SAT_SHIP-HOURS_12-CHLOR_A-PAN_CHLOR_A-RI_SOUND.SAVE')
    DATA = STRUCT_MERGE(REPLICATE(CREATE_STRUCT('SUBAREA_NAME','','SUBAREA_CODE',''),N_ELEMENTS(DATA)),DATA)
    DATA = STRUCT_RENAME(DATA,['SHIP_DATA_CHLOR_A','SAT_DATA_CENTER_CHLOR_A','SAT_DATA_CHLOR_A','N_CHLOR_A','MIN_CHLOR_A',$
    'MAX_CHLOR_A','MED_CHLOR_A','MEAN_CHLOR_A','VAR_CHLOR_A','STD_CHLOR_A','CV_CHLOR_A','TRANSFORMATION_CHLOR_A'],$
    ['SHIP_DATA_CHLOR_A_OC4','SAT_DATA_CENTER_CHLOR_A_OC4','SAT_DATA_CHLOR_A_OC4','N_CHLOR_A_OC4','MIN_CHLOR_A_OC4',$
    'MAX_CHLOR_A_OC4','MED_CHLOR_A_OC4','MEAN_CHLOR_A_OC4','VAR_CHLOR_A_OC4','STD_CHLOR_A_OC4','CV_CHLOR_A_OC4','TRANSFORMATION_CHLOR_A_OC4'])
    BLL = WHERE_SETS(NUM2STR(DATA.LAT),NUM2STR(DATA.LON))
    
    AREAS = STRUCT_SD_READ(FIX_PATH(!S.IMAGES + 'MASK_SUBAREA-RI_SOUND-PXY_120_120-RI_BI_POLYGONS.SAVE'))
    ZWIN, AREAS
    MAP_RI_SOUND
    PAL_36,R,G,B
    CODE = MAP_DEG2IMAGE(AREAS,DATA.LON,DATA.LAT)
    TV, AREAS
    FOR LL=0, N_ELEMENTS(BLL)-1 DO BEGIN
      LSUBS = WHERE_SETS_SUBS(BLL(LL))
      PLOTS,DATA(LSUBS).LON,DATA(LSUBS).LAT,PSYM=7,COLOR=36,/NOCLIP,SYMSIZE=0.5,THICK=1.5
    ENDFOR
    PNG = TVRD()
    ZWIN
    PNGFILE = DIR_PLOTS + 'URI-RI_SOUND-STATIONS.PNG'
    WRITE_PNG,PNGFILE,PNG,R,G,B  
    
    CSV   = READALL(FIX_PATH(!S.IMAGES + 'MASK_SUBAREA-RI_SOUND-PXY_120_120-RI_BI_POLYGONS.CSV'))
    FOR NTH = 0L, N_ELEMENTS(CSV)-1 DO BEGIN
      OK = WHERE(CODE EQ CSV[NTH].SUBAREA_CODE,COUNT)
      IF COUNT EQ 0 THEN CONTINUE
      DATA[OK].SUBAREA_NAME = CSV[NTH].SUBAREA_NAME
      DATA[OK].SUBAREA_CODE = CSV[NTH].SUBAREA_CODE
    ENDFOR  
    STRUCT_2CSV,DIR_DATA+'RI_BI_SOUND-SAT_SHIP-HOURS_12-CHLOR_A_PAN-CHLOR_A_OC4.CSV',DATA
  ENDIF ; DO_SATSHIP_ADD


; ********************************
  IF DO_SATSHIP_PLOTS GE 1 THEN BEGIN
; ********************************
    OVERWRITE = DO_SATSHIP_PLOTS GT 1
    DIR_DATA  = FIX_PATH(!S.PROJECTS + 'RI_SOUND\DATA\') 
    DIR_PLOTS = FIX_PATH(!S.PROJECTS + 'RI_SOUND\PLOTS\') 
    
    DIR_DATA  = FIX_PATH(!S.PROJECTS + 'RI_SOUND\DATA\SAT_SHIP\') 
    DIR_PLOTS = FIX_PATH(!S.PROJECTS + 'RI_SOUND\PLOTS\')
    FILE = DIR_DATA+'RI_BI_SOUND-SAT_SHIP-HOURS_12-CHLOR_A_PAN-CHLOR_A_OC4.CSV'     
    PNGFILE = DIR_PLOTS + 'SAT_SHIP_XY-RI_BI_CHL.png'
    IF FILE_TEST(PNGFILE) EQ 1 AND NOT KEYWORD_SET(OVERWRITE) AND GET_MTIME(FILE) LT GET_MTIME(PNGFILE) THEN GOTO, SKIP_SATSHIP_CHL
    
    PRODS = ['CHLOR_A-OC4','CHLOR_A-PAN']
    HOURS = ['6','12']    
    DATA  = READALL(FILE)
    TAGS = TAG_NAMES(DATA)
    
    PAL='PAL_36'
    PSYM = 24             & SYM_COLOR = 5         & SYMSIZE = 1.25
    CHARSIZE = 12         & STATS_CHARSIZE = 12   & FONT = 0
    PARAMS = [2,3,4,8,10] & XMARGIN = [1,1]       & YMARGIN = [1,1]    
    THICK = 2             & REG_THICK = 3         & REG_COLOR = 5
    ONE_COLOR = 0         & ONE_THICK = 3         & ONE_LINESTYLE = 2
        
    BUFFER = 0
    RGB = CPAL_READ(PAL,PALLIST=PALLIST)
    XPOS = [.36,.86,.36,.86]
    YPOS = [.59,.59,.09,.09]
    W = WINDOW(DIMENSIONS=[1024,1024],MARGIN=[0.01])
  
    CURRENT=1
    STATS_POS=LIST([.1,.85],[.6,.85],[.1,.35],[.6,.35])
    COUNTER = 0      
    RI_COLOR = 'CYAN'
    BI_COLOR = 'ORANGE_RED'
    CT_COLOR = 'GOLD'
    OF_COLOR = 'NAVY'
    FOR HTH=0, N_ELEMENTS(HOURS)-1 DO BEGIN  
      AHOUR = HOURS(HTH)
      
      TITLE = UNITS('CHLOROPHYLL',/NO_UNIT)
      XTITLE = '!8In situ!N ' + UNITS('CHLOROPHYLL')
      YTITLE = 'Satellite ' + UNITS('CHLOROPHYLL')
      
      LOGLOG = 1 
      XRANGE = [0.1,20] & YRANGE = XRANGE
      OKO = WHERE(DATA.SHIP_DATA_CHLOR_A_OC4 NE MISSINGS('') AND DATA.N_CHLOR_A_OC4 GE '4' AND FLOAT(DATA.DEPTH) LT 2.0 AND ABS(DATA.TIME_DIF_HOURS) LE FLOAT(AHOUR),COUNT)    
      LAYOUT = [2,2,COUNTER+1]
      IM1 = PLOTXY_NG(FLOAT(DATA(OKO).SHIP_DATA_CHLOR_A_OC4),FLOAT(DATA(OKO).MEAN_CHLOR_A_OC4),DECIMALS=3,LOGLOG=LOGLOG,/QUIET,MODEL='RMA',PARAMS=PARAMS,CHARSIZE=CHARSIZE,PSYM=PSYM,REG_COLOR=REG_COLOR, REG_THICK=REG_THICK,XTITLE=XTITLE, $
        YTITLE=YTITLE,SYM_COLOR=SYM_COLOR,SYMSIZE=SYMSIZE,THICK=THICK,XRANGE=XRANGE,YRANGE=YRANGE,/GRID_NONE,XMARGIN=XMARGIN,YMARGIN=YMARGIN,STATS_CHARSIZE=STATS_CHARSIZE,STATS_POS=STATS_POS(COUNTER),$
        XTICKNAME=XTICKNAME,YTICKNAME=YTICKNAME,/ONE2ONE,ONE_COLOR=ONE_COLOR,ONE_THICK=ONE_THICK,ONE_LINESTYLE=ONE_LINESTYLE,BUFFER=BUFFER,CURRENT=CURRENT,LAYOUT=LAYOUT)
      OK = WHERE(DATA.SHIP_DATA_CHLOR_A_OC4 NE MISSINGS('') AND DATA.N_CHLOR_A_OC4 GE '4' AND FLOAT(DATA.DEPTH) LT 2.0 AND ABS(DATA.TIME_DIF_HOURS) LE FLOAT(AHOUR) AND DATA.SUBAREA_NAME EQ 'RI_SOUND',COUNT) 
      RI = PLOT(FLOAT(DATA[OK].SHIP_DATA_CHLOR_A_OC4),FLOAT(DATA[OK].MEAN_CHLOR_A_OC4),YRANGE=YRANGE,XRANGE=XRANGE,/YLOG,/XLOG,/OVERPLOT,/CURRENT,LINESTYLE=6,COLOR=RI_COLOR,SYMBOL='CIRCLE',SYM_SIZE=1.25,THICK=3,/SYM_FILLED,DIMENSIONS=DIMENSIONS)  
      OK = WHERE(DATA.SHIP_DATA_CHLOR_A_OC4 NE MISSINGS('') AND DATA.N_CHLOR_A_OC4 GE '4' AND FLOAT(DATA.DEPTH) LT 2.0 AND ABS(DATA.TIME_DIF_HOURS) LE FLOAT(AHOUR) AND DATA.SUBAREA_NAME EQ 'BI_SOUND',COUNT) 
      BI = PLOT(FLOAT(DATA[OK].SHIP_DATA_CHLOR_A_OC4),FLOAT(DATA[OK].MEAN_CHLOR_A_OC4),YRANGE=YRANGE,XRANGE=XRANGE,/YLOG,/XLOG,/OVERPLOT,/CURRENT,LINESTYLE=6,COLOR=BI_COLOR,SYMBOL='CIRCLE',SYM_SIZE=1.25,THICK=3,/SYM_FILLED,DIMENSIONS=DIMENSIONS)
      OK = WHERE(DATA.SHIP_DATA_CHLOR_A_OC4 NE MISSINGS('') AND DATA.N_CHLOR_A_OC4 GE '4' AND FLOAT(DATA.DEPTH) LT 2.0 AND ABS(DATA.TIME_DIF_HOURS) LE FLOAT(AHOUR) AND DATA.SUBAREA_NAME EQ 'COAST',COUNT) 
      CT = PLOT(FLOAT(DATA[OK].SHIP_DATA_CHLOR_A_OC4),FLOAT(DATA[OK].MEAN_CHLOR_A_OC4),YRANGE=YRANGE,XRANGE=XRANGE,/YLOG,/XLOG,/OVERPLOT,/CURRENT,LINESTYLE=6,COLOR=CT_COLOR,SYMBOL='CIRCLE',SYM_SIZE=1.25,THICK=3,/SYM_FILLED,DIMENSIONS=DIMENSIONS)
      LABEL = '$\pm$' + ' ' + AHOUR + ' Hours!COC4 Alg'
      TL = TEXT(XPOS(COUNTER),YPOS(COUNTER),LABEL,/NORMAL,COLOR=PALLIST[0],FONT_SIZE=14,/OVERPLOT)
      COUNTER = COUNTER + 1
      OKP = WHERE(DATA.SHIP_DATA_CHLOR_A_PAN NE MISSINGS('') AND DATA.N_CHLOR_A_PAN GE '4' AND FLOAT(DATA.DEPTH) LT 2.0 AND ABS(DATA.TIME_DIF_HOURS) LE FLOAT(AHOUR),COUNT)    
      LAYOUT = [2,2,COUNTER+1]
      IM2 = PLOTXY_NG(FLOAT(DATA(OKP).SHIP_DATA_CHLOR_A_PAN),FLOAT(DATA(OKP).MEAN_CHLOR_A_PAN),DECIMALS=3,LOGLOG=LOGLOG,/QUIET,MODEL='RMA',PARAMS=PARAMS,CHARSIZE=CHARSIZE,PSYM=PSYM,REG_COLOR=REG_COLOR, REG_THICK=REG_THICK,XTITLE=XTITLE, $
        YTITLE=YTITLE,SYM_COLOR=SYM_COLOR,SYMSIZE=SYMSIZE,THICK=THICK,XRANGE=XRANGE,YRANGE=YRANGE,/GRID_NONE,XMARGIN=XMARGIN,YMARGIN=YMARGIN,STATS_CHARSIZE=STATS_CHARSIZE,STATS_POS=STATS_POS(COUNTER),$
        XTICKNAME=XTICKNAME,YTICKNAME=YTICKNAME,/ONE2ONE,ONE_COLOR=ONE_COLOR,ONE_THICK=ONE_THICK,ONE_LINESTYLE=ONE_LINESTYLE,BUFFER=BUFFER,CURRENT=CURRENT,LAYOUT=LAYOUT)
      OK = WHERE(DATA.SHIP_DATA_CHLOR_A_PAN NE MISSINGS('') AND DATA.N_CHLOR_A_PAN GE '4' AND FLOAT(DATA.DEPTH) LT 2.0 AND ABS(DATA.TIME_DIF_HOURS) LE FLOAT(AHOUR) AND DATA.SUBAREA_NAME EQ 'RI_SOUND',COUNT) 
      RI = PLOT(FLOAT(DATA[OK].SHIP_DATA_CHLOR_A_PAN),FLOAT(DATA[OK].MEAN_CHLOR_A_PAN),YRANGE=YRANGE,YLOG=YLOG,/OVERPLOT,/CURRENT,LINESTYLE=6,COLOR=RI_COLOR,SYMBOL='CIRCLE',SYM_SIZE=1.25,THICK=3,/SYM_FILLED,DIMENSIONS=DIMENSIONS)  
      OK = WHERE(DATA.SHIP_DATA_CHLOR_A_PAN NE MISSINGS('') AND DATA.N_CHLOR_A_PAN GE '4' AND FLOAT(DATA.DEPTH) LT 2.0 AND ABS(DATA.TIME_DIF_HOURS) LE FLOAT(AHOUR) AND DATA.SUBAREA_NAME EQ 'BI_SOUND',COUNT) 
      BI = PLOT(FLOAT(DATA[OK].SHIP_DATA_CHLOR_A_PAN),FLOAT(DATA[OK].MEAN_CHLOR_A_PAN),YRANGE=YRANGE,YLOG=YLOG,/OVERPLOT,/CURRENT,LINESTYLE=6,COLOR=BI_COLOR,SYMBOL='CIRCLE',SYM_SIZE=1.25,THICK=3,/SYM_FILLED,DIMENSIONS=DIMENSIONS)
      OK = WHERE(DATA.SHIP_DATA_CHLOR_A_PAN NE MISSINGS('') AND DATA.N_CHLOR_A_PAN GE '4' AND FLOAT(DATA.DEPTH) LT 2.0 AND ABS(DATA.TIME_DIF_HOURS) LE FLOAT(AHOUR) AND DATA.SUBAREA_NAME EQ 'COAST',COUNT) 
      CT = PLOT(FLOAT(DATA[OK].SHIP_DATA_CHLOR_A_PAN),FLOAT(DATA[OK].MEAN_CHLOR_A_PAN),YRANGE=YRANGE,YLOG=YLOG,/OVERPLOT,/CURRENT,LINESTYLE=6,COLOR=CT_COLOR,SYMBOL='CIRCLE',SYM_SIZE=1.25,THICK=3,/SYM_FILLED,DIMENSIONS=DIMENSIONS)
      
      LABEL = '$\pm$' + ' ' + AHOUR + ' Hours!CPan Alg'
      TL = TEXT(XPOS(COUNTER),YPOS(COUNTER),LABEL,/NORMAL,COLOR=PALLIST[0],FONT_SIZE=14,/OVERPLOT)
      COUNTER = COUNTER + 1
      
      TTEST = T_TEST_2SLOPES(X1=DATA(OKO).SHIP_DATA_CHLOR_A_OC4, X2=DATA(OKO).SHIP_DATA_CHLOR_A_PAN, Y1=DATA(OKO).MEAN_CHLOR_A_OC4, Y2=DATA(OKO).MEAN_CHLOR_A_PAN, ALPHA=0.01, SLOPE_P=SLOPE_P, INT_P=INT_P)
      
    ENDFOR
    TT = TEXT(0.5,0.97,TITLE,/NORMAL,COLOR=PALLIST[0],FONT_SIZE=20,/OVERPLOT,ALIGNMENT=0.5)
    
    TT = TEXT(0.5,0.53,'RI Sound',/NORMAL,COLOR=RI_COLOR,FONT_SIZE=14,/OVERPLOT,ALIGNMENT=0.5)  
    TT = TEXT(0.5,0.51,'BI Sound',/NORMAL,COLOR=BI_COLOR,FONT_SIZE=14,/OVERPLOT,ALIGNMENT=0.5)
    TT = TEXT(0.5,0.49,'Offshore',/NORMAL,COLOR=OF_COLOR,FONT_SIZE=14,/OVERPLOT,ALIGNMENT=0.5)
    TT = TEXT(0.5,0.47,'Coast',   /NORMAL,COLOR=CT_COLOR,FONT_SIZE=14,/OVERPLOT,ALIGNMENT=0.5)
    

    PRINT, 'Writing ' + PNGFILE
    W.SAVE,PNGFILE,RESOLUTION=300
    W.CLOSE
    SKIP_SATSHIP_CHL:
    
    
    PRODS = ['CHLOR_A-PAN','CHLOR_A-OC4']
    FOR P=0, N_ELEMENTS(PRODS)-1 DO BEGIN
      EPSFILE = DIR_PLOTS + 'SAT_SHIP_XY-RI_BI_'+PRODS(P)+'_6HOURS.EPS'
      PNGFILE = DIR_PLOTS + 'SAT_SHIP_XY-RI_BI_'+PRODS(P)+'_6HOURS.PNG'
      TIFFILE = DIR_PLOTS + 'SAT_SHIP_XY-RI_BI_'+PRODS(P)+'_6HOURS.TIF'
      IF FILE_TEST(EPSFILE) EQ 1 AND FILE_TEST(PNGFILE) EQ 1 AND FILE_TEST(TIFFILE) EQ 1 AND NOT KEYWORD_SET(OVERWRITE) AND GET_MTIME(FILE) LT GET_MTIME(EPSFILE) AND GET_MTIME(FILE) LT GET_MTIME(PNGFILE) AND GET_MTIME(FILE) LT GET_MTIME(TIFFILE) THEN GOTO, SKIP_SATSHIP_SINGLE_CHL    
      DATA  = READALL(FILE)
      TAGS = TAG_NAMES(DATA)
      
      HOURS = ['6']    
      
      PAL='PAL_36'
      PSYM = 24             & SYM_COLOR = 36        & SYM_SIZE = 1.5
      CHARSIZE = 12         & STATS_CHARSIZE = 12   & PARAMS = [2,3,4,8,10]    
      THICK = 2             & REG_THICK = 3         & REG_COLOR = 5
      ONE_COLOR = 0         & ONE_THICK = 3         & ONE_LINESTYLE = 2
          
      BUFFER = 0
      RGB = CPAL_READ(PAL,PALLIST=PALLIST)
      
      STATS_POS=[.06,.86]
      COUNTER = 0      
      RI_COLOR = 'BLACK'      & RI_SYM = 'CIRCLE'   & RI_FILL = 1
      BI_COLOR = 'BLACK'      & BI_SYM = 'CIRCLE'   & BI_FILL = 0
      OF_COLOR = 'BLACK'      & OF_SYM = 'TRIANGLE' & OF_FILL = 1
        
      AHOUR = '6'
      
      TITLE = UNITS('CHLA',/NO_UNIT)
      XTITLE = '!8In situ!X!N ' + UNITS('CHLA')
      YTITLE = 'Satellite ' + UNITS('CHLA')
      IF PRODS(P) EQ 'CHLOR_A-PAN' THEN BEGIN
        TXT = 'Pan Algorithm' 
        SHIPPOS = WHERE(TAG_NAMES(DATA) EQ 'SHIP_DATA_CHLOR_A_PAN')
        SATPOS  = WHERE(TAG_NAMES(DATA) EQ 'MEAN_CHLOR_A_PAN')
      ENDIF ELSE BEGIN
        TXT = 'OC4 Alogorithm'
        SHIPPOS = WHERE(TAG_NAMES(DATA) EQ 'SHIP_DATA_CHLOR_A_OC4')
        SATPOS  = WHERE(TAG_NAMES(DATA) EQ 'MEAN_CHLOR_A_OC4')
      ENDELSE
      
      LOGLOG = 1 
      XRANGE = [0.1,20] & YRANGE = XRANGE
      
      OK = WHERE(DATA.SHIP_DATA_CHLOR_A_PAN NE MISSINGS('') AND DATA.N_CHLOR_A_PAN GE '4' AND FLOAT(DATA.DEPTH) LT 2.0 AND ABS(DATA.TIME_DIF_HOURS) LE FLOAT(AHOUR),COUNT)    
      LAYOUT = [2,2,COUNTER+1]
      PLT_XY,DATA[OK].(SHIPPOS),DATA[OK].(SATPOS),DECIMALS=3,/XLOG,/YLOG,XRANGE=XRANGE,YRANGE=YRANGE,TXT_SIZE=CHARSIZE,XTITLE=XTITLE,YTITLE=YTITLE,XTICKNAME=XTICKNAME,YTICKNAME=YTICKNAME,$
        SYMBOL='NONE',SYM_COLOR=SYM_COLOR,SYM_SIZE=SYM_SIZE,/REG_ADD,REG_COLOR=REG_COLOR,REG_THICK=REG_THICK,/STATS_ADD,MODEL='RMA',PARAMS=PARAMS,STATS_SIZE=STATS_CHARSIZE,STATS_POS=STATS_POS,$
        /ONE_ADD,ONE_COLOR=ONE_COLOR,ONE_THICK=ONE_THICK,ONE_LINESTYLE=ONE_LINESTYLE,BUFFER=BUFFER,CURRENT=CURRENT,OBJ=OBJ
      OK = WHERE(DATA.SHIP_DATA_CHLOR_A_PAN NE MISSINGS('') AND DATA.N_CHLOR_A_PAN GE '4' AND FLOAT(DATA.DEPTH) LT 2.0 AND ABS(DATA.TIME_DIF_HOURS) LE FLOAT(AHOUR) AND DATA.SUBAREA_NAME EQ 'RI_SOUND',COUNT) 
      RI = PLOT(FLOAT(DATA[OK].SHIP_DATA_CHLOR_A_PAN),FLOAT(DATA[OK].MEAN_CHLOR_A_PAN),YRANGE=YRANGE,YLOG=YLOG,/OVERPLOT,/CURRENT,LINESTYLE=6,COLOR=RI_COLOR,SYMBOL=RI_SYM,SYM_SIZE=SYM_SIZE,SYM_FILLED=RI_FILL,DIMENSIONS=DIMENSIONS)  
      OK = WHERE(DATA.SHIP_DATA_CHLOR_A_PAN NE MISSINGS('') AND DATA.N_CHLOR_A_PAN GE '4' AND FLOAT(DATA.DEPTH) LT 2.0 AND ABS(DATA.TIME_DIF_HOURS) LE FLOAT(AHOUR) AND DATA.SUBAREA_NAME EQ 'BI_SOUND',COUNT) 
      BI = PLOT(FLOAT(DATA[OK].SHIP_DATA_CHLOR_A_PAN),FLOAT(DATA[OK].MEAN_CHLOR_A_PAN),YRANGE=YRANGE,YLOG=YLOG,/OVERPLOT,/CURRENT,LINESTYLE=6,COLOR=BI_COLOR,SYMBOL=BI_SYM,SYM_SIZE=SYM_SIZE,SYM_FILLED=BI_FILL,DIMENSIONS=DIMENSIONS)
      OK = WHERE(DATA.SHIP_DATA_CHLOR_A_PAN NE MISSINGS('') AND DATA.N_CHLOR_A_PAN GE '4' AND FLOAT(DATA.DEPTH) LT 2.0 AND ABS(DATA.TIME_DIF_HOURS) LE FLOAT(AHOUR) AND DATA.SUBAREA_NAME EQ 'OCEAN',COUNT) 
      CT = PLOT(FLOAT(DATA[OK].SHIP_DATA_CHLOR_A_PAN),FLOAT(DATA[OK].MEAN_CHLOR_A_PAN),YRANGE=YRANGE,YLOG=YLOG,/OVERPLOT,/CURRENT,LINESTYLE=6,COLOR=OF_COLOR,SYMBOL=OF_SYM,SYM_SIZE=SYM_SIZE,SYM_FILLED=OF_FILL,DIMENSIONS=DIMENSIONS)
      
      TT = TEXT(0.182,0.835,TXT,/NORMAL,FONT_SIZE=12,FONT_STYLE='BOLD')
      SY = SYMBOL(0.8, .25, RI_SYM, SYM_SIZE=SYM_SIZE, SYM_FILLED=RI_FILL, SYM_COLOR=RI_COLOR, LABEL_STRING=' RI Sound', /NORMAL, LABEL_FONT_SIZE=14, LABEL_POSITION='R')
      SY = SYMBOL(0.8, .22, BI_SYM, SYM_SIZE=SYM_SIZE, SYM_FILLED=BI_FILL, SYM_COLOR=BI_COLOR, LABEL_STRING=' BI Sound', /NORMAL, LABEL_FONT_SIZE=14, LABEL_POSITION='R')
      SY = SYMBOL(0.8, .19, OF_SYM, SYM_SIZE=SYM_SIZE, SYM_FILLED=OF_FILL, SYM_COLOR=OF_COLOR, LABEL_STRING=' Offshore', /NORMAL, LABEL_FONT_SIZE=14, LABEL_POSITION='R')
  
      PRINT, 'Writing ' + EPSFILE
      OBJ.SAVE,PNGFILE,RESOLUTION=1000
      OBJ.SAVE,EPSFILE,RESOLUTION=1000
      OBJ.SAVE,TIFFILE,RESOLUTION=1000,COMPRESSION=1
      OBJ.CLOSE
      SKIP_SATSHIP_SINGLE_CHL:
    ENDFOR  

STOP        
    
  ENDIF  ; DO_SATSHIP_PLOTS

; *******************************************************
  IF DO_INSITU_PP GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_INSITU_PP GE 2
    PDATA = READALL(!S.PROJECTS + 'RI_SOUND' + SL + 'DATA' + SL + 'RI_BI_SOUND_DAILY_PAR.csv')
    CDATA = READALL(!S.PROJECTS + 'RI_SOUND' + SL + 'DATA' + SL + 'RI_BI_SOUND_CHL_PP_MERL.csv')    
    OK = WHERE_MATCH(PDATA.DATE,CDATA.DATE,COUNT,COMPLEMENT=COMPLEMENT,VALID=VALID)
    CDATA.DATE = CDATA.YEAR + ADD_STR_ZERO(CDATA.MONTH) + ADD_STR_ZERO(CDATA.DAY) + ADD_STR_ZERO(CDATA.HOUR) + ADD_STR_ZERO(CDATA.MINUTE) + ADD_STR_ZERO(CDATA.SECOND)
    DP = DATE_PARSE(CDATA.DATE)
    NEW = REPLICATE(STRUCT_2MISSINGS(CREATE_STRUCT('DATE_SHIP','','LAT',0.0,'LON',0.0,'DEPTH',0.0,'CHLOR_A',0.0,'SST',0.0,'PPD',0.0,'KD',0.0,'ZEU',0.0,'PMAX',0.0,'ALPHA',0.0,'BETA',0.0,$
                                                   'PAR',0.0,'PPD_VGPM2',0.0,'PPD_VGPM_MB',0.0,'PPD_OPAL',0.0)),N_ELEMENTS(CDATA))
    NEW.DATE_SHIP = CDATA.DATE
    NEW.LAT = FLOAT(CDATA.LAT)
    NEW.LON = FLOAT(CDATA.LON)
    NEW.DEPTH = FLOAT(CDATA.DEPTH)
    NEW.CHLOR_A = FLOAT(CDATA.CHLOR_A)
    NEW.SST = FLOAT(CDATA.SST)
    NEW.PPD = FLOAT(CDATA.PPD)
    NEW.KD = FLOAT(CDATA.KD)
    NEW.ZEU = FLOAT(CDATA.ZEU)
    NEW.PMAX = FLOAT(CDATA.PMAX)
    NEW.ALPHA = FLOAT(CDATA.ALPHA)
    NEW.BETA = FLOAT(CDATA.BETA)
    NEW.PAR = FLOAT(PDATA[OK].PAR)
    CDATA = STRUCT_REMOVE(CDATA,['LAT','LON','DEPTH','CHLOR_A','SST','PPD','KD','ZEU','PMAX','ALPHA','BETA','COMMENTS'])
    DL = I_SUN_KIRK_day_length(NEW.LAT,DP.IDOY)
    NEW.PPD_VGPM2    = PP_VGPM2(CHL_SAT=NEW.CHLOR_A, SST=NEW.SST, PAR=NEW.PAR, DAY_LENGTH=DL)*1000
    NEW.PPD_VGPM_MB  = PP_VGMB( CHL_SAT=NEW.CHLOR_A, SST=NEW.SST, PAR=NEW.PAR, DAY_LENGTH=DL)*1000
    STRUCT = STRUCT_MERGE(CDATA,NEW)
    SAVE, FILENAME=!S.PROJECTS + 'RI_SOUND' + SL + 'DATA' + SL + 'RI_BI_SOUND_CHL_PP_MODELED_PP.SAVE',STRUCT
    
    SHIP_FILE = !S.PROJECTS + 'RI_SOUND' + SL + 'DATA' + SL + 'RI_BI_SOUND_CHL_PP_MODELED_PP.SAVE'  
    DIR_OUT   = !S.PROJECTS + 'RI_SOUND' + SL + 'DATA' + SL + 'SAT_SHIP' + SL
    DATASETS  = ['PP-SEAPAN_AVHRR-MLAC_4'] ; 'PP-SEAOC4_AVHRR-MLAC_4'
    ALGS      = ['OPAL','VGPM2','VGMB']
    CSV = 1    
    AROUND = 1
    HOURS = 12
    FOR DTH = 0L, N_ELEMENTS(DATASETS)-1 DO BEGIN
      OUTNAME = DATASETS(DTH)+'-RI_SOUND_MODELED_PP_STATIONS'      
      DIR_DATASETS = !S.DATASETS+DATASETS(DTH) + SL + 'RI_SOUND' + SL + 'SAVE' + SL      
      FILES = FILE_SEARCH(DIR_DATASETS + 'PPD-' + [ALGS] + SL + 'D_2010*.SAVE' )
      IF N_ELEMENTS(FILES[0]) EQ '' THEN STOP
      SD_SAT_SHIP,SHIP_FILE=SHIP_FILE,SAT_FILES=FILES,AROUND=AROUND,HOURS=HOURS,OUTNAME=OUTNAME,RANGE=RANGE,DIR_OUT=DIR_OUT,CSV=CSV,OVERWRITE=OVERWRITE      
    ENDFOR

    NEW = READALL(DIR_OUT + 'SD_SAT_SHIP-HOURS_12-PPD-OPAL_PPD-VGMB_PPD-VGPM2-PP-SEAPAN_AVHRR-MLAC_4-RI_SOUND_MODELED_PP_STATIONS.SAVE')
    DATA = STRUCT_JOIN(STRUCT,NEW,TAGNAMES=['SOURCE','CRUISE','STATION','DEPTH','LON','LAT','DATE_SHIP'])
    SDATA = READALL(!S.PROJECTS + 'RI_SOUND\DATA\SAT_SHIP\SD_SAT_SHIP-HOURS_12-PPD-OPAL_PPD-VGMB_PPD-VGPM2-PP-SEAPAN_AVHRR-MLAC_4-RI_SOUND_PP_STATIONS.SAVE')
    PNGFILE = DIR_PLOTS + 'INSITU_PP_MODELS_XY-RI_BI.png'
    IF FILE_TEST(PNGFILE) EQ 1 AND NOT KEYWORD_SET(OVERWRITE) THEN GOTO, SKIP_PP_PLOT
    
    PRODS = ['PPD-VGPM2','PPD-VGMB','PPD-OPAL']
    HOURS = 12.0        
    TAGS = TAG_NAMES(DATA)
    
    PAL = 'PAL_36'
    PSYM = 24             & SYM_COLOR = 4         & SYMSIZE = 1.25
    CHARSIZE = 12         & STATS_CHARSIZE = 12   & FONT = 'Helvetica'
    PARAMS = [2,3,4,8]    & XMARGIN = [2,2]       & YMARGIN = [2,2]    
    THICK = 2             & REG_THICK = 3         & REG_COLOR = 5
    ONE_COLOR = 0         & ONE_THICK = 3         & ONE_LINESTYLE = 2
    
    MARGIN = [0.15,0.1,0.05,0.1]        
    RGB = CPAL_READ(PAL,PALLIST=PALLIST)

;    XPOS = [.25,.75,.25,.75]
;    YPOS = [.56,.56,.06,.06]    
;    STATS_POS=LIST([.085,.86],[.585,.86],$
;                   [.085,.36],[.585,.36])
;    LAYOUT = [2,2]               
;    W = WINDOW(DIMENSIONS=[1024,1024])               
    
    XPOS = [.185,.52,.855,.185,.52,.855]
    YPOS = [.56,.56,.56,.06,.06,.06]
    STATS_POS=LIST([.055,.86],[.39,.86],[.725,.86],$
                   [.055,.36],[.39,.36],[.725,.36])
    LAYOUT = [3,2]
    W = WINDOW(DIMENSIONS=[1536,1024])
    CURRENT=1
    BUFFER = 0
    COUNTER = 0      
    
    TITLE = UNITS('PRIMARY_PRODUCTION',/NO_UNIT)
    C14PPD  = 'C14 ' + UNITS('PPD')
    INMODEL = '$\itIn situ \rm$ Modeled ' + UNITS('PPD') 
    SATPPD  = 'Satellite ' + UNITS('PPD')
    
    LOGLOG = 1 
    XRANGE = [.1,3] & YRANGE = XRANGE
    XTICKNAME = ['0.1','0.3','1','3'] & YTICKNAME = XTICKNAME
    XTICKVALUES = [.1,.3,1.0,3.0] & YTICKVALUES = XTICKVALUES
    
    DEPTH = 1.0
    
    SYM_COLOR = 4   
    OK = WHERE(DATA.PPD NE MISSINGS(DATA.PPD) AND FLOAT(DATA.DEPTH) EQ DEPTH AND DATA.PPD_VGPM2 NE MISSINGS(DATA.PPD_VGPM2) LE HOURS,COUNT)        
    IM1 = PLOTXY_NG(FLOAT(DATA[OK].PPD)/1000,DATA[OK].PPD_VGPM2/1000,DECIMALS=3,LOGLOG=LOGLOG,/QUIET,MODEL='RMA',PARAMS=PARAMS,CHARSIZE=CHARSIZE,FONT_NAME=FONT,PSYM=PSYM,REG_COLOR=REG_COLOR, REG_THICK=REG_THICK, $
      XTITLE=C14PPD,YTITLE=INMODEL,SYM_COLOR=SYM_COLOR,SYMSIZE=SYMSIZE,THICK=THICK,XRANGE=XRANGE,YRANGE=YRANGE,/GRID_NONE,MARGIN=MARGIN,XMARGIN=XMARGIN,YMARGIN=YMARGIN,STATS_CHARSIZE=STATS_CHARSIZE,STATS_POS=STATS_POS(COUNTER),$
      XTICKNAME=XTICKNAME,YTICKNAME=YTICKNAME,XTICKVALUES=XTICKVALUES,YTICKVALUES=YTICKVALUES,/ONE2ONE,ONE_COLOR=ONE_COLOR,ONE_THICK=ONE_THICK,ONE_LINESTYLE=ONE_LINESTYLE,BUFFER=BUFFER,CURRENT=CURRENT,LAYOUT=[LAYOUT[0],LAYOUT[1],COUNTER+1])
    LABEL = 'Depth='+NUM2STR(DEPTH,DECIMALS=0)+'!CVGPM-Eppley Model'
    TL = TEXT(XPOS(COUNTER),YPOS(COUNTER),LABEL,/NORMAL,COLOR=PALLIST[0],FONT_SIZE=14,FONT_NAME=FONT,/OVERPLOT)
    COUNTER = COUNTER + 1
    
    SYM_COLOR = 12           
    OK = WHERE(DATA.PPD_VGPM2 NE MISSINGS(0.0) AND DATA.DEPTH EQ DEPTH AND DATA.MEAN_PPD_VGPM2 NE MISSINGS(0.0) AND DATA.TIME_DIF_HOURS LE HOURS AND DATA.N_PPD_VGPM2 GE 4,COUNT)        
    IM2 = PLOTXY_NG(DATA[OK].PPD_VGPM2/1000,DATA[OK].MEAN_PPD_VGPM2,DECIMALS=3,LOGLOG=LOGLOG,/QUIET,MODEL='RMA',PARAMS=PARAMS,CHARSIZE=CHARSIZE,FONT_NAME=FONT,PSYM=PSYM,REG_COLOR=REG_COLOR, REG_THICK=REG_THICK,$
      XTITLE=INMODEL,YTITLE=SATPPD,SYM_COLOR=SYM_COLOR,SYMSIZE=SYMSIZE,THICK=THICK,XRANGE=XRANGE,YRANGE=YRANGE,/GRID_NONE,MARGIN=MARGIN,XMARGIN=XMARGIN,YMARGIN=YMARGIN,STATS_CHARSIZE=STATS_CHARSIZE,STATS_POS=STATS_POS(COUNTER),$
      XTICKNAME=XTICKNAME,YTICKNAME=YTICKNAME,XTICKVALUES=XTICKVALUES,YTICKVALUES=YTICKVALUES,/ONE2ONE,ONE_COLOR=ONE_COLOR,ONE_THICK=ONE_THICK,ONE_LINESTYLE=ONE_LINESTYLE,BUFFER=BUFFER,CURRENT=CURRENT,LAYOUT=[LAYOUT[0],LAYOUT[1],COUNTER+1])
    LABEL = 'Depth='+NUM2STR(DEPTH,DECIMALS=0)+'!CVGPM-Eppley Model'
    TL = TEXT(XPOS(COUNTER),YPOS(COUNTER),LABEL,/NORMAL,COLOR=PALLIST[0],FONT_SIZE=14,/OVERPLOT)
    COUNTER = COUNTER + 1
    
    SYM_COLOR = 22
    OK = WHERE(SDATA.SHIP_DATA_PPD_VGPM2 NE MISSINGS(0.0) AND SDATA.N_PPD_VGPM2 GE '4' AND FLOAT(SDATA.DEPTH) EQ DEPTH AND ABS(SDATA.TIME_DIF_HOURS) LE HOURS,COUNT)        
    IM3 = PLOTXY_NG(SDATA[OK].SHIP_DATA_PPD_VGPM2/1000,SDATA[OK].MEAN_PPD_VGPM2,DECIMALS=3,LOGLOG=LOGLOG,/QUIET,MODEL='RMA',PARAMS=PARAMS,CHARSIZE=CHARSIZE,PSYM=PSYM,REG_COLOR=REG_COLOR, REG_THICK=REG_THICK,$
      XTITLE=C14PPD,YTITLE=SATPPD,SYM_COLOR=SYM_COLOR,SYMSIZE=SYMSIZE,THICK=THICK,XRANGE=XRANGE,YRANGE=YRANGE,/GRID_NONE,MARGIN=MARGIN,XMARGIN=XMARGIN,YMARGIN=YMARGIN,STATS_CHARSIZE=STATS_CHARSIZE,STATS_POS=STATS_POS(COUNTER),$
      XTICKNAME=XTICKNAME,YTICKNAME=YTICKNAME,XTICKVALUES=XTICKVALUES,YTICKVALUES=YTICKVALUES,/ONE2ONE,ONE_COLOR=ONE_COLOR,ONE_THICK=ONE_THICK,ONE_LINESTYLE=ONE_LINESTYLE,BUFFER=BUFFER,CURRENT=CURRENT,LAYOUT=[LAYOUT[0],LAYOUT[1],COUNTER+1])
    LABEL = 'Depth='+NUM2STR(DEPTH,DECIMALS=0)+'!CVGPM-Eppley Model'
    TL = TEXT(XPOS(COUNTER),YPOS(COUNTER),LABEL,/NORMAL,COLOR=PALLIST[0],FONT_SIZE=14,/OVERPLOT)
    COUNTER = COUNTER + 1
    
    SYM_COLOR = 4   
    OK = WHERE(DATA.PPD NE MISSINGS(DATA.PPD) AND FLOAT(DATA.DEPTH) EQ DEPTH AND DATA.PPD_VGPM_MB NE MISSINGS(DATA.PPD_VGPM_MB) LE HOURS,COUNT)
    IM4 = PLOTXY_NG(FLOAT(DATA[OK].PPD)/1000,DATA[OK].PPD_VGPM_MB/1000,DECIMALS=3,LOGLOG=LOGLOG,/QUIET,MODEL='RMA',PARAMS=PARAMS,CHARSIZE=CHARSIZE,FONT_NAME=FONT,PSYM=PSYM,REG_COLOR=REG_COLOR, REG_THICK=REG_THICK, $
      XTITLE=C14PPD,YTITLE=INMODEL,SYM_COLOR=SYM_COLOR,SYMSIZE=SYMSIZE,THICK=THICK,XRANGE=XRANGE,YRANGE=YRANGE,/GRID_NONE,MARGIN=MARGIN,XMARGIN=XMARGIN,YMARGIN=YMARGIN,STATS_CHARSIZE=STATS_CHARSIZE,STATS_POS=STATS_POS(COUNTER),$
      XTICKNAME=XTICKNAME,YTICKNAME=YTICKNAME,XTICKVALUES=XTICKVALUES,YTICKVALUES=YTICKVALUES,/ONE2ONE,ONE_COLOR=ONE_COLOR,ONE_THICK=ONE_THICK,ONE_LINESTYLE=ONE_LINESTYLE,BUFFER=BUFFER,CURRENT=CURRENT,LAYOUT=[LAYOUT[0],LAYOUT[1],COUNTER+1])
    LABEL = 'Depth='+NUM2STR(DEPTH,DECIMALS=0)+'!CVGPM-Mass Bay Model'
    TL = TEXT(XPOS(COUNTER),YPOS(COUNTER),LABEL,/NORMAL,COLOR=PALLIST[0],FONT_SIZE=14,/OVERPLOT)
    COUNTER = COUNTER + 1
    
    SYM_COLOR = 12   
    OK = WHERE(DATA.PPD_VGPM_MB NE MISSINGS(0.0) AND DATA.DEPTH EQ DEPTH AND DATA.MEAN_PPD_VGMB NE MISSINGS(0.0) AND DATA.TIME_DIF_HOURS LE HOURS AND DATA.N_PPD_VGMB GE 4,COUNT)
    IM5 = PLOTXY_NG(DATA[OK].PPD_VGPM_MB/1000,DATA[OK].MEAN_PPD_VGMB,DECIMALS=3,LOGLOG=LOGLOG,/QUIET,MODEL='RMA',PARAMS=PARAMS,CHARSIZE=CHARSIZE,FONT_NAME=FONT,PSYM=PSYM,REG_COLOR=REG_COLOR, REG_THICK=REG_THICK,$
      XTITLE=INMODEL,YTITLE=SATPPD,SYM_COLOR=SYM_COLOR,SYMSIZE=SYMSIZE,THICK=THICK,XRANGE=XRANGE,YRANGE=YRANGE,/GRID_NONE,MARGIN=MARGIN,XMARGIN=XMARGIN,YMARGIN=YMARGIN,STATS_CHARSIZE=STATS_CHARSIZE,STATS_POS=STATS_POS(COUNTER),$
      XTICKNAME=XTICKNAME,YTICKNAME=YTICKNAME,XTICKVALUES=XTICKVALUES,YTICKVALUES=YTICKVALUES,/ONE2ONE,ONE_COLOR=ONE_COLOR,ONE_THICK=ONE_THICK,ONE_LINESTYLE=ONE_LINESTYLE,BUFFER=BUFFER,CURRENT=CURRENT,LAYOUT=[LAYOUT[0],LAYOUT[1],COUNTER+1])
    LABEL = 'Depth='+NUM2STR(DEPTH,DECIMALS=0)+'!CVGPM-Mass Bay Model'
    TL = TEXT(XPOS(COUNTER),YPOS(COUNTER),LABEL,/NORMAL,COLOR=PALLIST[0],FONT_SIZE=14,/OVERPLOT)
    COUNTER = COUNTER + 1
    
    SYM_COLOR = 22    
    OK = WHERE(SDATA.SHIP_DATA_PPD_VGMB NE MISSINGS(0.0) AND SDATA.N_PPD_VGMB GE '4' AND FLOAT(SDATA.DEPTH) EQ DEPTH AND ABS(SDATA.TIME_DIF_HOURS) LE HOURS,COUNT)        
    IM6 = PLOTXY_NG(SDATA[OK].SHIP_DATA_PPD_VGMB/1000,SDATA[OK].MEAN_PPD_VGMB,DECIMALS=3,LOGLOG=LOGLOG,/QUIET,MODEL='RMA',PARAMS=PARAMS,CHARSIZE=CHARSIZE,PSYM=PSYM,REG_COLOR=REG_COLOR, REG_THICK=REG_THICK,$
      XTITLE=C14PPD,YTITLE=SATPPD,SYM_COLOR=SYM_COLOR,SYMSIZE=SYMSIZE,THICK=THICK,XRANGE=XRANGE,YRANGE=YRANGE,/GRID_NONE,MARGIN=MARGIN,XMARGIN=XMARGIN,YMARGIN=YMARGIN,STATS_CHARSIZE=STATS_CHARSIZE,STATS_POS=STATS_POS(COUNTER),$
      XTICKNAME=XTICKNAME,YTICKNAME=YTICKNAME,XTICKVALUES=XTICKVALUES,YTICKVALUES=YTICKVALUES,/ONE2ONE,ONE_COLOR=ONE_COLOR,ONE_THICK=ONE_THICK,ONE_LINESTYLE=ONE_LINESTYLE,BUFFER=BUFFER,CURRENT=CURRENT,LAYOUT=[LAYOUT[0],LAYOUT[1],COUNTER+1])
    LABEL = 'Depth='+NUM2STR(DEPTH,DECIMALS=0)+'!CVGPM-Mass Bay Model'
    TL = TEXT(XPOS(COUNTER),YPOS(COUNTER),LABEL,/NORMAL,COLOR=PALLIST[0],FONT_SIZE=14,/OVERPLOT)
    COUNTER = COUNTER + 1
        
    TITLE = UNITS('PRIMARY_PRODUCTION',/NO_UNIT)
    TT = TEXT(0.5,0.96,TITLE,/NORMAL,COLOR=PALLIST[0],FONT_SIZE=20,/OVERPLOT,ALIGNMENT=0.5)         
    PRINT, 'Writing ' + PNGFILE
    W.SAVE,PNGFILE,RESOLUTION=300
    W.CLOSE
    SKIP_PP_PLOT:  


  ENDIF ; DO_INSITU_PP
; *******************************************************
  IF DO_SATSHIP_PP GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_SATSHIP_PP GE 2

    SHIPFILE = !S.PROJECTS + 'RI_SOUND' + SL + 'DATA' + SL + 'RI_SOUND_TIMESERIES_STATIONS.csv'
    IF FILE_TEST(SHIPFILE) EQ 0 THEN BEGIN 
      LATS = []
      LONS = []
      STATIONS = []
      DATES = CREATE_DATE('19980101','20101231')
      DP = DATE_PARSE(DATES)
      NEW = STRUCT_MERGE(DP,REPLICATE(STRUCT_2MISSINGS(CREATE_STRUCT('CRUISE','','STATION','','LAT','','LON','','SOURCE','','CHLOR_A',0.0,'PPD',0.0)),N_ELEMENTS(DATES)))
      NEW = STRUCT_REMOVE(NEW,['JD','MON','DOY','IDOY','DOW'])
      NEW.SOURCE = 'URI'
      NEW.CRUISE = 'MERL'
      NEW.HOUR   = '17'    
      FOR N=0, N_ELEMENTS(LATS)-1 DO BEGIN
        TEMP = NEW
        TEMP.LAT = LATS(N)
        TEMP.LON = LON(N)
        TEMP.STATION = STATIONS(N)
        IF N EQ 0 THEN STRUCT = TEMP ELSE STRUCT = STRUCT_CONCAT(STRUCT,TEMP)
      ENDFOR
      STRUCT_2CSV,SHIPFILE,STRUCT
    ENDIF   

    SHIP_FILE = !S.PROJECTS + 'RI_SOUND' + SL + 'DATA' + SL + 'RI_BI_SOUND_CHL_PP_MERL.csv'  
    DIR_OUT   = !S.PROJECTS + 'RI_SOUND' + SL + 'DATA' + SL + 'SAT_SHIP' + SL
    DATASETS  = ['PP-SEAPAN_AVHRR-MLAC_4'] ; 'PP-SEAOC4_AVHRR-MLAC_4'
    ALGS      = ['OPAL','VGPM2','VGMB']
    CSV = 1    
    AROUND = 1
    HOURS = 12
    FOR DTH = 0L, N_ELEMENTS(DATASETS)-1 DO BEGIN
      OUTNAME = DATASETS(DTH)+'-RI_SOUND_PP_STATIONS'      
      DIR_DATASETS = !S.DATASETS+DATASETS(DTH) + SL + 'RI_SOUND' + SL + 'SAVE' + SL      
      FILES = FILE_SEARCH(DIR_DATASETS + 'PPD-' + [ALGS] + SL + 'D_2010*.SAVE' )
      IF N_ELEMENTS(FILES[0]) EQ '' THEN STOP
      SD_SAT_SHIP,SHIP_FILE=SHIP_FILE,SAT_FILES=FILES,AROUND=AROUND,HOURS=HOURS,OUTNAME=OUTNAME,RANGE=RANGE,DIR_OUT=DIR_OUT,CSV=CSV,OVERWRITE=OVERWRITE      
    ENDFOR
    STOP    

  ENDIF ; DO_SATSHIP_PP

; *******************************************************
  IF DO_SATSHIP_PP_PLOT GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_SATSHIP_PP_PLOT GE 2

    DIR_DATA  = FIX_PATH(!S.PROJECTS + 'RI_SOUND\DATA\SAT_SHIP\') 
    DIR_PLOTS = FIX_PATH(!S.PROJECTS + 'RI_SOUND\PLOTS\')
    FILE = DIR_DATA+'SD_SAT_SHIP-HOURS_12-PPD-OPAL_PPD-VGMB_PPD-VGPM2-PP-SEAPAN_AVHRR-MLAC_4-RI_SOUND_PP_STATIONS.SAVE'     
    PNGFILE = DIR_PLOTS + 'SAT_SHIP_XY-RI_BI_PPD.png'
    IF FILE_TEST(PNGFILE) EQ 1 AND NOT KEYWORD_SET(OVERWRITE) AND GET_MTIME(FILE) LT GET_MTIME(PNGFILE) THEN GOTO, SKIP_SATSHIP_PLOT
    
    PRODS = ['PPD-VGPM2','PPD-VGMB','PPD-OPAL']
    HOURS = 12.0    
    DATA  = READALL(FILE)
    TAGS = TAG_NAMES(DATA)
    
    PAL = 'PAL_36'
    PSYM = 24             & SYM_COLOR = 4         & SYMSIZE = 1.25
    CHARSIZE = 12         & STATS_CHARSIZE = 12   & FONT = 0
    PARAMS = [2,3,4,8]    & XMARGIN = [2,2]       & YMARGIN = [2,2]    
    THICK = 2             & REG_THICK = 3         & REG_COLOR = 5
    ONE_COLOR = 0         & ONE_THICK = 3         & ONE_LINESTYLE = 2
    
    MARGIN = [0.15,0.1,0.05,0.1]    
    BUFFER = 0
    RGB = CPAL_READ(PAL,PALLIST=PALLIST)
    XPOS = [.185,.52,.855,.185,.52,.855]
    YPOS = [.56,.56,.56,.06,.06,.06]
    W = WINDOW(DIMENSIONS=[1536,1024])
  
    CURRENT=1
    STATS_POS=LIST([.055,.86],[.39,.86],[.725,.86],$
                   [.055,.36],[.39,.36],[.725,.36])
    COUNTER = 0      
    DEPTHS = [1.0,17.0]
    FOR HTH=0, N_ELEMENTS(DEPTHS)-1 DO BEGIN  
      DEPTH = DEPTHS(HTH)
      
      TITLE = UNITS('PRIMARY_PRODUCTION',/NO_UNIT)
      XTITLE = 'Ship ' + UNITS('PPD')
      YTITLE = 'Satellite ' + UNITS('PPD')
      
      LOGLOG = 1 
      XRANGE = [.1,3] & YRANGE = XRANGE
      OK = WHERE(DATA.SHIP_DATA_PPD_VGPM2 NE MISSINGS(0.0) AND DATA.N_PPD_VGPM2 GE '4' AND FLOAT(DATA.DEPTH) EQ DEPTH AND ABS(DATA.TIME_DIF_HOURS) LE HOURS,COUNT)    
      LAYOUT = [3,2,COUNTER+1]
      IM1 = PLOTXY_NG(DATA[OK].SHIP_DATA_PPD_VGPM2/1000,DATA[OK].MEAN_PPD_VGPM2,DECIMALS=3,LOGLOG=LOGLOG,/QUIET,MODEL='RMA',PARAMS=PARAMS,CHARSIZE=CHARSIZE,PSYM=PSYM,REG_COLOR=REG_COLOR, REG_THICK=REG_THICK,XTITLE=XTITLE, $
        YTITLE=YTITLE,SYM_COLOR=SYM_COLOR,SYMSIZE=SYMSIZE,THICK=THICK,XRANGE=XRANGE,YRANGE=YRANGE,/GRID_NONE,MARGIN=MARGIN,XMARGIN=XMARGIN,YMARGIN=YMARGIN,STATS_CHARSIZE=STATS_CHARSIZE,STATS_POS=STATS_POS(COUNTER),$
        XTICKNAME=XTICKNAME,YTICKNAME=YTICKNAME,/ONE2ONE,ONE_COLOR=ONE_COLOR,ONE_THICK=ONE_THICK,ONE_LINESTYLE=ONE_LINESTYLE,BUFFER=BUFFER,CURRENT=CURRENT,LAYOUT=LAYOUT)
      LABEL = 'Depth='+NUM2STR(DEPTH,DECIMALS=0)+'!CVGPM-Eppley Model'
      TL = TEXT(XPOS(COUNTER),YPOS(COUNTER),LABEL,/NORMAL,COLOR=PALLIST[0],FONT_SIZE=14,/OVERPLOT)
      COUNTER = COUNTER + 1
      OK = WHERE(DATA.SHIP_DATA_PPD_VGMB NE MISSINGS(0.0) AND DATA.N_PPD_VGMB GE '4' AND FLOAT(DATA.DEPTH) EQ DEPTH AND ABS(DATA.TIME_DIF_HOURS) LE HOURS,COUNT)    
      LAYOUT = [3,2,COUNTER+1]
      IM2 = PLOTXY_NG(DATA[OK].SHIP_DATA_PPD_VGMB/1000,DATA[OK].MEAN_PPD_VGMB,DECIMALS=3,LOGLOG=LOGLOG,/QUIET,MODEL='RMA',PARAMS=PARAMS,CHARSIZE=CHARSIZE,PSYM=PSYM,REG_COLOR=REG_COLOR, REG_THICK=REG_THICK,XTITLE=XTITLE, $
        YTITLE=YTITLE,SYM_COLOR=SYM_COLOR,SYMSIZE=SYMSIZE,THICK=THICK,XRANGE=XRANGE,YRANGE=YRANGE,/GRID_NONE,MARGIN=MARGIN,XMARGIN=XMARGIN,YMARGIN=YMARGIN,STATS_CHARSIZE=STATS_CHARSIZE,STATS_POS=STATS_POS(COUNTER),$
        XTICKNAME=XTICKNAME,YTICKNAME=YTICKNAME,/ONE2ONE,ONE_COLOR=ONE_COLOR,ONE_THICK=ONE_THICK,ONE_LINESTYLE=ONE_LINESTYLE,BUFFER=BUFFER,CURRENT=CURRENT,LAYOUT=LAYOUT)
      LABEL = 'Depth='+NUM2STR(DEPTH,DECIMALS=0)+'!CVGPM-Mass Bay Model'
      TL = TEXT(XPOS(COUNTER),YPOS(COUNTER),LABEL,/NORMAL,COLOR=PALLIST[0],FONT_SIZE=14,/OVERPLOT)
      COUNTER = COUNTER + 1
      OK = WHERE(DATA.SHIP_DATA_PPD_OPAL NE MISSINGS(0.0) AND DATA.N_PPD_OPAL GE '4' AND FLOAT(DATA.DEPTH) EQ DEPTH AND ABS(DATA.TIME_DIF_HOURS) LE HOURS,COUNT)    
      LAYOUT = [3,2,COUNTER+1]
      IM3 = PLOTXY_NG(DATA[OK].SHIP_DATA_PPD_OPAL/1000,DATA[OK].MEAN_PPD_OPAL,DECIMALS=3,LOGLOG=LOGLOG,/QUIET,MODEL='RMA',PARAMS=PARAMS,CHARSIZE=CHARSIZE,PSYM=PSYM,REG_COLOR=REG_COLOR, REG_THICK=REG_THICK,XTITLE=XTITLE, $
        YTITLE=YTITLE,SYM_COLOR=SYM_COLOR,SYMSIZE=SYMSIZE,THICK=THICK,XRANGE=XRANGE,YRANGE=YRANGE,/GRID_NONE,MARGIN=MARGIN,XMARGIN=XMARGIN,YMARGIN=YMARGIN,STATS_CHARSIZE=STATS_CHARSIZE,STATS_POS=STATS_POS(COUNTER),$
        XTICKNAME=XTICKNAME,YTICKNAME=YTICKNAME,/ONE2ONE,ONE_COLOR=ONE_COLOR,ONE_THICK=ONE_THICK,ONE_LINESTYLE=ONE_LINESTYLE,BUFFER=BUFFER,CURRENT=CURRENT,LAYOUT=LAYOUT)
      LABEL = 'Depth='+NUM2STR(DEPTH,DECIMALS=0)+'!COPAL Model'
      TL = TEXT(XPOS(COUNTER),YPOS(COUNTER),LABEL,/NORMAL,COLOR=PALLIST[0],FONT_SIZE=14,/OVERPLOT)
      COUNTER = COUNTER + 1
    ENDFOR
    TT = TEXT(0.5,0.96,TITLE,/NORMAL,COLOR=PALLIST[0],FONT_SIZE=20,/OVERPLOT,ALIGNMENT=0.5)         
    PRINT, 'Writing ' + PNGFILE
    W.SAVE,PNGFILE,RESOLUTION=300
    W.CLOSE
    SKIP_SATSHIP_PLOT:   
STOP  
  ENDIF ; DO_SATSHIP_PP_PLOT

; *******************************************************
  IF DO_STATION_PLOT GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_STATION_PLOT GE 2

    SL = DELIMITER(/PATH)
    DIR_DATA  = FIX_PATH(!S.PROJECTS + 'RI_SOUND\DATA\') 
    DIR_PLOTS = FIX_PATH(!S.PROJECTS + 'RI_SOUND\PLOTS\')
    SUBAREA_FILE = DIR_DATA+'TS_SUBAREAS'+SL+'D3-LATLON_SUBAREA-RI_SOUND-PXY_120_120-MERL_PP-SEAWIFS-R2010-MLAC-CHLOR_A-OC4_CHLOR_A-PAN_PPD-OPAL_PPD-VGMB_PPD-VGPM2.SAVE'
    PAR_SUBAREA  = DIR_DATA+'TS_SUBAREAS'+SL+'D-LATLON_SUBAREA-RI_SOUND-PXY_120_120-MERL_PP-SEAWIFS-R2010-MLAC-PAR-.SAVE'
    INSITU_FILE  = DIR_DATA+'RI_BI_SOUND_CHL_PP_MERL_ANNUAL.csv' 
    PAR_FILE     = DIR_DATA+'RI_BI_SOUND_FROUIN_PAR.SAVE'
    IN_TAGS = ['PP_BI_SURF', 'PP_BI_HOM', 'PP_RI_SURF', 'PP_RI_HOM']
    BZ_TAGS = ['BZI_BI_SURF','BZI_BI_HOM','BZI_RI_SURF','BZI_RI_HOM']
    CH_TAGS = ['CHL_BI_SURF','CHL_BI_HOM','CHL_RI_SURF','CHL_RI_HOM']
    TITLES  = ['Block Island Surface','Block Island Homogenized', 'Rhode Island Surface', 'Rhode Island Homogenized']
        
    PNGFILE = !S.PROJECTS + 'RI_SOUND/PLOTS/TIMESERIES-RI_BI_PPD_PAR_STATIONS.png'
    IF FILE_TEST(PNGFILE) EQ 1 AND NOT KEYWORD_SET(OVERWRITE) AND GET_MTIME(SUBAREA_FILE) LT GET_MTIME(PNGFILE) AND GET_MTIME(INSITU_FILE) LT GET_MTIME(PNGFILE) THEN GOTO, SKIP_STATION_PLOT
    
    ; Create Frouin PAR data
    JULIANS = TIMEGEN(365,START=JULDAY(1,1,2010,0,0,0))    
    IF FILE_TEST(PAR_FILE) EQ 0 THEN BEGIN
      STR = REPLICATE(STRUCT_2MISSINGS(CREATE_STRUCT('DATE','','JULIAN',0.0,'BIS_PAR',0.0,'RIS_PAR',0.0)),N_ELEMENTS(JULIANS))
      STR.DATE = JD_2DATE(JULIANS)
      STR.JULIAN = JULIANS      
      FOR NTH = 0,N_ELEMENTS(JULIANS)-1 DO BEGIN
        AJULIAN = JULIANS[NTH]
        PRINT, JD_2DATE(AJULIAN)
        JULIAN= TIMEGEN(86400L,UNITS="SECONDS", START= AJULIAN )  ; Make up a julian and date for every second for this day
        DDOY = JD_2DOY(JULIAN)
        DHOURS = 24.0* (DDOY MOD 1)
        DOY    = FIX(DDOY)
        ZENSUN,DOY,DHOURS,41.216783,-71.66087,zenith,azimuth,solfac,sunrise=sunrise,sunset=sunset ; Get the solar zenith angle
        D_SUN_EARTH = SUN_EARTH_DIST(DOY)                                               ; Get the sun-earth distance
        WPAR=PAR_FROUIN(SOLZEN=ZENITH,VIS_KM=25,NM_RANGE=1, AEROSOL=0,DIST=d_sun_earth) ; Clear Sky, 400-700nm, Maritime Aerosol        
        uEI_M2_S = (i_par_watts_2emd(WPAR,/QW_FROUIN))/(60.*60.*24d)*1e6                ; Convert to uEim-2s-1     
        STR[NTH].BIS_PAR=TOTAL(uEI_M2_S)*1E-6 
      ENDFOR  ; FOR NTH = 0,N_ELEMENTS(JULIANS)-1 DO BEGIN      
      FOR NTH = 0,N_ELEMENTS(JULIANS)-1 DO BEGIN
        AJULIAN = JULIANS[NTH]
        PRINT, JD_2DATE(AJULIAN)
        JULIAN= TIMEGEN(86400L,UNITS="SECONDS", START= AJULIAN )  ; Make up a julian and date for every second for this day
        DDOY = JD_2DOY(JULIAN)
        DHOURS = 24.0* (DDOY MOD 1)
        DOY    = FIX(DDOY)
        ZENSUN,DOY,DHOURS,41.272683,-71.397083,zenith,azimuth,solfac,sunrise=sunrise,sunset=sunset ; Get the solar zenith angle
        D_SUN_EARTH = SUN_EARTH_DIST(DOY)                                               ; Get the sun-earth distance
        WPAR=PAR_FROUIN(SOLZEN=ZENITH,VIS_KM=25,NM_RANGE=1, AEROSOL=0,DIST=d_sun_earth) ; Clear Sky, 400-700nm, Maritime Aerosol
        uEI_M2_S = (i_par_watts_2emd(WPAR,/QW_FROUIN))/(60.*60.*24d)*1e6                ; Convert to uEim-2s-1     
        STR[NTH].RIS_PAR=TOTAL(uEI_M2_S)*1E-6       
      ENDFOR  ; FOR NTH = 0,N_ELEMENTS(JULIANS)-1 DO BEGIN
      SAVE, FILENAME=PAR_FILE,STR,/COMPRESS
    ENDIF ELSE STR = IDL_RESTORE(PAR_FILE)
    
    C14 = READALL(INSITU_FILE)
    SAT = READALL(SUBAREA_FILE)
    PSAT = READALL(PAR_SUBAREA)
    DP  = DATE_PARSE(PERIOD_2DATE(SAT.PERIOD))    
    SAT = SAT[WHERE(DP.YEAR EQ 2010)]
    BI  = SAT[WHERE(SAT.SUBAREA_NAME EQ 'BLOCK_ISLAND_SOUND')]
    RI  = SAT[WHERE(SAT.SUBAREA_NAME EQ 'RHODE_ISLAND_SOUND')]
    DPP  = DATE_PARSE(PERIOD_2DATE(PSAT.PERIOD))
    PSAT = PSAT[WHERE(DPP.YEAR EQ 2010)]
    PBI  = PSAT[WHERE(PSAT.SUBAREA_NAME EQ 'BLOCK_ISLAND_SOUND')]
    PRI  = PSAT[WHERE(PSAT.SUBAREA_NAME EQ 'RHODE_ISLAND_SOUND')]
        
    AX = DATE_AXIS([20100101,20101231],/MONTH)  
    YRANGE = [0,4]
    PRANGE = [0,80]
    MARGIN = [0.15,0.1,0.05,0.1]   
    YTITLE = UNITS('PRIMARY_PRODUCTION')
    YLOG = 0
    VG_COLOR = 'NAVY'
    BZ_COLOR = 'TURQUOISE'
    OP_COLOR = 'GOLD'
    IN_COLOR = 'ORANGE_RED'
    PT_COLOR = 'SEA_GREEN'
    CH_COLOR = 'SPRING_GREEN'
    PS_COLOR = 'VIOLET'
    PF_COLOR = 'MAROON'
    PK_COLOR = 'TAN'
    
    XPOS =  [.085,.585,.085,.585]
    YPOS =  [.925,.925,.425,.425]
    PXPOS = [.4, .9, .4, .9]
    PYPOS = [.925,.925,.425,.425]
    ;STATS_POS=LIST([.1,.85],[.6,.85],[.1,.35],[.6,.35])
    
    W = WINDOW(DIMENSIONS=[1536,1024])
    FOR NTH = 0, N_ELEMENTS(IN_TAGS)-1 DO BEGIN
      IF STRMID(IN_TAGS[NTH],3,2) EQ 'BI' THEN SDATA = BI  ELSE SDATA = RI
      IF STRMID(IN_TAGS[NTH],3,2) EQ 'BI' THEN PDATA = PBI ELSE PDATA = PRI        
      DATES  = JD_ADD(PERIOD_2JD(SDATA.PERIOD),1,/DAY) 
      PDATES = PERIOD_2JD(PDATA.PERIOD) 
    
      POS = WHERE(TAG_NAMES(C14) EQ IN_TAGS[NTH])
      BOS = WHERE(TAG_NAMES(C14) EQ BZ_TAGS[NTH])
      COS = WHERE(TAG_NAMES(C14) EQ CH_TAGS[NTH])
      COK  = WHERE(C14.TYPE EQ 'C14')
      SITU = FLOAT(C14.(POS))/1000
      BZI = FLOAT(C14.(BOS))/1000
      CHL = FLOAT(C14(COK).(COS))
      PTS  = FLOAT(C14(COK).(POS))/1000    
      OPAL = SDATA.MEAN_PPD_OPAL
      VGPM2 = SDATA.MEAN_PPD_VGPM2
      SATPAR = PDATA.MEAN_PAR      
      INPAR = FLOAT(C14.PAR)
      IF STRMID(IN_TAGS[NTH],3,2) EQ 'BI' THEN FRPAR = STR.BIS_PAR ELSE FRPAR = STR.RIS_PAR
      
      LAYOUT = [2,2,NTH+1]
      P = PLOT(AX.JD,YRANGE,YRANGE=YRANGE,YLOG=YLOG,YTITLE=YTITLE,TITLE=TITLES[NTH],AXIS_STYLE=1,FONT_SIZE=14,MARGIN=MARGIN,XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,/NODATA,BUFFER=BUFFER,LAYOUT=LAYOUT,/CURRENT)                    
      XTICKV = P.XTICKVALUES & OK = WHERE(JD_2DAY(XTICKV) EQ '01',COUNT)
      ;FOR G=1,COUNT-1 DO GR = PLOT([XTICKV(OK(G)),XTICKV(OK(G))],RANGE,COLOR='GREY',/OVERPLOT,XRANGE=AX.JD,YRANGE=RANGE,/YLOG)              
      BZ = PLOT(DATE_2JD(C14.DATE),BZI,XRANGE=AX.JD,YRANGE=YRANGE,YLOG=YLOG,AXIS_STYLE=1,/OVERPLOT,COLOR=BZ_COLOR,SYMBOL='CIRCLE',SYM_SIZE=0.2,THICK=3,/SYM_FILLED,DIMENSIONS=DIMENSIONS)
      IN = PLOT(DATE_2JD(C14.DATE),SITU,XRANGE=AX.JD,YRANGE=YRANGE,YLOG=YLOG,AXIS_STYLE=1,/OVERPLOT,COLOR=IN_COLOR,SYMBOL='CIRCLE',SYM_SIZE=0.2,THICK=3,/SYM_FILLED,DIMENSIONS=DIMENSIONS)
      VG = PLOT(DATES,VGPM2,XRANGE=AX.JD,YRANGE=YRANGE,YLOG=YLOG,AXIS_STYLE=1,/OVERPLOT,COLOR=VG_COLOR,SYMBOL='CIRCLE',SYM_SIZE=0.2,THICK=3,/SYM_FILLED,DIMENSIONS=DIMENSIONS)      
      OP = PLOT(DATES,OPAL,XRANGE=AX.JD,YRANGE=YRANGE,YLOG=YLOG,AXIS_STYLE=1,/OVERPLOT,COLOR=OP_COLOR,SYMBOL='CIRCLE',SYM_SIZE=0.2,THICK=3,/SYM_FILLED,DIMENSIONS=DIMENSIONS)      
      PT = PLOT(DATE_2JD(C14(COK).DATE),PTS,XRANGE=AX.JD,YRANGE=YRANGE,YLOG=YLOG,AXIS_STYLE=1,/OVERPLOT,COLOR=PT_COLOR,SYMBOL='CIRCLE',SYM_SIZE=1.5,LINESTYLE=6,/SYM_FILLED,DIMENSIONS=DIMENSIONS)
      A3 = AXIS('X',TARGET=P,LOCATION=[MIN(AX.JD),MAX(YRANGE),0],MAJOR=0,MINOR=0)
            
      P2 = PLOT(DATE_2JD(C14.DATE),INPAR, AXIS_STYLE=0,MARGIN=MARGIN,XSTYLE=1,XRANGE=XRANGE,YRANGE=PRANGE,XMINOR=0,/CURRENT,COLOR=PK_COLOR,LINESTYLE=0,THICK=1,LAYOUT=LAYOUT,DIMENSIONS=DIMENSIONS)
      P3 = PLOT(PDATES,            SATPAR,AXIS_STYLE=0,MARGIN=MARGIN,XSTYLE=1,XRANGE=XRANGE,YRANGE=PRANGE,XMINOR=0,/CURRENT,COLOR=PS_COLOR,LINESTYLE=0,THICK=3,LAYOUT=LAYOUT,DIMENSIONS=DIMENSIONS)
      P4 = PLOT(DATE_2JD(STR.DATE),FRPAR, AXIS_STYLE=0,MARGIN=MARGIN,XSTYLE=1,XRANGE=XRANGE,YRANGE=PRANGE,XMINOR=0,/CURRENT,COLOR=PF_COLOR,LINESTYLE=0,THICK=2,LAYOUT=LAYOUT,DIMENSIONS=DIMENSIONS)      
      A2 = AXIS('Y',TARGET=P2,LOCATION=[MAX(AX.JD),0,0],TEXTPOS=1,TICKDIR=1,TITLE='PAR ' + UNITS('PAR',/NO_NAME),TICKVALUES=PTICKS)
            
 ;     CT = PLOT(DATE_2JD(C14(COK).DATE),CHL,XRANGE=AX.JD,YRANGE=YRANGE,YLOG=YLOG,/OVERPLOT,COLOR=CH_COLOR,SYMBOL='STAR',SYM_SIZE=1.5,LINESTYLE=6,/SYM_FILLED,DIMENSIONS=DIMENSIONS)
      T1 = TEXT(XPOS[NTH],YPOS[NTH],     'VGPM-Eppley (Mean = '  +NUM2STR(MEAN(VGPM2[WHERE(VGPM2 NE MISSINGS(0.0))]),DECIMALS=2)+')',COLOR=VG_COLOR,FONT_SIZE=12,/NORMAL,/CURRENT)          
      T2 = TEXT(XPOS[NTH],YPOS[NTH]-0.02,'OPAL (Mean = '         +NUM2STR(MEAN(OPAL [WHERE(OPAL  NE MISSINGS(0.0))]),DECIMALS=2)+')',COLOR=OP_COLOR,FONT_SIZE=12,/NORMAL,/CURRENT)
      T3 = TEXT(XPOS[NTH],YPOS[NTH]-0.04,'C14 (Mean = '          +NUM2STR(MEAN(PTS),                                 DECIMALS=2)+')',COLOR=PT_COLOR,FONT_SIZE=12,/NORMAL,/CURRENT)
      T4 = TEXT(XPOS[NTH],YPOS[NTH]-0.06,'C14-Modeled (Mean = '  +NUM2STR(MEAN(SITU),                                DECIMALS=2)+')',COLOR=IN_COLOR,FONT_SIZE=12,/NORMAL,/CURRENT)
      T5 = TEXT(XPOS[NTH],YPOS[NTH]-0.08,'BZI (Mean = '          +NUM2STR(MEAN(BZI),                                 DECIMALS=2)+')',COLOR=BZ_COLOR,FONT_SIZE=12,/NORMAL,/CURRENT)
      
      T6 = TEXT(PXPOS[NTH],PYPOS[NTH]-0.00,'Kingston PAR',COLOR=PK_COLOR,FONT_SIZE=12,/NORMAL,/CURRENT)
      T7 = TEXT(PXPOS[NTH],PYPOS[NTH]-0.02,'SeaWiFS PAR', COLOR=PS_COLOR,FONT_SIZE=12,/NORMAL,/CURRENT)
      T8 = TEXT(PXPOS[NTH],PYPOS[NTH]-0.04,'Frouin PAR',  COLOR=PF_COLOR,FONT_SIZE=12,/NORMAL,/CURRENT)
   
    ENDFOR
    PRINT, 'Writing ' + PNGFILE
    W.SAVE,PNGFILE,RESOLUTION=300
    W.CLOSE    
    SKIP_STATION_PLOT:
    
        
  ENDIF ; DO_STATION_PLOT  

; *******************************************************
  IF DO_MAKE_SUBAREA_MAP GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_MAKE_SUBAREA_MAP GE 2

    POLYGONS = ['RI_SOUND','BI_SOUND']

    DIR_PLOTS  = !S.PROJECTS + 'RI_SOUND' + SL + 'PLOTS' + SL
    DIR_IMAGES = !S.SUBAREAS
    
    MAP = 'RI_SOUND'
    
    LANDMASK = READ_LANDMASK(MAP=MAP,/STRUCT)
    IMG      = READ_LANDMASK(MAP=MAP)
    ZWIN, IMG
    OLDDEVICE= !D.NAME
    MAP_RI_SOUND
    PAL_36,R,G,B

; Georges Bank Polygons
    RI_LON=[-71.48, -71.20, -71.20, -71.48]
    RI_LAT=[ 41.36,  41.46,  40.89,  40.89]
    IM = MAP_DEG2IMAGE(IMG,RI_LON,RI_LAT, X=x, Y=y,AROUND=0) & POLYFILL, X, Y, COLOR=5, /DEVICE
    
    BI_LON=[-71.86, -71.48, -71.48, -71.86]
    BI_LAT=[41.31,  41.36,  41.13,  41.07]
    IM = MAP_DEG2IMAGE(IMG,BI_LON,BI_LAT, X=x, Y=y,AROUND=0) & POLYFILL, X, Y, COLOR=6, /DEVICE
    
    IM_SUBS = tvrd()    
    
    ZWIN

    OK_IMAGE = WHERE(IMG NE 0)
    IM_SUBS(OK_IMAGE) = IMG(OK_IMAGE)
    MASK = IM_SUBS
    IMG(LANDMASK.OCEAN) = 36
    OK = WHERE(IM_SUBS NE 0)
    IMG[OK] = IM_SUBS[OK]
    
    IMG(LANDMASK.LAND)  = 32
    IMG(LANDMASK.COAST) = 0

    OK = WHERE(MASK NE 0)
    IM_SUBS[OK] = MASK[OK]

    EDITFILE = DIR_IMAGES + 'MASK_SUBAREA-RI_SOUND-PXY_240_240-RI_BI_POLYGONS-TO_BE_EDITED.PNG' & WRITE_PNG, EDITFILE, IM_SUBS, R,G,B
    MASKFILE = DIR_IMAGES + 'MASK_SUBAREA-RI_SOUND-PXY_240_240-RI_BI_POLYGONS.PNG'
    PNGFILE  = DIR_IMAGES + 'MASK_SUBAREA-RI_SOUND-PXY_240_240-RI_BI_POLYGONS-DISPLAY.PNG'      & WRITE_PNG, PNGFILE, IMG, R,G,B
    PNGFILE  = DIR_IMAGES + 'MASK_SUBAREA-RI_SOUND-PXY_720_720-RI_BI_POLYGONS-DISPLAY.PNG'      & WRITE_PNG, PNGFILE, CONGRID(IMG,720,720), R,G,B
    CSVFILE  = DIR_IMAGES + 'MASK_SUBAREA-RI_SOUND-PXY_240_240-RI_BI_POLYGONS.CSV'
    SAVEFILE = DIR_IMAGES + 'MASK_SUBAREA-RI_SOUND-PXY_240_240-RI_BI_POLYGONS.SAVE'


    STRUCT=CREATE_STRUCT('SUBAREA_CODE','','SUBAREA_NAME','','NICKNAME','')
    STRUCT=REPLICATE(STRUCT,5)
    STRUCT[0].SUBAREA_CODE =0  & STRUCT[0].SUBAREA_NAME = 'OCEAN'     & STRUCT[0].NICKNAME='OCEAN'
    STRUCT[1].SUBAREA_CODE =1  & STRUCT[1].SUBAREA_NAME = 'COAST'     & STRUCT[1].NICKNAME='COAST'
    STRUCT(2).SUBAREA_CODE =2  & STRUCT(2).SUBAREA_NAME = 'LAND'      & STRUCT(2).NICKNAME='LAND'
    STRUCT(3).SUBAREA_CODE =5  & STRUCT(3).SUBAREA_NAME = 'RI_SOUND'  & STRUCT(3).NICKNAME='RIS'
    STRUCT(4).SUBAREA_CODE =6  & STRUCT(4).SUBAREA_NAME = 'BI_SOUND'  & STRUCT(4).NICKNAME='BIS'
    
    INFILE=MASKFILE
    NOTES='MASK_SUBAREA'

;     ===> Write the Struct to a csv
    STRUCT_2CSV,CSVFILE,STRUCT
    OK=WHERE(STRUCT.SUBAREA_CODE NE MISSINGS(STRUCT.SUBAREA_CODE))
    SUBAREA_CODE= STRUCT[OK].SUBAREA_CODE
    SUBAREA_NAME= STRUCT[OK].SUBAREA_NAME
    DATA = READ_PNG(MASKFILE) 

    STRUCT_SD_WRITE,SAVEFILE, IMAGE=DATA, PROD='SUBAREA',  MAP=MAP, $
      MISSING_CODE=missing_code, MISSING_NAME=missing_name, $
      SUBAREA_CODE=SUBAREA_CODE,SUBAREA_NAME=subarea_name,$
      SCALING='LINEAR',  INTERCEPT=0.0,  SLOPE=1.0,TRANSFORMATION=TRANSFORMATION,$
      DATA_UNITS='',PERIOD=PERIOD, $
      INFILE=INFILE,$
      NOTES='MASK_SUBAREA', OVERWRITE=OVERWRITE, ERROR=ERROR
  ENDIF ; DO_MAKE_SUBAREA_MAP

; *******************************************************
  IF DO_TS_SUBAREAS GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_TS_SUBAREAS GE 2
   
    SL = DELIMITER(/PATH)
    MAP = 'RI_SOUND'
    DIR_SUBAREAS = FIX_PATH(!S.PROJECTS + 'RI_SOUND/DATA/TS_SUBAREAS') 
    SUBAREA_FILE = FIX_PATH(!S.SUBAREAS + 'MASK_SUBAREA-RI_SOUND-PXY_240_240-RI_BI_POLYGONS.SAVE')
    SUBAREA_CODES = [5,6]
    PRODS      = ['CHLOR_A-PAN',    'CHLOR_A-PAN', 'SST'];,'PAR','PPD-OPAL','PPD-VGMB','PPD-VGPM2']
    DATASETS   = ['OC-SEAWIFS-MLAC','OC-MODIS-LAC','SST-AVHRR-4'];,'OC-SEAWIFS-MLAC','PP-SEAPAN_AVHRR-MLAC_4','PP-SEAPAN_AVHRR-MLAC_4','PP-SEAPAN_AVHRR-MLAC_4']
    DATA_TYPE  = ['STATS','TS_IMAGES']
    DATE_RANGE = ['19970101','20121231']
    
    FOR D=0, N_ELEMENTS(DATASETS)-1 DO BEGIN
      FOR S=0, N_ELEMENTS(DATA_TYPE)-1 DO BEGIN
        IF DATA_TYPE(S) EQ 'TS_IMAGES' THEN PERIODS = 'D' ELSE PERIODS  = LIST(['D'],['D3'],['DOY'],['W'],['MONTH','M'],['ANNUAL','A'])
        FOR P=0, N_ELEMENTS(PERIODS)-1 DO BEGIN
          PERIOD = PERIODS(P)
          IF DATA_TYPE(S) EQ 'TS_IMAGES' THEN TARGET = SL + 'SAVE' + SL + [PERIOD] + '_*' + 'INTERP' ELSE TARGET = SL + [PERIOD] + '_*' + 'MEAN'
          FILES = FILE_SEARCH(FIX_PATH(!S.DATASETS + DATASETS(D) + SL + MAP + SL + DATA_TYPE(S) + SL + PRODS(D) + TARGET +'*.SAVE'))
          FILES = DATE_SELECT(FILES,DATE_RANGE[0],DATE_RANGE[1])
          IF N_ELEMENTS(FILES) EQ 0 THEN CONTINUE
          IF DATA_TYPE(S) EQ 'TS_IMAGES' THEN DIR_OUT = DIR_SUBAREAS + '-INTERP' + SL ELSE DIR_OUT = DIR_SUBAREAS + '-STATS' + SL & DIR_TEST,DIR_OUT
          TS_SUBAREAS, FILES, SUBAREA_FILE=SUBAREA_FILE, SUBAREA_CODES=SUBAREA_CODES,DIR_OUT=DIR_OUT,/CSV,OVERWRITE=overwrite    
        ENDFOR
;        SUBAREA_FILE = FIX_PATH(!S.IMAGES + 'LATLON_SUBAREA-RI_SOUND-PXY_120_120-MERL_PP.csv')
;        TS_SUBAREAS, FILES, SUBAREA_FILE=SUBAREA_FILE, SUBAREA_CODES=SUBAREA_CODES,DIR_OUT=DIR_SUBAREAS,/CSV,OVERWRITE=overwrite
;        TS_SUBAREAS, PFILES, SUBAREA_FILE=SUBAREA_FILE, SUBAREA_CODES=SUBAREA_CODES,DIR_OUT=DIR_SUBAREAS,/CSV,OVERWRITE=overwrite
      ENDFOR
    ENDFOR
  ENDIF

; *******************************************************
  IF DO_SUBAREAS_PLOT GE 1 THEN BEGIN        
; *******************************************************  
    OVERWRITE = DO_SUBAREAS_PLOT GE 2
    
    BUFFER = 0
    DO_YEARLY  = 0
    DO_MONTHLY = 0
    DO_GRIDDED = 1
    
    FILE = FIX_PATH(!S.PROJECTS+'RI_SOUND\DATA\TS_SUBAREAS\D3-MASK_SUBAREA-RI_SOUND-PXY_120_120-RI_BI_POLYGONS-SEAWIFS-R2010-MLAC-CHLOR_A-OC4_CHLOR_A-PAN_PPD-OPAL_PPD-VGMB_PPD-VGPM2.SAVE') 
    DATA = IDL_RESTORE(FIX_PATH(FILE))
    NAMES = ['BI SOUND','RI SOUND','OFFSHORE']    
    SUBAREAS = ['BI_SOUND','RI_SOUND','OCEAN']
    COLORS = ['NAVY','ORANGE_RED','CYAN']
    DATES = JD_2DATE(JD_ADD(PERIOD_2JD(DATA.PERIOD),1,/DAY))
    DP   = DATE_PARSE(DATES)
    BSET = WHERE_SETS(DP.YEAR)
    
    PRODS = ['CHLOR_A-OC4','CHLOR_A-PAN','PPD-VGPM2','PPD-VGMB','PPD-OPAL']
    TITLES = ['Chlorophyll (OC4)', 'Chlorophyll (Pan)', 'Primary Production (VGPM-Eppley)', 'Primary Production (VGPM-Mass Bay)', 'Primary Production (OPAL)']
    CRANGE = [0.1,20]
    PRANGE = [0.1,3]
    
    IF DO_YEARLY EQ 1 THEN BEGIN
       AX = DATE_AXIS(['20200101','202012310'],/FYEAR)
      FOR PTH=0,N_ELEMENTS(PRODS)-1 DO BEGIN
        APROD = PRODS(PTH)
        VPROD = VALIDS('PRODS',APROD)
        VALG  = VALIDS('ALGS',APROD)
        IF VPROD EQ 'CHLOR_A' THEN TITLE = UNITS('CHL') ELSE TITLE = UNITS('PPD')
        IF VPROD EQ 'CHLOR_A' THEN RANGE = CRANGE       ELSE RANGE = PRANGE
        TAGS = TAG_NAMES(DATA) 
        POS  = WHERE(TAGS EQ 'MEAN_'+VPROD+'_'+VALG)       
        MEANS = []
        FOR S=0, N_ELEMENTS(SUBAREAS)-1 DO MEANS = [MEANS,EXP(MEAN(ALOG(DATA[WHERE(DATA.SUBAREA_NAME EQ SUBAREAS(S) AND DATA.(POS) NE MISSINGS(0.0))].(POS))))]
        PNGFILE = FIX_PATH(!S.PROJECTS + 'RI_SOUND/PLOTS/TS_SUBAREAS-RI_BI_POLYGONS-SEAWIFS-'+APROD+'-YEARLY_TIMESERIES.png')
        IF FILE_TEST(PNGFILE) EQ 1 AND NOT KEYWORD_SET(OVERWRITE) THEN CONTINUE
        W = WINDOW(DIMENSIONS=[1024,1536],BUFFER=BUFFER)
        T0 = TEXT(0.1, 0.935,TITLES(PTH),FONT_SIZE=12,/NORMA,/CURRENT) 
        T1 = TEXT(0.79,0.975,NAMES[0]+' (Mean = '+NUM2STR(MEANS[0],DECIMALS=2)+')',COLOR=COLORS[0],FONT_SIZE=12,/NORMAL,/CURRENT)                         
        T2 = TEXT(0.79,0.955,NAMES[1]+' (Mean = '+NUM2STR(MEANS[1],DECIMALS=2)+')',COLOR=COLORS[1],FONT_SIZE=12,/NORMAL,/CURRENT)
        T3 = TEXT(0.79,0.935,NAMES(2)+' (Mean = '+NUM2STR(MEANS(2),DECIMALS=2)+')',COLOR=COLORS(2),FONT_SIZE=12,/NORMAL,/CURRENT)
        FOR C=0, N_ELEMENTS(BSET)-1 DO BEGIN
          IF BSET(C).VALUE EQ '1997' THEN CONTINUE
          LAYOUT = [1,15,C+1]
          IF C MOD 2 EQ 1 THEN YTITLE = ' ' ELSE YTITLE = TITLE
          IF C NE N_ELEMENTS(BSET)-1 THEN XTICKNAME = REPLICATE(' ',N_ELEMENTS(AX.TICKNAME)) ELSE XTICKNAME = AX.TICKNAME 
          SUBS = WHERE_SETS_SUBS(BSET(C))
          SET  = DATA(SUBS)
          SET  = SET[SORT(PERIOD_2JD(SET.PERIOD))]
          P = PLOT(AX.JD,RANGE,YRANGE=RANGE,YTITLE=YTITLE,FONT_SIZE=14,/YLOG,MARGIN=[0.1,0.01,0.02,0.05],XMAJOR=AX.TICKS,XTICKNAME=XTICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,/NODATA,BUFFER=BUFFER,LAYOUT=LAYOUT,/CURRENT)                    
          XTICKV = P.XTICKVALUES & OK = WHERE(JD_2DAY(XTICKV) EQ '01',COUNT)
          FOR G=1,COUNT-1 DO GR = PLOT([XTICKV(OK(G)),XTICKV(OK(G))],RANGE,COLOR='GREY',/OVERPLOT,XRANGE=AX.JD,YRANGE=RANGE,/YLOG)        
          FOR S=0, N_ELEMENTS(SUBAREAS)-1 DO BEGIN
            OK = WHERE(SET.SUBAREA_NAME EQ SUBAREAS(S) AND SET.(POS) NE MISSINGS(0.0))
            SETDATE = YDOY_2JD('2020',JD_2DOY(JD_ADD(PERIOD_2JD(SET[OK].PERIOD),1,/DAY)))      
            PR = PLOT(SETDATE,SET[OK].(POS),XRANGE=AX.JD,YRANGE=RANGE,/YLOG,/OVERPLOT,COLOR=COLORS(S),SYMBOL='CIRCLE',SYM_SIZE=0.5,/SYM_FILLED,DIMENSIONS=DIMENSIONS)          
          ENDFOR          
          TY = TEXT(0.11,0.87-((C-1)*.067),BSET(C).VALUE,FONT_SIZE=12,/NORMAL,TARGET=P)
        ENDFOR        
        PRINT, 'Writing ' + PNGFILE
        P.SAVE,PNGFILE,RESOLUTION=300
        P.CLOSE  
      ENDFOR  
    ENDIF
    IF DO_MONTHLY EQ 1 THEN BEGIN
      AX = DATE_AXIS(['19970101','201012310'],/MONTH)
      BUFFER = 0
      WPRODS = ['CHLOR_A','PPD']
      FOR W=0, N_ELEMENTS(WPRODS)-1 DO BEGIN
        IF WPRODS(W) EQ 'CHLOR_A' THEN PRODS = ['CHLOR_A-OC4','CHLOR_A-PAN'] ELSE PRODS = ['PPD-VGPM2','PPD-VGMB','PPD-OPAL']
        IF WPRODS(W) EQ 'CHLOR_A' THEN TITLE = UNITS('CHLOROPHYLL')          ELSE TITLE = UNITS('PRIMARY_PRODUCTION')
        IF WPRODS(W) EQ 'CHLOR_A' THEN RANGE = [0.1,10]                      ELSE RANGE = [0.1,5.0] 
        
        PNGFILE = !S.PROJECTS + 'RI_SOUND/PLOTS/TS_SUBAREAS-RI_BI_POLYGONS-SEAWIFS-'+WPRODS(W)+'-MONTHLY_TIMESERIES.png'
        IF FILE_TEST(PNGFILE) EQ 1 AND NOT KEYWORD_SET(OVERWRITE) THEN CONTINUE
        W = WINDOW(DIMENSIONS=[1024,1224],BUFFER=BUFFER)
        
        FOR S=0, N_ELEMENTS(SUBAREAS)-1 DO BEGIN          
          LAYOUT = [1,3,S+1]
          YTICKS = [0.1,0.3,1.0,3.0]
          P = PLOT(AX.JD,RANGE,YRANGE=RANGE,YTITLE=TITLE,FONT_SIZE=14,/YLOG,MARGIN=[0.1,0.15,0.05,0.03],XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,YTICKVALUES=YTICKS,/NODATA,BUFFER=BUFFER,LAYOUT=LAYOUT,/CURRENT)
          XTICKV = P.XTICKVALUES & OK = WHERE(JD_2MONTH(XTICKV) EQ '01',COUNT)
          FOR G=1,COUNT-1 DO GR = PLOT([XTICKV(OK(G)),XTICKV(OK(G))],RANGE,COLOR='GREY',/OVERPLOT,XRANGE=AX.JD,YRANGE=RANGE,/YLOG)          
          FOR Y=1, N_ELEMENTS(YTICKS)-1 DO GR = PLOT(AX.JD,[YTICKS(Y),YTICKS(Y)],COLOR='GREY',/OVERPLOT,XRANGE=AX.JD,YRANGE=RANGE,/YLOG)
          T0 = TEXT(0.11, 0.97-((S)*.335),NAMES(S),FONT_SIZE=14,/NORMAL,/CURRENT)       
          FOR PTH=0, N_ELEMENTS(PRODS)-1 DO BEGIN
            APROD = PRODS(PTH)
            VPROD = VALIDS('PRODS',APROD)
            VALG  = VALIDS('ALGS',APROD)           
            TAGS = TAG_NAMES(DATA) 
            POS  = WHERE(TAGS EQ 'MEAN_'+VPROD+'_'+VALG)  
            SDATA = DATA[WHERE(DATA.SUBAREA_NAME EQ SUBAREAS(S) AND DATA.(POS) NE MISSINGS(0.0))]     
            MN = EXP(MEAN(ALOG(SDATA.(POS))))
            SETDATE = JD_ADD(PERIOD_2JD(SDATA.PERIOD),1,/DAY)      
            PR = PLOT(SETDATE,SDATA.(POS),XRANGE=AX.JD,YRANGE=RANGE,/YLOG,/OVERPLOT,COLOR=COLORS(PTH),SYMBOL='CIRCLE',SYM_SIZE=0.2,THICK=4,/SYM_FILLED,DIMENSIONS=DIMENSIONS)
            T1 = TEXT(0.11,0.765-((PTH)*.02)-((S)*.335),VALG+' (Mean = '+NUM2STR(MN,DECIMALS=2)+')',COLOR=COLORS(PTH),FONT_SIZE=12,/NORMAL,/CURRENT)            
          ENDFOR          
        ENDFOR
        PRINT, 'Writing ' + PNGFILE
        P.SAVE,PNGFILE,RESOLUTION=300
   ;     P.CLOSE  
      ENDFOR    
    ENDIF
    
    IF DO_GRIDDED EQ 1 THEN BEGIN
      DATE_RANGE = ['19980101','20101231']
      MINDATE = '20200101000000'
      MAXDATE = '20210101000000'
      AX = DATE_AXIS([MINDATE,MAXDATE], /FYEAR)
      X2TICKNAME = REPLICATE(' ',N_ELEMENTS(AX.TICKNAME))    
      YTICKNAMES=[' ',' ',' ']
      CHARSIZE = 14.0
      CCHARSIZE = 1.25
      MARGIN = [0.125,0.0,0.125,0.0]  
      PAL = 'PAL_SW3'
      N_PLOTS = 49
      YDIM = 920
      LOG=1
      PRODS = ['CHLOR_A-PAN','PPD-VGPM2']
      PROD_TAGS = ['MEAN_CHLOR_A_PAN','MEAN_PPD_VGPM2']
      SPECIAL_SCALES = ['NARROW','MID']
      TAGS = TAG_NAMES(DATA)
      FOR R=0, N_ELEMENTS(PRODS)-1 DO BEGIN
        APROD = VALIDS('PRODS',PRODS(R))
        AALG  = VALIDS('ALGS',PRODS(R))
        CPROD = PROD_TAGS(R)
        IF APROD EQ 'CHLOR_A' THEN YTITLE = UNITS('CHLOROPHYLL')         ELSE YTITLE = UNITS('PRIMARY_PRODUCTION')
        IF APROD EQ 'CHLOR_A' THEN VRANGE = [0.1,10]                     ELSE VRANGE = [0.1,5.0] 
        PNGFILE = !S.PROJECTS + 'RI_SOUND/PLOTS/TS_SUBAREAS-RI_BI_POLYGONS-SEAWIFS-'+PRODS(R)+'-GRIDDED_TIMESERIES.png'
        EPSFILE = !S.PROJECTS + 'RI_SOUND/PLOTS/TS_SUBAREAS-RI_BI_POLYGONS-SEAWIFS-'+PRODS(R)+'-GRIDDED_TIMESERIES.eps'
        TIFFILE = !S.PROJECTS + 'RI_SOUND/PLOTS/TS_SUBAREAS-RI_BI_POLYGONS-SEAWIFS-'+PRODS(R)+'-GRIDDED_TIMESERIES.tif'
        IF FILE_TEST(EPSFILE) EQ 1 AND FILE_TEST(PNGFILE) EQ 1 AND FILE_TEST(TIFFILE) EQ 1 AND NOT KEYWORD_SET(OVERWRITE) AND GET_MTIME(FILE) LT GET_MTIME(EPSFILE) AND GET_MTIME(FILE) LT GET_MTIME(PNGFILE) AND GET_MTIME(FILE) LT GET_MTIME(TIFFILE) THEN GOTO, SKIP_SATSHIP_SINGLE_CHL
    
        CODES  = ['6','5','0']
        TITLES = ['Block Island Sound','Rhode Island Sound','Offshore']
        W = WINDOW(DIMENSIONS=[1000,YDIM],LAYOUT=[1,N_PLOTS,1],MARGIN=MARGIN)                              
        COUNTER = 3
        FOR CTH = 0L, N_ELEMENTS(CODES)-1 DO BEGIN
          OK  = WHERE(DATA.SUBAREA_CODE EQ CODES(CTH) AND DP.YEAR GE '1998' AND DP.YEAR LE '2010')
          T   = DATA[OK]
          TDP = DP[OK]
          YSET = WHERE_SETS(TDP.YEAR)
          FOR YTH = 0L, N_ELEMENTS(YSET)-1 DO BEGIN
            IF YSET(YTH).VALUE GE 2008 THEN MAKE_MISSING = 1 ELSE MAKE_MISSING=0
            SUBS = WHERE_SETS_SUBS(YSET(YTH))
            YRSET = T(SUBS)
            YDP = TDP(SUBS)
            DATE = YDOY_2DATE('2020',YDP.IDOY)
            CDATA = YRSET.(WHERE(TAGS EQ CPROD)) 
            DEPTH = REPLICATE(0.5,N_ELEMENTS(CDATA))
            LAYOUT=[1,N_PLOTS,COUNTER]            
            OK = WHERE(CDATA NE MISSINGS(0.0)) 
            XTICKNAME = AX.TICKNAME
            IF YTH EQ N_ELEMENTS(YSET)-1 THEN NOXDATES = 0 ELSE NOXDATES = 1
            IF YTH EQ 0 THEN TITLE = TITLES(CTH) ELSE TITLE = ' '
            TIME_DEPTH_GRID_NG,DATE[OK],DEPTH[OK],CDATA[OK],BLANK_WINDOW=18,MAKE_MISSING=MAKE_MISSING,MISSING_COLOR=254,LOG=LOG,DEPTH_INTERVAL=0.5,MDATE=[MINDATE,MAXDATE],$
              MDEPTH=[1,0],VRANGE=VRANGE,YRANGE=[0,25],CUTOFF=[1,0],YMAJOR=0,YMINOR=0,XMAJOR=AX.TICKS,XMINOR=0,XTICKVALUES=AX.TICKV,XTICKNAME=XTICKNAME,PAL=PAL,$
              /ADD_YEAR_TITLE,/NODEPTH,DIMENSIONS=[365,10],NOXDATES=NOXDATES,AX_INTERVAL='MONTH',AY_GRID='YEAR',/FYEAR,YTITLE=YSET(YTH).VALUE+' ',$
              TITLE=TITLE,MARGIN=MARGIN,FONT_SIZE=CHARSIZE,/INTERPOLATE,PROD=APROD, SPECIAL_SCALE=SPECIAL_SCALES(R),LAYOUT=LAYOUT,TARGET=TARGET
            COUNTER = COUNTER+1
          ENDFOR ; FOR YTH = 0L, N_ELEMENTS(YSET)-1 DO BEGIN   
          COUNTER = COUNTER+3   
        ENDFOR ; FOR CTH = 0L, N_ELEMENTS(SCODES)-1 DO BEGIN   
        BAR = COLOR_BAR_SCALE_NG(PROD=APROD,SPECIAL_SCALE=SPECIAL_SCALES(R),PX=885,PY=880,CHARSIZE=11,BACKGROUND=BACKGROUND,XDIM=30,YDIM=810,PAL='PAL_SW3',TITLE=YTITLE,/VERTICAL,/RIGHT)      
        PRINT, 'Writing ' + PNGFILE
        W.SAVE,PNGFILE,RESOLUTION=1000        
        W.SAVE,EPSFILE,RESOLUTION=1000
        W.SAVE,TIFFILE,RESOLUTION=1000
      STOP
        W.CLOSE
      ENDFOR ; FOR R=0L, N_ELEMENTS(PRODS)-1 DO BEGIN         
    ENDIF ; DO_GRIDDED
  
  ENDIF ; DO_SUBAREAS_PLOT

; *******************************************************
  IF DO_MONTHLY_COMPOSITES GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_MONTHLY_COMPOSITES GE 2

    BUFFER = 1
    VERBOSE = 1

    DIR_PROJECTS = FIX_PATH(!S.PROJECTS + 'RI_SOUND\PLOTS\')
    DIR_PLOTS = DIR_PROJECTS + 'COMPOSITES' + SL
    MAP_IN  = ['RI_SOUND']
    MAP_OUT = ['RI_SOUND']

    DATASETS = ['OC-SEAWIFS-MLAC','OC-MODIS-LAC','SST-AVHRR-4']
    PRODS    = ['CHLOR_A-PAN',    'CHLOR_A-PAN',    'SST']
    PROD_LABEL = ['SEAWIFS_CHL_PAN','MODIS_CHL_PAN','AVHRR_SST']
    SBAR_TITLE = UNITS(['CHLOROPHYLL','CHLOROPHYLL','TEMP'])
    STAT_SS = ['.1_10','.1_10','']
    STAT_UP = ['CHLOR_A','CHLOR_A','SST']
    ABAR_TITLE = ['Chlorophyll Anomaly (ratio)','Chlorophyll Anomaly (ratio)','Temperature Anomaly ' + UNITS('SST',/NO_NAME)]
    ANOM_SS = ['4','4','5']
    ANOM_UP = ['RATIO', 'RATIO', 'DIF']
    
    DATA_TYPE = ['STATS','ANOMS']
    PERIOD_TYPE = ['M_','M_*MONTH_*']
    PAL = ['PAL_SW3','PAL_ANOM_GREY']
    DATE_RANGE = ['19970101','20121231']

    FOR M=0, N_ELEMENTS(MAP_OUT)-1 DO BEGIN
      FOR D=0, N_ELEMENTS(DATASETS)-1 DO BEGIN
        DATASET = DATASETS(D)
        FOR T=0, N_ELEMENTS(DATA_TYPE)-1 DO BEGIN
          FILES = FILE_SEARCH(!S.DATASETS + DATASET + SL + MAP_IN(M) + SL + DATA_TYPE(T) + SL + PRODS(D) + SL + PERIOD_TYPE(T)+'*MEAN*.SAVE')
          IF N_ELEMENTS(FILES) EQ 1 THEN CONTINUE
          FILES = DATE_SELECT(FILES,DATE_RANGE[0],DATE_RANGE[1])
;          IF DATASET EQ 'OC-SEAWIFS-MLAC' THEN BEGIN
;            FILES = DATE_SELECT(FILES,'19980101','20071231')
;            MFILES = FILE_SEARCH(!S.DATASETS + 'OC-MODIS-LAC' + SL + MAP_IN(M) + SL + DATA_TYPE(T) + SL + PRODS(D) + SL + PERIOD_TYPE(T)+'*MEAN*.SAVE')
;            MFILES = DATE_SELECT(MFILES,'20080101','20121231')
;            FILES = [FILES,MFILES]
;          ENDIF     
          FP = PARSE_IT(FILES)
          PNGFILE = DIR_PLOTS + MIN(FP.YEAR_START) + '_' + MAX(FP.YEAR_START) + '-SPRING_COMPOSITE-'+MAP_OUT(M)+'-'+PROD_LABEL(D)+'-'+DATA_TYPE(T)+'.PNG'
          IF UPDATE_CHECK(INFILES=FILES,OUTFILE=PNGFILE) EQ 0 AND NOT KEYWORD_SET(OVERWRITE) THEN CONTINUE

          XDIM    = 120    & YDIM    = 120
          IF DATA_TYPE(T) EQ 'STATS' THEN BEGIN & SS = STAT_SS & CBAR_TITLE = SBAR_TITLE & USE_PRODS = STAT_UP & ENDIF
          IF DATA_TYPE(T) EQ 'ANOMS' THEN BEGIN & SS = ANOM_SS & CBAR_TITLE = ABAR_TITLE & USE_PRODS = ANOM_UP & ENDIF

          MONTHLY_COMPOSITES, FILES, MAP_OUT=MAP_OUT(M), DIR_OUT=DIR_PLOTS, OUT_FILE=PNGFILE, DATE_RANGE=DATE_RANGE, $
            USE_PROD=USE_PRODS(D), SPECIAL_SCALE=SS(D), PAL=PAL(T), COLORBAR_TITLE=CBAR_TITLE(D),$
            XDIM=XDIM, YDIM=YDIM, NROWS=NROWS, NCOLS=NCOLS, TOP=TOP, BOTTOM=BOTTOM, LEFT=LEFT, RIGHT=RIGHT, NO_COLORBAR=NO_COLORBAR, SPACE=SPACE,$
            BUFFER=BUFFER, VERBOSE=VERBOSE, ERROR=ERROR
        ENDFOR
      ENDFOR
    ENDFOR
    STOP
  ENDIF ; DO_MONTHLY_COMPOSITES



; *******************************************************
  IF DO_CTD_PROFILES GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_CTD_PROFILES GE 2
    
    FILE = FIX_PATH('D:\PROJECTS\RI_SOUND\DATA\RI_BI_SOUND_CTD_PROFILES.csv') 
    STRUCT = READALL(FILE)
    TAGS = TAG_NAMES(STRUCT)
    NAMES = ['BI SOUND','RI SOUND']    
    STATIONS = ['BIS','RIS']
    DEPTH_RANGE = [0,40]
    YRANGE = [-40,0]
    CUTOFF = [40,0.0]
    ;COLORS = ['NAVY','ORANGE_RED','CYAN']
    X = DATE_2JD([20100101,20110119])
    AX = DATE_AXIS([20100101,2011011], /MONTH)
    MINDATE = '20100000000000'
    MAXDATE = '20110110000000'
    MARGIN = [0.125,0.0,0.125,0.0]
    
    PRODS = ['TEMP','SALINITY','OXYGEN','FLOURESCENCE','PAR']
    SPROD = ['SST', 'SAL','NUM',   'NUM',         'PAR']
    SP_SC = ['LOW', 'HIGH',        '0_10',  '0_5',        '']
    YTITLES = [UNITS('TEMPERATURE'),'Salinity (ppt)','O!D2!N', 'Floursecence (RFU)',UNITS('PAR')]
    TITLES = ['Block Island Sound','Rhode Island Sound']
    RANGES = LIST([0.0,25.0],[25.0,35],[0.0,10.0],[0.0,10.0],[0,4000])
    PYS    = [970,455]
    
    CHARSIZE = 14
    COUNTER = 0
    FOR N=0, N_ELEMENTS(STATIONS)-1 DO BEGIN
      SDATA = STRUCT[WHERE(STRUCT.STATION EQ STATIONS(N))]
      OK = WHERE(STRLEN(SDATA.TIME) EQ 5)
      SDATA[OK].TIME = '0' + SDATA[OK].TIME
      DATES = JD_2DATE(DATE_2JD(SDATA.DATE))
      PNGFILE = !S.PROJECTS + 'RI_SOUND/PLOTS/CTD_PROFILES-'+STATIONS(N)+'-TEMPERATURE_SALINITY.png'
      IF FILE_TEST(PNGFILE) EQ 1 AND NOT KEYWORD_SET(OVERWRITE) AND GET_MTIME(FILE) LT GET_MTIME(PNGFILE) THEN GOTO, SKIP_CTD_PLOT
      W = WINDOW(DIMENSIONS=[1024,1200])
      FOR P=0, N_ELEMENTS(PRODS)-4 DO BEGIN   
        IF P EQ 0 THEN TITLE = TITLES(N) ELSE TITLE = ' '
        LAYOUT = [1,2,COUNTER+1]       
        POS = WHERE(TAGS EQ PRODS(P))
        VRANGE = RANGES(P)
        DATA = FLOAT(SDATA.(POS))
        DEPTH = FLOAT(SDATA.DEPTH)
        PAL='PAL_SW3'        
        OK = WHERE(DATA NE MISSINGS(DATA) AND DATA GT VRANGE[0] AND DATA LT VRANGE[1] AND DEPTH GT MIN(DEPTH_RANGE) AND DEPTH LT MAX(DEPTH_RANGE))        
        TIME_DEPTH_GRID_NG,DATES[OK],DEPTH[OK],DATA[OK],DEPTH_INTERVAL=0.25,MDATE=[MINDATE,MAXDATE],NEAR=0.25,$
              MDEPTH=DEPTH_RANGE,VRANGE=VRANGE,YRANGE=YRANGE,CUTOFF=[MAX(DEPTH[OK]),0],YMAJOR=0,YMINOR=0,XMAJOR=AX.TICKS,XMINOR=0,XTICKVALUES=AX.TICKV,XTICKNAME=AX.TICKNAME,PAL=PAL,$
              DIMENSIONS=[376,200],NOXDATES=NOXDATES,AX_INTERVAL='MONTH',AY_GRID='YEAR',YTITLE=YTITLES(P),/RETURN_IMAGE,OUT_IMAGE=OUT_IMAGE,$
              TITLE=TITLE,MARGIN=MARGIN,FONT_SIZE=CHARSIZE,/INTERPOLATE,PROD=SPROD(P), SPECIAL_SCALE=SP_SC(P),LAYOUT=LAYOUT,TARGET=TARGET
        
        IM = IMAGE(OUT_IMAGE,RGB_TABLE=CPAL_READ(PAL),AXIS_STYLE=2,LAYOUT=LAYOUT,/CURRENT,MARGIN=MARGIN,TITLE=TITLE,YTITLE='Depth (m)',FONT_SIZE=14,$
                   XMAJOR=AX.TICKS,XMINOR=0,XTICKNAME=AX.TICKNAME(0:-1),XTICKVALUES=[JD_2DOY(AX.TICKV(0:-2))-1,366],$
                   YMAJOR=5,YMINOR=4,YTICKNAME=['40','30','20','10','0'],YTICKVALUES=[0,50,100,150,200])    
        DATESET = WHERE_SETS(DATES[OK])
        FOR S=0, N_ELEMENTS(DATESET)-1 DO P1 = PLOT([FIX(DATE_2DOY(DATESET(S).VALUE)),FIX(DATE_2DOY(DATESET(S).VALUE))],[0,200],LINESTYLE=0,COLOR='BLACK',/CURRENT,/OVERPLOT)
        BAR = COLOR_BAR_SCALE_NG(PROD=SPROD(P),SPECIAL_SCALE=SP_SC(P),PX=915,PY=PYS(P),CHARSIZE=11,BACKGROUND=BACKGROUND,XDIM=30,YDIM=400,PAL='PAL_SW3',TITLE=YTITLES(P),/VERTICAL,/RIGHT)
        COUNTER = COUNTER + 1          
      ENDFOR
      PRINT, 'Writing ' + PNGFILE
      W.SAVE,PNGFILE,RESOLUTION=1000
      W.CLOSE 
      SKIP_CTD_PLOT:
    ENDFOR  
 
  ENDIF ; DO_CTD_PROFILES
 

;	*******************************************************
	IF DO_NEC_REMAP_2_RI_SOUND GE 1 THEN BEGIN
;	*******************************************************

		OVERWRITE = DO_NEC_REMAP_2_RI_SOUND GE 2

   	MAP_IN  = 'NEC'
    DIR_IN = ['S:\SEAWIFS-MLAC-NEC\ts_images\']
    MAP_OUT = ['RI_SOUND']
    DIR_OUT = [DIR+':\PROJECTS\RI_SOUND\ts_images\SAVE\']
    IF FILE_TEST(DIR_OUT,/DIR) EQ 0 THEN FILE_MKDIR, DIR_OUT

    PRODUCTS=['A_CDOM_300-KM']
    SENSOR = 'SEAWIFS'
    PERIOD=['!D']

    DATE_START='19970101000000'
	  DATE_END  ='20200101000000'
PRINT, '!!!NEED TO FINISH UPDATING FOR MULTIPLE PRODUCTS FROM MULTIPLE DATASETS!!!'

counter = 0
    FOR _PROD=0L,N_ELEMENTS(PRODUCTS)-1L DO BEGIN
      APROD= PRODUCTS(_PROD)
wait_remap:
if counter gt 0 then print, 'Waiting 1 hour before looking for files'
if counter gt 0 then wait, 3600
counter = counter + 1
      FILES = FILELIST(DIR_IN +'SAVE\'+PERIOD+ASTER+MAP_IN+ASTER+ APROD + '*.SAVE')
if files[0] eq '' then goto, wait_remap
files_before = n_elements(file_search(dir_out+'!D_*RI_SOUND*A_CDOM_300-KM*.SAVE'))
		  FA =  PARSE_IT(FILES,/ALL)
      OK= WHERE(FA.DATE_START GE DATE_START  AND FA.DATE_END LE DATE_END AND FA.SENSOR EQ SENSOR,COUNT)
      IF COUNT LT 1 THEN CONTINUE
      FA=FA[OK]
      NAMES=FA.FIRST_NAME
      S=SORT(NAMES)
      FA=FA(S)
      FILES=FA.FULLNAME

      M=STRUCT_SD_REMAP(FILES=FILES,STRUCT=STRUCT,DIR_OUT=DIR_OUT,MAP_OUT=MAP_OUT,OVERWRITE=OVERWRITE)
files_after = n_elements(file_search(dir_out+'!D_*RI_SOUND*A_CDOM_300-KM*.SAVE'))
if files_before ne files_after then goto, wait_remap
		ENDFOR

  ENDIF



;	*******************************************************
	IF DO_USEABLE_TIME_SERIES_PLOT GE 1 THEN BEGIN
;	*******************************************************

		OVERWRITE = DO_USEABLE_TIME_SERIES_PLOT GE 2

		DIR_SAVE = FIX_PATH(!S.DATASETS + 'OC-SEAWIFS-MLAC\RI_SOUND\SAVE\')
		DIR_OUT  = FIX_PATH(!S.DATASETS + 'OC-SEAWIFS-MLAC\RI_SOUND\PLOT\')
		MAKE_SAVE  = 1
		DO_PLOTS   = 1
		DO_PS_2PNG = 0
		IF FILE_TEST(DIR_OUT,/DIR) EQ 0 THEN FILE_MKDIR, DIR_OUT
		PROD   = 'CHLOR_A-OC4'
		SUBAREA_FILE = FIX_PATH(!S.IMAGES + 'MASK_SUBAREA-RI_SOUND-PXY_120_120.PNG')
		SUBAREA_CODE = 6
		DATE_RANGE = ['19980101','20071231']
		PERIOD_IN = 'S'
		USEABLE_DATA_TIMESERIES, DIR_SAVE=DIR_SAVE, DIR_OUT=DIR_OUT, PROD=PROD, SUBAREA_FILE=SUBAREA_FILE, SUBAREA_CODE=SUBAREA_CODE, $
	                           DATE_RANGE=DATE_RANGE, PERIOD_IN=PERIOD_IN, MAKE_SAVE=MAKE_SAVE, DO_PS_2PNG=DO_PS_2PNG, DO_PLOTS=DO_PLOTS

STOP

	ENDIF


;	*******************************************************
	IF DO_SAT_CHLOR_A_MB GE 1 THEN BEGIN
;	*******************************************************

		OVERWRITE = DO_SAT_CHLOR_A_MB GE 2
		FILES = FILE_SEARCH('S:\SEAWIFS-MLAC-RI_SOUND\SAVE\*CHLOR_A-OC4*.SAVE')
		SD_MASS_BAY_CHL_CORRECTION,FILES=FILES, OVERWRITE=OVERWRITE
	ENDIF

;	*******************************************************
	IF DO_PPD GE 1 THEN BEGIN
;	*******************************************************

		OVERWRITE = DO_PPD GE 2
		
		DISK=!S.DATASETS
    SL = DELIMITER(/SLASH)
    BATHY_SMOOTH=5
		BATHY_FILE  = !S.IMAGES + 'SRTM30-RI_SOUND-BATHY.SAVE'
		CHL_RANGE = [0.01,64]
		PP_MODELS = ['VGPM2','OPAL','VGMB']
		MAP = 'RI_SOUND'
		SERIES = 'INTERP'
		       
    DATE_RANGE=['19971001000000','20120430000000']
		
		CSET='OC-SEAWIFS-MLAC'
		SSET='SST-AVHRR-4'
		
		CPROD = 'CHLOR_A-PAN'        & CNAME = REPLACE(CPROD,'-','_')
		SPROD = 'SST'                & SNAME = VALID_SENSORS(SSET)
		PPROD = 'PAR'
		APROD = 'A_CDOM_355-MANNINO' & ANAME = 'A_CDOM_'+VALIDS('ALGS',APROD)
		
		PROD_NAMES = STRJOIN([CNAME,SNAME,ANAME],'-')
		
		IF SERIES EQ 'INTERP' THEN DIR_CSAVES = DISK + CSET + SL + MAP + SL + 'TS_IMAGES' + SL + CPROD + SL + 'SAVE'  +SL $
                          ELSE DIR_CSAVES = DISK + CSET + SL + MAP + SL + 'SAVE'      + SL + CPROD + SL
    IF SERIES EQ 'INTERP' THEN DIR_SSAVES = DISK + SSET + SL + MAP + SL + 'TS_IMAGES' + SL + SPROD + SL + 'SAVE'  +SL $
                          ELSE DIR_SSAVES = DISK + SSET + SL + MAP + SL + 'SAVE'      + SL + SPROD + SL
    IF SERIES EQ 'INTERP' THEN DIR_PSAVES = DISK + CSET + SL + MAP + SL + 'TS_IMAGES' + SL + PPROD + SL + 'SAVE'  +SL $
                          ELSE DIR_PSAVES = DISK + CSET + SL + MAP + SL + 'SAVE'      + SL + PPROD + SL                                                        
    IF SERIES EQ 'INTERP' THEN DIR_ASAVES = DISK + CSET + SL + MAP + SL + 'TS_IMAGES' + SL + APROD + SL + 'SAVE'  +SL $
                          ELSE DIR_ASAVES = DISK + CSET + SL + MAP + SL + 'SAVE'      + SL + APROD + SL
		
		CFILES = [FILE_SEARCH(DIR_CSAVES +'S_*'+CPROD+'*.SAVE'),FILE_SEARCH(DIR_CSAVES +'D_*'+CPROD+'*.SAVE')] & CFILES = CFILES[WHERE(CFILES NE '')]              
    SFILES = [FILE_SEARCH(DIR_SSAVES +'S_*'+SPROD+'*.SAVE'),FILE_SEARCH(DIR_SSAVES +'D_*'+SPROD+'*.SAVE')] & SFILES = SFILES[WHERE(SFILES NE '')]
    PFILES = [FILE_SEARCH(DIR_PSAVES +'S_*'+PPROD+'*.SAVE'),FILE_SEARCH(DIR_PSAVES +'D_*'+PPROD+'*.SAVE')] & PFILES = PFILES[WHERE(PFILES NE '')]
    AFILES = [FILE_SEARCH(DIR_ASAVES +'S_*'+APROD+'*.SAVE'),FILE_SEARCH(DIR_ASAVES +'D_*'+APROD+'*.SAVE')] & AFILES = AFILES[WHERE(AFILES NE '')]
    
    DIR_PP_OUT = DISK + CSET + SL + MAP + SL + 'PRIMARY_PRODUCTION' + SL + PROD_NAMES + SL       
    IF N_ELEMENTS(CFILES) EQ 0 OR N_ELEMENTS(SFILES) EQ 0 OR N_ELEMENTS(PFILES) EQ 0 THEN STOP   
    PP_SAT_MAIN,PP_MODELS=PP_MODELS,MAP=MAP,CHL_FILES=CFILES,SST_FILES=SFILES,PAR_FILES=PFILES,ACDOM_FILES=AFILES,$
      DIR_PP=DIR_PP_OUT,BATHY_FILE=BATHY_FILE,SENSOR='SEAWIFS_AVHRR',COVERAGE='MLAC',$
      CHL_RANGE=CHL_RANGE, PAR_RANGE=PAR_RANGE, SST_RANGE=SST_RANGE,$
      NO_CHLOR_EUPHOTIC=NO_CHLOR_EUPHOTIC,NO_K_PAR=NO_K_PAR,NO_BOTTOM_FLAG=NO_BOTTOM_FLAG,$
      REVERSE_DATES=REVERSE_DATES,DATE_RANGE=DATE_RANGE,OVERWRITE=OVERWRITE

	ENDIF


; ************************************************
	IF 	DO_SEAWIFS_RI_SOUND_ANALYSES GE 1 THEN BEGIN
; ************************************************
		DISK =DIR + ':'
		OVERWRITE = DO_SEAWIFS_RI_SOUND_ANALYSES EQ 2
		STAT_PERIOD_CODES_IN  = ['!D', '!M',      '!M', '!Y',		'!MONTH']
		STAT_PERIOD_CODES_OUT = ['!M', '!MONTH',  '!Y', '!YEAR', '!ANNUAL']
		PERIOD_CODES = ['!M', '!MONTH',  '!Y', '!YEAR', '!ANNUAL']
		STATS_BROWSE_TARGETS = ['CHLOR_A-OC4','CHLOR_A-MB','PPD-OPAL','PPD-VGMB','SST']
		STATS_TARGETS = ['CHLOR_A-OC4','CHLOR_A-MB','PPD-OPAL','PPD-VGMB','SST']
		STATS_BROWSE_TYPE = 'MEAN'
		TS_IMAGES_TARGETS = ['PPD-OPAL','PPD-VGMB']
		TS_SUBAREAS_TARGETS = ['CHLOR_A-MB','PPD-VGMB','PAR']
		TS_SUBAREAS_PERIODS = ['!D','!M','!MONTH','!Y','!YEAR','!ANNUAL']
		TS_SUBAREAS_FILES = ['MASK_SUBAREA-RI_SOUND-3REGIONS-PXY_120_120.SAVE','MASK_SUBAREA-RI_SOUND-PXY_120_120.SAVE']
		SENSOR = ''
		DEFAULT_PROD = 'SST'
		MAP_IN = 'RI_SOUND'
		INTERP_FORT = 1


		ANALYSES_MAIN,	DATASET                = DATASET,$
		           			DISK                   = DISK,$
		           			DIRS_SAVE              = DIRS_SAVE,$
		           			DIR_SUFFIX             = DIR_SUFFIX,$
		           			DATE_RANGE             = DATE_RANGE, $
		           			DEFAULT_PROD           = DEFAULT_PROD,$
		    						METHOD                 = METHOD,$
		    						OUTSENSOR              = OUTSENSOR,$
			    					COVERAGE               = COVERAGE,$
			    					MAP_IN                 = MAP_IN,$
		    						MAP_OUT                = MAP_OUT,$
		    						SENSOR                 = SENSOR,$
		    						SATELLITE              = SATELLITE, $
		    						SAT_EXTRA              = SAT_EXTRA,$
		    						SUITE                  = SUITE,$
		    						PROCESS                = PROCESS,$
		    						PX                     = PX,$
		    						PY                     = PY,$
		    						PAL                    = PAL,$
		    						ALG                    = ALG, $
		    						POC_ALGS               = POC_ALGS,$
		    						DOC_ALGS               = DOC_ALGS,$
		    						A_CDOM_ALGS            = A_CDOM_ALGS,$
		    						NO_FLAGS               = NO_FLAGS,$
					 					BROWSE_PROD            = BROWSE_PROD,$
					 					BROWSE_SOLO_TARGETS    = BROWSE_SOLO_TARGETS,$
					 					BROWSE_FLAG_PROD       = BROWSE_FLAG_PROD,$
								    SAT_SHIP_PRODUCTS      = SAT_SHIP_PRODUCTS,$
								    SAT_TIMESERIES_PRODUCTS= SAT_TIMESERIES_PRODUCTS,$
								    SAT_TIMESERIES_PERIODS = SAT_TIMESERIES_PERIODS,$
								    SAT_MATCH_PRODUCTS     = SAT_MATCH_PRODUCTS,$
								    REGIONS_LIST           = REGIONS_LIST,$
								    REGIONS_PRODUCTS       = REGIONS_PRODUCTS,$
								    REGIONS_PERIOD_CODE    = REGIONS_PERIOD_CODE,$
								    HDF_PROD               = HDF_PROD,$
								    FLAG_PRODUCTS          = FLAG_PRODUCTS,$
								    PERIOD_CODES           = PERIOD_CODES,$
										STAT_PERIOD_CODES_IN   = STAT_PERIOD_CODES_IN,$
								    STAT_PERIOD_CODES_OUT  = STAT_PERIOD_CODES_OUT,$
								 		STAT_TYPE              = STAT_TYPE,$
								    STATS_TARGETS          = STATS_TARGETS,$
								    STATS_BROWSE_TARGETS   = STATS_BROWSE_TARGETS,$
								    STATS_BROWSE_TYPE      = STATS_BROWSE_TYPE,$
								    STATS_CONTOUR_PRODUCTS = STATS_CONTOUR_PRODUCTS,$
								  	TS_SUBAREAS_TARGETS    = TS_SUBAREAS_TARGETS,$
								    TS_SUBAREAS_PERIODS    = TS_SUBAREAS_PERIODS,$
								    TS_SUBAREAS_METHODS    = TS_SUBAREAS_METHODS,$
								    TS_SUBAREAS_FILES      = TS_SUBAREAS_FILES,$
								    TS_IMAGES_TARGETS      = TS_IMAGES_TARGETS,$
								  	TS_IMAGES_UPDATE       = TS_IMAGES_UPDATE,$
								    TS_IMAGES_DAYS_BACK    = TS_IMAGES_DAYS_BACK,$
								   	PSERIES_KEEP           = PSERIES_KEEP,$
								   	EXCLUDE_ZFILES         = EXCLUDE_ZFILES,$
										REMOVE_DAT             = REMOVE_DAT,$
								   	REMOVE_HDF             = REMOVE_HDF,$
								   	REMOVE_Z               = REMOVE_Z,$
								   	OVERWRITE 						 = OVERWRITE, $
										SWITCHES               = [$
;			 																			'DO_Z2SAVE',$
; 																					'DO_STRUCT_SD_2PNG',$
; 																					'DO_STRUCT_SD_MAKE_l2_FLAGS',$
;																						'DO_STRUCT_SD_MAKE_POC',$
;																						'DO_STRUCT_SD_MAKE_A_CDOM_MANNINO',$
;																						'DO_STRUCT_SD_MAKE_DOC_MANNINO',$
			 																;			'DO_STATS',$
			 																;			'DO_STATS_BROWSE',$
			 																;			'DO_STATS_BROWSE_PAGE',$
			 																;			'DO_ANOM_Y_YEAR','DO_ANOM_M_MONTH','DO_ANOM_MONTH_STUDY',$
																			;			'DO_ANOM_Y_YEAR_BROWSE','DO_ANOM_M_MONTH_BROWSE','DO_ANOM_MONTH_STUDY_BROWSE',$
			 																;			'DO_TS_IMAGES_2ISERIES',$;
																			;			'DO_TS_IMAGES_ISERIES_2PSERIES',$
			 																;			'DO_TS_IMAGES_PSERIES_EDIT_SMOOTH_INTERP',$
			 																;			'DO_TS_PSERIES_2ISERIES',$
			 																;			'DO_TS_ISERIES_EXTRACT_SAVE',$
			 																;			'DO_TS_ISERIES_SAVE_2PNG',$
			 														    ;     'DO_TS_ISERIES_PNG_2AVI'];,$
;			 																			'DO_TS_PSERIES_STATS','DO_TS_PSERIES_STATS_BROWSE']
;																						'DO_TS_PSERIES_STATS_BROWSE']
																						'DO_TS_SUBAREAS'];,$
																			;			'DO_STATS_INTERP',$
																			;			'DO_TS_SUBAREAS_INTERP'];,$
;																						'DO_TS_SUBAREAS_PLOT']



stop

 	ENDIF ;IF 	DO_SEAWIFS_NEC_ANALYSES GE 1 THEN BEGIN

; ***************************************************************
  IF DO_TS_ISERIES_SAVE_2PNG GE 1 THEN BEGIN
; *****************************************************************

    PRINT, 'S T E P:   DO_TS_ISERIES_SAVE_2PNG'
    PRINT,'Writes png files from interpolated saves '
    OVERWRITE = DO_TS_ISERIES_SAVE_2PNG EQ 2

    ADD_LEG=1
    ADDDATE=0
    ADD_BATHY=0
    ADD_LAND=1
    ADD_COAST=1
    COAST_COLOR = 0
    ADD_COLORBAR=1
    ADD_DATEBAR=1
    ADD_SENSOR=0
    ADD_METHOD=0
    ADD_PROD=0
    ADD_ALG=1
    ADD_OUTLINE=1
    ADD_SOURCE=0
    OUTLINE_THICK=1
    OUTLINE_COLOR=0
    REGIONS=''
    PAL='PAL_SW3'
    MAP_PNG = 'RI_SOUND'
    SOURCE_LABEL="K.Hyde, J.O'Reilly, T.Ducas!CNOAA/NMFS!CNarragansett, RI"

		DIR_TS_IMAGES_SAVE = DIR+':\PROJECTS\RI_SOUND\ts_images\SAVE\'
   	FILES = FILELIST(DIR_TS_IMAGES_SAVE + '!D*PPD-VGMB' +'-INTERP-TS_IMAGES.SAVE')
;   	FILES = [FILES,FILELIST(DIR_TS_IMAGES_SAVE + '!D*SST' +'-INTERP-TS_IMAGES.SAVE')]

		DIR_OUT=DIR+':\PROJECTS\RI_SOUND\ts_images\browse\'

    STRUCT_SD_2PNG, FILES, DIR_OUT=DIR_OUT,$
          BACKGROUND=Abackground,LAND_COLOR=Aland_color,FLAG_COLOR=Aflag_color,MISS_COLOR=Amiss_color,$
          OUTSCAN_COLOR=Aoutscan_color,OUTMAP_COLOR=Aoutmap_color,ALGFAIL_COLOR=Aalgfail_color,$
         	HI_LO_COLOR=Ahi_lo_color,BATHY_COLOR=ABATHY_COLOR,CRITERIA_COLOR=ACRITERIA_COLOR,$
          PAL=_pal,MAP_OUT=MAP_PNG,ADD_COLORBAR=ADD_COLORBAR, ADD_DATEBAR=ADD_DATEBAR,ADDDATE=adddate, ADD_SENSOR=ADD_SENSOR,ADD_ALG=ADD_ALG, $
          ADD_PROD=ADD_PROD,ADD_METHOD=ADD_METHOD,ADD_BATHY=ADD_BATHY,ADD_LAND=ADD_LAND,ADD_COAST=ADD_COAST,COAST_COLOR= _COAST_COLOR,$
          CRITERIA_RANGE=_CRITERIA_RANGE,CRITERIA_OPER=_CRITERIA_OPER,ADD_OUTLINE=ADD_OUTLINE,OUTLINE_THICK=OUTLINE_THICK,OUTLINE_COLOR=OUTLINE_COLOR,$
          IMAGE_SCALE=image_scale,OVERWRITE=overwrite,QUIET=quiet,ADD_SOURCE=ADD_SOURCE,SOURCE_LABEL=SOURCE_LABEL



  ENDIF;IF DO_TS_ISERIES_SAVE_2PNG EQ 1 THEN BEGIN


; *****************************************************************
	IF DO_COMBO_PNGS GE 1 THEN BEGIN
; *****************************************************************
	OVERWRITE = DO_COMBO_PNGS EQ 2
	PATH = [DIR+':\PROJECTS\RI_SOUND\ts_images\browse\',DIR+':\PROJECTS\RI_SOUND\ts_images\browse\']
	MAP  = ['RI_SOUND','RI_SOUND']
	PRODUCTS = ['PPD-VGMB','SST']
	SENSOR = ['','N4AT']
	METHOD = ['','']
	MATH_TARGET = ['INTERP','INTERP']
	ALGS = ['OPAL','']
	PERIOD_CODE = ['!D','!D']
	EXT = ['PNG','PNG']
	DIR_OUT = DIR+':\PROJECTS\RI_SOUND\ts_images\browse_combo\'
	PAL = ['PAL_SW3','PAL_SW3']

	DATE_START = '19980101'
	DATE_END   = '20071231'
	SCALE = 1
	SPACE = 1
	LANDSCAPE =1

	TS_ISERIES_BROWSE_COMBO,PATH=PATH,SENSOR=sensor,METHOD=method,SUITE=suite,MAP=map,REGION=REGION,$
                    PRODUCTS=PRODUCTS,MATH_TARGET=math_target,EDIT_TARGET=edit_target,EXT=EXT,$
                    PERIOD_CODE=period_code,DIR_OUT=dir_out, DIR_IMAGES=dir_images,$
                    PAL=pal,BACKGROUND=background,LAND_COLOR=land_color,DATE_START=DATE_START,DATE_END=DATE_END,$
                    SCALE=scale,SPACE=space,LANDSCAPE=LANDSCAPE,PORTRAIT=PORTRAIT,OVERWRITE=overwrite
	ENDIF

; *****************************************************************
	IF DO_COMBO_TITLE_SLIDE GE 1 THEN BEGIN
; *****************************************************************
		OVERWRITE = DO_COMBO_PNGS EQ 2
		PAL_SW3,R,G,B

		ADD_LEG=1
    ADDDATE=0
    ADD_BATHY=0
    ADD_LAND=1
    ADD_COAST=1
    COAST_COLOR = 0
    ADD_COLORBAR=1
    ADD_DATEBAR=0
    ADD_SENSOR=0
    ADD_METHOD=0
    ADD_PROD=0
    ADD_ALG=1
    ADD_OUTLINE=0
    OUTLINE_THICK=1
    OUTLINE_COLOR=0
    REGIONS=''
    PAL='PAL_SW3'
    MAP_PNG = 'RI_SOUND'


		DIR_STATS = DIR+':\PROJECTS\RI_SOUND\stats\'
   	FILES = FILELIST(DIR_STATS + '!ANNUAL-RI_SOUND-PPD-*-MEAN.SAVE')
   	FILES = [FILES,FILELIST(DIR_STATS + '!ANNUAL-RI_SOUND-SST-MEAN.SAVE')]

		DIR_OUT=DIR+':\PROJECTS\RI_SOUND\ts_images\movies_combo\'

    STRUCT_SD_2PNG, FILES, DIR_OUT=DIR_OUT,$
          BACKGROUND=Abackground,LAND_COLOR=Aland_color,FLAG_COLOR=Aflag_color,MISS_COLOR=Amiss_color,$
          OUTSCAN_COLOR=Aoutscan_color,OUTMAP_COLOR=Aoutmap_color,ALGFAIL_COLOR=Aalgfail_color,$
         	HI_LO_COLOR=Ahi_lo_color,BATHY_COLOR=ABATHY_COLOR,CRITERIA_COLOR=ACRITERIA_COLOR,$
          PAL=_pal,MAP_OUT=MAP_PNG,ADD_COLORBAR=ADD_COLORBAR, ADD_DATEBAR=ADD_DATEBAR,ADDDATE=adddate, ADD_SENSOR=ADD_SENSOR,ADD_ALG=ADD_ALG, $
          ADD_PROD=ADD_PROD,ADD_METHOD=ADD_METHOD,ADD_BATHY=ADD_BATHY,ADD_LAND=ADD_LAND,ADD_COAST=ADD_COAST,COAST_COLOR= _COAST_COLOR,$
          CRITERIA_RANGE=_CRITERIA_RANGE,CRITERIA_OPER=_CRITERIA_OPER,ADD_OUTLINE=ADD_OUTLINE,OUTLINE_THICK=OUTLINE_THICK,OUTLINE_COLOR=OUTLINE_COLOR,$
          IMAGE_SCALE=image_scale,OVERWRITE=overwrite,QUIET=quiet;,/ADD_SOURCE,SOURCE_LABEL="K.Hyde, J.O'Reilly, T.Ducas!CNOAA/NMFS!CNarragansett, RI"

		PNGS = [DIR_OUT + '!ANNUAL-RI_SOUND-PXY_360_360-PPD-OPAL-MEAN-LEG.PNG', DIR_OUT + '!ANNUAL-RI_SOUND-PXY_360_360-SST-MEAN-LEG.PNG']
		SPACE = 1
		IMAGE = IMAGE_WELD(PNGS[0],PNGS[1],/landscape,BACKGROUND=background,SPACE=space)
		IMAGE2 = IMAGE

		TITLE_PRODUCT ='Primary Productivity and Sea Surface Temperature'
		TITLE_AUTHOR  = "Kimberly Hyde, Jay O'Reilly, Teresa Ducas"
		TITLE_ADDRESS = 'NOAA, NMFS, Narragansett,RI'
		TITLE_DATE    = '2001 - 2002'
		IMAGE = MAP_ADD_TXT(IMAGE,0.5,0.40,	TITLE_PRODUCT,COLOR=0,charsize=2,CHARTHICK=3,ALIGN=0.5)
  	IMAGE = MAP_ADD_TXT(IMAGE,0.5,0.30,	TITLE_AUTHOR, COLOR=0,charsize=1.5,CHARTHICK=3,ALIGN=0.5)
  	IMAGE = MAP_ADD_TXT(IMAGE,0.5,0.25,	TITLE_ADDRESS,COLOR=0,charsize=1.5,CHARTHICK=3,ALIGN=0.5)
  	IMAGE = MAP_ADD_TXT(IMAGE,0.5,0.20,	TITLE_DATE,   COLOR=0,charsize=1.5,CHARTHICK=3,ALIGN=0.5)

		OUTPNG = DIR_OUT + 'TITLE_SLIDE-PPD-OPAL-SST-2001_2002.PNG'
		WRITE_PNG,OUTPNG,IMAGE,R,G,B

		IMAGE2 = MAP_ADD_TXT(IMAGE2,0.5,0.40,	TITLE_PRODUCT,COLOR=0,charsize=2,CHARTHICK=3,ALIGN=0.5)
  	IMAGE2 = MAP_ADD_TXT(IMAGE2,0.5,0.30,	TITLE_AUTHOR, COLOR=0,charsize=1.5,CHARTHICK=3,ALIGN=0.5)
  	IMAGE2 = MAP_ADD_TXT(IMAGE2,0.5,0.25,	TITLE_ADDRESS,COLOR=0,charsize=1.5,CHARTHICK=3,ALIGN=0.5)
  	OUTPNG = DIR_OUT + 'TITLE_SLIDE-PPD-OPAL-SST-ANNUAL.PNG'
		WRITE_PNG,OUTPNG,IMAGE2,R,G,B

		PNGS = [DIR_OUT + '!ANNUAL-RI_SOUND-PXY_360_360-PPD-VGMB-MEAN-LEG.PNG', DIR_OUT + '!ANNUAL-RI_SOUND-PXY_360_360-SST-MEAN-LEG.PNG']
		SPACE = 1
		IMAGE = IMAGE_WELD(PNGS[0],PNGS[1],/landscape,BACKGROUND=background,SPACE=space)
		IMAGE2 = IMAGE

		TITLE_PRODUCT ='Primary Productivity and Sea Surface Temperature'
		TITLE_AUTHOR  = "Kimberly Hyde, Jay O'Reilly, Teresa Ducas"
		TITLE_ADDRESS = 'NOAA, NMFS, Narragansett,RI'
		TITLE_DATE    = '2001 - 2002'
		IMAGE = MAP_ADD_TXT(IMAGE,0.5,0.40,	TITLE_PRODUCT,COLOR=0,charsize=2,CHARTHICK=3,ALIGN=0.5)
  	IMAGE = MAP_ADD_TXT(IMAGE,0.5,0.30,	TITLE_AUTHOR, COLOR=0,charsize=1.5,CHARTHICK=3,ALIGN=0.5)
  	IMAGE = MAP_ADD_TXT(IMAGE,0.5,0.25,	TITLE_ADDRESS,COLOR=0,charsize=1.5,CHARTHICK=3,ALIGN=0.5)
  	IMAGE = MAP_ADD_TXT(IMAGE,0.5,0.20,	TITLE_DATE,   COLOR=0,charsize=1.5,CHARTHICK=3,ALIGN=0.5)

		OUTPNG = DIR_OUT + 'TITLE_SLIDE-PPD-VGMB-SST-2001_2002.PNG'
		WRITE_PNG,OUTPNG,IMAGE,R,G,B

		IMAGE2 = MAP_ADD_TXT(IMAGE2,0.5,0.40,	TITLE_PRODUCT,COLOR=0,charsize=2,CHARTHICK=3,ALIGN=0.5)
  	IMAGE2 = MAP_ADD_TXT(IMAGE2,0.5,0.30,	TITLE_AUTHOR, COLOR=0,charsize=1.5,CHARTHICK=3,ALIGN=0.5)
  	IMAGE2 = MAP_ADD_TXT(IMAGE2,0.5,0.25,	TITLE_ADDRESS,COLOR=0,charsize=1.5,CHARTHICK=3,ALIGN=0.5)
  	OUTPNG = DIR_OUT + 'TITLE_SLIDE-PPD-VGMB-SST-ANNUAL.PNG'
		WRITE_PNG,OUTPNG,IMAGE2,R,G,B

		ENDIF ;DO_COMBO_TITLE_SLIDE

; *****************************************************************
	IF DO_COMBO_MOVIES GE 1 THEN BEGIN
; *****************************************************************
		OVERWRITE = DO_COMBO_MOVIES EQ 2

  	QUALITY=100
    MAP = 'RI_SOUND'
    DIR_IN = DIR+':\PROJECTS\RI_SOUND\ts_images\browse_combo\'
 	  DIR_OUT = DIR+':\PROJECTS\RI_SOUND\ts_images\movies_combo\'
 	  DIR_JUNK= DIR_OUT+'JUNK\'
    FILE_TARGETS =['RI_SOUND-PXY_360_360-PPD-VGMB-SST-INTERP-TS_IMAGES','RI_SOUND-PXY_360_360-PPD-OPAL-SST-INTERP-TS_IMAGES']
    DO_DATE_RANGE=1
    TITLE_SLIDE=1
    TITLE_COLOR = 0
    YOFFSET=0
		TYPE = 'PPD-SST'
		YEAR_START = ['1998','1999','2000','2001','2002','2003','2004','2005','2006','2007','1998','2001']
		YEAR_END   = ['1998','1999','2000','2001','2002','2003','2004','2005','2006','2007','2007','2002']
  	DATE_START='0101000000'
  	DATE_END	='1231235959'
    N_TITLE=20
    FPS=10
    PAL=['PAL_SW3','PAL_SW3']

		FOR FTH=0L, N_ELEMENTS(FILE_TARGETS)-1 DO BEGIN
    	TARGETS= DIR_IN + '*'+FILE_TARGETS(FTH) + '*.PNG'
	  	TITLE_FILE_PNG=''
		  FA = FILE_ALL(TARGETS)
    	S=SORT(FA.DATE_START) & FA=FA(S)
    	IF STRPOS(FILE_TARGETS(FTH),'OPAL') GE 0 THEN ALG = 'OPAL'
			IF STRPOS(FILE_TARGETS(FTH),'VGMB') GE 0 THEN ALG = 'VGMB'
			TITLE_FILE_PNG = FILE_SEARCH(DIR_OUT + 'TITLE_SLIDE*' + ALG +'*ANNUAL.PNG')

			FOR NTH=0L, N_ELEMENTS(YEAR_START)-1 DO BEGIN
				DS=YEAR_START[NTH]+STRMID(DATE_START,0,4)
				DE=YEAR_END[NTH]+STRMID(DATE_END,0,4)
				DD='!DD_'+DS+UL +DE
			 	IMAGE = READALL(FA[0].FULLNAME)
				SZ=SIZE(IMAGE,/STRUCT)
				IF SZ.N_DIMENSIONS EQ 3 THEN N = 1 ELSE N = 0
				WIDTH   = SZ.DIMENSIONS(N)
				HEIGHT  = SZ.DIMENSIONS(N+1)

		 	  OK= WHERE(FA.DATE_START GE DS AND FA.DATE_END LE DE,COUNT)
		 	  FILES=FA[OK].FULLNAME
				DATE_TXT=  DT_FMT(DATE_2JD(DATE_START)   ,/DAY,/MDY)   + ' - ' +DT_FMT(DATE_2JD(DATE_END) ,/DAY,/MDY)
		    AVI_FILE   = DIR_OUT + DD+ dash + FILE_TARGETS(FTH) +'.AVI'

		    IF YEAR_START[NTH] EQ '2001' AND YEAR_END[NTH] EQ '2002' THEN _TITLE_FILE_PNG=FILE_SEARCH(DIR_OUT+'TITLE_SLIDE*'+ALG+'*-2001_2002.PNG') ELSE _TITLE_FILE_PNG=TITLE_FILE_PNG

		    IF FILE_TEST(AVI_FILE) EQ 1 AND OVERWRITE EQ 0 THEN CONTINUE
		    MAKE_AVI,FILES=FILES,DIR_OUT=DIR_OUT,TITLE_SLIDE=TITLE_SLIDE,TITLE_FILE_PNG=TITLE_FILE_PNG,N_TITLE=N_TITLE,$
		    				 TYPE=_TYPE,PAL=['PAL_SW3','PAL_SW3'],BITS=bits,QUALITY=quality, FPS=fps,MAP=MAP,$
		      			 AVI_FILE=avi_file,YOFFSET=YOFFSET,TITLE_COLOR=title_color, AUTHORS=authors,ADDRESS=address,SENSORS=sensors
			ENDFOR
		ENDFOR
	stop
	ENDIF



; *****************************************************************
	IF DO_TS_SUBAREAS_STATS GE 1 THEN BEGIN
; *****************************************************************
    OVERWRITE = DO_TS_SUBAREAS_STATS EQ 2

		DIR_TS_SUBAREAS_SAVE				= DIR + ':\PROJECTS\RI_SOUND\TS_SUBAREAS\save\'
		DIR_TS_SUBAREAS_STATS				= DIR + ':\PROJECTS\RI_SOUND\TS_SUBAREAS\STATS\'
		TS_SUBAREAS_TARGETS     		= ['PAR','A_CDOM_300-KM','PPD-OPAL','PPD-VGMB','CHLOR_A-MB','CHLOR_A-OC4','SST']
  	TS_SUBAREAS_PERIODS     		= ['!D','!ALL','!DD','!W','!WEEK','!M','!Y','!SEA','!MONTH','!YEAR','!SEASON','!ANNUAL']
  	DATE_RANGE                  = [19980101000000,20071231235959]
  	JD_START                    = DATE_2JD(MIN(DATE_RANGE))
  	JD_END                      = DATE_2JD(MAX(DATE_RANGE))


		SUBAREA_FILE = ['MASK_SUBAREA-RI_SOUND-3REGIONS-PXY_120_120.SAVE','MASK_SUBAREA-RI_SOUND-PXY_120_120.SAVE']


		FOR NTH=0,N_ELEMENTS(SUBAREA_FILE)-1L DO BEGIN
      ASUBAREA_FILE = SUBAREA_FILE[NTH]
      FP_SUB  = FILE_PARSE(ASUBAREA_FILE)

			FOR _PROD = 0L,N_ELEMENTS(TS_SUBAREAS_TARGETS)-1L DO BEGIN
				ATARGET = TS_SUBAREAS_TARGETS(_PROD)
  			APROD = VALIDS('PRODS',ATARGET)
  			AALG  = VALIDS('ALGS',ATARGET)
  			APERIOD = '!D'

				IF APROD EQ 'CHLOR_A' THEN APERIOD = '!D'
				IF APROD EQ 'PPD'     THEN APERIOD = '!D'
				IF APROD EQ 'SST'     THEN APERIOD = '!D'

				AFILE = FILE_SEARCH(DIR_TS_SUBAREAS_SAVE + APERIOD + '-' + FP_SUB.NAME + '*' +  ATARGET + '*.SAVE')
				FP_FILE = FILE_PARSE(AFILE)
				SAVEFILE = DIR_TS_SUBAREAS_STATS + FP_FILE.NAME + '-STATS.SAVE'
				PRINT, AFILE
				IF AFILE EQ '' THEN CONTINUE

				TEMPLATE = CREATE_STRUCT(	'FIRST_NAME','','MASK','','SUBAREA_CODE',0,'SUBAREA_NAME','','N_SUBAREA',0L,$,
																	'N',0L,'MIN',0.0,'MAX',0.0,'MED',0.0,'MEAN',0.0,'VAR',0.0,'STD',0.0,'CV',0.0)
				TEMPLATE = STRUCT_2MISSINGS(TEMPLATE)

				S_DATA = IDL_RESTORE(AFILE)
				OK = WHERE(S_DATA.N NE MISSINGS(S_DATA.N) AND FLOAT(S_DATA.N)/FLOAT(S_DATA.N_SUBAREA) GE 0.05,COUNT)
				IF COUNT GE 1 THEN S_DATA = S_DATA[OK] ELSE STOP
				S_FP = PARSE_IT(S_DATA.FIRST_NAME,/ALL)
				FOR _PER=0,N_ELEMENTS(TS_SUBAREAS_PERIODS)-1L DO BEGIN
					APER = TS_SUBAREAS_PERIODS(_PER)
					IF APER EQ '!D' OR APER EQ '!W' OR APER EQ '!M' OR APER EQ '!DD' OR APER EQ '!ALL' THEN PERIOD = APERIOD
					IF APER EQ '!WEEK' THEN PERIOD = '!W'
					IF APER EQ '!Y' OR APER EQ '!MONTH' OR APER EQ '!SEA' OR APER EQ '!SEASON' OR APER EQ '!ANNUAL'THEN PERIOD = '!M'
					IF APER EQ '!YEAR' THEN PERIOD = '!Y'

					IF PERIOD EQ APERIOD THEN BEGIN
						DATA = S_DATA
						FA = S_FP
					ENDIF	ELSE BEGIN
						DATA = NEW
						OK = WHERE(STRPOS(DATA.FIRST_NAME,PERIOD) NE -1 AND DATA.N NE MISSINGS(DATA.N) AND DATA.N GT 0,COUNT)
						IF COUNT GE 1 THEN DATA = DATA[OK] ELSE STOP
						FA = PARSE_IT(DATA.FIRST_NAME,/ALL)
					ENDELSE

					BB = WHERE_SETS(DATA.SUBAREA_CODE)

					FOR _BB = 0L, N_ELEMENTS(BB)-1 DO BEGIN
						SUBS = WHERE_SETS_SUBS(BB(_BB))
						BSET = DATA(SUBS)
						FP = FA(SUBS)
						LABEL = '-' + FP.SENSOR + '-' + FP.SATELLITE + '-' + FP.COVERAGE + '-' + FP.METHOD + '-' + FP.MAP + '-' + FP.PROD + '-' + FP.ALG
						LABEL = '-' + FP.MAP + '-' + FP.PROD + '-' + FP.ALG
						JULIAN = PERIOD_2JD(FP.PERIOD)
						WIDTH = 1
						IF APER EQ '!DD' THEN WIDTH = 8
						IF APER EQ '!MM' THEN WIDTH = 3
						IF APER EQ '!SEA' OR APER EQ '!SEASON' THEN BEGIN
							IF APER EQ '!SEASON' THEN BEGIN
								PER_CODE = '!ALL'
								OK = WHERE(FP.MONTH_START GE '01' AND FP.MONTH_START LE '05', COUNT)
								IF COUNT GE 1 THEN WS_SET = PERIOD_SETS(JULIAN[OK], DATA=FP[OK].FULLNAME, PERIOD_CODE=PER_CODE,LABEL=LABEL,JD_START=JD_START, JD_END=JD_END,/NESTED)
								OK = WHERE(FP.MONTH_START GE '06' AND FP.MONTH_START LE '08', COUNT)
								IF COUNT GE 1 THEN SUM_SET = PERIOD_SETS(JULIAN[OK], DATA=FP[OK].FULLNAME, PERIOD_CODE=PER_CODE,LABEL=LABEL,JD_START=JD_START, JD_END=JD_END,/NESTED)
								OK = WHERE(FP.MONTH_START GE '09' AND FP.MONTH_START LE '12', COUNT)
								IF COUNT GE 1 THEN FALL_SET = PERIOD_SETS(JULIAN[OK], DATA=FP[OK].FULLNAME, PERIOD_CODE=PER_CODE,LABEL=LABEL,JD_START=JD_START, JD_END=JD_END,/NESTED)
								_STRUCT = REPLICATE(TEMPLATE,3)
								SEASON_LABELS = ['!MONTHMONTH-WSP','!MONTHMONTH-SUM','!MONTHMONTH-FAL']
								FOR _SETS = 0L, 2 DO BEGIN
									IF _SETS EQ 0 THEN _SEASON_SET = WS_SET
									IF _SETS EQ 1 THEN _SEASON_SET = SUM_SET
									IF _SETS EQ 2 THEN _SEASON_SET = FALL_SET
									FILES = _SEASON_SET.(0)
									_STRUCT(_SETS).FIRST_NAME		= SEASON_LABELS(_SETS)  + LABEL[0]
									_STRUCT(_SETS).MASK 				= BSET[0].MASK
									_STRUCT(_SETS).SUBAREA_CODE	= BSET[0].SUBAREA_CODE
									_STRUCT(_SETS).SUBAREA_NAME	= BSET[0].SUBAREA_NAME
									_STRUCT(_SETS).N_SUBAREA		= BSET[0].N_SUBAREA
									_STRUCT(_SETS).N            = 0
									OK = WHERE_MATCH(BSET.FIRST_NAME, FILES, COUNT)
									IF COUNT LT 1 THEN CONTINUE
									STAT = STATS(ALOG(BSET[OK].MEAN))
									_STRUCT(_SETS).N 			= STAT.N
									_STRUCT(_SETS).MIN		= EXP(STAT.MIN)
									_STRUCT(_SETS).MAX		= EXP(STAT.MAX)
									_STRUCT(_SETS).MED		= EXP(STAT.MED)
									_STRUCT(_SETS).MEAN		= EXP(STAT.MEAN)
									_STRUCT(_SETS).VAR		= EXP(STAT.VAR)
									_STRUCT(_SETS).STD		= EXP(STAT.STD)
									_STRUCT(_SETS).CV			= EXP(STAT.CV)
								ENDFOR
							ENDIF ELSE BEGIN
								_YY = WHERE_SETS(FP.YEAR_START)
								COUNTER = 0
								_STRUCT = REPLICATE(TEMPLATE,N_ELEMENTS(_YY)*3)
								FOR YTH = 0L, N_ELEMENTS(_YY)-1 DO BEGIN
									_YEAR = _YY(YTH).VALUE
									PER_CODE = '!ALL'
									OK = WHERE(FP.MONTH_START GE '01' AND FP.MONTH_START LE '05' AND FP.YEAR_START EQ _YEAR, COUNT)
									WS_SET = PERIOD_SETS(JULIAN[OK], DATA=FP[OK].FULLNAME, PERIOD_CODE=PER_CODE,LABEL=LABEL,JD_START=JD_START, JD_END=JD_END,/NESTED)
									OK = WHERE(FP.MONTH_START GE '06' AND FP.MONTH_START LE '08' AND FP.YEAR_START EQ _YEAR, COUNT)
									SUM_SET = PERIOD_SETS(JULIAN[OK], DATA=FP[OK].FULLNAME, PERIOD_CODE=PER_CODE,LABEL=LABEL,JD_START=JD_START, JD_END=JD_END,/NESTED)
									OK = WHERE(FP.MONTH_START GE '09' AND FP.MONTH_START LE '12' AND FP.YEAR_START EQ _YEAR, COUNT)
									FALL_SET = PERIOD_SETS(JULIAN[OK], DATA=FP[OK].FULLNAME, PERIOD_CODE=PER_CODE,LABEL=LABEL,JD_START=JD_START, JD_END=JD_END,/NESTED)
									SEASON_LABELS = ['!MM_' + _YEAR + '01' +'_' + _YEAR + '05' + '_WSP',$
																	 '!MM_' + _YEAR + '06' +'_' + _YEAR + '08' + '_SUM',$
																	 '!MM_' + _YEAR + '09' +'_' + _YEAR + '12' + '_FAL']
									FOR _SETS = 0L, 2 DO BEGIN
										IF _SETS EQ 0 THEN _SEASON_SET = WS_SET
										IF _SETS EQ 1 THEN _SEASON_SET = SUM_SET
										IF _SETS EQ 2 THEN _SEASON_SET = FALL_SET
										FILES = _SEASON_SET.(0)
										_STRUCT(COUNTER).FIRST_NAME		= SEASON_LABELS(_SETS) + LABEL[0]
										_STRUCT(COUNTER).MASK 				= BSET[0].MASK
										_STRUCT(COUNTER).SUBAREA_CODE	= BSET[0].SUBAREA_CODE
										_STRUCT(COUNTER).SUBAREA_NAME	= BSET[0].SUBAREA_NAME
										_STRUCT(COUNTER).N_SUBAREA		= BSET[0].N_SUBAREA
										_STRUCT(COUNTER).N            = 0
										OK = WHERE_MATCH(BSET.FIRST_NAME, FILES, COUNT)
										IF COUNT LT 1 THEN CONTINUE
										STAT = STATS(ALOG(BSET[OK].MEAN))
										_STRUCT(COUNTER).N 			= STAT.N
										_STRUCT(COUNTER).MIN		= EXP(STAT.MIN)
										_STRUCT(COUNTER).MAX		= EXP(STAT.MAX)
										_STRUCT(COUNTER).MED		= EXP(STAT.MED)
										_STRUCT(COUNTER).MEAN		= EXP(STAT.MEAN)
										_STRUCT(COUNTER).VAR		= EXP(STAT.VAR)
										_STRUCT(COUNTER).STD		= EXP(STAT.STD)
										_STRUCT(COUNTER).CV			= EXP(STAT.CV)
										COUNTER = COUNTER + 1
									ENDFOR
								ENDFOR
							ENDELSE
						ENDIF ELSE BEGIN
							NAME_SET=PERIOD_SETS(JULIAN,DATA=FP.FULLNAME,WIDTH=WIDTH,period_code=APER,LABEL=LABEL,JD_START=JD_START, JD_END=JD_END,/NESTED)
							TAGS=TAG_NAMES(NAME_SET)
							_STRUCT = REPLICATE(TEMPLATE,N_ELEMENTS(TAGS))
							FOR _TAG = 0L, N_ELEMENTS(TAGS)-1 DO BEGIN
								FILES = NAME_SET.(_TAG)
								_STRUCT(_TAG).FIRST_NAME		= TAGS(_TAG) + LABEL(_TAG)
								_STRUCT(_TAG).MASK 					= BSET[0].MASK
								_STRUCT(_TAG).SUBAREA_CODE	= BSET[0].SUBAREA_CODE
								_STRUCT(_TAG).SUBAREA_NAME	= BSET[0].SUBAREA_NAME
								_STRUCT(_TAG).N_SUBAREA			= BSET[0].N_SUBAREA
								_STRUCT(_TAG).N             = 0
								OK = WHERE_MATCH(BSET.FIRST_NAME, FILES, COUNT)
								IF COUNT LT 1 THEN CONTINUE
								STAT = STATS(ALOG(BSET[OK].MEAN))
								_STRUCT(_TAG).N 		= STAT.N
								_STRUCT(_TAG).MIN		= EXP(STAT.MIN)
								_STRUCT(_TAG).MAX		= EXP(STAT.MAX)
								_STRUCT(_TAG).MED		= EXP(STAT.MED)
								_STRUCT(_TAG).MEAN	= EXP(STAT.MEAN)
								_STRUCT(_TAG).VAR		= EXP(STAT.VAR)
								_STRUCT(_TAG).STD		= EXP(STAT.STD)
								_STRUCT(_TAG).CV		= EXP(STAT.CV)
							ENDFOR ;FOR _TAG = 0L, N_ELEMENTS(TAGS)-1 DO BEGIN
						ENDELSE
						IF _BB EQ 0 AND _PER EQ 0 THEN NEW = _STRUCT ELSE NEW = STRUCT_CONCAT(NEW,_STRUCT)
					ENDFOR ;FOR _BB = 0L, N_ELEMENTS(BB)-1 DO BEGIN
  			ENDFOR ;FOR _PER=0,N_ELEMENTS(TS_SUBAREA_PERIODS)-1L DO BEGIN
  			SAVE, FILENAME=SAVEFILE, NEW,/COMPRESS
  			SAVE_2CSV,SAVEFILE
			ENDFOR ;FOR _PROD = 0L,N_ELEMENTS(TS_SUBAREAS_PRODUCTS)-1L DO BEGIN
		ENDFOR ;FOR NTH=0,N_ELEMENTS(SUBAREA_FILE)-1L DO BEGIN
	ENDIF ;IF DO_TS_SUBAREAS_STATS GE 1 THEN BEGIN


; *****************************************************************
	IF DO_TS_SUBAREAS_ANOMS GE 1 THEN BEGIN
; *****************************************************************
    OVERWRITE = DO_TS_SUBAREAS_ANOMS EQ 2
    DIR_TS_SUBAREAS_SAVE				= DIR+':\PROJECTS\RI_SOUND\TS_SUBAREAS\save\'
		DIR_TS_SUBAREAS_STATS				= DIR+':\PROJECTS\RI_SOUND\TS_SUBAREAS\stats\'
		DIR_TS_SUBAREAS_ANOMS				= DIR+':\PROJECTS\RI_SOUND\TS_SUBAREAS\anoms\'

		TS_SUBAREAS_TARGETS     		= ['PAR','PPD-OPAL','PPD-VGMB','CHLOR_A-MB','CHLOR_A-OC4','SST']
  	DATE_RANGE                  = [19980101000000,20071231235959]

		SUBAREA_FILE = ['MASK_SUBAREA-RI_SOUND-PXY_120_120.SAVE','MASK_SUBAREA-RI_SOUND-3REGIONS-PXY_120_120.SAVE']

		FOR NTH=0,N_ELEMENTS(SUBAREA_FILE)-1L DO BEGIN
      ASUBAREA_FILE = SUBAREA_FILE[NTH]
      FP_SUB  = FILE_PARSE(ASUBAREA_FILE)

			FOR _PROD = 0L,N_ELEMENTS(TS_SUBAREAS_TARGETS)-1L DO BEGIN
				ATARGET = TS_SUBAREAS_TARGETS(_PROD)
  			APROD = VALIDS('PRODS',ATARGET)
  			AALG  = VALIDS('ALGS',ATARGET)

				APERIOD = '!D'
				TS_SUBAREAS_PERIODS     		= ['!D',   '!DD',  '!M',	  '!M',   '!Y',   '!MONTH', '!MM',   '!MM']
  			TS_SUBAREAS_APERIODS        = ['!YEAR','!YEAR','!MONTH','!YEAR','!YEAR','!YEAR',  '!YEAR', '!MONTHMONTH']

				AFILE = FILE_SEARCH(DIR_TS_SUBAREAS_SAVE + APERIOD + '-' + FP_SUB.NAME + '*' +  ATARGET + '*.SAVE') ;	& ADATA = IDL_RESTORE(AFILE)
				BFILE = FILE_SEARCH(DIR_TS_SUBAREAS_STATS + APERIOD + '-' + FP_SUB.NAME + '*' +  ATARGET + '*-STATS.SAVE')
				IF N_ELEMENTS(BFILE) EQ 1 THEN BDATA = IDL_RESTORE(BFILE) ELSE STOP
				FP_FILE = FILE_PARSE(AFILE)
				SAVEFILE = DIR_TS_SUBAREAS_ANOMS + FP_FILE.NAME + '-ANOMS.SAVE'
				PRINT, AFILE
				IF AFILE EQ '' THEN CONTINUE

				TEMPLATE = CREATE_STRUCT('FIRST_NAME','','ANOM_RATIO','','MASK','','SUBAREA_CODE',0,'SUBAREA_NAME','','N_SUBAREA',0L,'NOMINATOR',0.0,'DENOMINATOR',0.0,'ANOM',0.0)
				TEMPLATE = STRUCT_2MISSINGS(TEMPLATE)

				;_ADATA = BDATA
				;_BDATA = BDATA
    		OK = WHERE(BDATA.N NE MISSINGS(BDATA.N),COUNT)
				IF COUNT GE 1 THEN BDATA = BDATA[OK] ELSE STOP
				FP = PARSE_IT(BDATA.FIRST_NAME,/ALL)

				FOR _PER=0,N_ELEMENTS(TS_SUBAREAS_PERIODS)-1L DO BEGIN
					NOM_PER = TS_SUBAREAS_PERIODS(_PER)
					DEN_PER = TS_SUBAREAS_APERIODS(_PER)

;					IF NOM_PER EQ APERIOD THEN _ADATA = ADATA ELSE _ADATA = BDATA
;					FB = PARSE_IT(_BDATA.FIRST_NAME,/ALL)
;					IF NOM_PER EQ APERIOD THEN BEGIN
;						OK = WHERE(FA.DATE_START GE MIN(DATE_RANGE) AND FA.DATE_START LE MAX(DATE_RANGE),COUNT)
;						IF COUNT GE 1 THEN _ADATA = _ADATA[OK] ELSE STOP
;						FA = FA[OK]
;					ENDIF
					OK = WHERE(FP.PERIOD_CODE EQ NOM_PER,COUNT) & IF COUNT LT 1 THEN STOP
					_ADATA = BDATA[OK] & FA = FP[OK]
					OK = WHERE(FP.PERIOD_CODE EQ DEN_PER,COUNT) & IF COUNT LT 1 THEN STOP
					_BDATA = BDATA[OK] & FB = FP[OK]
					AA = WHERE_SETS(_ADATA.SUBAREA_CODE)

					FOR _AA = 0L, N_ELEMENTS(AA)-1 DO BEGIN
						SUBS = WHERE_SETS_SUBS(AA(_AA))
						ASET = _ADATA(SUBS)
						_FA = FA(SUBS)
						OK = WHERE(_BDATA.SUBAREA_CODE EQ AA(_AA).VALUE)
						BSET = _BDATA[OK]
						_FB = FB[OK]
						_LABEL = REPLICATE('',N_ELEMENTS(_FA))
						OK = WHERE(STRPOS(_FA.FIRST_NAME,'WSP') NE -1, COUNT) & IF COUNT GE 1 THEN _LABEL[OK] = '-WSP'
						OK = WHERE(STRPOS(_FA.FIRST_NAME,'SUM') NE -1, COUNT) & IF COUNT GE 1 THEN _LABEL[OK] = '-SUM'
						OK = WHERE(STRPOS(_FA.FIRST_NAME,'FAL') NE -1, COUNT) & IF COUNT GE 1 THEN _LABEL[OK] = '-FAL'
						LABEL = _FA.PERIOD + _LABEL + '-' + _FA.SENSOR + '-' + _FA.SATELLITE + '-' + _FA.COVERAGE + '-' + _FA.METHOD + '-' + _FA.MAP + '-' + _FA.PROD + '-' + _FA.ALG + '-ANOM_RATIO'

						_STRUCT = REPLICATE(TEMPLATE,N_ELEMENTS(ASET))
						FOR _ASET = 0L, N_ELEMENTS(ASET)-1 DO BEGIN
							_STRUCT(_ASET).FIRST_NAME		= LABEL(_ASET)
							_STRUCT(_ASET).MASK 				= ASET[0].MASK
							_STRUCT(_ASET).SUBAREA_CODE	= ASET[0].SUBAREA_CODE
							_STRUCT(_ASET).SUBAREA_NAME	= ASET[0].SUBAREA_NAME
							_STRUCT(_ASET).N_SUBAREA		= ASET[0].N_SUBAREA

							IF DEN_PER EQ '!MONTHMONTH' OR DEN_PER EQ '!MONTH' THEN BEGIN
								IF DEN_PER EQ '!MONTH' THEN BEGIN
									OK = WHERE(_FB.MONTH_START EQ _FA(_ASET).MONTH_START,COUNT)
									IF COUNT GE 1 THEN DEN = BSET[OK].MEAN ELSE STOP
									BPERIOD = _FB[OK].PERIOD
								ENDIF ELSE BEGIN
									SEASONS = ['WSP','SUM','FAL']
									FOR _SEA = 0L, N_ELEMENTS(SEASONS)-1 DO BEGIN
										SEA = WHERE(STRPOS(_FA(_ASET).NAME,SEASONS(_SEA)) NE -1, COUNT)
										IF COUNT EQ 0 THEN CONTINUE
										OK = WHERE(STRPOS(_FB.NAME,SEASONS(_SEA)) NE -1, COUNT)
										IF COUNT GE 1 THEN DEN = BSET[OK].MEAN ELSE STOP
										BPERIOD = SEASONS(_SEA)
									ENDFOR
								ENDELSE
							ENDIF	ELSE BEGIN
								DEN = BSET.MEAN
								BPERIOD = _FB.PERIOD
							ENDELSE
							IF N_ELEMENTS(DEN) NE 1 THEN STOP
							_STRUCT(_ASET).NOMINATOR = ASET(_ASET).MEAN
							_STRUCT(_ASET).DENOMINATOR = DEN
							_STRUCT(_ASET).ANOM = ASET(_ASET).MEAN/DEN
							_STRUCT(_ASET).ANOM_RATIO   = _FA(_ASET).PERIOD + '-' + BPERIOD
						ENDFOR ;FOR _ASET = 0L, N_ELEMENTS(ASET)-1 DO BEGIN
						IF _AA EQ 0 AND _PER EQ 0 THEN NEW = _STRUCT ELSE NEW = STRUCT_CONCAT(NEW,_STRUCT)
					ENDFOR ;FOR _AA = 0L, N_ELEMENTS(AA)-1 DO BEGIN
  			ENDFOR ;FOR _PER=0,N_ELEMENTS(TS_SUBAREA_PERIODS)-1L DO BEGIN
  			SAVE, FILENAME=SAVEFILE, NEW,/COMPRESS
  			SAVE_2CSV,SAVEFILE
			ENDFOR ;FOR _PROD = 0L,N_ELEMENTS(TS_SUBAREAS_PRODUCTS)-1L DO BEGIN
		ENDFOR ;FOR NTH=0,N_ELEMENTS(SUBAREA_FILE)-1L DO BEGIN
	ENDIF ;IF DO_TS_SUBAREAS_ANOMS GE 1 THEN BEGIN

; *****************************************************************
	IF DO_BLOOM_TABLE GE 1 THEN BEGIN
; *****************************************************************
    OVERWRITE = DO_BLOOM_TABLE EQ 2

		AC  = IDL_RESTORE(DIR+':\PROJECTS\RI_SOUND\TS_SUBAREAS\anoms\!D-MASK_SUBAREA-RI_SOUND-PXY_120_120-CHLOR_A-MB-ANOMS.SAVE')
		AP  = IDL_RESTORE(DIR+':\PROJECTS\RI_SOUND\TS_SUBAREAS\anoms\!D-MASK_SUBAREA-RI_SOUND-PXY_120_120-PPD-OPAL-ANOMS.SAVE')

		OK = WHERE(STRMID(AC.FIRST_NAME,0,3) EQ '!D_') & AAC = AC[OK] & CTAGS = TAG_NAMES(AAC); & FP_AAC = PARSE_IT(AAC.FIRST_NAME,/ALL)
		OK = WHERE(STRMID(AP.FIRST_NAME,0,3) EQ '!D_') & AAP = AP[OK] & PTAGS = TAG_NAMES(AAP); & FP_AAP = PARSE_IT(AAP.FIRST_NAME,/ALL)
		TAGNAMES = [CTAGS[1],CTAGS(2),CTAGS(3),CTAGS(4),CTAGS(5)]
		STRUCT = STRUCT_JOIN(AAC, AAP, TAGNAMES=TAGNAMES)
		FP = PARSE_IT(STRUCT.ANOM_RATIO,/ALL)
		CODES = [6]
		REGIONS = ['Northwest','South','Northeast']
		SEASONS = ['WSP','SUM','FAL']				; WIN-SP=JAN,FEB,MAR,APR,MAY  SUM=JUN,JUL,AUG  FALL=SEP,OCT,NOV,DEC
		YEARS = ['1998','1999','2000','2001','2002','2003','2004','2005','2006','2007']
		DATES = CREATE_DATE('19980101','20080101')
		NEW = CREATE_STRUCT('YEAR','','SEASON','','SUBAREA_CODE','','SUBAREA_NAME','','INITIATION',0L, 'DURATION',0L, 'TERMINATION',0L, 'NDAYS',0L,$
												'CHL_INT_DATE', 0L,'CHL_DURATION', 0L,'CHL_END_DATE', 0L,'CHL_NDAYS', 0L,'CHL_NAVG', 0L,'CHL_MIN', 0.0,'CHL_MAX', 0.0,'CHL_MEAN', 0.0,$
												'PROD_INT_DATE',0L,'PROD_DURATION',0L,'PROD_END_DATE',0L,'PROD_NDAYS',0L,'PROD_NAVG',0L,'PROD_MIN',0.0,'PROD_MAX',0.0,'PROD_MEAN',0.0)
	;	NEW = STRUCT_2MISSINGS(NEW)
		NEW = REPLICATE(NEW, N_ELEMENTS(CODES)*N_ELEMENTS(SEASONS)*N_ELEMENTS(YEARS))
		CT = 0
;		FOR CTH = 0L, N_ELEMENTS(CODES)-1 DO BEGIN
;			ACODE = CODES(CTH)
;			OK = WHERE(STRUCT.SUBAREA_CODE EQ ACODE AND STRUCT.ANOM NE MISSINGS(0.0))
;			SUBAREA = STRUCT(OK[0]).SUBAREA_NAME
;			CHL = STRUCT[OK]
;			CY = INTERP_XTEND(DATE_2JD(FP[OK].DATE_START), CHL.ANOM,  DATE_2JD(DATES))
;			FOR STH = 0L, N_ELEMENTS(SEASONS)-1 DO BEGIN
;				ASEA = SEASONS(STH)
;				FOR YTH = 0L, N_ELEMENTS(YEARS)-1 DO BEGIN
;					AYEAR = YEARS(YTH)
;					IF ASEA EQ 'WSP' THEN BEGIN & SDATE = DATE_2JD(AYEAR + '0101') & EDATE = DATE_2JD(AYEAR + '0531') & ENDIF
;					IF ASEA EQ 'SUM' THEN BEGIN & SDATE = DATE_2JD(AYEAR + '0601') & EDATE = DATE_2JD(AYEAR + '0831') & ENDIF
;					IF ASEA EQ 'FAL' THEN BEGIN & SDATE = DATE_2JD(AYEAR + '0901') & EDATE = DATE_2JD(AYEAR + '1231') & ENDIF
;
;					NEW(CT).YEAR = AYEAR
;					NEW(CT).SEASON = ASEA
;					NEW(CT).SUBAREA_CODE = ACODE
;					NEW(CT).SUBAREA_NAME = SUBAREA
;
;					OK = WHERE(CY.X GE SDATE AND CY.X LE EDATE,COUNT)
;					NEW(CT).CHL_MAX = MAX(CY[OK].Y)
;					NEW(CT).CHL_MEAN = MEAN(CY[OK].Y)
;
;					OK = WHERE(CY.Y GE 2 AND CY.X GE SDATE AND CY.X LE EDATE,COUNT)
;					IF COUNT GE 1 THEN NEW(CT).CHL_INT_DATE = JD_2DOY(MIN(CY[OK].X)) ELSE NEW(CT).CHL_INT_DATE = 0
;					IF COUNT GE 1 THEN NEW(CT).CHL_END_DATE = JD_2DOY(MAX(CY[OK].X)) ELSE NEW(CT).CHL_END_DATE = 0
;					IF COUNT GE 1 THEN NEW(CT).CHL_DURATION = NEW(CT).CHL_END_DATE - NEW(CT).CHL_INT_DATE + 1 ELSE NEW(CT).CHL_DURATION = 0
;					NEW(CT).CHL_NDAYS = COUNT
;					OK = WHERE(CY.Y GE 1 AND CY.X GE SDATE AND CY.X LE EDATE,COUNT)
;					NEW(CT).CHL_NAVG = COUNT
;
;					CT = CT + 1
;				ENDFOR
;			ENDFOR
;		ENDFOR

;		FOR CTH = 0L, N_ELEMENTS(CODES)-1 DO BEGIN
;			ACODE = CODES(CTH)
;			OK = WHERE(STRUCT.SUBAREA_CODE EQ ACODE AND STRUCT.ANOM NE MISSINGS(0.0))
;			SUBAREA = STRUCT(OK[0]).SUBAREA_NAME
;			CHL = STRUCT[OK]
;			CY = INTERP_XTEND(DATE_2JD(FP[OK].DATE_START), CHL.ANOM,  DATE_2JD(DATES))
;			OK = WHERE(STRUCT.SUBAREA_CODE EQ ACODE AND STRUCT.ANOM$2 NE MISSINGS(0.0))
;			PROD = STRUCT[OK]
;			PY = INTERP_XTEND(DATE_2JD(FP[OK].DATE_START), PROD.ANOM$2,  DATE_2JD(DATES))
;			CPY = FLTARR(N_ELEMENTS(CY.Y))
;			CORP = STRARR(N_ELEMENTS(CY.Y))
;			ANOM = STRARR(N_ELEMENTS(CY.Y))
;			FOR NTH = 0L, N_ELEMENTS(CPY)-1 DO BEGIN
;				CPY[NTH] = MAX([CY[NTH].Y,PY[NTH].Y])
;				IF CPY[NTH]  EQ CY[NTH].Y THEN CORP[NTH] = 'CHL' ELSE CORP[NTH] = 'PPD'
;				IF CORP[NTH] EQ 'CHL' AND CPY[NTH] GE 2 THEN ANOM[NTH] = 'ANOM'
;				IF CORP[NTH] EQ 'PPD' AND CPY[NTH] GE 1.75 THEN ANOM[NTH] = 'ANOM'
;			ENDFOR
;			FOR STH = 0L, N_ELEMENTS(SEASONS)-1 DO BEGIN
;				ASEA = SEASONS(STH)
;				FOR YTH = 0L, N_ELEMENTS(YEARS)-1 DO BEGIN
;					AYEAR = YEARS(YTH)
;					IF ASEA EQ 'WSP' THEN BEGIN & SDATE = DATE_2JD(AYEAR + '0101') & EDATE = DATE_2JD(AYEAR + '0531') & ENDIF
;					IF ASEA EQ 'SUM' THEN BEGIN & SDATE = DATE_2JD(AYEAR + '0601') & EDATE = DATE_2JD(AYEAR + '0831') & ENDIF
;					IF ASEA EQ 'FAL' THEN BEGIN & SDATE = DATE_2JD(AYEAR + '0901') & EDATE = DATE_2JD(AYEAR + '1231') & ENDIF
;					IF ASEA EQ 'TOT' THEN BEGIN & SDATE = DATE_2JD(AYEAR + '0101') & EDATE = DATE_2JD(AYEAR + '1231') & ENDIF
;
;					NEW(CT).YEAR = AYEAR
;					NEW(CT).SEASON = ASEA
;					NEW(CT).SUBAREA_CODE = ACODE
;					NEW(CT).SUBAREA_NAME = SUBAREA
;
;					OK = WHERE(CY.X GE SDATE AND CY.X LE EDATE,COUNT)
;					NEW(CT).CHL_MIN = MIN(CY[OK].Y)
;					NEW(CT).CHL_MAX = MAX(CY[OK].Y)
;					NEW(CT).CHL_MEAN = MEAN(CY[OK].Y)
;					OK = WHERE(PY.X GE SDATE AND PY.X LE EDATE,COUNT)
;					NEW(CT).PROD_MIN = MIN(PY[OK].Y)
;					NEW(CT).PROD_MAX = MAX(PY[OK].Y)
;					NEW(CT).PROD_MEAN = MEAN(PY[OK].Y)
;
;					OK = WHERE(CY.Y GE 2 AND CY.X GE SDATE AND CY.X LE EDATE,COUNT)
;					IF COUNT GE 1 THEN NEW(CT).CHL_INT_DATE = JD_2DOY(MIN(CY[OK].X)) ELSE NEW(CT).CHL_INT_DATE = 0
;					IF COUNT GE 1 THEN NEW(CT).CHL_END_DATE = JD_2DOY(MAX(CY[OK].X)) ELSE NEW(CT).CHL_END_DATE = 0
;					IF COUNT GE 1 THEN NEW(CT).CHL_DURATION = NEW(CT).CHL_END_DATE - NEW(CT).CHL_INT_DATE + 1 ELSE NEW(CT).CHL_DURATION = 0
;					NEW(CT).CHL_NDAYS = COUNT
;					OK = WHERE(CY.Y GE 1 AND CY.X GE SDATE AND CY.X LE EDATE,COUNT)
;					NEW(CT).CHL_NAVG = COUNT
;
;					OK = WHERE(PY.Y GE 1.75 AND PY.X GE SDATE AND PY.X LE EDATE,COUNT)
;					IF COUNT GE 1 THEN NEW(CT).PROD_INT_DATE = JD_2DOY(MIN(PY[OK].X)) ELSE NEW(CT).PROD_INT_DATE = 0
;					IF COUNT GE 1 THEN NEW(CT).PROD_END_DATE = JD_2DOY(MAX(PY[OK].X)) ELSE NEW(CT).PROD_END_DATE = 0
;					IF COUNT GE 1 THEN NEW(CT).PROD_DURATION = NEW(CT).PROD_END_DATE - NEW(CT).PROD_INT_DATE + 1 ELSE NEW(CT).PROD_DURATION = 0
;					NEW(CT).PROD_NDAYS = COUNT
;					OK = WHERE(PY.Y GE 1 AND PY.X GE SDATE AND PY.X LE EDATE,COUNT)
;					NEW(CT).PROD_NAVG = COUNT
;
;					OK = WHERE(ANOM EQ 'ANOM' AND PY.X GE SDATE AND PY.X LE EDATE,COUNT)
;					IF COUNT GE 1 THEN NEW(CT).INITIATION = JD_2DOY(MIN(PY[OK].X)) ELSE NEW(CT).INITIATION = 0
;					IF COUNT GE 1 THEN NEW(CT).TERMINATION = JD_2DOY(MAX(PY[OK].X)) ELSE NEW(CT).TERMINATION = 0
;					IF COUNT GE 1 THEN NEW(CT).DURATION = NEW(CT).TERMINATION - NEW(CT).INITIATION + 1 ELSE NEW(CT).DURATION = 0
;					NEW(CT).NDAYS = COUNT
;
;					CT = CT + 1
;				ENDFOR
;			ENDFOR
;		ENDFOR
;
;		STRUCT_2CSV, 'D:\PROJECTS\RI_SOUND\DATA\RI_SOUND-BLOOM_TABLE.CSV',NEW
stop
	ENDIF

;	*******************************************************
	IF DO_TS_SUBAREAS_ANNUAL_PROD GE 1 THEN BEGIN
;	*******************************************************
		OVERWRITE = DO_TS_SUBAREAS_ANNUAL_PROD GE 2

		DIR_TS_SUBAREAS_SAVE				= 'D:\PROJECTS\RI_SOUND\TS_SUBAREAS\save\'
		DIR_TS_SUBAREAS_STATS				= 'D:\PROJECTS\RI_SOUND\TS_SUBAREAS\stats\'

		TS_SUBAREAS_TARGETS     		= ['PPD-VGMB','PPD-OPAL']
		DATE_RANGE                  = ['19980101000000','20071231235959']
		WSP                         = ['0101','0531']
		SUM                         = ['0601','0831']
		FAL                         = ['0901','1231']
		NEWDATES										= CREATE_DATE(DATE_RANGE[0],DATE_RANGE[1])
		NEWJDS	                    = DATE_2JD(NEWDATES)
		NEWYEARS 										= STRMID(NEWDATES,0,4)
		MONDAYS                     = STRMID(NEWDATES,4,4)

		FOR NTH = 0L, N_ELEMENTS(TS_SUBAREAS_TARGETS)-1 DO BEGIN
			AFILE = FILE_SEARCH(DIR_TS_SUBAREAS_STATS + '*' + TS_SUBAREAS_TARGETS[NTH] + '*-STATS.SAVE')
			DATA = IDL_RESTORE(AFILE)
			FP_FILE = FILE_PARSE(AFILE)
			SAVEFILE = DIR_TS_SUBAREAS_STATS + FP_FILE.NAME + '-ANNUAL.SAVE'
			OK = WHERE(STRMID(DATA.FIRST_NAME,0,3) EQ '!D_', COUNT)
			IF COUNT GE 1 THEN DATA = DATA[OK] ELSE CONTINUE
			B = WHERE_SETS(DATA.SUBAREA_CODE)
			TEMPLATE = CREATE_STRUCT('FIRST_NAME','','ANNUAL_PERIOD','','MASK','','SUBAREA_CODE',0,'SUBAREA_NAME','','N_SUBAREA',0L,$
															 'N_PROD',0L,'N_DAYS',0L,'TOTAL_PROD',0.0,'MEAN_PROD',0.0)
			TEMPLATE = STRUCT_2MISSINGS(TEMPLATE)
			FOR BTH = 0L, N_ELEMENTS(B)-1 DO BEGIN
				SUBS = WHERE_SETS_SUBS(B(BTH))
				BSET = DATA(SUBS)
				FP   = PARSE_IT(BSET.FIRST_NAME,/ALL)
				DATE = DATE_2JD(FP.DATE_START)

				TOTWSPDAYS = 0
				TOTSUMDAYS = 0
				TOTFALDAYS = 0
				YSETS = WHERE_SETS(NEWYEARS)
				STRUCT = REPLICATE(TEMPLATE,(N_ELEMENTS(YSETS)*4)+4)
				STRUCT.MASK = BSET[0].MASK
				STRUCT.SUBAREA_CODE = BSET[0].SUBAREA_CODE
				STRUCT.SUBAREA_NAME = BSET[0].SUBAREA_NAME
				STRUCT.N_SUBAREA    = BSET[0].N_SUBAREA
				STRUCT.FIRST_NAME = '!DD' + FP[0].DATE_START + '_' + LAST(FP.DATE_END) + '-' + FP[0].SENSOR + '-' + FP[0].SATELLITE + '-' + FP[0].COVERAGE + '-' + FP[0].METHOD + '-' + FP[0].MAP + '-' + FP[0].PROD + '-' + FP[0].ALG + '-TOTAL_PROD'

				PROD = BSET.MEAN
				YY   = INTERP_XTEND(DATE,PROD,NEWJDS,X_MISSING=X_MISSING,Y_MISSING=Y_MISSING,ERROR=ERROR)
				NEWPROD = YY.Y
				STRUCT[0].ANNUAL_PERIOD = '!YEAR'
				STRUCT[0].TOTAL_PROD = TOTAL(NEWPROD)							; TOTAL PRODUCTION WITHIN DATE RANGE
				STRUCT[0].MEAN_PROD  = STRUCT[0].TOTAL_PROD/N_ELEMENTS(NEWJDS)
				STRUCT[0].N_PROD     = N_ELEMENTS(NEWPROD)
				STRUCT[0].N_DAYS     = N_ELEMENTS(NEWJDS)

				CT = 1
				FOR YTH = 0L, N_ELEMENTS(YSETS)-1 DO BEGIN
					AYEAR = YSETS(YTH).VALUE
					OK = WHERE(NEWYEARS EQ AYEAR, COUNT)
					IF COUNT GE 1 THEN BEGIN
						STRUCT(CT).ANNUAL_PERIOD 		= '!Y_' + AYEAR
						STRUCT(CT).TOTAL_PROD 			= TOTAL(NEWPROD[OK])																; TOTAL PRODUCTION FOR A GIVEN YEAR
						STRUCT(CT).MEAN_PROD  			= STRUCT(CT).TOTAL_PROD/DATE_DAYS_YEAR(AYEAR)	  		; MEAN PRODUCTION FOR A GIVEN YEAR
						STRUCT(CT).N_PROD 					= COUNT
						STRUCT(CT).N_DAYS 					= DATE_DAYS_YEAR(AYEAR)

						WSPDAYS = DATE_2DOY(AYEAR + WSP[1]) - DATE_2DOY(AYEAR + WSP[0]) + 1		& TOTWSPDAYS = TOTWSPDAYS + WSPDAYS
						OK = WHERE(NEWDATES GE AYEAR + WSP[0] AND NEWDATES LE AYEAR + WSP[1],COUNT)
						STRUCT(CT+1).ANNUAL_PERIOD 	= '!MM_WSP_' + AYEAR
						STRUCT(CT+1).TOTAL_PROD 		= TOTAL(NEWPROD[OK])
						STRUCT(CT+1).MEAN_PROD  		= STRUCT(CT+1).TOTAL_PROD/WSPDAYS
						STRUCT(CT+1).N_PROD 				= COUNT
						STRUCT(CT+1).N_DAYS 				= WSPDAYS

						SUMDAYS = DATE_2DOY(AYEAR + SUM[1]) - DATE_2DOY(AYEAR + SUM[0]) + 1 	& TOTSUMDAYS = TOTSUMDAYS + SUMDAYS
						OK = WHERE(NEWDATES GE AYEAR + SUM[0] AND NEWDATES LE AYEAR + SUM[1],COUNT)
						STRUCT(CT+2).ANNUAL_PERIOD 	= '!MM_SUM_' + AYEAR
						STRUCT(CT+2).TOTAL_PROD 		= TOTAL(NEWPROD[OK])
						STRUCT(CT+2).MEAN_PROD  		= STRUCT(CT+1).TOTAL_PROD/SUMDAYS
						STRUCT(CT+2).N_PROD 				= COUNT
						STRUCT(CT+2).N_DAYS 				= WSPDAYS

						FALDAYS = DATE_2DOY(AYEAR + FAL[1]) - DATE_2DOY(AYEAR + FAL[0]) + 1		& TOTFALDAYS = TOTFALDAYS + FALDAYS
						OK = WHERE(NEWDATES GE AYEAR + FAL[0] AND NEWDATES LE AYEAR + FAL[1],COUNT)
						STRUCT(CT+3).ANNUAL_PERIOD 	= '!MM_FAL_' + AYEAR
						STRUCT(CT+3).TOTAL_PROD		 	= TOTAL(NEWPROD[OK])
						STRUCT(CT+3).MEAN_PROD 			= STRUCT(CT+3).TOTAL_PROD/FALDAYS
						STRUCT(CT+3).N_PROD 				= COUNT
						STRUCT(CT+3).N_DAYS 				= WSPDAYS
					CT = CT + 4
					ENDIF
				ENDFOR ;FOR YTH = 0L, N_ELEMENTS(YSETS)-1 DO BEGIN
				OK = WHERE(STRMID(NEWDATES,4,4) GE WSP[0] AND STRMID(NEWDATES,4,4) LE WSP[1],COUNT)
				STRUCT(CT).ANNUAL_PERIOD 				= '!YEAR_WSP'
				STRUCT(CT).TOTAL_PROD 					= TOTAL(NEWPROD[OK])
				STRUCT(CT).MEAN_PROD 						= STRUCT(CT).TOTAL_PROD/TOTWSPDAYS
				STRUCT(CT).N_PROD 							= COUNT
				STRUCT(CT).N_DAYS 							= WSPDAYS

				OK = WHERE(STRMID(NEWDATES,4,4) GE SUM[0] AND STRMID(NEWDATES,4,4) LE SUM[1],COUNT)
				STRUCT(CT+1).ANNUAL_PERIOD 			= '!YEAR_SUM'
				STRUCT(CT+1).TOTAL_PROD 				= TOTAL(NEWPROD[OK])
				STRUCT(CT+1).MEAN_PROD 					= STRUCT(CT+1).TOTAL_PROD/TOTSUMDAYS
				STRUCT(CT+1).N_PROD 						= COUNT
				STRUCT(CT+1).N_DAYS 						= WSPDAYS

				OK = WHERE(STRMID(NEWDATES,4,4) GE FAL[0] AND STRMID(NEWDATES,4,4) LE FAL[1],COUNT)
				STRUCT(CT+2).ANNUAL_PERIOD	 		= '!YEAR_FAL'
				STRUCT(CT+2).TOTAL_PROD 				= TOTAL(NEWPROD[OK])
				STRUCT(CT+2).MEAN_PROD 					= STRUCT(CT+2).TOTAL_PROD/TOTFALDAYS
				STRUCT(CT+2).N_PROD 						= COUNT
				STRUCT(CT+2).N_DAYS 						= WSPDAYS

				IF BTH EQ 0L THEN NEW = STRUCT ELSE NEW = STRUCT_CONCAT(NEW, STRUCT)
			ENDFOR ;FOR BTH = 0L, N_ELEMENTS(B)-1 DO BEGIN
			SAVE, FILENAME=SAVEFILE, NEW,/COMPRESS
			SAVE_2CSV, SAVEFILE
		ENDFOR ;FOR NTH = 0L, N_ELEMENTS(TS_SUBAREAS_TARGETS)-1 DO BEGIN
	ENDIF ;IF DO_TS_SUBAREAS_ANNUAL_PROD GE 1 THEN BEGIN




; ************************************************
	IF 	DO_SAT_SHIP GE 1 THEN BEGIN
; ************************************************

		OVERWRITE = DO_SAT_SHIP GE 2

		MAP = 'RI_SOUND'
		AROUND = 2		
		HOURS = 24.0
		TARGETS = ['CHLOR_A-OC4','CHLOR_A-MB']
		DIR_OUT = DIR+':\PROJECTS\RI_SOUND\DATA\'
		DIR_DATA = ''
		SHIP_FILE = DIR+':\PROJECTS\RI_SOUND\DATA\Ocean_SAMP_Chlorophyll-BI_SOUND.csv'


		FOR NTH = 0L, N_ELEMENTS(TARGETS)-1 DO BEGIN
			ATARGET = TARGETS[NTH]
			APROD = VALIDS('PRODS',ATARGET)
			AALG  = VALIDS('ALGS',ATARGET)
			FILES = FILE_SEARCH(DIR+':\PROJECTS\RI_SOUND\SAVE\*'+ATARGET+'*.SAVE')

			IF APROD EQ 'CHLOR_A' THEN TRANSFORMATION = 'LOG' ELSE TRANSFORMATION = 'LINEAR'

			SD_SAT_SHIP,SHIP_FILE=SHIP_FILE,SAT_FILES=FILES,DIR_OUT=DIR_OUT,RANGE=RANGE,$
	                MAP=MAP, AROUND=AROUND,PRODUCTS=APROD,ALGS=AALG,HOURS=HOURS,DIR_DATA=DIR_DATA,$
  								TRANSFORMATION=TRANSFORMATION,CSV=CSV,OVERWRITE=overwrite
		ENDFOR
	ENDIF

; ************************************************
	IF 	DO_SAT_SHIP_FIG GE 1 THEN BEGIN
; ************************************************

		OVERWRITE = DO_SAT_SHIP_FIG GE 2

		OC4 = IDL_RESTORE(DIR+':\PROJECTS\RI_SOUND\DATA\SD_SAT_SHIP-BI_SOUND-CHLOR_A-OC4.SAVE')
		OCR = OC4[SORT(OC4.DATE_SHIP)]
		MB  = IDL_RESTORE(DIR+':\PROJECTS\RI_SOUND\DATA\SD_SAT_SHIP-BI_SOUND-CHLOR_A-MB.SAVE')
		PSPRINT,FILENAME=SAT_SHIP_FIG,/COLOR,/Full,/TIMES,/LANDSCAPE
		!P.MULTI=[0,1,1]

		PARAMS = [3,4,8]
		CHARSIZE = 2
		XMARGIN = [2,2]
		YMARGIN = [1,1]
		;SYM_COLOR = 32
		STATS_CHARSIZE = 1.5
		SYMSIZE = 1.5
		REG_THICK = 12
		THICK = 2
		FONT = 0
		CIRCLE,32, COLOR=5, FILL=0
		PSYM = 8
		ONE_COLOR = 0
		ONE_THICK = 5
		ONE_LINESTYLE = 2
		CTICKNAME=['0.1','1','10']
		OK = WHERE(OC4.DEPTH LE 5.0 AND OC4.MEAN NE MISSINGS(0.0) AND OC4.N GE 11 AND OC4.SHIP_DATA NE MISSINGS(0.0) AND OC4.MEAN GT 0.1 AND OC4.SHIP_DATA GT 0.1 AND OC4.MEAN LT 64)
		SAT = OC4[OK].MEAN
		CHL = OC4[OK].SHIP_DATA
		PLOTXY, CHL,SAT,DECIMALS=3,COLOR=5,/LOGLOG,/QUIET,MODEL='RMA',PARAMS=PARAMS,CHARSIZE=CHARSIZE,psym=psym,REG_COLOR=5, REG_THICK=REG_THICK,XTITLE='!8in situ!7 Chlorophyll !8a!7', $
			YTITLE='SeaWiFS Chlorophyll !8a!7',SYM_COLOR=SYM_COLOR,SYMSIZE=symsize,THICK=THICK,XRANGE=[0.1,10], YRANGE=[0.1,10],/GRID_NONE,XMARGIN=XMARGIN,YMARGIN=YMARGIN,STATS_CHARSIZE=STATS_CHARSIZE,$
			XTICKNAME=CTICKNAME,YTICKNAME=CTICKNAME,/ONE2ONE,ONE_COLOR=one_color,ONE_THICK=one_thick, ONE_LINESTYLE=one_linestyle,REG_MID_COLOR=5
		LABEL = 'A'
		COOR = COORD_2PLOT(0.945,0.9)
;		XYOUTS, COOR.X,COOR.Y,LABEL, ALIGN=-0.1, CHARSIZE=2.5, COLOR=0, CHARTHICK=1

	;	SRT = SORT(CHL) & CHL=CHL(SRT)

		STAT = STATS2(ALOG10(CHL),ALOG10(SAT),MODEL='RMA')
		SLOPE = STAT.SLOPE
		INT = STAT.INT

		OK = WHERE(MB.DEPTH LE 5.0 AND MB.MEAN NE MISSINGS(0.0) AND MB.N GE 11 AND MB.SHIP_DATA NE MISSINGS(0.0) AND MB.MEAN GT 0.1 AND MB.SHIP_DATA GT 0.1 AND MB.MEAN LT 64)
		SAT = MB[OK].MEAN
		CCHL = MB[OK].SHIP_DATA
		CIRCLE,32, COLOR=22,fill=0
		PLOTXY, CCHL,SAT,DECIMALS=3,COLOR=5,/LOGLOG,/QUIET,MODEL='RMA',PARAMS=PARAMS,CHARSIZE=CHARSIZE,psym=psym,REG_COLOR=22, REG_THICK=REG_THICK,XTITLE='!8in situ!7 Chlorophyll !8a!7', $
			YTITLE='Corrected Chlorophyll !8a!7',SYM_COLOR=SYM_COLOR,SYMSIZE=symsize,THICK=THICK,XRANGE=[0.1,10], YRANGE=[0.1,10],/GRID_NONE,XMARGIN=XMARGIN,YMARGIN=YMARGIN,STATS_CHARSIZE=STATS_CHARSIZE,$
			XTICKNAME=CTICKNAME,YTICKNAME=CTICKNAME,/ONE2ONE,ONE_COLOR=one_color,ONE_THICK=one_thick, ONE_LINESTYLE=one_linestyle,REG_MID_COLOR=22
;		SRT = SORT(CHL) & CHL = CHL(SRT)
		OPLOT, CHL, 10.0^(STAT.INT + STAT.slope*ALOG10(CHL)),COLOR=5,THICK=REG_THICK,LINESTYLE=0
		LABEL = 'B'
		COOR = COORD_2PLOT(0.945,0.9)
;		XYOUTS, COOR.X,COOR.Y,LABEL, ALIGN=-0.1, CHARSIZE=2.5, COLOR=0, CHARTHICK=1

		PSPRINT
		SKIP_SAT_SHIP:
stop
		GRACE = [50,50,50,50]
		BACKGROUND=255
		IMAGE_TRIM, SAT_SHIP_FIG, DIR_OUT=DIR_POSTER, DPI=600, BACKGROUND=BACKGROUND,GRACE=GRACE, OVERWRITE=overwrite

		STOP
	ENDIF


; ************************************************
	IF 	DO_STATION_EXTRACTS GE 1 THEN BEGIN
; ************************************************

		OVERWRITE = DO_STATION_EXTRACTS GE 2

		FILES = FILE_SEARCH(DIR+':\PROJECTS\RI_SOUND\TS_SUBAREAS\save\*.SAVE')
		DIR_OUT = DIR+':\PROJECTS\RI_SOUND\DATA\'
		FOR NTH=0L, N_ELEMENTS(FILES)-1 DO BEGIN
			AFILE = FILES[NTH]
			FN = FILE_PARSE(AFILE)
			CSV = READALL(AFILE)
			TAGS = TAG_NAMES(CSV)
			NEW = CREATE_STRUCT('FIRST_NAME','','FILE_MTIME',LONG64[0],$
							'MASK','','SUBAREA_CODE',0,'SUBAREA_NAME','','N_SUBAREA',0L,$
							'SAT_DATA','','N',0L,'MIN',0.0,'MAX',0.0,'MED',0.0,'MEAN',0.0,'VAR',0.0,'STD',0.0,'CV',0.0,'TRANSFORMATION','')
			NEW = STRUCT_2MISSINGS(NEW)
			NEW = REPLICATE(NEW,N_ELEMENTS(CSV))
			NEW.FIRST_NAME 			= CSV.FIRST_NAME
			NEW.FILE_MTIME 			= LONG64(CSV.FILE_MTIME)
			NEW.MASK	 					= CSV.MASK
			NEW.SUBAREA_CODE 		= FIX(CSV.SUBAREA_CODE)
			NEW.SUBAREA_NAME		= CSV.SUBAREA_NAME
			NEW.N_SUBAREA				= LONG(CSV.N_SUBAREA)
			NEW.SAT_DATA				= CSV.SAT_DATA
			NEW.N								= LONG(CSV.N)
			NEW.MIN							= FLOAT(CSV.MIN)
			NEW.MAX							= FLOAT(CSV.MAX)
			NEW.MED							= FLOAT(CSV.MED)
			NEW.MEAN						= FLOAT(CSV.MEAN)
			NEW.VAR							= FLOAT(CSV.VAR)
			NEW.STD							= FLOAT(CSV.STD)
			NEW.CV							= FLOAT(CSV.CV)
			NEW.TRANSFORMATION	= CSV.TRANSFORMATION


			SAVEFILE = DIR_OUT + FN.NAME + '.SAVE'
			SAVE, FILENAME=SAVEFILE, NEW, /COMPRESS
		ENDFOR

	ENDIF

; ************************************************
	IF DO_MAKE_TIMELINES GE 1 THEN BEGIN
; ************************************************

;		OVERWRITE = DO_MAKE_TIMELINES GE 2
;		PAL_36, R,G,B
;
;		PPD_PROD = ['OPAL','VGMB']
;		FOR _PPD = 0L, N_ELEMENTS(PPD_PROD)-1 DO BEGIN
;			_PROD = PPD_PROD(_PPD)
;
;			MB_STAT_CHL  	= IDL_RESTORE(DIR + ':\PROJECTS\RI_SOUND\TS_SUBAREAS\STATS\!D-MASK_SUBAREA-RI_SOUND-PXY_120_120-CHLOR_A-MB-STATS.SAVE')
;			MB_STAT_PPD  	= IDL_RESTORE(DIR + ':\PROJECTS\RI_SOUND\TS_SUBAREAS\STATS\!D-MASK_SUBAREA-RI_SOUND-PXY_120_120-PPD-'+_PROD+'-STATS.SAVE')
;			MASS_BAY_PPD  = IDL_RESTORE(DIR + ':\PROJECTS\RI_SOUND\PLOT\!W-MASS_BAY-PPD-VGMB.SAVE')
;			PSFILE = DIR + ':\PROJECTS\RI_SOUND\PLOT\TIMELINE_FIGURES-CHLOR_A-PPD-'+_PROD+'.PS'
;
;			X = DATE_2JD([19980101,20080101])
;			AX = DATE_AXIS(X,/MONTH, STEP_SIZE=4)
;			AYR = DATE_AXIS(X,/YEAR)
;			X2 = DATE_2JD([20200101,20210101])
;			AX2 = DATE_AXIS(X2, /FYEAR)
;			XS = DATE_2JD([20200501,20200901])
;			AXS = DATE_AXIS(XS, /FYEAR)
;			NX = DATE_2JD([19960101,20030401])
;			NAX = DATE_AXIS(NX,/MONTH)
;			XTICKNAMES = REPLICATE(' ',N_ELEMENTS(AX.TICKNAME))
;			X2TICKNAME = REPLICATE(' ',N_ELEMENTS(AX2.TICKNAME))
;			PYMINOR=10
;			STITLE = 'Temperature (!Eo!NC)
;
;			LEG_POS = [0.028 ,0.32,0.045,0.92]
;			YMARGIN = [0.3,0.3]
;			XMARGIN = [4,1]
;			THICK = 2
;			FONT = 0
;
;			PSPRINT,FILENAME=PSFILE,/COLOR,/Full,/TIMES,/LANDSCAPE
;
;
;			FIGS = ['MEAN','RANGE','ALL','ALL_MB']
;			CODES = 6
;			COLORS = [2,7,10,13,18,22,29,20,4,25]
;			SYMSIZE = 0.45
;			CHARSIZE = 1.75
;			REGIONS = [' Block Island - Rhode Island Sounds']
;			PRODS = ['CHLOR_A','PPD']
;			YEARS = ['1998','1999','2000','2001','2002','2003','2004','2005','2006','2007']
;			LEG_POS = [0.028 ,0.4,0.045,0.95]
;			LEG_POS = [0.028 ,0.65,0.045,0.95]
;			LEG_POS2 = [0.11 ,0.65,0.125,0.95]
;			CTITLE = 'Chlorophyll !8a!7 (mg m!E-3!N)'
;			PTITLE = 'Production (gC m!E-2!N d!E-1!N)'
;			XMARGIN = [1.5,1.5]
;			!P.MULTI = [0,1,2]
;			FOR FTH = 0L, N_ELEMENTS(FIGS)-1 DO BEGIN
;				AFIG = FIGS(FTH)
;				FOR PTH = 0L, N_ELEMENTS(PRODS)-1 DO BEGIN
;					APROD = PRODS(PTH)
;					IF APROD EQ 'CHLOR_A' THEN BEGIN & TT = MB_STAT_CHL & _YTITLE = CTITLE & YRANGE = [0,8] & ENDIF
;					IF APROD EQ 'PPD' THEN BEGIN & TT = MB_STAT_PPD & _YTITLE = PTITLE & YRANGE = [0,1.6] & ENDIF
;					OK = WHERE(STRMID(TT.FIRST_NAME,0,2) EQ '!W')
;					T = TT[OK]
;					TFP = PARSE_IT(T.FIRST_NAME,/ALL)
;					FOR CTH = 0L, N_ELEMENTS(CODES)-1 DO BEGIN
;						PYTICKS = 2
;						PYMINOR = 4
;
;						OK = WHERE(T.SUBAREA_CODE EQ 6 AND TFP.PERIOD_CODE EQ '!W' AND TFP.YEAR_START GE '1998' AND TFP.YEAR_END LE '2007')
;						MONS = T[OK]
;						MFP = TFP[OK]
;						NEW = CREATE_STRUCT('WEEK_MIN','','WEEK_MAX','','WEEK','','DEPTH',0.0,'ALL_MEAN',0.0,$
;																'DATA_MIN',0.0,'DATA_MAX',0.0,'DATA_MEAN',0.0,'DATA_98',0.0,'DATA_99',0.0,'DATA_00',0.0,$
;																'DATA_01',0.0,'DATA_02',0.0,'DATA_03',0.0,'DATA_04',0.0,'DATA_05',0.0,'DATA_06',0.0,'DATA_07',0.0)
;						NEW = STRUCT_2MISSINGS(NEW)
;						TAGS = TAG_NAMES(NEW)
;						OK = WHERE(T.SUBAREA_CODE EQ CODES(CTH) AND TFP.PERIOD_CODE EQ '!WEEK')
;						WKS = T[OK]
;						WFP = TFP[OK]
;						NEW = REPLICATE(NEW, N_ELEMENTS(WKS))
;						NEW.DEPTH = 0.5
;						NEW.WEEK_MIN = WFP.DATE_START
;						NEW.WEEK_MAX = WFP.DATE_END
;						NEW.WEEK = STRMID(WFP.PERIOD,6,2)
;						NEW.DATA_MIN = WKS.MIN
;						NEW.DATA_MAX = WKS.MAX
;						NEW.DATA_MEAN = WKS.MEAN
;						DATE = YDOY_2DATE('2020',DATE_2DOY(NEW.WEEK_MIN)+3)
;
;						OK = WHERE(TT.SUBAREA_CODE EQ CODES(CTH) AND STRMID(TT.FIRST_NAME,0,5) EQ '!YEAR')
;						NEW.ALL_MEAN	= TT[OK].MEAN
;
;						YSET = WHERE_SETS(MFP.YEAR_START)
;						YSET = YSET[SORT(YSET.VALUE)]
;						POS = WHERE(TAGS EQ 'DATA_98')
;						CT = 0
;						FOR YTH = 0L, N_ELEMENTS(YSET) -1  DO BEGIN
;							SUBS = WHERE_SETS_SUBS(YSET(YTH))
;							YR = MONS(SUBS)
;							YFP = MFP(SUBS)
;							WK = STRMID(YFP.PERIOD,7,2)
;							OK = WHERE_MATCH(NEW.WEEK,WK,COUNT,VALID=VALID,COMPLEMENT=COMPLEMENT,NCOMPLEMENT=NCOMPLEMENT)
;							NEW[OK].(POS+CT) = YR(VALID).MEAN
;							CT = CT + 1
;						ENDFOR
;
;						IF APROD EQ 'PPD' THEN XTICKNAME = AX2.TICKNAME ELSE XTICKNAME = X2TICKNAME
;
;						IF AFIG EQ 'MEAN' THEN BEGIN		;	PLOT THE MEAN
;							PLOT, AX2.JD,YRANGE, COLOR=5, YTITLE=_YTITLE,YRANGE=YRANGE,/XSTYLE,/YSTYLE,XMARGIN=XMARGIN,YMARGIN=YMARGIN,YTICKS=PYTICKS,YMINOR=PYMINOR,$
;								XTICKS=AX2.TICKS,XTICKNAME=XTICKNAME,XTICKV=AX2.TICKV,XTICK_GET=XTICK_GET,CHARSIZE=CHARSIZE,/NODATA
;							OPLOT, DATE_2JD(DATE),NEW.DATA_MEAN, COLOR = 0, THICK = 8
;							LABEL = 'Mean = ' + STRMID(NUM2STR(NEW[0].ALL_MEAN),0,4) + UNITS(APROD,/NO_NAME)
;							COOR = COORD_2PLOT(0.75,0.9)
;							XYOUTS, COOR.X,COOR.Y,LABEL, ALIGN=-0.1, CHARSIZE=1.2, COLOR=0, CHARTHICK=1
;						ENDIF
;
;						IF AFIG EQ 'RANGE' THEN BEGIN		;	PLOT THE MEAN PLUS RANGE
;							PLOT, AX2.JD,YRANGE, COLOR=5,YTITLE=_YTITLE,YRANGE=YRANGE,/XSTYLE,/YSTYLE,XMARGIN=XMARGIN,YMARGIN=YMARGIN,YTICKS=PYTICKS,YMINOR=PYMINOR,$
;								XTICKS=AX2.TICKS,XTICKNAME=XTICKNAME,XTICKV=AX2.TICKV,XTICK_GET=XTICK_GET,CHARSIZE=CHARSIZE,/NODATA
;							YY = [NEW.DATA_MAX,REVERSE(NEW.DATA_MIN)]
;							XX = [DATE,REVERSE(DATE)]
;							POLYFILL, DATE_2JD(XX), YY, COLOR = 34
;							OPLOT, DATE_2JD(DATE),NEW.DATA_MEAN, COLOR = 0, THICK = 8
;							LABEL = 'Mean = ' + STRMID(NUM2STR(NEW[0].ALL_MEAN),0,4) + UNITS(APROD,/NO_NAME)
;							COOR = COORD_2PLOT(0.75,0.9)
;							XYOUTS, COOR.X,COOR.Y,LABEL, ALIGN=-0.1, CHARSIZE=1.2, COLOR=0, CHARTHICK=1
;						ENDIF
;
;						IF AFIG EQ 'ALL' THEN BEGIN				;	PLOT THE MEAN, RANGE, AND INDIVIDUAL YEARS
;							PLOT, AX2.JD,YRANGE, COLOR=5,YTITLE=_YTITLE,YRANGE=YRANGE,/XSTYLE,/YSTYLE,XMARGIN=XMARGIN,YMARGIN=YMARGIN,YTICKS=PYTICKS,YMINOR=PYMINOR,$
;								XTICKS=AX2.TICKS,XTICKNAME=XTICKNAME,XTICKV=AX2.TICKV,XTICK_GET=XTICK_GET,CHARSIZE=CHARSIZE,/NODATA
;							YY = [NEW.DATA_MAX,REVERSE(NEW.DATA_MIN)]
;							XX = [DATE,REVERSE(DATE)]
;							POLYFILL, DATE_2JD(XX), YY, COLOR = 34
;							OPLOT, DATE_2JD(DATE),NEW.DATA_MEAN, COLOR = 0, THICK = 8
;							POS = WHERE(TAGS EQ 'DATA_98')
;							FOR YTH = 0L, N_ELEMENTS(YEARS)-1  DO BEGIN
;								OK = WHERE(NEW.(POS) NE MISSINGS(0.0))
;								CIRCLE,32, COLOR=COLORS(YTH),/fill
;								OPLOT, DATE_2JD(DATE[OK]),NEW[OK].(POS),THICK=3,PSYM=-8,SYMSIZE=SYMSIZE,COLOR=COLORS(YTH)
;								YEAR = YEARS(YTH)
;								IF YTH EQ 0 THEN TXT = STRTRIM(YEAR,2) ELSE TXT = [TXT,STRTRIM(YEAR,2)]
;								POS = POS + 1
;							ENDFOR
;							TXT = [TXT,'Mean']
;							OPLOT, DATE_2JD(DATE),NEW.DATA_MEAN, COLOR = 0, THICK = 8
;		     			IF CTH EQ 0 OR CTH EQ N_ELEMENTS(CODES)-1 THEN BEGIN
;								LEG,pos=LEG_POS,color=[COLORS(0:5)],label=TXT(0:5),THICK=THICK,LSIZE=1.25,FONT=FONT
;								LEG,pos=LEG_POS2,color=[COLORS(6:9),0],label=TXT(6:10),THICK=THICK,LSIZE=1.25,FONT=FONT
;							ENDIF
;							LABEL = 'Mean = ' + STRMID(NUM2STR(NEW[0].ALL_MEAN),0,4) + UNITS(APROD,/NO_NAME)
;							COOR = COORD_2PLOT(0.75,0.9)
;							XYOUTS, COOR.X,COOR.Y,LABEL, ALIGN=-0.1, CHARSIZE=1.2, COLOR=0, CHARTHICK=1
;						ENDIF
;
;						IF AFIG EQ 'ALL_MB' THEN BEGIN				;	PLOT THE MEAN, RANGE, AND INDIVIDUAL YEARS PLUS MASS BAY
;							PLOT, AX2.JD,YRANGE, COLOR=5,YTITLE=_YTITLE,YRANGE=YRANGE,/XSTYLE,/YSTYLE,XMARGIN=XMARGIN,YMARGIN=YMARGIN,YTICKS=PYTICKS,YMINOR=PYMINOR,$
;								XTICKS=AX2.TICKS,XTICKNAME=XTICKNAME,XTICKV=AX2.TICKV,XTICK_GET=XTICK_GET,CHARSIZE=CHARSIZE,/NODATA
;							YY = [NEW.DATA_MAX,REVERSE(NEW.DATA_MIN)]
;							XX = [DATE,REVERSE(DATE)]
;							POLYFILL, DATE_2JD(XX), YY, COLOR = 34
;							OPLOT, DATE_2JD(DATE),NEW.DATA_MEAN, COLOR = 0, THICK = 8
;							POS = WHERE(TAGS EQ 'DATA_98')
;							FOR YTH = 0L, N_ELEMENTS(YEARS)-1  DO BEGIN
;								OK = WHERE(NEW.(POS) NE MISSINGS(0.0))
;								CIRCLE,32, COLOR=COLORS(YTH),/fill
;								OPLOT, DATE_2JD(DATE[OK]),NEW[OK].(POS),THICK=3,PSYM=-8,SYMSIZE=SYMSIZE,COLOR=COLORS(YTH)
;								YEAR = YEARS(YTH)
;								IF YTH EQ 0 THEN TXT = STRTRIM(YEAR,2) ELSE TXT = [TXT,STRTRIM(YEAR,2)]
;								POS = POS + 1
;							ENDFOR
;							TXT = [TXT,'Mean']
;							OPLOT, DATE_2JD(DATE),NEW.DATA_MEAN, COLOR = 0, THICK = 8
;		     			IF CTH EQ 0 OR CTH EQ N_ELEMENTS(CODES)-1 THEN BEGIN
;								LEG,pos=LEG_POS,color=[COLORS(0:5)],label=TXT(0:5),THICK=THICK,LSIZE=1.25,FONT=FONT
;								LEG,pos=LEG_POS2,color=[COLORS(6:9),0],label=TXT(6:10),THICK=THICK,LSIZE=1.25,FONT=FONT
;							ENDIF
;							IF PTH EQ 1 THEN BEGIN
;								CIRCLE,32,COLOR=0,/FILL
;								MDATE = YDOY_2DATE('2020',DATE_2DOY(MASS_BAY_PPD.WEEK_MIN)+3)
;								OPLOT, DATE_2JD(MDATE),MASS_BAY_PPD.DATA_00,COLOR=0,LINESTYLE=3,PSYM=-8,SYMSIZE=SYMSIZE,THICK=2
;							ENDIF
;							LABEL = 'Mean = ' + STRMID(NUM2STR(NEW[0].ALL_MEAN),0,4) + UNITS(APROD,/NO_NAME)
;							COOR = COORD_2PLOT(0.75,0.9)
;							XYOUTS, COOR.X,COOR.Y,LABEL, ALIGN=-0.1, CHARSIZE=1.2, COLOR=0, CHARTHICK=1
;						ENDIF
;					ENDFOR
;				ENDFOR
;			ENDFOR
;			PSPRINT
;		ENDFOR	; FOR _PPD = 0L, N_ELEMENTS(PPD_PROD)-1 DO BEGIN
;
;; Make timeline plots of the 3 regions data.
;		PPD_PROD = ['VGMB']
;		FOR _PPD = 0L, N_ELEMENTS(PPD_PROD)-1 DO BEGIN
;			_PROD = PPD_PROD(_PPD)
;			R3_STAT_CHL   = IDL_RESTORE(DIR + ':\PROJECTS\RI_SOUND\TS_SUBAREAS\STATS\!D-MASK_SUBAREA-RI_SOUND-3REGIONS-PXY_120_120-CHLOR_A-MB-STATS.SAVE')
;			R3_STAT_PPD   = IDL_RESTORE(DIR + ':\PROJECTS\RI_SOUND\TS_SUBAREAS\STATS\!D-MASK_SUBAREA-RI_SOUND-3REGIONS-PXY_120_120-PPD-'+_PROD+'-STATS.SAVE')
;			PSFILE = DIR + ':\PROJECTS\RI_SOUND\PLOT\REGIONAL_TIMELINE_FIGURES-CHLOR_A-PPD-'+_PROD+'.PS'
;
;			X = DATE_2JD([19980101,20080101])
;			AX = DATE_AXIS(X,/MONTH, STEP_SIZE=4)
;			AYR = DATE_AXIS(X,/YEAR)
;			X2 = DATE_2JD([20200101,20210101])
;			AX2 = DATE_AXIS(X2, /FYEAR)
;			XS = DATE_2JD([20200501,20200901])
;			AXS = DATE_AXIS(XS, /FYEAR)
;			NX = DATE_2JD([19960101,20030401])
;			NAX = DATE_AXIS(NX,/MONTH)
;			XTICKNAMES = REPLICATE(' ',N_ELEMENTS(AX.TICKNAME))
;			X2TICKNAME = REPLICATE(' ',N_ELEMENTS(AX2.TICKNAME))
;			PYMINOR=10
;
;			LEG_POS = [0.028 ,0.32,0.045,0.92]
;			YMARGIN = [0.3,0.3]
;			XMARGIN = [4,1]
;			THICK = 2
;			FONT = 0
;
;			PSPRINT,FILENAME=PSFILE,/COLOR,/Full,/TIMES,/LANDSCAPE
;			CODES = [22,14,6]
;			COLORS = [2,7,10,13,18,22,29,20,4,25]
;			SYMSIZE = 0.45
;			CHARSIZE = 2.75
;			REGIONS = ['Block Island Sound','Rhode Island Sound','  Offshore']
;			PRODS = ['CHLOR_A','PPD']
;			YEARS = ['1998','1999','2000','2001','2002','2003','2004','2005','2006','2007']
;			LEG_POS = [0.028 ,0.4,0.045,0.95]
;			LEG_POS = [0.028 ,0.65,0.045,0.95]
;			LEG_POS2 = [0.11 ,0.65,0.125,0.95]
;			CTITLE = 'Chlorophyll !8a!7 (mg m!E-3!N)'
;			PTITLE = 'Production (gC m!E-2!N d!E-1!N)'
;			XMARGIN = [1.5,1.5]
;			!P.MULTI = [0,1,3]
;			FOR PTH = 0L, N_ELEMENTS(PRODS)-1 DO BEGIN
;				APROD = PRODS(PTH)
;				IF APROD EQ 'CHLOR_A' THEN BEGIN & TT = R3_STAT_CHL & _YTITLE = CTITLE & YRANGE = [0,8] & ENDIF
;				IF APROD EQ 'PPD' THEN BEGIN & TT = R3_STAT_PPD & _YTITLE = PTITLE & YRANGE = [0,1.6] & ENDIF
;				OK = WHERE(STRMID(TT.FIRST_NAME,0,2) EQ '!W')
;				T = TT[OK]
;				TFP = PARSE_IT(T.FIRST_NAME,/ALL)
;				FOR CTH = 0L, N_ELEMENTS(CODES)-1 DO BEGIN
;					ACODE = CODES(CTH)
;					AREGION = REGIONS(CTH)
;					PYTICKS = 2
;					PYMINOR = 4
;					IF CTH EQ N_ELEMENTS(CODES)-1 THEN XTICKNAME = AX2.TICKNAME ELSE XTICKNAME = X2TICKNAME
;
;					OK = WHERE(T.SUBAREA_CODE EQ ACODE AND TFP.PERIOD_CODE EQ '!W' AND TFP.YEAR_START GE '1998' AND TFP.YEAR_END LE '2007')
;					MONS = T[OK]
;					MFP = TFP[OK]
;					NEW = CREATE_STRUCT('WEEK_MIN','','WEEK_MAX','','WEEK','','DEPTH',0.0,'ALL_MEAN',0.0,$
;															'DATA_MIN',0.0,'DATA_MAX',0.0,'DATA_MEAN',0.0,'DATA_98',0.0,'DATA_99',0.0,'DATA_00',0.0,$
;															'DATA_01',0.0,'DATA_02',0.0,'DATA_03',0.0,'DATA_04',0.0,'DATA_05',0.0,'DATA_06',0.0,'DATA_07',0.0)
;					NEW = STRUCT_2MISSINGS(NEW)
;					TAGS = TAG_NAMES(NEW)
;					OK = WHERE(T.SUBAREA_CODE EQ CODES(CTH) AND TFP.PERIOD_CODE EQ '!WEEK')
;					WKS = T[OK]
;					WFP = TFP[OK]
;					NEW = REPLICATE(NEW, N_ELEMENTS(WKS))
;					NEW.DEPTH = 0.5
;					NEW.WEEK_MIN = WFP.DATE_START
;					NEW.WEEK_MAX = WFP.DATE_END
;					NEW.WEEK = STRMID(WFP.PERIOD,6,2)
;					NEW.DATA_MIN = WKS.MIN
;					NEW.DATA_MAX = WKS.MAX
;					NEW.DATA_MEAN = WKS.MEAN
;					DATE = YDOY_2DATE('2020',DATE_2DOY(NEW.WEEK_MIN)+3)
;
;					OK = WHERE(TT.SUBAREA_CODE EQ CODES(CTH) AND STRMID(TT.FIRST_NAME,0,5) EQ '!YEAR')
;					NEW.ALL_MEAN	= TT[OK].MEAN
;
;					YSET = WHERE_SETS(MFP.YEAR_START)
;					YSET = YSET[SORT(YSET.VALUE)]
;					POS = WHERE(TAGS EQ 'DATA_98')
;					CT = 0
;					FOR YTH = 0L, N_ELEMENTS(YSET) -1  DO BEGIN
;						SUBS = WHERE_SETS_SUBS(YSET(YTH))
;						YR = MONS(SUBS)
;						YFP = MFP(SUBS)
;						WK = STRMID(YFP.PERIOD,7,2)
;						OK = WHERE_MATCH(NEW.WEEK,WK,COUNT,VALID=VALID,COMPLEMENT=COMPLEMENT,NCOMPLEMENT=NCOMPLEMENT)
;						NEW[OK].(POS+CT) = YR(VALID).MEAN
;						CT = CT + 1
;					ENDFOR
;
;					PLOT, AX2.JD,YRANGE, COLOR=5,YTITLE=_YTITLE,YRANGE=YRANGE,/XSTYLE,/YSTYLE,XMARGIN=XMARGIN,YMARGIN=YMARGIN,YTICKS=PYTICKS,YMINOR=PYMINOR,$
;						XTICKS=AX2.TICKS,XTICKNAME=XTICKNAME,XTICKV=AX2.TICKV,XTICK_GET=XTICK_GET,CHARSIZE=CHARSIZE,/NODATA
;					GRIDS,X=AX2.TICKV, /NO_Y, COLOR=5
;					YY = [NEW.DATA_MAX,REVERSE(NEW.DATA_MIN)]
;					XX = [DATE,REVERSE(DATE)]
;					POLYFILL, DATE_2JD(XX), YY, COLOR = 34
;					OPLOT, DATE_2JD(DATE),NEW.DATA_MEAN, COLOR = 0, THICK = 8
;					POS = WHERE(TAGS EQ 'DATA_98')
;					FOR YTH = 0L, N_ELEMENTS(YEARS)-1  DO BEGIN
;						OK = WHERE(NEW.(POS) NE MISSINGS(0.0))
;						CIRCLE,32, COLOR=COLORS(YTH),/fill
;						OPLOT, DATE_2JD(DATE[OK]),NEW[OK].(POS),THICK=3,PSYM=-8,SYMSIZE=SYMSIZE,COLOR=COLORS(YTH)
;						YEAR = YEARS(YTH)
;						IF YTH EQ 0 THEN TXT = STRTRIM(YEAR,2) ELSE TXT = [TXT,STRTRIM(YEAR,2)]
;						POS = POS + 1
;					ENDFOR
;					IF PTH EQ 1 THEN BEGIN
;						CIRCLE,32,COLOR=0,/FILL
;						MDATE = YDOY_2DATE('2020',DATE_2DOY(MASS_BAY_PPD.WEEK_MIN)+3)
;						OPLOT, DATE_2JD(MDATE),MASS_BAY_PPD.DATA_00,COLOR=0,LINESTYLE=3,PSYM=-8,SYMSIZE=SYMSIZE,THICK=2
;						LEG,POS=[0.77,0.77,0.80,0.79],COLOR=0,LABEL='Massachusetts Bay', THICK=2,LSIZE=1.2,FONT=FONT,LINESTYLE=3
;					ENDIF
;					TXT = [TXT,'Mean']
;					OPLOT, DATE_2JD(DATE),NEW.DATA_MEAN, COLOR = 0, THICK = 8
;					LEG,pos=LEG_POS,color=[COLORS(0:5)],label=TXT(0:5),THICK=THICK,LSIZE=1.25,FONT=FONT
;					LEG,pos=LEG_POS2,color=[COLORS(6:9),0],label=TXT(6:10),THICK=THICK,LSIZE=1.25,FONT=FONT
;					LABEL = AREGION + '!CMean = ' + STRMID(NUM2STR(NEW[0].ALL_MEAN),0,4) + UNITS(APROD,/NO_NAME)
;					COOR = COORD_2PLOT(0.75,0.9)
;					XYOUTS, COOR.X,COOR.Y,LABEL, ALIGN=-0.1, CHARSIZE=1.2, COLOR=0, CHARTHICK=1
;				ENDFOR	; FOR CTH = 0L, N_ELEMENTS(CODES)-1 DO BEGIN
;			ENDFOR	; FOR PTH = 0L, N_ELEMENTS(PRODS)-1 DO BEGIN
;			PSPRINT
;		ENDFOR	; FOR _PPD = 0L, N_ELEMENTS(PPD_PROD)-1 DO BEGIN
;
;
;		PAR_FILE   = IDL_RESTORE(DIR + ':\PROJECTS\RI_SOUND\TS_SUBAREAS\STATS\!D-MASK_SUBAREA-RI_SOUND-PXY_120_120-PAR-STATS.SAVE')
;		PSFILE = DIR + ':\PROJECTS\RI_SOUND\PLOT\TIMELINE_FIGURES-PAR.PS'
;		PSPRINT,FILENAME=PSFILE,/COLOR,/Full,/TIMES,/LANDSCAPE
;
;		CODES = [6]
;		COLORS = [2,7,10,13,18,22,29,20,4,25]
;		SYMSIZE = 0.45
;		CHARSIZE = 2.5
;
;		YEARS = ['1998','1999','2000','2001','2002','2003','2004','2005','2006','2007']
;		LEG_POS3 = [0.028 ,0.75,0.045,0.9]
;		PTITLE = UNITS('PAR')
;		YRANGE = [0,80]
;		XMARGIN = [0.5,0.5]
;		OK = WHERE(STRMID(PAR_FILE.FIRST_NAME,0,3) EQ '!D_' AND PAR_FILE.SUBAREA_CODE EQ 6)
;		DAILY = PAR_FILE[OK]
;		DFP = PARSE_IT(DAILY.FIRST_NAME)
;		OK = WHERE(STRMID(PAR_FILE.FIRST_NAME,0,2) EQ '!W')
;		T = PAR_FILE[OK]
;		TFP = PARSE_IT(T.FIRST_NAME,/ALL)
;		FOR CTH = 0L, N_ELEMENTS(CODES)-1 DO BEGIN
;			ACODE = CODES(CTH)
;			PYTICKS = 2
;			PYMINOR = 4
;			IF CTH EQ N_ELEMENTS(CODES)-1 THEN XTICKNAME = AX2.TICKNAME ELSE XTICKNAME = X2TICKNAME
;
;			OK = WHERE(T.SUBAREA_CODE EQ ACODE AND TFP.PERIOD_CODE EQ '!W' AND TFP.YEAR_START GE '1998' AND TFP.YEAR_END LE '2007')
;			MONS = T[OK]
;			MFP = TFP[OK]
;			NEW = CREATE_STRUCT('WEEK_MIN','','WEEK_MAX','','WEEK','','DEPTH',0.0,'ALL_MEAN',0.0,$
;													'DATA_MIN',0.0,'DATA_MAX',0.0,'DATA_MEAN',0.0,'DATA_98',0.0,'DATA_99',0.0,'DATA_00',0.0,$
;													'DATA_01',0.0,'DATA_02',0.0,'DATA_03',0.0,'DATA_04',0.0,'DATA_05',0.0,'DATA_06',0.0,'DATA_07',0.0)
;			NEW = STRUCT_2MISSINGS(NEW)
;			TAGS = TAG_NAMES(NEW)
;			OK = WHERE(T.SUBAREA_CODE EQ CODES(CTH) AND TFP.PERIOD_CODE EQ '!WEEK')
;			WKS = T[OK]
;			WFP = TFP[OK]
;			NEW = REPLICATE(NEW, N_ELEMENTS(WKS))
;			NEW.DEPTH = 0.5
;			NEW.WEEK_MIN = WFP.DATE_START
;			NEW.WEEK_MAX = WFP.DATE_END
;			NEW.WEEK = STRMID(WFP.PERIOD,6,2)
;			NEW.DATA_MIN = WKS.MIN
;			NEW.DATA_MAX = WKS.MAX
;			NEW.DATA_MEAN = WKS.MEAN
;			DATE = YDOY_2DATE('2020',DATE_2DOY(NEW.WEEK_MIN)+3)
;
;			OK = WHERE(PAR_FILE.SUBAREA_CODE EQ CODES(CTH) AND STRMID(PAR_FILE.FIRST_NAME,0,5) EQ '!YEAR')
;			NEW.ALL_MEAN	= PAR_FILE[OK].MEAN
;
;			YSET = WHERE_SETS(MFP.YEAR_START)
;			YSET = YSET[SORT(YSET.VALUE)]
;			POS = WHERE(TAGS EQ 'DATA_98')
;			CT = 0
;			FOR YTH = 0L, N_ELEMENTS(YSET) -1  DO BEGIN
;				SUBS = WHERE_SETS_SUBS(YSET(YTH))
;				YR = MONS(SUBS)
;				YFP = MFP(SUBS)
;				WK = STRMID(YFP.PERIOD,7,2)
;				OK = WHERE_MATCH(NEW.WEEK,WK,COUNT,VALID=VALID,COMPLEMENT=COMPLEMENT,NCOMPLEMENT=NCOMPLEMENT)
;				NEW[OK].(POS+CT) = YR(VALID).MEAN
;				CT = CT + 1
;			ENDFOR
;
;			!P.MULTI = [0,1,2]
;			PLOT, AX.JD,YRANGE, COLOR=5,YTITLE=PTITLE,YRANGE=YRANGE,/XSTYLE,/YSTYLE,YMARGIN=[2,2],XMARGIN=XMARGIN,YTICKS=PYTICKS,YMINOR=PYMINOR,$
;				XTICKS=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKV=AX.TICKV,XTICK_GET=XTICK_GET,CHARSIZE=1.5,/NODATA
;			GRIDS,X=AX.TICKV, /NO_Y, COLOR=5
;			CIRCLE,32, COLOR=5,/fill
;			OPLOT, DATE_2JD(DFP.DATE_START),DAILY.MEAN, COLOR=5, THICK=5, PSYM=-8, SYMSIZE=0.2
;
;			PLOT, AX2.JD,YRANGE, COLOR=5,YTITLE=PTITLE,YRANGE=YRANGE,/XSTYLE,/YSTYLE,YMARGIN=[2,2],XMARGIN=XMARGIN,YTICKS=PYTICKS,YMINOR=PYMINOR,$
;				XTICKS=AX2.TICKS,XTICKNAME=XTICKNAME,XTICKV=AX2.TICKV,XTICK_GET=XTICK_GET,CHARSIZE=1.5,/NODATA
;			GRIDS,X=AX2.TICKV, /NO_Y, COLOR=5
;			YY = [NEW.DATA_MAX,REVERSE(NEW.DATA_MIN)]
;			XX = [DATE,REVERSE(DATE)]
;			POLYFILL, DATE_2JD(XX), YY, COLOR = 34
;			OPLOT, DATE_2JD(DATE),NEW.DATA_MEAN, COLOR = 0, THICK = 8
;			POS = WHERE(TAGS EQ 'DATA_98')
;			FOR YTH = 0L, N_ELEMENTS(YEARS)-1  DO BEGIN
;				OK = WHERE(NEW.(POS) NE MISSINGS(0.0))
;				CIRCLE,32, COLOR=COLORS(YTH),/fill
;				OPLOT, DATE_2JD(DATE[OK]),NEW[OK].(POS),THICK=3,PSYM=-8,SYMSIZE=SYMSIZE,COLOR=COLORS(YTH)
;				YEAR = YEARS(YTH)
;				IF YTH EQ 0 THEN TXT = STRTRIM(YEAR,2) ELSE TXT = [TXT,STRTRIM(YEAR,2)]
;				POS = POS + 1
;			ENDFOR
;			TXT = [TXT,'Mean']
;			OPLOT, DATE_2JD(DATE),NEW.DATA_MEAN, COLOR = 0, THICK = 8
;			LEG,pos=LEG_POS,color=[COLORS(0:5)],label=TXT(0:5),THICK=THICK,LSIZE=1.25,FONT=FONT
;			LEG,pos=LEG_POS2,color=[COLORS(6:9),0],label=TXT(6:10),THICK=THICK,LSIZE=1.25,FONT=FONT
;
;			POS = WHERE(TAGS EQ 'DATA_98')
;			!P.MULTI = [0,1,5]
;			FOR YTH = 0L, N_ELEMENTS(YEARS)-1  DO BEGIN
;				IF YTH EQ N_ELEMENTS(YEARS)-1 OR YTH EQ 4 THEN XTICKNAME = AX2.TICKNAME ELSE XTICKNAME = X2TICKNAME
;				IF YTH EQ 0 OR YTH EQ N_ELEMENTS(YEARS)-1 OR YTH EQ 4 OR YTH EQ 5 THEN _YTITLE=PTITLE ELSE _YTITLE=' '
;				PLOT, AX2.JD,YRANGE, COLOR=5,YTITLE=_YTITLE,YRANGE=YRANGE,/XSTYLE,/YSTYLE,XMARGIN=XMARGIN,YMARGIN=YMARGIN,YTICKS=PYTICKS,YMINOR=PYMINOR,$
;					XTICKS=AX2.TICKS,XTICKNAME=XTICKNAME,XTICKV=AX2.TICKV,XTICK_GET=XTICK_GET,CHARSIZE=CHARSIZE,/NODATA
;				GRIDS,X=AX2.TICKV, /NO_Y, COLOR=5
;				YY = [NEW.DATA_MAX,REVERSE(NEW.DATA_MIN)]
;				XX = [DATE,REVERSE(DATE)]
;				POLYFILL, DATE_2JD(XX), YY, COLOR = 34
;				OPLOT, DATE_2JD(DATE),NEW.DATA_MEAN, COLOR = 0, THICK = 8
;
;				OK = WHERE(NEW.(POS) NE MISSINGS(0.0))
;				CIRCLE,32, COLOR=COLORS(YTH),/fill
;				OPLOT, DATE_2JD(DATE[OK]),NEW[OK].(POS),THICK=3,PSYM=-8,SYMSIZE=SYMSIZE,COLOR=COLORS(YTH)
;				YEAR = YEARS(YTH)
;				TXT = [STRTRIM(YEAR,2),'Mean']
;
;				OPLOT, DATE_2JD(DATE),NEW.DATA_MEAN, COLOR = 0, THICK = 8
;				LEG,pos=LEG_POS3,color=[COLORS(YTH),0],label=TXT,THICK=THICK,LSIZE=1.25,FONT=FONT
;
;				POS = POS + 1
;			ENDFOR
;
;		ENDFOR
;
;		PSPRINT
;
;		STOP
;		GRACE = [50,50,50,50]
;		BACKGROUND=255
;		PSFILES = FILE_SEARCH(DIR + ':\PROJECTS\RI_SOUND\PLOT\TIMELINE_FIGURES-CHLOR_A-PPD-*.PS')
;		FOR NTH=0L, N_ELEMENTS(PSFILES)-1 DO BEGIN
;			IMAGE_TRIM, PSFILES[NTH], DIR_OUT=DIR_POSTER, DPI=600, BACKGROUND=BACKGROUND,GRACE=GRACE, OVERWRITE=overwrite
;		ENDFOR
;
;		STOP
	ENDIF



; ************************************************
	IF DO_MAKE_BATHY_FIG GE 1 THEN BEGIN
; ************************************************

		OVERWRITE = DO_MAKE_BATHY_FIG GE 2
		DIR_PLOTS = DIR+':\PROJECTS\RI_SOUND\PLOT\'

;		Bathy figure 1
		SAVEFILE = 'D:\IDL\IMAGES\SRTM30-RI_SOUND-BATHY-SMOOTH_5.SAVE'
		MAP_OUT  = 'RI_SOUND'
		DIR_OUT  = 'D:\IDL\IMAGES\'
		EXT      = 'PS'

		PNGFILE  = DIR_PLOTS  + 'SRTM30-RI_SOUND-PXY_360_360-BATHY-SMOOTH_5.PNG'
		PSFILE1	 = DIR_PLOTS + 'Figure-SRTM30-RI_SOUND-PXY_360_360-BATHY-SMOOTH_5-LEG.' + EXT
		PSFILE2	 = DIR_PLOTS + 'Figure-SRTM30-RI_SOUND-PXY_360_360-BATHY-SMOOTH_5-LABELS.' + EXT
		PSFILE3	 = DIR_PLOTS + 'Figure-SRTM30-RI_SOUND-PXY_360_360-BATHY-SMOOTH_5-STATIONS.' + EXT
		PSFILE4	 = DIR_PLOTS + 'Figure-SRTM30-RI_SOUND-PXY_360_360-BATHY-SMOOTH_5-LABELS_STATIONS.' + EXT
		PSFILES  = [PSFILE1,PSFILE2,PSFILE3,PSFILE4]
;		PSFILES  = [PSFILE1]
		SHIPFILE = DIR+':\PROJECTS\RI_SOUND\DATA\SD_SAT_SHIP-BI_SOUND-CHLOR_A-MB_.CSV'
		LONLAT = READALL(SHIPFILE)
		OK = WHERE(LONLAT.N GT 5) & LONLAT = LONLAT[OK]
		U = UNIQ(NUM2STR(LONLAT.LAT,DECIMALS=2)+NUM2STR(LONLAT.LON,DECIMALS=2))
		LON = LONLAT(U).LON
		LAT = LONLAT(U).LAT
		STATION = LONLAT(U).STATION
		PAL = 'PAL_BATHY'
		PAL_BATHY,R,G,B
	;	STRUCT_SD_2PNG,SAVEFILE,DIR_OUT=DIR_PLOTS,/ADD_COLORBAR,/ADD_LAND,/ADD_COAST,MISS_COLOR=0,/OVERWRITE,/ADD_BATHY,SPECIAL_SCALE='VERY_SHALLOW',PAL='PAL_BATHY'
	;	STRUCT_SD_2PNG,SAVEFILE,DIR_OUT=DIR_PLOTS,/ADD_LAND,/ADD_COAST,MISS_COLOR=0,/OVERWRITE,/ADD_BATHY,SPECIAL_SCALE='VERY_SHALLOW',PAL='PAL_BATHY'

		FOR _PSFILE = 0L, N_ELEMENTS(PSFILES)-1 DO BEGIN
			PSFILE = PSFILES(_PSFILE)
	;		PS_IMAGE,	FILES=PNGFILE, /COLOR,FULL=full,/NO_CLOSE,SCALE=4.5,/CENTER
			IMAGE = READ_PNG(PNGFILE,r,g,b)
	 		SZ=SIZE(IMAGE,/STRUCT)
			TRUE_COLOR  = SZ.N_DIMENSIONS EQ 3
	  	PX_IMAGE = 1.0*SZ.DIMENSIONS(0+TRUE_COLOR)
	  	PY_IMAGE = 1.0*SZ.DIMENSIONS(1+TRUE_COLOR)
	   	xsize    = DOUBLE(2.54*(PX_IMAGE/300.))
	   	ysize    = DOUBLE(2.54*(PY_IMAGE/300.))
	   	width    = 20.5
	   	height   = 26.9
			xoffset  = 1.4
	    yoffset  = 10
	    SCALE    = 6

			olddevice= !d.name  ; Get present graphics device
	  	!P.FONT = 0
	    SET_PLOT,'ps'
	    DEVICE,FILENAME=psfile
			DEVICE,/PORTRAIT
			DEVICE,/COLOR
		  IF EXT EQ 'EPS' THEN DEVICE,/ENCAPSULATED
	 		CALL_PROCEDURE,PAL,R,G,B
	 		TVLCT,R,G,B
			DEVICE,BITS_PER_PIXEL=8
			DEVICE,/HELVETICA,/BOLD
	    DEVICE, XOFFSET=xoffset, YOFFSET=yoffset,XSIZE=xsize, YSIZE=ysize,SCALE_FACTOR=scale
	    IF PSFILE EQ PSFILE3 OR PSFILE EQ PSFILE4 THEN BEGIN
	    	ZWIN,IMAGE
	    	MAP_RI_SOUND
	 			FOR LL=0, N_ELEMENTS(LON)-1 DO BEGIN
			 	 	ASTATION=STATION(LL)
			 	 	_LON=LON(LL)
			 	 	_LAT=LAT(LL)
			  	PLOTS,_LON,_LAT,PSYM=7, COLOR=255,/NOCLIP,SYMSIZE=0.75, THICK=1.5
				ENDFOR
				RR = TVRD()
				OK = WHERE(RR EQ 255)
				IMG[OK] = 0
				ZWIN
			ENDIF
	    TV,IMAGE, TRUE=TRUE_COLOR
	    IF PSFILE EQ PSFILE2 OR PSFILE EQ PSFILE4 THEN BEGIN
		    CHARSIZE=0.27
		    CHARSIZE2=0.18
				XYOUTS,0.28,  0.40,'Block !CIsland', ALIGN=-0.1, CHARSIZE=CHARSIZE2, COLOR=0, CHARTHICK=1,/NORMAL,FONT='HELVETICA-ITALIC'
		    XYOUTS,0.88,  0.57,"Martha's !CVineyard", ALIGN=-0.1, CHARSIZE=CHARSIZE2, COLOR=0, CHARTHICK=1,/NORMAL,FONT='HELVETICA'
		    XYOUTS,0.42,  0.72,'Narragansett !C         Bay', ALIGN=-0.1, CHARSIZE=CHARSIZE2, COLOR=0, CHARTHICK=1,/NORMAL,FONT='HELVETICA'
		    XYOUTS,0.001, 0.4, 'Long Island !C      Sound', ALIGN=-0.1, CHARSIZE=CHARSIZE2, COLOR=0, CHARTHICK=1,/NORMAL,FONT='HELVETICA'
		    XYOUTS,0.14,  0.34,'Block !CIsland !CSound', ALIGN=-0.1, CHARSIZE=CHARSIZE, COLOR=0, CHARTHICK=1,/NORMAL,FONT='HELVETICA'
		    XYOUTS,0.40,  0.42,'Rhode Island !C      Sound', ALIGN=-0.1, CHARSIZE=CHARSIZE, COLOR=0, CHARTHICK=1,/NORMAL,FONT='HELVETICA'
		    XYOUTS,0.83,  0.76,'Buzzards!C     Bay',  ALIGN=-0.1, CHARSIZE=CHARSIZE2, COLOR=0, CHARTHICK=1,/NORMAL,FONT='HELVETICA'
		    XYOUTS,0.33,  0.60,'Point !CJudith',  ALIGN=-0.1, CHARSIZE=CHARSIZE2, COLOR=0, CHARTHICK=1,/NORMAL,FONT='HELVETICA'
			ENDIF
			TITLE = 'Depth (m)'
			CHARSIZE = 0.45
			LEG=COLOR_BAR_SCALE(PROD='BATHY',POSITION=[0.0001, 0.00,0.999, 0.04],CHARSIZE=CHARSIZE,/BOTTOM,TITLE=TITLE,/NO_UNIT,FONT='HELVETICA',SPECIAL_SCALE='VERY_SHALLOW',PAL='PAL_BATHY')
	    DEVICE,/CLOSE
	    SET_PLOT,olddevice
	  ENDFOR
stop
		PSFILES = FILE_SEARCH(DIR_PLOTS + 'Figure-SRTM30-RI_SOUND-PXY_360_360-BATHY-SMOOTH_5-*.PS')
		GRACE = [250,100,50,200]
		BACKGROUND=255
		FOR _P = 0L, N_ELEMENTS(PSFILES)-1 DO BEGIN
			PSFILE = PSFILES(_P)
			IMAGE_TRIM, PSFILE, DIR_OUT=DIR_POSTER, DPI=600, BACKGROUND=BACKGROUND,GRACE=GRACE, OVERWRITE=overwrite
		ENDFOR
STOP
	ENDIF

; ************************************************
	IF DO_MAKE_FIGURES GE 1 THEN BEGIN
; ************************************************

		OVERWRITE = DO_MAKE_FIGURES GE 2
		DIR_PLOTS = DIR+':\PROJECTS\RI_SOUND\PLOT\'

		BACKGROUND = 255
		SPACE = 10
		PX = 360
		PY = 360
		!P.FONT = 0
		FIGSIZE = 1.5
		OUTLINE_THICK=1
    OUTLINE_COLOR=0
		PAL_SW3,R,G,B
		DIR_MANU    = DIR+':\PROJECTS\RI_SOUND\PLOT\'
		DIR_OUT 		= DIR+':\PROJECTS\RI_SOUND\PLOT\INTERMEDIATE_FILES\'
		DIR_SAVE   	= DIR+':\PROJECTS\RI_SOUND\STATS\'

		MAP_OUT = 'RI_SOUND'
		PAL = 'PAL_SW3'

;		Figure 3 - Annual CHLOR_A
		SAVEFILE = [DIR_SAVE + '!ANNUAL-RI_SOUND-CHLOR_A-MB-MEAN.SAVE',DIR_SAVE + '!ANNUAL-RI_SOUND-CHLOR_A-OC4-MEAN.SAVE']
		PNGFILE  = DIR_OUT  + '!ANNUAL-RI_SOUND-CHLOR_A-MB-MEAN.PNG'
		PSFILE 	 = DIR_MANU + 'Figure_3-!ANNUAL-RI_SOUND-CHLOR_A-MB-OC4-MEAN.PS'
		SPECIAL_SCALE = 'HIGH'
;		STRUCT_SD_2PNG,SAVEFILE,DIR_OUT=DIR_OUT,/ADD_LAND,/ADD_COAST,MISS_COLOR=0,/OVERWRITE,/ADD_BATHY,SPECIAL_SCALE=SPECIAL_SCALE,BACKGROUND=BACKGROUND,/ADD_OUTLINE,OUTLINE_THICK=OUTLINE_THICK,OUTLINE_COLOR=OUTLINE_COLOR
		FILES = [DIR_OUT + '!ANNUAL-RI_SOUND-PXY_360_360-CHLOR_A-OC4-MEAN.PNG',DIR_OUT + '!ANNUAL-RI_SOUND-PXY_360_360-CHLOR_A-MB-MEAN.PNG']
		ROWS = 1
		COLS = 2
		PNGFILE = DIR_OUT + 'Figure_3-!ANNUAL-RI_SOUND-CHLOR_A-MB-OC4-MEAN-COMPOSITE.PNG'
;		IMAGE_WELD_PAGE,FILES=FILES,ROWS=ROWS,COLS=COLS,PAL=PAL,PNGFILE=pngfile,SPACE=space,PX=px,py=py,BACKGROUND=BACKGROUND,/NOTRIM

		IMAGE = READ_PNG(PNGFILE,r,g,b)
 		SZ=SIZE(IMAGE,/STRUCT)
		TRUE_COLOR  = SZ.N_DIMENSIONS EQ 3
  	PX_IMAGE = 1.0*SZ.DIMENSIONS(0+TRUE_COLOR)
  	PY_IMAGE = 1.0*SZ.DIMENSIONS(1+TRUE_COLOR)
   	xsize = DOUBLE(2.54*(PX_IMAGE/300.))
   	ysize = DOUBLE(2.54*(PY_IMAGE/300.))
   	HEIGHT = 20.5
   	WIDTH = 26.9
		xoffset = 5
    yoffset  = 27

    MAP_RI_SOUND
		olddevice= !d.name  ; Get present graphics device
  	!P.FONT = 0
    SET_PLOT,'ps'
    DEVICE,FILENAME=psfile
		DEVICE, /LANDSCAPE
		DEVICE,/COLOR
 		CALL_PROCEDURE,PAL,R,G,B
 		TVLCT,R,G,B
 		COLOR=1
 		SCALE = 4
		DEVICE,BITS_PER_PIXEL=8
		DEVICE,/HELVETICA,/BOLD
    DEVICE, XOFFSET=xoffset, YOFFSET=yoffset, $
    XSIZE=xsize, YSIZE=ysize, $
    SCALE_FACTOR=scale
    ZWIN,IMAGE
    MAP_RI_SOUND
		ZWIN
    TV,IMAGE, TRUE=TRUE_COLOR
    CHARSIZE=0.3
		XYOUTS,-0.01,  0.95,'  SeaWiFS!CAnnual mean = 1.82', ALIGN=-0.1, CHARSIZE=CHARSIZE, COLOR=0, CHARTHICK=1,/NORMAL,FONT='HELVETICA'
    XYOUTS,0.495,  0.95,'  Corrected!CAnnual mean = 1.07', ALIGN=-0.1, CHARSIZE=CHARSIZE, COLOR=0, CHARTHICK=1,/NORMAL,FONT='HELVETICA'

		TITLE = 'Chlorophyll !7a!8 (mg m!E-3!N)'
		CHARSIZE = 0.35
		LEG=COLOR_BAR_SCALE(PROD='CHLOR_A',POSITION=[0.0001, 0.00,0.999, 0.04],CHARSIZE=CHARSIZE,/BOTTOM,TITLE=TITLE,/NO_UNIT,FONT='HELVETICA',SPECIAL_SCALE=SPECIAL_SCALE,PAL='PAL_SW3')
    DEVICE,/CLOSE
    SET_PLOT,olddevice

STOP
	ENDIF


; *******************************************************
	IF DO_M_COMPOSITE GE 1 THEN BEGIN
; *******************************************************
		OVERWRITE = DO_M_COMPOSITE GE 2

		BACKGROUND=255
		SPACE = 20
		PRODS = ['CHLOR_A-MB','PPD-VGMB','PPD-OPAL']
		DIR_OUT = 'D:\PROJECTS\RI_SOUND\PLOT\'
		FOR PTH = 0L, N_ELEMENTS(PRODS)-1 DO BEGIN
			APROD = PRODS(PTH)
			IF APROD EQ 'CHLOR_A-MB' THEN BEGIN & _TITLE = UNITS('CHLOROPHYLL') & _SCALE = 'HIGH' & ENDIF
			IF APROD EQ 'PPD-VGMB'   THEN BEGIN & _TITLE = UNITS('PRIMARY_PRODUCTION') & _SCALE = 'LOW' & ENDIF
			IF APROD EQ 'PPD-OPAL'   THEN BEGIN & _TITLE = UNITS('PRIMARY_PRODUCTION') & _SCALE = 'LOW' & ENDIF
			FILES = FILELIST('D:\PROJECTS\RI_SOUND\stats\!M*' + PRODS(PTH) + '-MEAN.SAVE')
			FP = PARSE_IT(FILES,/ALL)
			OK = WHERE(FP.YEAR_START GE 1998 AND FP.YEAR_START LE 2007)
			FILES = FILES[OK]
		;	STRUCT_SD_2PNG,FILES,DIR_OUT=DIR_OUT+'TEMP_IMAGES\',/ADD_LAND,/ADD_COAST,PAL='PAL_SW3',OVERWRITE=OVERWRITE,SPECIAL_SCALE=_SCALE
			OUTFILE = DIR_OUT + '!M-' + APROD + '-COMPOSITE.PNG'
			PNGFILE = DIR_OUT + '!M-' + APROD + '-COMPOSITE-FINAL.PNG'
			ROWS = 11
			COLS = 12
			FILES2 = FILELIST(DIR_OUT+'TEMP_IMAGES\!M*' + APROD+'*-MEAN.PNG') & FILES2 = FILES2[SORT(FILES2)]
		;	IMAGE_WELD_PAGE,FILES=FILES2,ROWS=ROWS,COLS=COLS,PNGFILE=OUTFILE,SPACE=SPACE,PX=PX,py=PY,BACKGROUND=BACKGROUND,/NOTRIM
	    PAL_SW3,R,G,B
			PS_IMAGE,	FILES=OUTFILE, /COLOR,FULL=full,/LANDSCAPE,/NO_CLOSE,SCALE=0.5,XOFFSET=2.3,YOFFSET=24.
			CHARSIZE = 3.5
			X = -0.05
			Y = 1.005
			IX = [-0.017,0.05,0.125,0.22,0.295,0.395,0.49,0.55,0.645,0.725,0.8,0.88]
			X2 = -0.12
			Y2 = 0.975
			IY = -0.091
			BAR  = COLOR_BAR_SCALE(PROD=VALIDS('PRODS',APROD),POSITION=[0.05, 0.07,0.95, 0.09],PAL='PAL_SW3',CHARSIZE=3.5,/BOTTOM,TITLE=_TITLE,$
						TICKLEN=-0.5, SPECIAL_SCALE=_SCALE,GRACE=[15,1,15,5],/CUT)
			MONTHS = MONTH_NAMES([1,2,3,4,5,6,7,8,9,10,11,12],/SHORT)
			YEARS  = ['1998','1999','2000','2001','2002','2003','2004','2005','2006','2007']
			FOR MTH = 0L, N_ELEMENTS(MONTHS)-1 DO BEGIN
				XYOUTS,IX(MTH),Y,MONTHS(MTH),ALIGN=-1,COLOR=0,CHARSIZE=CHARSIZE,CHARTHICK=1,/NORMAL
			ENDFOR
			FOR YTH = 0L, N_ELEMENTS(YEARS)-1 DO BEGIN
				XYOUTS,X2,Y2+YTH*IY,YEARS(YTH),ALIGN=-1,COLOR=0,CHARSIZE=CHARSIZE,CHARTHICK=1,/NORMAL
			ENDFOR
			SOURCE = "K.Hyde, J.O'Reilly, T.Ducas"
			XYOUTS,-0.2,-0.07,SOURCE,ALIGN=-1,COLOR=0,CHARSIZE=2,CHARTHICK=1,/NORMAL
			SOURCE = 'NOAA / NMFS,  Narragansett, RI'
			XYOUTS,0.5,-0.07,SOURCE,ALIGN=-1,COLOR=0,CHARSIZE=2,CHARTHICK=1,/NORMAL
    	DEVICE,/CLOSE
		ENDFOR
		STOP
		PSFILES = FILE_SEARCH(DIR_OUT + '!M-*COMPOSITE.ps')
		GRACE = [50,50,350,50]
		BACKGROUND=255
		FOR _P = 0L, N_ELEMENTS(PSFILES)-1 DO BEGIN
			PSFILE = PSFILES(_P)
			IMAGE_TRIM, PSFILE, DIR_OUT=DIR_POSTER, DPI=600, BACKGROUND=BACKGROUND,GRACE=GRACE, OVERWRITE=overwrite
		ENDFOR
	ENDIF

; *******************************************************
	IF DO_Y_COMPOSITE GE 1 THEN BEGIN
; *******************************************************
		OVERWRITE = DO_Y_COMPOSITE GE 2

		BACKGROUND=255
		SPACE = 20
		PRODS = ['CHLOR_A-MB','PPD-VGMB','PPD-OPAL']
		DIR_OUT = 'D:\PROJECTS\RI_SOUND\PLOT\'
		FOR PTH = 0L, N_ELEMENTS(PRODS)-1 DO BEGIN
			APROD = PRODS(PTH)
			IF APROD EQ 'CHLOR_A-MB' THEN BEGIN & _TITLE = UNITS('CHLOROPHYLL') & _SCALE = 'HIGH' & ENDIF
			IF APROD EQ 'PPD-VGMB'   THEN BEGIN & _TITLE = UNITS('PRIMARY_PRODUCTION') & _SCALE = 'LOW' & ENDIF
			IF APROD EQ 'PPD-OPAL'   THEN BEGIN & _TITLE = UNITS('PRIMARY_PRODUCTION') & _SCALE = 'LOW' & ENDIF
			FILES = FILELIST('D:\PROJECTS\RI_SOUND\stats\!Y*' + PRODS(PTH) + '-MEAN.SAVE')
			FP = PARSE_IT(FILES,/ALL)
			OK = WHERE(FP.YEAR_START GE 1998 AND FP.YEAR_START LE 2007)
			FILES = FILES[OK]
	;		STRUCT_SD_2PNG,FILES,DIR_OUT=DIR_OUT+'TEMP_IMAGES\',/ADD_LAND,/ADD_COAST,PAL='PAL_SW3',OVERWRITE=OVERWRITE,SPECIAL_SCALE=_SCALE
			OUTFILE = DIR_OUT + '!Y-' + APROD + '-COMPOSITE.PNG'
			PNGFILE = DIR_OUT + '!Y-' + APROD + '-COMPOSITE-FINAL.PNG'
			ROWS = 3
			COLS = 5
			FILES2 = FILELIST(DIR_OUT+'TEMP_IMAGES\!Y*' + APROD+'*-MEAN.PNG') & FILES2 = FILES2[SORT(FILES2)]
	;		IMAGE_WELD_PAGE,FILES=FILES2,ROWS=ROWS,COLS=COLS,PNGFILE=OUTFILE,SPACE=SPACE,PX=PX,py=PY,BACKGROUND=BACKGROUND,/NOTRIM
			PAL_SW3,R,G,B
			PS_IMAGE,	FILES=OUTFILE, /COLOR,FULL=full,/LANDSCAPE,/NO_CLOSE,SCALE=1.6,XOFFSET=1.0,YOFFSET=27.
			CHARSIZE = 1.5
			X = [-0.05,0.15,0.355,0.555,0.76,-0.05,0.15,0.355,0.555,0.76]
			X2 = [-0.05,0.17,0.375,0.575,0.78,-0.03,0.17,0.375,0.575,0.78]
			Y = [REPLICATE(0.95,5),REPLICATE(0.61,5)]
			Y2 = [REPLICATE(0.89,5),REPLICATE(0.56,5)]
			IY = -0.091
			BAR  = COLOR_BAR_SCALE(PROD=VALIDS('PRODS',APROD),POSITION=[0.05, 0.32,0.95, 0.34],PAL='PAL_SW3',CHARSIZE=1.5,/BOTTOM,TITLE=_TITLE,$
						TICKLEN=-0.5, SPECIAL_SCALE=_SCALE,GRACE=[15,1,15,5],/CUT)
			YEARS  = ['1998','1999','2000','2001','2002','2003','2004','2005','2006','2007']
			PPD    = ['143', '150', '205', '160', '189', '151',	'148', '161',	'165', '176']

			FOR YTH = 0L, N_ELEMENTS(YEARS)-1 DO BEGIN
				XYOUTS,X(YTH),Y(YTH),YEARS(YTH),ALIGN=-1,COLOR=0,CHARSIZE=CHARSIZE,CHARTHICK=1,/NORMAL
				IF APROD EQ 'PPD-VGMB' THEN XYOUTS,X(YTH),Y2(YTH),'('+PPD(YTH)+')',ALIGN=-1,COLOR=0,CHARSIZE=1.25,CHARTHICK=1,/NORMAL
			ENDFOR

			SOURCE = "K.Hyde, J.O'Reilly, T.Ducas"
			XYOUTS,-0.17,0.1,SOURCE,ALIGN=-1,COLOR=0,CHARSIZE=0.7,CHARTHICK=1,/NORMAL
			SOURCE = 'NOAA / NMFS,  Narragansett, RI'
			XYOUTS,0.57,0.1,SOURCE,ALIGN=-1,COLOR=0,CHARSIZE=0.7,CHARTHICK=1,/NORMAL
    	DEVICE,/CLOSE
		ENDFOR
		STOP
		PSFILES = FILE_SEARCH(DIR_OUT + '!Y-*COMPOSITE.ps')
		GRACE = [50,50,50,50]
		BACKGROUND=255
		FOR _P = 0L, N_ELEMENTS(PSFILES)-1 DO BEGIN
			PSFILE = PSFILES(_P)
			IMAGE_TRIM, PSFILE, DIR_OUT=DIR_POSTER, DPI=600, BACKGROUND=BACKGROUND,GRACE=GRACE, OVERWRITE=overwrite
		ENDFOR
	ENDIF

; *******************************************************
	IF DO_PPD_COMPOSITE GE 1 THEN BEGIN
; *******************************************************
		OVERWRITE = DO_Y_COMPOSITE GE 2

		BACKGROUND=255
		SPACE = 20
		PRODS = ['PPD-VGMB','PPD-OPAL']
		DIR_OUT = 'D:\PROJECTS\RI_SOUND\PLOT\'
		FILES = FILELIST('D:\PROJECTS\RI_SOUND\stats\!MONTH*PPD-*-MEAN.SAVE')
		_TITLE = UNITS('PRIMARY_PRODUCTION') & _SCALE = 'LOW'
;		STRUCT_SD_2PNG,FILES,DIR_OUT=DIR_OUT+'TEMP_IMAGES\',/ADD_LAND,/ADD_COAST,PAL='PAL_SW3',OVERWRITE=OVERWRITE,SPECIAL_SCALE=_SCALE
		OUTFILE = DIR_OUT + '!MONTH-PPD-COMPOSITE.PNG'
		PNGFILE = DIR_OUT + '!MONTH-PPD-COMPOSITE-FINAL.PNG'
		ROWS = 3
		COLS = 12
		FILES1 = FILELIST(DIR_OUT+'TEMP_IMAGES\!MONTH*PPD-VGMB*-MEAN.PNG') & FILES1 = FILES1[SORT(FILES1)]
		FILES2 = FILELIST(DIR_OUT+'TEMP_IMAGES\!MONTH*PPD-OPAL*-MEAN.PNG') & FILES2 = FILES2[SORT(FILES2)]
;		IMAGE_WELD_PAGE,FILES=[FILES1,FILES2],ROWS=ROWS,COLS=COLS,PNGFILE=OUTFILE,SPACE=SPACE,PX=PX,py=PY,BACKGROUND=BACKGROUND,/NOTRIM
		PAL_SW3,R,G,B

		PS_IMAGE,	FILES=OUTFILE, /COLOR,FULL=full,/LANDSCAPE,/NO_CLOSE,SCALE=0.7,XOFFSET=7.0,YOFFSET=28.0

		BAR  = COLOR_BAR_SCALE(PROD='PPD',POSITION=[0.1, 0.3,0.9, 0.34],PAL='PAL_SW3',CHARSIZE=2.5,/BOTTOM,TITLE=_TITLE,$
					TICKLEN=-0.5, SPECIAL_SCALE=_SCALE,GRACE=[15,1,15,5],/CUT)

		X = [0.005,0.08,0.16,0.25,0.33,0.42,0.51,0.58,0.67,0.75,0.83,0.92]
		Y = 1.001
		MONTHS = MONTH_NAMES([1,2,3,4,5,6,7,8,9,10,11,12],/SHORT)
		CHARSIZE = 2
		FOR MTH = 0L, N_ELEMENTS(MONTHS)-1 DO BEGIN
			XYOUTS,X(MTH),Y,MONTHS(MTH),ALIGN=-1,COLOR=0,CHARSIZE=CHARSIZE,CHARTHICK=1,/NORMAL
		ENDFOR
		MODEL = 'VGMB'
		XYOUTS,-0.05,0.9,MODEL,ALIGN=-1,COLOR=0,CHARSIZE=2.0,CHARTHICK=1,/NORMAL
		MODEL = 'OPAL'
		XYOUTS,-0.045,0.59,MODEL,ALIGN=-1,COLOR=0,CHARSIZE=2.0,CHARTHICK=1,/NORMAL

		SOURCE = "K.Hyde, J.O'Reilly, T.Ducas"
		XYOUTS,-0.05,-0.1,SOURCE,ALIGN=-1,COLOR=0,CHARSIZE=1.5,CHARTHICK=1,/NORMAL
		SOURCE = 'NOAA / NMFS,  Narragansett, RI'
		XYOUTS,0.54,-0.1,SOURCE,ALIGN=-1,COLOR=0,CHARSIZE=1.5,CHARTHICK=1,/NORMAL
  	DEVICE,/CLOSE

		STOP

		GRACE = [50,50,50,50]
		BACKGROUND=255
		PSFILE = DIR_OUT + '!MONTH-PPD-COMPOSITE.ps'
		IMAGE_TRIM, PSFILE, DIR_OUT=DIR_POSTER, DPI=600, BACKGROUND=BACKGROUND,GRACE=GRACE, OVERWRITE=overwrite

	ENDIF


; *******************************************************
	IF DO_PS_2PNG GE 1 THEN BEGIN
; *******************************************************
		OVERWRITE = DO_PS_2PNG GE 2
		DIR_PLOTS = DIR+':\PROJECTS\RI_SOUND\PLOT\'
		PSFILES = FILE_SEARCH(DIR_PLOTS + 'TIMELINE_FIGURES*.PS')
	;	PSFILES = FILE_SEARCH(DIR_PLOTS + '*.PS')

		GRACE = [50,50,50,50]
		BACKGROUND=255
		FOR _P = 0L, N_ELEMENTS(PSFILES)-1 DO BEGIN
			PSFILE = PSFILES(_P)
			IMAGE_TRIM, PSFILE, DIR_OUT=DIR_POSTER, DPI=600, BACKGROUND=BACKGROUND,GRACE=GRACE, OVERWRITE=overwrite
		ENDFOR
	ENDIF ;DO_PS_2PNG



; ********************************************
  IF DO_DATA_2LONLAT GE 1 THEN BEGIN
; ********************************************
    _OVERWRITE = DO_DATA_2LONLAT GT 1
    DIR_STATS = DIR_PROJECTS + 'STATS\'    
    PERIODS = ['!ANNUAL','!YEAR','!Y','!MONTH']
    PRODS = ['CHLOR_A','SST','PPD']
    ALGS  = ['-MB','','-VGMB']
    CSVFILES = ['SeaWiFS-CHLOR_A-RI_SOUND-LATLON_EXTRACTS.CSV',$
                'AVHRR_MODIS-SST-RI_SOUND-LATLON_EXTRACTS.CSV',$
                'SeaWiFS-PP-RI_SOUND-LATLON_EXTRACTS.CSV']
    DIR_OUT = DIR_PROJECTS+'\DATA_EXTRACTS\'
    FOR PTH = 0L, N_ELEMENTS(PRODS)-1 DO BEGIN
      FILES = FILE_SEARCH(DIR_STATS + '!*' + PRODS(PTH) + ALGS(PTH) + '*-MEAN.SAVE')
      FP = PARSE_IT(FILES)
      OK = WHERE_IN(FP.PERIOD_CODE,PERIODS,COMPLEMENT=COMPLEMENT,COUNT)
      PROD = REPLACE(FP[OK].PERIOD,'!','')+'_'+PRODS(PTH)
      DATA = MAKE_DATA_LAT_LON(FILES[OK], PROD=PROD, OVERWRITE=_OVERWRITE,/MAKE_CSV,CSVFILE=CSVFILES(PTH),DIR_OUT=DIR_OUT)
    ENDFOR
    stop
  ENDIF ; DO_NENA_2_LATLON


TIMER,/ STOP
STOP


END



