; $ID:	MAPS_L3BGS_SWAP.PRO,	2020-06-26-15,	USER-KJWH	$
; #########################################################################; 
FUNCTION MAPS_L3BGS_SWAP, ARR, L3BGS_MAP=L3BGS_MAP, MAP_SUBSET=MAP_SUBSET, SUBSET_BINS=SUBSET_BINS, SUBSET_STRUCT=SUBSET_STRUCT, VERBOSE=VERBOSE
;+
; PURPOSE:  CONVERT A L3B MAP ARRAY OR GS MAP ARRAY INTO ITS GS OR L3B MAP EQUIVALENT 
;           [L3B9 > GS9, L3B4 > GS4,  L3B2 >GS2   L3B1 > GS1 L3B10 > GS10 OR
;            GS9 > L3B9,  GS4 > L3B4  GS2 > L3B2  GS1 > L3B1 GS10 >  L3B10
;
; CATEGORY: MAPS_ FAMILY
;
;
; INPUTS: 
;       ARR.......... A L3B9,L3B4,L3B2,L3B1  L3B10 OR 
;                     A GS9,  GS4, GS2, GS1, GS10 DATA ARRAY
;
;
; KEYWORDS:  
;         VERBOSE......... PRINT PROGRAM PROGRESS

; OUTPUTS: AN L3B-GS EQUIVALENT ARRAY 
;
; EXAMPLES:
;          HELP,MAPS_SWAP_L3BGS(MAPS_BLANK('L3B9'),/VERBOSE)
;          HELP,MAPS_SWAP_L3BGS(MAPS_BLANK('L3B4'),/VERBOSE)
;          HELP,MAPS_SWAP_L3BGS(MAPS_BLANK('L3B10'),/VERBOSE)
;          HELP,MAPS_SWAP_L3BGS(MAPS_BLANK('GS9'),/VERBOSE);
;          HELP,MAPS_SWAP_L3BGS(MAPS_BLANK('GS4'),/VERBOSE);
; MODIFICATION HISTORY:
;     MAR 04, 2017  WRITTEN BY: J.E. O'REILLY
;     MAR 05, 2017-  JEOR: TESTED 5 EXAMPLES ABOVE
;     MAR 28, 2017 - KJWH: Changed the name from MAPS_SWAP_L3BGS to MAPS_L3BGS_SWAP so that it is in the MAPS_L3B family
;     FEB 15, 2018 - KJWH: Added COMMON structure to for the swamp structure
;     JUL 29, 2019 - KJWH: Changed the number of L3B1 bins from 380187134 to 380187138 and
;                                                L3B2 bins from 95046854 to 95046858 to be compatible with the new binner in SeaDAS 7.5.3
;-
; #########################################################################

;**************************
  ROUTINE = 'MAPS_L3BGS_SWAP'
;**************************
  COMMON MAPS_L3BGS_SWAP_, L3BGS_STRUCT, STRUCT_SUBSET
  IF KEY(INIT) THEN L3BGS_STRUCT = []
  
  MI = SIZEXYZ(ARR,PX=PX,PY=PY)
  IF MI.N_DIMENSIONS EQ 1 AND PY EQ 0 THEN PY = PX

;CCCCCCCCCCCCCCCCCCCCCCCCCCC
  CASE (PY) OF
    412:       NUM = '10'
    5940422:   NUM = '9'
    16501158:  NUM = '5' 
    23761676:  NUM = '4'
    95046858:  NUM = '2'
    380187138: NUM = '1'
    18:        NUM = '10'     
    2160:      NUM = '9'
    3600:      NUM = '5'
    4320:      NUM = '4'
    8640:      NUM = '2'  
    17280:     NUM = '1'
    ELSE: MESSAGE,' ERROR: INPUT ARRAY IS NOT A L3B OR GS MAP'
  ENDCASE
;CCCCCCCCCCCCCCCCCCCCCCCCCCC
  
; ===> GET THE SIZE THE L3B AND GS MAPS  
  L3B = 'L3B'+NUM & MSL = MAPS_SIZE(L3B, PX=PXL, PY=PYL, /STRING)
  GS  = 'GS' +NUM & MGS = MAPS_SIZE(GS,  PX=PXG, PY=PYG, /STRING)
  
; ===> CREATE THE XPYP SWAP FILE NAME 
  MP_TXT = L3B +'_'+ PXL + '_'  + PYL + '_' +  GS + '_'+ PXG + '_' + PYG
  FILE = !S.MAPINFO + 'XPYP-' + MP_TXT + '.SAV'
  
  IF ANY(L3BGS_STRUCT) THEN BEGIN
    OK = WHERE(TAG_NAMES(L3BGS_STRUCT) EQ MP_TXT, COUNT_MAP_OUT)
    IF COUNT_MAP_OUT EQ 1 THEN S = L3BGS_STRUCT.(OK) ELSE S = []
  ENDIF ELSE S = []
  
; ===> READ XPYP SWAP FILE
  IF S EQ [] THEN BEGIN
    IF KEY(VERBOSE) THEN PFILE, FILE, /R
    IF EXISTS(FILE) EQ 0 THEN S = MAPS_L3B_2GS(L3B, VERBOSE=VERBOSE, OVERWRITE=OVERWRITE) ELSE S = IDL_RESTORE(FILE)
    IF L3BGS_STRUCT NE [] THEN BEGIN
      IF COUNT_MAP_OUT EQ 0 THEN L3BGS_STRUCT = CREATE_STRUCT(L3BGS_STRUCT,MP_TXT,S)
    ENDIF ELSE L3BGS_STRUCT = CREATE_STRUCT(MP_TXT,S)
  ENDIF  
  
  IF PY EQ MSL.PY THEN BEGIN ; IF THE INPUT IS A L3B ARRAY, USE THE GS SUBSCRIPTS TO CONVERT IT TO A GS MAP
    A = ARR[S.XP_L3_2GS,S.YP_L3_2GS]
    A[S.GS_EDGES] = MISSINGS(A) ; MAKE THE EDGES OF THE ARRAY MISSINGS
    IF KEY(MAP_SUBSET) THEN LL = MAPS_2LONLAT(GS,LONS=LONS,LATS=LATS)
    L3BGS_MAP = GS
  ENDIF ELSE BEGIN ; IF THE INPUT IS A GS ARRAY
    A = ARR[S.YP_GS_2L3]
    IF KEY(MAP_SUBSET) THEN LL = MAPS_2LONLAT(L3B,LONS=LONS,LATS=LATS)
    L3BGS_MAP = L3B
  ENDELSE  
  
  IF KEY(MAP_SUBSET) THEN IF VALIDS('MAPS',MAP_SUBSET) THEN BEGIN
    ; ===> ADD DUMMY MAP TAG TO INITIALIZE THE STRUCT_MAPS_REMAP STRUCTURE
    IF NONE(STRUCT_SUBSET) OR KEY(INIT) THEN STRUCT_SUBSET=CREATE_STRUCT('_','')

    ; ===> Add the MAP_IN-MAP_OUT-PX_OUT-PY_OUT combination to STRUCT_MAPS_REMAP if it is not already present
    OK_TAG = WHERE(TAG_NAMES(STRUCT_SUBSET) EQ MAP_SUBSET,COUNT)
    IF COUNT EQ 0 THEN BEGIN
      MAPS_SET, MAP_SUBSET
      S=MAPS_LL_BOX()
      ZWIN
  ; make NaN LONS and LATS a real number, -999999
      LONS[WHERE(NAN_2INFINITY(LONS) EQ MISSINGS(LONS),/NULL)] = -99999.0D & OKLONS = WHERE(LONS GT S.LONMIN -1.0 AND LONS LT S.LONMAX + 1) & SUBLONS = LONS[OKLONS]
      LATS[WHERE(NAN_2INFINITY(LATS) EQ MISSINGS(LATS),/NULL)] = -99999.0D & OKLATS = WHERE(LATS GT S.LATMIN -1.0 AND LATS LT S.LATMAX + 1) & SUBLATS = LATS[OKLATS]
      
      BLK = MAPS_BLANK(L3BGS_MAP,FILL=-1.0D) & BLK[OKLONS] = 1.0D & BLK[OKLATS] = BLK[OKLATS] + 1.0D
      SUBSET = WHERE(BLK EQ 2, COMPLEMENT=COMP) & BLK[COMP] = -1 & BLK(SUBSET) = DINDGEN(N_ELEMENTS(SUBSET))
      XY = IMAGE_PXPY(BLK)
      OK = WHERE(BLK EQ 0,COUNT)        & LONMIN = XY.X[OK] & LATMIN = XY.Y[OK] & IF COUNT GT 1 THEN MESSAGE, 'ERROR: More than 1 lonmin found'
      OK = WHERE(BLK EQ MAX(BLK),COUNT) & LONMAX = XY.X[OK] & LATMAX = XY.Y[OK] & IF COUNT GT 1 THEN MESSAGE, 'ERROR: More than 1 lonmax found'
      STRUCT_SUBSET = CREATE_STRUCT(STRUCT_SUBSET,MAP_SUBSET,CREATE_STRUCT('MAP',MAP_SUBSET,'SUBSET',SUBSET,'LONMIN',LONMIN,'LONMAX',LONMAX,'LATMIN',LATMIN,'LATMAX',LATMAX))
    ENDIF
    SUBSET_STRUCT = STRUCT_SUBSET.(WHERE(TAG_NAMES(STRUCT_SUBSET) EQ MAP_SUBSET,/NULL))
    SUBSET_BINS = SUBSET_STRUCT.SUBSET
    A = A[SUBSET_STRUCT.LONMIN:SUBSET_STRUCT.LONMAX,SUBSET_STRUCT.LATMIN:SUBSET_STRUCT.LATMAX]  
  ENDIF
  
  
  
  RETURN, A
  
END; #####################  END OF ROUTINE ################################
