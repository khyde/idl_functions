; $ID:	SHRIMP_FIGURES.PRO,	2021-04-15-17,	USER-KJWH	$


	PRO SHRIMP_FIGURES

;+
; NAME:
;		SHRIMP_FIGURES
;
; PURPOSE:
;		This procedure generates figures for the Northern Shrimp Project with Anne Richards
;
; CATEGORY:
;		FIGURES
;
;
;
; MODIFICATION HISTORY:
;			Written Nov 21, 2007 by K.J.W.Hyde, 28 Tarzwell Drive, NMFS, NOAA 02882 (kimberly.hyde@noaa.gov)
;-
;	****************************************************************************************************
	ROUTINE_NAME = 'SHRIMP_FIGURES'

	DIR_PROJECT  = FIX_PATH(!S.PROJECTS + 'NORTHERN_SHRIMP/') 
	DIR_DATA     = FIX_PATH(DIR_PROJECT + 'DATA/')     & DIR_TEST,DIR_DATA
	DIR_PLOTS    = FIX_PATH(DIR_PROJECT + 'PLOTS/')    & DIR_TEST,DIR_PLOTS
	DIR_SUBAREAS = FIX_PATH(DIR_PROJECT + 'SUBAREAS/') & DIR_TEST,DIR_SUBAREAS

  SL = DELIMITER(/PATH)

  DO_SUBAREA_MAP     = 0
  DO_TS_SUBAREAS     = 0
  DO_SUBAREAS_OUTPUT = 0
  DO_PLOTS_NG        = 1
  DO_PLOTS           = 0
  DO_NATL_SST        = 0
  DO_SPRING_BROWSE   = 0
  
  
; *******************************************************
  IF DO_SUBAREA_MAP GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_SUBAREA_MAP GE 2

    PAL = 'PAL_LANDMASK'
    BUFFER = 1
    OUTPUT_EXT = 'PNG'
    PNGFILE = DIR_PLOTS + 'SUBAREA_STATION_MAP.' + OUTPUT_EXT
    COORDS = CSV_READ(DIR_PROJECT + 'station_coordinates.csv')
    PX = 1024
    PY = 1024
    LL_COLOR  = 254
    SUB_COLOR = 10

    PAL_36,R,G,B
    LANDMASK = READ_LANDMASK(MAP='NEC',/STRUCT)
    BATHY    = READ_BATHY(MAP='NEC',PX=PX,PY=PY)
    LAND     = READ_LANDMASK(MAP='NEC',PX=PX,PY=PY)
    LAND(LANDMASK.LAKE) = LANDMASK.LAND_CODE
    LAND(LANDMASK.LAKESIDE) = LANDMASK.LAND_CODE
    MASK     = STRUCT_SD_READ(!S.SUBAREAS + 'MASK_SUBAREA-NEC-PXY_1024_1024-GOM_SHRIMP_2AREAS.SAVE',STRUCT=STRUCT,MAP_OUT='NEC',PX_OUT=PX,PY_OUT=PY)
    MSK      = BYTE(MASK) & MSK(*) = 0
    OK       = WHERE(MASK EQ 1)
    LAND[OK] = SUB_COLOR
      
    BATHY = MAP_ADD_BATHY(BYTARR(PX,PY), MAP='NEC', BATHS=[50,100], COLOR=[253,254], THICK=[2,4])
    OK_BATHS = WHERE(BATHY NE 0,COUNT_BATHY)
    LAND(OK_BATHS) = BATHY(OK_BATHS)
           
    ZX1 = ROUND(PX*0.43)  & ZXD = ROUND(0.156*PX)  & ZX2 = ZX1 + ZXD
    ZY1 = ROUND(PY*0.71)  & ZYD = ZXD             & ZY2 = ZY1 + ZYD
     
    LONS     = [-70.5,-70,-69.5,-69] & LONNAMES = ROUNDS(LONS,1)
    LATS     = [43,43.5,44]          & LATNAMES = ROUNDS(LATS,1)
    LL       = MAPS_2LONLAT('NEC',PX=PX,PY=PY)
    
    MPDIM = 1024
    SP = 45
    DIM = MPDIM + SP*2
    
    X1 = SP  & X2 = DIM - SP
    Y1 = SP  & Y2 = DIM - SP
    
    IDIM = MPDIM/2
    IX2 = DIM - SP & IX1 = IX2 - IDIM
    IY1 = SP       & IY2 = IY1 + IDIM
    BOXDIF = FLOAT(IDIM)/FLOAT(ZXD)
    
    W = WINDOW(DIMENSIONS=[DIM,DIM],BUFFER=BUFFER)
    IM = IMAGE(LAND,RGB_TABLE=CPAL_READ(PAL),POSITION=[X1,Y1,X2,Y2],/DEVICE,/CURRENT)
    
    INSET = LAND(ZX1:ZX2, ZY1:ZY2)
    IN = IMAGE(INSET,RGB_TABLE=CPAL_READ(PAL),POSITION=[IX1,IY1,IX2,IY2],/DEVICE,/CURRENT)
    BOXI = POLYLINE([X1,X2,X2,X1,X1],[Y1,Y1,Y2,Y2,Y1],          THICK=3,COLOR='BLACK',TARGET=W,/DEVICE)
    BOXZ = POLYLINE([ZX1,ZX2,ZX2,ZX1,ZX1]+SP,[ZY1,ZY1,ZY2,ZY2,ZY1]+SP,THICK=2,COLOR='BLACK',TARGET=W,/DEVICE)
    BOXZ = POLYLINE([IX1,IX2,IX2,IX1,IX1],[IY1,IY1,IY2,IY2,IY1],THICK=2,COLOR='BLACK',TARGET=W,/DEVICE)
    LINE1 = POLYLINE([ZX1+SP,IX1],[ZY1+SP,IY2],COLOR='BLACK',THICK=2,/DEVICE,/CURRENT)
    LINE2 = POLYLINE([ZX2+SP,IX2],[ZY1+SP,IY2], COLOR='BLACK',THICK=2,/DEVICE,/CURRENT)
    
    LATS = [36,40,44]  & LATNAMES = STRTRIM(LATS,2)
    LONS = [-76,-72,-68,-64] & LONNAMES = STRTRIM(LONS,2)
    NEAR = 0.1
    LAT = WHERE_NEAREST(LL.LAT(0,*),FLOAT(LATS),NEAR=NEAR)
    LON = WHERE_NEAREST(LL.LON(*,0),FLOAT(LONS),NEAR=NEAR)
   
    FOR S=0, N_ELEMENTS(LAT)-1 DO LLAT = SYMBOL(SP,LAT(S)+SP, 'HLINE',SYM_SIZE=2,SYM_COLOR='BLACK',SYM_THICK=3,/SYM_FILLED,/CURRENT,/DEVICE,LABEL_STRING=LATNAMES(S),LABEL_FONT_SIZE=16,LABEL_FONT_STYLE='BOLD',LABEL_POSITION='L')
    FOR S=0, N_ELEMENTS(LON)-3 DO LLON = SYMBOL(LON(S)+SP,SP, 'VLINE',SYM_SIZE=2,SYM_COLOR='BLACK',SYM_THICK=3,/SYM_FILLED,/CURRENT,/DEVICE,LABEL_STRING=LONNAMES(S),LABEL_FONT_SIZE=16,LABEL_FONT_STYLE='BOLD',LABEL_POSITION='B')

    FOR S=1, N_ELEMENTS(LAT)-1 DO LLAT = SYMBOL(X2,LAT(S)+SP, 'HLINE',SYM_SIZE=2,SYM_COLOR='BLACK',SYM_THICK=3,/SYM_FILLED,/CURRENT,/DEVICE,LABEL_STRING=LATNAMES(S),LABEL_FONT_SIZE=16,LABEL_FONT_STYLE='BOLD',LABEL_POSITION='R')
    FOR S=0, N_ELEMENTS(LON)-1 DO LLON = SYMBOL(LON(S)+SP,Y2, 'VLINE',SYM_SIZE=2,SYM_COLOR='BLACK',SYM_THICK=3,/SYM_FILLED,/CURRENT,/DEVICE,LABEL_STRING=LONNAMES(S),LABEL_FONT_SIZE=16,LABEL_FONT_STYLE='BOLD',LABEL_POSITION='T')

    ZWIN,IMG
    MAPS_SET,'NEC'
    PXPY=MAP_DEG2IMAGE(LAND,COORDS.LON,COORDS.LAT,X=XS,Y=YS,AROUND=0,SUBS=subs)
    ZWIN
    S = SYMBOL(SP+XS,SP+YS,'CIRCLE',SYM_SIZE=0.75,SYM_COLOR='RED',/SYM_FILLED,/CURRENT,/DEVICE)
    
    ZXS = IX1+((XS-ZX1)*BOXDIF)
    ZYS = IY1+((YS-ZY1)*BOXDIF)
    SYM = SYMBOL(ZXS,ZYS,SYMBOL='CIRCLE',SYM_SIZE=1.75,SYM_COLOR='RED',/SYM_FILLED,/DEVICE);,TARGET=IM)

    IF BUFFER EQ 1 THEN BEGIN    
      W.SAVE, PNGFILE, RESOLUTION=RESOLUTION
      W.CLOSE
    ENDIF
  
  STOP  
  ;  IMG      = STRUCT_SD_2IMAGE_NG(GOM_STRUCT,/ADD_LAND,/ADD_COAST,/ADD_BATHY,BATHS=[50,100],BATHY_COLOR=0,BATHY_THICK=2,$
  ;  /ADD_LONLAT_LINES,/ADD_LONLAT_LABELS,LONLAT_COLOR=252,LONLAT_THICK=1,LONS=LONS,LATS=LATS,LONNAMES=LONNAMES,LATNAMES=LATNAMES,LONLAT_CHARSIZE=LONLAT_CHARSIZE
    IMG      = STRUCT_SD_2IMAGE_NG(GOM_STRUCT,/ADD_LAND,/ADD_COAST,/ADD_BATHY,BATHS=[50,100],BATHY_COLOR=0,BATHY_THICK=2)
    SUBAREA  = 'GOM_50_100'
    LON = LL.LON
    LAT = LL.LAT
    
    STOP
    CXD = 200 & CX1 = 5   & CX2 = CX1 + CXD
    CYD = 200 & CY1 = 165 & CY2 = CY1 + CYD
    CB = IMG(CX1:CX2,CY1:CY2)
    XD = 450 & X1 = 1014-XD & X2 = 1014
    YD = 450 & Y1 = 10      & Y2 = Y1 + YD
    BOXDIF = FLOAT(XD)/FLOAT(CXD)

    BUFFER = 1
    DIMENSIONS = [1024,1024]

    IF PALCOLOR EQ 'GRAY' THEN SYM_COLOR='BLACK' ELSE SYM_COLOR='RED'
    
    IMGM = IMAGE(DISPGM,RGB_TABLE=RGB,DIMENSIONS=DIMENSIONS,MARGIN=0,BUFFER=BUFFER)
    SYM = SYMBOL(X,Y,SYMBOL='CIRCLE',SYM_SIZE=1.5,SYM_COLOR=SYM_COLOR,/SYM_FILLED,/DEVICE)
 ;   IMGM.SAVE, DIR_SUBAREAS + 'MASK_SUBAREA-NEC-PXY_1024_1024-CLIVEC-DISPLAY-CB_STATIONS-'+PALCOLOR+'.'+OUTPUT_EXT, RESOLUTION=600 ; Subareas - Stations, NO legend
    IMNC = IMAGE(CB,RGB_TABLE=RGB,DIMENSIONS=[XD,YD],/CURRENT,POSITION=[X1,Y1,X2,Y2],BUFFER=BUFFER,/DEVICE)
 ;   SYM = SYMBOL(X1+((X-CX1)*BOXDIF),Y1+((Y-CY1)*BOXDIF),SYMBOL='CIRCLE',SYM_SIZE=3,SYM_COLOR=SYM_COLOR,/SYM_FILLED,/DEVICE,TARGET=IMCB)
    BOX1 = POLYLINE([X1,X2,X2,X1,X1],[Y1,Y1,Y2,Y2,Y1],THICK=4,COLOR='BLACK',TARGET=IMCB,/DEVICE)
    BOX2 = POLYLINE([CX1,CX2,CX2,CX1,CX1],[CY1,CY1,CY2,CY2,CY1],/DEVICE,COLOR='BLACK',THICK=3)
    LINE1 = POLYLINE([CX2,X1],[CY2,Y2],COLOR='BLACK',THICK=3,/DEVICE,/CURRENT)
    LINE2 = POLYLINE([CX2,X1],[CY1,Y1], COLOR='BLACK',THICK=3,/DEVICE,/CURRENT)
 STOP
    IMGM.SAVE,DIR_SUBAREAS+'MASK_SUBAREA-GOM-PXY_1024_1024-DISPLAY-SHRIMP_STATIONS-INSET-'+PALCOLOR+'.'+OUTPUT_EXT, RESOLUTION=600 ; Subareas - Stations, NO Legend, Inset
    IMGM.CLOSE
  ENDIF
  
; ****************************  
  IF DO_TS_SUBAREAS GE 1 THEN BEGIN
; ****************************  
    OVERWRITE = DO_TS_SUBAREAS GT 1
  
    DATASETS   = ['OC-SEAWIFS-MLAC','SST-AVHRR-4','OC-MODIS-LAC','SST-MUR-1KM']
    DO_EXTRACT = [1,0,0,1]
    PERIODS    = 'DAILY'
    OMAP       = 'NEC'
        
    FOR N=0,N_ELEMENTS(DATASETS)-1 DO BEGIN
      IF DO_EXTRACT(N) EQ 0 THEN CONTINUE
      DATASET = DATASETS(N)      
      CASE DATASET OF
        'OC-SEAWIFS-MLAC':  BEGIN & PRODS=['CHLOR_A-OC4', 'CHLOR_A-PAN','PAR','FUCO-PAN','DIATOM-PAN','DIATOM_PERCENTAGE-PAN','MICRO-PAN','MICRO_PERCENTAGE-PAN'] & SERIES=['STATS','INTERP'] & PERIODS=['DAILY','DAILY'] & DATE_RANGE =['19970101000000','20071231235959'] &END ; '19980101-20100601'  
        'OC-MODIS-LAC':     BEGIN & PRODS=['CHLOR_A-OC3M','CHLOR_A-PAN','PAR','FUCO-PAN','DIATOM-PAN','DIATOM_PERCENTAGE-PAN','MICRO-PAN','MICRO_PERCENTAGE-PAN'] & SERIES=['STATS','INTERP'] & PERIODS=['DAILY','DAILY'] & DATE_RANGE =['20080101000000','20201231235959'] & END ; '20110101-20120601'
        'SST-AVHRR-4':      BEGIN & PRODS=['SST']                                                               & SERIES=['SAVE', 'INTERP'] & PERIODS=['DAILY','DAILY'] & DATE_RANGE =['19970101000000','20201231235959'] & END ; '19980101-20100601'
        'SST-MUR-1KM':      BEGIN & PRODS=['SST']                                                               & SERIES=['SAVE', 'INTERP'] & PERIODS=['DAILY','DAILY'] & DATE_RANGE =['19970101000000','20201231235959'] & END ; '19980101-20100601'        
      ENDCASE  
      
      SUBAREA_FILE  = !S.SUBAREAS +'MASK_SUBAREA-NEC-PXY_1024_1024-GOM_SHRIMP_2AREAS.SAVE' 
      SUBAREA_CODES = [1,2]  
      FOR M=0,N_ELEMENTS(PERIODS)-1 DO BEGIN       
        APERIODS = PERIODS(M)
        ASERIES  = SERIES(M) 
        DIR_SUBAREAS = !S.DATASETS + DATASET + SL + OMAP + SL + 'TS_SUBAREAS' + SL 
        DIR_SUBAREAS = !S.DATASETS + DATASET + SL + OMAP + SL + 'TS_SUBAREAS-' + ASERIES + SL & DIR_TEST,DIR_SUBAREAS      
                       
                                    PERIOD_CODES = ['D','W','WEEK','M','A','Y','DOY','MONTH','ANNUAL','MANNUAL','YEAR','STUDY'] ; DEFAULT        
        IF APERIODS EQ 'ALL'   THEN PERIOD_CODES = ['S','D','D3','D8','W','M','A','Y','DOY','WEEK','MONTH','ANNUAL','YEAR','STUDY','SS','DD','MM','M3','YY','ALL']                      
        IF APERIODS EQ 'MIN'   THEN PERIOD_CODES = ['W','M','A','WEEK','MONTH','ANNUAL']
        IF APERIODS EQ 'DAILY' THEN PERIOD_CODES = 'D'
                       
        FILES = []
        FOR P=0,N_ELEMENTS(PRODS)-1L DO BEGIN
          PROD = PRODS(P)
          APROD = VALIDS('PRODS',PROD)
          AALG  = VALIDS('ALGS',PROD)          
          DIR_SAVE   = !S.DATASETS + DATASET + SL + OMAP + SL + 'SAVE'      + SL + PROD + SL
          DIR_STATS  = !S.DATASETS + DATASET + SL + OMAP + SL + 'STATS'     + SL + PROD + SL
          DIR_ANOMS  = !S.DATASETS + DATASET + SL + OMAP + SL + 'ANOMS'     + SL + PROD + SL
          DIR_ISAVE  = !S.DATASETS + DATASET + SL + OMAP + SL + 'TS_IMAGES' + SL + PROD + SL + 'SAVE' + SL      
          DIR_ISTATS = !S.DATASETS + DATASET + SL + OMAP + SL + 'TS_IMAGES' + SL + PROD + SL + 'STATS' + SL                   
          FOR S=0, N_ELEMENTS(PERIOD_CODES)-1 DO BEGIN
            APERIOD = PERIOD_CODES(S)
            IF WHERE(ASERIES EQ 'SAVE')   GE 0 THEN FILES = [FILES,FILE_SEARCH(DIR_SAVE  +APERIOD+'_*'+PROD+'*.SAVE')]
            IF WHERE(ASERIES EQ 'STATS')  GE 0 THEN FILES = [FILES,FILE_SEARCH(DIR_STATS +APERIOD+'_*'+PROD+'*MEAN.SAVE')]
            IF WHERE(ASERIES EQ 'ANOMS')  GE 0 THEN FILES = [FILES,FILE_SEARCH(DIR_ANOMS +APERIOD+'_*'+PROD+'*DIF*.SAVE')]
            IF WHERE(ASERIES EQ 'ANOMS')  GE 0 THEN FILES = [FILES,FILE_SEARCH(DIR_ANOMS +APERIOD+'_*'+PROD+'*RATIO*.SAVE')]
            IF WHERE(ASERIES EQ 'INTERP') GE 0 THEN FILES = [FILES,FILE_SEARCH(DIR_ISAVE +APERIOD+'_*'+PROD+'*INTERP*.SAVE')]
            IF WHERE(ASERIES EQ 'INTERP') GE 0 THEN FILES = [FILES,FILE_SEARCH(DIR_ISTATS+APERIOD+'_*'+PROD+'*INTERP*MEAN.SAVE')]
          ENDFOR 
        ENDFOR          
        FILES = FILES[WHERE(FILES NE '')]
        IF N_ELEMENTS(FILES) EQ 0 THEN CONTINUE
        FILES = DATE_SELECT(FILES, DATE_RANGE[0], DATE_RANGE[1])
        IF N_ELEMENTS(FILES) EQ 0 THEN CONTINUE        
        TS_SUBAREAS, FILES, SUBAREA_FILE=SUBAREA_FILE, SUBAREA_CODES=SUBAREA_CODES,DIR_OUT=DIR_SUBAREAS,/CSV,OVERWRITE=overwrite
      ENDFOR                                 
    ENDFOR       
  ENDIF ;   DO_TS_SUBAREAS
  
; ****************************  
  IF DO_SUBAREAS_OUTPUT GE 1 THEN BEGIN
; ****************************  
    OVERWRITE = DO_SUBAREAS_OUTPUT GT 1
    
    MASK = 'MASK_SUBAREA-NEC-PXY_1024_1024-GOM_SHRIMP_2AREAS'
    SUBAREA_CODES = [1]
    PERIOD= ['D']
    MAP = 'NEC'
    
    OC_PRODS = ['CHLOR_A-OC','CHLOR_A-PAN','FUCO-PAN','DIATOM-PAN','DIATOM_PERCENTAGE-PAN','MICRO-PAN','MICRO_PERCENTAGE-PAN']
    STATS_ONLY_PRODS = ['FUCO-PAN','DIATOM-PAN','DIATOM_PERCENTAGE-PAN','MICRO-PAN','MICRO_PERCENTAGE-PAN']
    
    PRODS    = LIST([OC_PRODS],           [OC_PRODS],          ['PPD-VGPM2','PPD-OPAL'],['PPD-VGPM2','PPD-OPAL'],['SST'],        ['SST'])
    MATHS    = LIST(['GEOMETRIC'],        ['GEOMETRIC'],       ['GEOMETRIC'],           ['GEOMETRIC'],           ['ARITHMETIC'], ['ARITHMETIC'])
    DATASETS =      ['OC-SEAWIFS-MLAC',   'OC-MODIS-LAC',       'PP-SEAWIFS-AVHRR-MLAC', 'PP-MODIS-AVHRR-LAC',    'SST-AVHRR-4',  'SST-MUR-1KM']
    STARGETS =      ['MULTI_PRODS',       'MULTI_PRODS',        'MIN_PP_PRODS',          'MIN_PP_PRODS',          'SST',          'SST']
    ITARGETS =      ['CHLOR_A-OC4_CHLOR_A-PAN_PAR','CHLOR_A-OC3M_CHLOR_A-PAN_PAR',      'MIN_PP_PRODS',          'MIN_PP_PRODS',          'SST',          'SST']
    LABELS   =      ['SEAWIFS',           'MODIS',              'SEAWIFS',               'MODIS',                 'AVHRR',        'MUR']
    DO_DATA  =      [ 1,                   1,                   0,                       0,                       1,               1]
    DCOUNTS  =      [ 0,                   1,                   2,                       3,                       4,               5]
    DATES    = LIST([ 19980101,20071231], [20080101,20151231], [19980101,20071231],   [20080101,20141231],     [19980101,20151231],[20020101,20151231])
    INTERP   = []
    
    OK = WHERE(DO_DATA EQ 1,COUNT)
    IF COUNT GT 1 THEN LABEL = STRJOIN(LABELS[UNIQ(LABELS,SORT(LABELS))],'_') ELSE LABEL = LABELS[OK]
    LABEL_DATE = DATE_STAMP()  
    DOY_RANGE = [0,366]    
    STRUCT    = STRUCT_2MISSINGS(CREATE_STRUCT('SENSOR','','PERIOD','','YEAR',0,'DOY',0,'JD',0.0,'SUBAREA_NAME','','SUBAREA_CODE','','N_SUBAREA',0.0,'N',0,'MATH','','MEAN',0.0,'STD',0.0,'BOXCAR',0.0,'INTERP_BOXCAR',0.0,'LOWESS',0.0,'INTERP_LOWESS',0.0,'EXTRACT_INTERP_MEAN',0.0,'EXTRACT_INTERP_STD',0.0))     
    COUNTER = 0   
    OUTSTRUCT = [] 
    PSTRUCT = []
    FOR D=0L, N_ELEMENTS(DATASETS)-1 DO BEGIN
      IF DO_DATA(D) EQ 0 THEN CONTINUE
      DCOUNT=DCOUNTS(D)
      DPRODS = PRODS(D)      
      DATE_RANGE = DATES(D)
      MATH = MATHS(D)
      
      IFILE = FILE_SEARCH(!S.DATASETS + DATASETS(D) + SL + MAP + SL + 'TS_SUBAREAS-INTERP' + SL + PERIOD + '-' + MASK + '-*' + ITARGETS(D) + '*.SAVE')
      SFILE = FILE_SEARCH(!S.DATASETS + DATASETS(D) + SL + MAP + SL + 'TS_SUBAREAS-STATS'  + SL + PERIOD + '-' + MASK + '-*' + STARGETS(D) + '*.SAVE')
      IF FILE_TEST(SFILE) EQ 0 THEN SFILE = FILE_SEARCH(!S.DATASETS + DATASETS(D) + SL + MAP + SL + 'TS_SUBAREAS-SAVE'  + SL + PERIOD + '-' + MASK + '-*' + STARGETS(D) + '.SAVE')
      IF IFILE NE '' THEN IDATA = IDL_RESTORE(IFILE) ELSE IDATA = []
      SDATA = IDL_RESTORE(SFILE)
      IF IDATA NE [] THEN ALLDATA = STRUCT_CONCAT(SDATA,IDATA) ELSE ALLDATA = SDATA
      TAGS = TAG_NAMES(ALLDATA)
      OK = WHERE(STRPOS(TAGS,'OC') GE 0)
      ALLDATA = STRUCT_RENAME(ALLDATA,TAGS[OK],REPLACE(TAGS[OK],['OC4','OC3M'],['OC','OC']))
      OK_DATES = DATE_SELECT(ALLDATA.PERIOD,DATE_RANGE[0],DATE_RANGE[1],SUBS=SUBS) & GONE, OK_DATES 
      ALLDATA = ALLDATA(SUBS) & GONE, SUBS
      OK = WHERE(ALLDATA.FILE_MATH NE 'INTERP',COUNT,COMPLEMENT=COMPLEMENT,NCOMPLEMENT=NCOMPLEMENT)
      IF NCOMPLEMENT EQ 0 THEN ALLINTERP = ALLDATA[OK] ELSE ALLINTERP = ALLDATA(COMPLEMENT)
      ALLDATA = ALLDATA[OK]
      TAGS = TAG_NAMES(ALLDATA)
                   
      FOR S=0L, N_ELEMENTS(SUBAREA_CODES)-1 DO BEGIN
        OK = WHERE(ALLDATA.SUBAREA_CODE EQ SUBAREA_CODES(S))
        DATA = ALLDATA[OK]
        OK = WHERE(ALLINTERP.SUBAREA_CODE EQ SUBAREA_CODES(S))
        INTERP = ALLINTERP[OK]
        DP   = DATE_PARSE(PERIOD_2DATE(INTERP.PERIOD))        
        JD_RANGE  = DATE_2JD(DATE_GEN([MIN(DP.DATE),MAX(DP.DATE)]))
        FOR PR = 0L, N_ELEMENTS(DPRODS)-1 DO BEGIN    
          PROD = VALIDS('PRODS',DPRODS(PR))
          ALG  = VALIDS('ALGS',DPRODS(PR))
          IF WHERE(DPRODS(PR) EQ STATS_ONLY_PRODS) LT 0 THEN STAT_ONLY = 0 ELSE STAT_ONLY = 1
          IF ALG EQ '' THEN TARGET = '_'+PROD ELSE TARGET = '_'+PROD+'_'+ALG
          IF ALG EQ '' THEN ALG = '_' ELSE ALG = '_'+ALG+'_'
          PROD_TAGS = PROD+ALG+['N','MATH','MEAN','STD','BOXCAR','INTERP_BOXCAR','LOWESS','INTERP_LOWESS','EXTRACT_INTERP_MEAN','EXTRACT_INTERP_STD']
          
          PROD_STRUCT = REPLICATE(STRUCT,N_ELEMENTS(INTERP))
          PROD_STRUCT.SENSOR         = LABELS(D)
          PROD_STRUCT.PERIOD         = INTERP.PERIOD
          PROD_STRUCT.YEAR           = DP.YEAR 
          PROD_STRUCT.DOY            = DP.IDOY
          PROD_STRUCT.JD             = DP.JD
          PROD_STRUCT.MATH           = MATH[0]
          PROD_STRUCT.SUBAREA_NAME   = INTERP.SUBAREA_NAME
          PROD_STRUCT.SUBAREA_CODE   = INTERP.SUBAREA_CODE
          PROD_STRUCT.N_SUBAREA      = INTERP.N_SUBAREA
          
          IF STAT_ONLY EQ 0 THEN BEGIN 
            PROD_STRUCT.EXTRACT_INTERP_MEAN = INTERP.(WHERE(TAGS EQ 'MEAN'+TARGET))
            PROD_STRUCT.EXTRACT_INTERP_STD  = INTERP.(WHERE(TAGS EQ 'STD' +TARGET))
          ENDIF  
          
          OK = WHERE_MATCH(PROD_STRUCT.PERIOD+'-'+PROD_STRUCT.SUBAREA_NAME,DATA.PERIOD+'-'+DATA.SUBAREA_NAME,COUNT,VALID=VALID)          
          PROD_STRUCT[OK].N           = DATA(VALID).(WHERE(TAGS EQ 'N'+TARGET))
          PROD_STRUCT[OK].MEAN        = DATA(VALID).(WHERE(TAGS EQ 'MEAN'+TARGET))
          PROD_STRUCT[OK].STD         = DATA(VALID).(WHERE(TAGS EQ 'STD' +TARGET))
          
          OK = WHERE(PROD_STRUCT.N LT 10,COUNT)
          IF COUNT GE 1 THEN BEGIN
            PROD_STRUCT[OK].MEAN = MISSINGS(0.0)
            PROD_STRUCT[OK].N    = 0
          ENDIF  
          
          OK = WHERE(PROD_STRUCT.MEAN NE MISSINGS(0.0))
          PROD_STRUCT[OK].BOXCAR       = SMOOTH(FLOAT(PROD_STRUCT[OK].MEAN),8,/EDGE_TRUNCATE)
          PROD_STRUCT[OK].LOWESS       = LOWESS(FLOAT(PROD_STRUCT[OK].JD),FLOAT(PROD_STRUCT[OK].MEAN),FRACTION=0,WIDTH=5, DEG=1)          
          PROD_STRUCT.INTERP_BOXCAR    = INTERPOL(PROD_STRUCT[OK].BOXCAR,FLOAT(PROD_STRUCT[OK].JD),JD_RANGE)
          PROD_STRUCT.INTERP_LOWESS    = INTERPOL(PROD_STRUCT[OK].LOWESS,FLOAT(PROD_STRUCT[OK].JD),JD_RANGE)
          
          PROD_STRUCT = STRUCT_RENAME(PROD_STRUCT,['N','MATH','MEAN','STD','BOXCAR','INTERP_BOXCAR','LOWESS','INTERP_LOWESS','EXTRACT_INTERP_MEAN','EXTRACT_INTERP_STD'],PROD_TAGS) 
          IF PR EQ 0 THEN PRODSTRUCT = PROD_STRUCT ELSE PRODSTRUCT = STRUCT_JOIN(PRODSTRUCT,PROD_STRUCT,TAGNAMES=['SENSOR','PERIOD','YEAR','DOY','JD','SUBAREA_NAME','SUBAREA_CODE','N_SUBAREA'])
        ENDFOR  
        IF S EQ 0 THEN SUBSTRUCT = PRODSTRUCT ELSE SUBSTRUCT = STRUCT_CONCAT(SUBSTRUCT,PRODSTRUCT)
      ENDFOR
      CASE DCOUNT OF     
        0: OUTSTRUCT = SUBSTRUCT 
        1: IF OUTSTRUCT NE [] THEN OUTSTRUCT = STRUCT_CONCAT(OUTSTRUCT,SUBSTRUCT) ELSE OUTSTRUCT = SUBSTRUCT
        2: PPSTRUCT   = SUBSTRUCT
        3: BEGIN
             IF PPSTRUCT NE [] THEN PSTRUCT   = STRUCT_CONCAT(PSTRUCT,SUBSTRUCT) ELSE PPSTRUCT = SUBSTRUCT
             OUTSTRUCT = STRUCT_JOIN(OUTSTRUCT,PPSTRUCT,  TAGNAMES=['SUBAREA_NAME','SUBAREA_CODE','N_SUBAREA','PERIOD','YEAR','DOY','JD','SENSOR'])
           END
        4: OUTSTRUCT = STRUCT_JOIN(OUTSTRUCT,SUBSTRUCT,TAGNAMES=['SUBAREA_NAME','SUBAREA_CODE','N_SUBAREA','PERIOD','YEAR','DOY','JD'])
        5: BEGIN
             SSTAGS    = TAG_NAMES(SUBSTRUCT)
             OK        = WHERE(STRMID(SSTAGS,0,3) EQ 'SST',COUNT)
             IF COUNT GE 1 THEN SUBSTRUCT = STRUCT_RENAME(SUBSTRUCT,SSTAGS[OK],REPLACE(SSTAGS[OK],'SST','SST_MUR'))
             OUTSTRUCT = STRUCT_JOIN(OUTSTRUCT,SUBSTRUCT,TAGNAMES=['SUBAREA_NAME','SUBAREA_CODE','N_SUBAREA','PERIOD','YEAR','DOY','JD'])
           END
      ENDCASE  
      COUNTER = COUNTER+1
    ENDFOR
    OUTSTRUCT = OUTSTRUCT[WHERE(OUTSTRUCT.DOY GE MIN(DOY_RANGE) AND OUTSTRUCT.DOY LE MAX(DOY_RANGE))]    
    OUTSTRUCT = OUTSTRUCT[WHERE(OUTSTRUCT.YEAR GE 1998)]
    SAVE, FILENAME=DIR_DATA + 'DAILY-'+LABEL+'-' + MASK + '-CHLOR_A-OC_CHLOR_A-PAN_DIATOMS_SST-SMOOTH-'+LABEL_DATE+'.SAVE',OUTSTRUCT
    SAVE_2CSV,     DIR_DATA + 'DAILY-'+LABEL+'-' + MASK + '-CHLOR_A-OC_CHLOR_A-PAN_DIATOMS_SST-SMOOTH-'+LABEL_DATE+'.SAVE'
        
  ENDIF ; DO_SUBAREAS_OUTPUT

; ****************************
  IF DO_PLOTS_NG GE 1 THEN BEGIN
; ****************************
    OVERWRITE = DO_PLOTS_NG GT 1
    
    BUFFER = 1
    
    NYEARS = 16
    NROWS  = 5
    NCOLS  = 3
    YEARS  = YEAR_RANGE(1998,2012)
    DO_SUBAREAS = [1,0]
    SUBNAMES = ['GOM_50_100','GOM_WILKINSON']
    SUBAREAS = [1,2]
    PTITLES  = ['Coastal Gulf of Maine','Wilkinson']
    CHLS = ['PAN'] ; 'OC'
    
    YTICKNAME    = ['0.3','1','3','10']
    YTICKVALUES  = [0.3,1.0,3.0,10.0]
    YTICKNAME2   = ['','5','10','15','20']
    YTICKVALUES2 = [0,5,10,15,20]
    _YTITLE  = '$Chlorophyll \ita\rm  (mg m^{-3})$'
    _YTITLE2 = '$Temperature (^oC)$ or Survival Index'
    _XTITLE  = 'Day of Year'
    _XTITLE  = 'Month'
    THICK = 3
    SYM_THICK = 1
    SYM_SIZE = 0.5
    FONT_SIZE = 14
    
    CCOLOR = 'FOREST_GREEN'
    TCOLOR = 'DARK_BLUE'
    SCOLOR = 'MAROON'
    WCOLOR = 'ORANGE'
  
    _XTICKNAME = ['0','15','30','45','60','75','90','105','120','135','150','165','180']  
    _XTICKNAME = ['1','32','60','91','121','152','182']
    _XTICKNAME = ['J','F','M','A','M','J','J']
  ;  _XTICKNAME = MONTH_NAMES([1,2,3,4,5,6,7],/SHORT)
    XMINOR = 1
    XTICKLEN = 0.05
    XTICKV = [1,32,60,91,121,152,182]
    XTICKS = N_ELEMENTS(XTICKV)-1
    X_JD = MINMAX(XTICKV)
    
    HATCHFILE = DIR_DATA + 'hatch_estimates_4-10-2015.csv'
    SAVEFILE  = FILE_SEARCH(DIR_DATA+'DAILY-AVHRR_MODIS_MUR_SEAWIFS-MASK_SUBAREA-NEC-PXY_1024_1024-GOM_SHRIMP_2AREAS-CHLOR_A-OC_CHLOR_A-PAN_DIATOMS_SST-SMOOTH-*.SAVE')
    SAVEFILE  = SAVEFILE[WHERE(GET_MTIME(SAVEFILE) EQ MAX(GET_MTIME(SAVEFILE)))]
    HATCH     = READALL(HATCHFILE)
    DATA      = READALL(SAVEFILE)
            
    HYEARS   = HATCH.YEAR  
    SURVIVAL = FLOAT(HATCH.SURVIVAL)
    H50      = FIX(HATCH.H50) 
    BLOOM    = FIX(HATCH.WINTER_BLOOM)
    CHLA_MIN = FLOAT(HATCH.CHL_A_MINIMUM) 
    
    FOR S=0, N_ELEMENTS(SUBAREAS)-1 DO BEGIN
      IF DO_SUBAREAS(S) EQ 0 THEN CONTINUE
      ACODE = SUBAREAS(S)
      PTITLE = PTITLES(S)
      FOR C=0, N_ELEMENTS(CHLS)- 1 DO BEGIN
        PNGFILE = DIR_PLOTS + 'SPRING_BLOOM_TIMEPLOTS-1998_2012-'+SUBNAMES(S)+'-CHLOR_A-'+CHLS(C)+'.PNG'
        EPSFILE = DIR_PLOTS + 'SPRING_BLOOM_TIMEPLOTS-1998_2012-'+SUBNAMES(S)+'-CHLOR_A-'+CHLS(C)+'.EPS'
        IF FILE_MAKE([SAVEFILE,HATCHFILE],[PNGFILE,EPSFILE],OVERWRITE=OVERWRITE) EQ 0 THEN CONTINUE
        AY = [0.3,10.0]
        AX = [1,182]   
        
        X0 = 75
        Y0 = 25
        YBOT = 25
        XDIF = 380
        YDIF = 115
        YSPACE = 15
        XSPACE = 25
        XDIM = (X0*2) + (XDIF*NCOLS) + (XSPACE*(NCOLS-1))
        YDIM = (Y0*2) + (YDIF*NROWS) + (YSPACE*(NROWS-1)) + YBOT
        XLEFTS = [X0,X0+XDIF+XSPACE,X0+XDIF*2+XSPACE*2]
        W = WINDOW(DIMENSIONS=[XDIM,YDIM],BUFFER=BUFFER)
   ;TTXT = TEXT(XDIM/2,YDIM-Y0+YSPACE,PTITLE,FONT_SIZE=FONT_SIZE+2,COLOR='BLACK',FONT_STYLE='BOLD',ALIGNMENT=0.5,/DEVICE) ; Add TITLE
            
        FOR N=0, N_ELEMENTS(YEARS)-1 DO BEGIN
          AYEAR = YEARS(N)
          OK = WHERE(DATA.YEAR EQ AYEAR AND DATA.SUBAREA_CODE EQ ACODE AND DATA.DOY LE MAX(AX),COUNT_DATA)
          YDATA = DATA[OK]           
          MDATA = YDATA[WHERE(YDATA.DOY LE 31)]
          CPOS  = WHERE(TAG_NAMES(MDATA) EQ 'CHLOR_A_'+CHLS(C)+'_MEAN')                & IF CPOS  EQ -1 THEN STOP
          CSPOS = WHERE(TAG_NAMES(MDATA) EQ 'CHLOR_A_'+CHLS(C)+'_EXTRACT_INTERP_MEAN') & IF CSPOS EQ -1 THEN STOP
          SPOS  = WHERE(TAG_NAMES(MDATA) EQ 'CHLOR_A_'+CHLS(C)+'_EXTRACT_INTERP_STD')  & IF SPOS  EQ -1 THEN STOP
          JMEAN = MEAN(MDATA.(CPOS))
          YDOY = YDATA.DOY
          
          IF N MOD NCOLS EQ 0       THEN _YTICKNAME  = YTICKNAME  ELSE  _YTICKNAME  = REPLICATE('',N_ELEMENTS(YTICKVALUES))
          IF N MOD NCOLS EQ NCOLS-1 THEN _YTICKNAME2 = YTICKNAME2 ELSE  _YTICKNAME2 = REPLICATE('',N_ELEMENTS(YTICKVALUES2))
          IF N GE NCOLS*(NROWS-1)   THEN XTITLE    = _XTITLE    ELSE XTITLE    = ''
          IF N GE NCOLS*(NROWS-1)   THEN XTICKNAME = _XTICKNAME ELSE XTICKNAME = REPLICATE('',N_ELEMENTS(_XTICKNAME))
          IF N MOD NCOLS EQ 0       THEN X1 = XLEFTS[0]
          IF N MOD NCOLS EQ 1       THEN X1 = XLEFTS[1]
          IF N MOD NCOLS EQ 2       THEN X1 = XLEFTS(2)
          IF N EQ 0 THEN Y1 = YDIM-Y0 ELSE IF N MOD 3 EQ 0 THEN Y1 = Y1-((YDIF+YSPACE))
          POSITION = [X1,Y1-YDIF,X1+XDIF,Y1]       
        ;  POLYX = [H10(N),H90(N),H90(N),H10(N),H10(N)]
        ;  POLYY = [AY(0),AY(0),AY(1),AY(1),AY(0)]
          P   = PLOT(AX,AY,POSITION=POSITION,/DEVICE,AXIS_STYLE=1,/YLOG,XRANGE=AX,YRANGE=AY,XTITLE='',YTITLE='',XTICKVALUE=XTICKV,YTICKVALUE=_YTICKVALUES,XTICKNAME=XTICKNAME,YTICKNAME=_YTICKNAME,XTICKLEN=XTICKLEN,YTICKLEN=0.03,XMINOR=XMINOR,YMINOR=0,XSTYLE=1,YSTYLE=1,XTICKFONT_SIZE=FONT_SIZE+1,YTICKFONT_SIZE=FONT_SIZE,/NODATA,/CURRENT)
          IF COUNT_DATA EQ 0 THEN GOTO, SKIP_YEAR
        ;  PO  = POLYGON(POLYX,POLYY,FILL_COLOR='YELLOW',/DATA,/FILL_BACKGROUND,FILL_TRANSPARENCY=90,LINESTYLE=6,TARGET=P)          
          PCS = PLOT(YDOY, YDATA.(CSPOS),COLOR=CCOLOR, LINESTYLE=0,/OVERPLOT,AXIS_STYLE=1,THICK=THICK)
          PC  = PLOT(YDOY, YDATA.(CPOS), COLOR=CCOLOR, LINESTYLE=6,/OVERPLOT,AXIS_STYLE=1,SYMBOL='CIRCLE',SYM_SIZE=SYM_SIZE,SYM_THICK=SYM_THICK)          
          
   ;IF CHLA_MIN(N)   GT 0 THEN PJ = PLOT(AX,[CHLA_MIN(N),CHLA_MIN(N)],COLOR='DIM_GREY',LINESTYLE=0,/OVERPLOT,AXIS_STYLE=1)      
          IF BLOOM(N) GT 0 THEN SP = PLOT(REPLICATE(BLOOM(N),2),REPLICATE(YDATA(WHERE(YDATA.DOY EQ BLOOM(N))).(CSPOS),2),AXIS_STYLE=1,SYM_COLOR='BLACK',SYM_FILL_COLOR=WCOLOR,/SYM_FILLED,SYMBOL='DIAMOND',SYM_SIZE=2,SYM_THICK=2,/OVERPLOT)          
                     
          PSS = PLOT(YDOY, YDATA.SST_EXTRACT_INTERP_MEAN,COLOR=TCOLOR,                                  LINESTYLE=0,/CURRENT,AXIS_STYLE=0,MARGIN=MARGIN,XRANGE=AX,YRANGE=[0,20],XSTYLE=1,XTICKVALUE=XTICKV,POSITION=POSITION,/DEVICE,THICK=THICK)             
          PS  = PLOT(YDOY, YDATA.SST_MEAN,               COLOR=TCOLOR,SYMBOL='CIRCLE',SYM_SIZE=SYM_SIZE,LINESTYLE=6,/CURRENT,AXIS_STYLE=0,MARGIN=MARGIN,XRANGE=AX,YRANGE=[0,20],XSTYLE=1,XTICKVALUE=XTICKV,POSITION=POSITION,/DEVICE,SYM_THICK=SYMTHICK)
          
          IF SURVIVAL(N) GT 0 THEN SS = SYMBOL(H50(N),SURVIVAL(N),SYM_COLOR=SCOLOR,SYMBOL='CIRCLE',SYM_SIZE=2.0,SYM_THICK=3,TARGET=PS,/DATA,CLIP=0)
          
          SKIP_YEAR:
          AXISX = AXIS('X',XRANGE=AX,    TITLE='', LOCATION='TOP',  TARGET=PC,TICKNAME=REPLICATE('',N_ELEMENTS(_XTICKNAME)),TICKVALUE=XTICKV,MINOR=0)
          AXISY = AXIS('Y',YRANGE=[0,20],TITLE='', LOCATION='RIGHT',TARGET=PS,TICKVALUES=_YTICKVALUES2,TICKNAME=_YTICKNAME2,CLIP=0,TICKLEN=P.YTICKLEN,TICKFONT_SIZE=FONT_SIZE)
          TPOS  = P.POSITION
          YRTXT = TEXT(TPOS(2)-0.04,TPOS[1]+0.005,HYEARS(N),FONT_SIZE=FONT_SIZE,COLOR='BLACK',FONT_STYLE=FONT_STYLE)
          TXT = ['Chlorophyll','SST','Chl-$\ita\rm$ minimum', 'H50','Winter Bloom']
  
          IF N EQ 6  THEN YTXT  = TEXT(0.005,TPOS[1]+((TPOS(3)-TPOS[1])/2.0), _YTITLE, FONT_COLOR='BLACK',FONT_SIZE=FONT_SIZE+4,ALIGNMENT=0.5,VERTICAL_ALIGNMENT=1.0,ORIENTATION=90)
          IF N EQ 8  THEN YATXT = TEXT(0.99, TPOS[1]+((TPOS(3)-TPOS[1])/2.0), _YTITLE2,FONT_COLOR='BLACK',FONT_SIZE=FONT_SIZE+4,ALIGNMENT=0.5,VERTICAL_ALIGNMENT=0.0,ORIENTATION=90) ; BEGIN 
;            YATXT = TEXT(0.99, TPOS[1]+((TPOS(3)-TPOS[1])/2.0), ' & ',FONT_COLOR='BLACK',FONT_SIZE=FONT_SIZE+4,ALIGNMENT=0.5,VERTICAL_ALIGNMENT=0.0,ORIENTATION=90)
;            YPOS  = YATXT.POSITION
;            YTTXT = TEXT(0.99, YPOS[1],'$Temperature (^oC)$',FONT_COLOR='BLACK',FONT_SIZE=FONT_SIZE+4,ALIGNMENT=1.0,VERTICAL_ALIGNMENT=0.0,ORIENTATION=90)
;            YSTXT = TEXT(0.99, YPOS(3),'Survival Index',FONT_COLOR='BLACK',FONT_SIZE=FONT_SIZE+4,ALIGNMENT=0.0,VERTICAL_ALIGNMENT=0.0,ORIENTATION=90)
;          ENDIF  
          IF N EQ 13 THEN XTXT  = TEXT(TPOS[0]+((TPOS(2)-TPOS[0])/2.0),0.035,_XTITLE, FONT_SIZE=FONT_SIZE+4,ALIGNMENT=0.5,VERTICAL_ALIGNMENT=1.0)
;   if n eq 8 then stop     
          IF N EQ 0 THEN SC = SYMBOL(10,18,'HLINE',  CLIP=0,SYM_COLOR=CCOLOR,TARGET=PS,/DATA,SYM_SIZE=1.5,SYM_THICK=3,LABEL_STRING=TXT[0],LABEL_FONT_SIZE=11)
          IF N EQ 0 THEN SS = SYMBOL(10,15,'HLINE',  CLIP=0,SYM_COLOR=TCOLOR,        TARGET=PS,/DATA,SYM_SIZE=1.5,SYM_THICK=3,LABEL_STRING=TXT[1],LABEL_FONT_SIZE=11)
    ;IF N EQ 2 THEN SJ = SYMBOL(10,18,'HLINE',  CLIP=0,SYM_COLOR='DIM_GREY',           TARGET=PS,/DATA,SYM_SIZE=1.5,SYM_THICK=3,LABEL_STRING=TXT(2),LABEL_FONT_SIZE=11)
    ;IF N EQ 1 THEN SH = SYMBOL(10,18,'CIRCLE', CLIP=0,SYM_COLOR='RED',                TARGET=PS,/DATA,SYM_SIZE=1.5,SYM_THICK=3,LABEL_STRING=TXT(3),LABEL_FONT_SIZE=11)
    ;IF N EQ 1 THEN SP = SYMBOL(10,15,'DIAMOND',CLIP=0,SYM_COLOR='BLACK',              TARGET=PS,/DATA,SYM_SIZE=1.5,SYM_THICK=3,LABEL_STRING=TXT(4),LABEL_FONT_SIZE=11)
          
          IF N EQ 0 THEN SH = SYMBOL(10,12,'CIRCLE', CLIP=0,SYM_COLOR=SCOLOR,                TARGET=PS,/DATA,SYM_SIZE=1.5,SYM_THICK=3,LABEL_STRING=TXT(3),LABEL_FONT_SIZE=11)
          IF N EQ 0 THEN SP = SYMBOL(10,09,'DIAMOND',CLIP=0,SYM_COLOR='BLACK',/SYM_FILLED, SYM_FILL_COLOR=WCOLOR,TARGET=PS,/DATA,SYM_SIZE=2,SYM_THICK=2,LABEL_STRING=TXT(4),LABEL_FONT_SIZE=11)

          
        ENDFOR 
        
        W.SAVE, EPSFILE, RESOLUTION=600, BITMAP=1
        W.SAVE, PNGFILE, RESOLUTION=1200
        W.CLOSE
      ENDFOR
    ENDFOR  

stop
  ENDIF ; DO_PLOTS_NG

; ****************************  
  IF DO_PLOTS GE 1 THEN BEGIN
; ****************************  
  OVERWRITE = DO_PLOTS GT 1

    PAL_36, R,G,B
  
    DATA    = READALL(DIR_DATA+'DAILY-MASK_SUBAREA-NEC-PXY_1024_1024-GOM_SHRIMP_2AREAS-CHLOR_A-OC4_CHLOR_A-PAN_SST-SMOOTH-01-13-2013.SAVE')
    DINTERP = READALL(DIR_DATA+'COMBINED_PERIODS-MASK_SUBAREA-NEC-PXY_1024_1024-GOM_SHRIMP_2AREAS-PRODS_4-INTERP.SAVE')
        
    OK = WHERE(STRPOS(DATA.FIRST_NAME_PPD,'SA_N4AT') GE 0,COUNT) & DATA = DATA[OK]
      
  	HYEARS   =                 ['1998','1999','2000','2001','2002','2003','2004','2005','2006','2007','2008','2009','2010','2011','2012','2013']
    H10      = YDOY_2JD('2020',[ 42,    15,    39,    29,    32,    37,    51,    41,    26,    10,    34,    10,    0,     0,     0,     0])   ; Need valid 2009-2013 data
    H50      = YDOY_2JD('2020',[ 67,    48,    60,    50,    49,    57,    70,    79,    50,    43,    65,    58,    48,    0,     0,     0])   ; Need valid 2009-2013 data
    H90      = YDOY_2JD('2020',[ 92,    82,    82,    72,    66,    76,    90,    118,    74,    74,    93,   12,    0,     0,     0,     0])   ; Need valid 2009-2013 data
    
    YCLASS          = ['1998',  '1999',   '2000',   '2001',  '2002',  '2003',   '2004',  '2005',  '2006',   '2007',   '2008',   '2009',  '2010','2011','2012','2013']
    SURVIVAL        = [ 0.244569,1.981328, 0.033736, 3.212531,0.016617,0.236335, 4.039234,0.031005,0.001308, 0.0158,   0.226278, 0.067365,0.0,   0.0,   0.0,   0.0] ; Need valid 2009-2013 data
    JAN_BASELINE    = [ 1.37155, 2.6303625,1.2888625,1.427375,1.673925,1.6935875,1.75215, 1.924675,2.2539625,2.0663625,1.6211875,0.0,     0.0,   0.0,   0.0,   0.0] ; Need valid 2009-2013 data
    DOY_HATCH_START = [ 42,      15,       39,       29,      32,      37,       51,      41,      26,       10,       34,       0,       0,     0,     0,     0]   ; Need valid 2009-2013 data
    DOY_HATCH_END   = [ 92,      82,       82,       72,      66,      76,       90,      118,     74,       74,       93,       0,       0,     0,     0,     0]   ; Need valid 2009-2013 data
    DOY_PULSE_START = [ 52,      39,       55,       29,      39,      0,        55,      41,      26,       0,        10,       0,       0,     0,     0,     0]   ; Need valid 2009-2013 data
    DOY_PULSE_END   = [ 92,      67,       82,       72,      66,      0,        90,      59,      50,       0,        47,       0,       0,     0,     0,     0]   ; Need valid 2009-2013 data
    DOY_PULSE_PEAK  = [ 92,      46,       72,       41,      43,      0,        73,      50,      39,       0,        27,       45,      0,     0,     0,     0]   ; Need valid 2009-2013 data
    SURVIVAL        = [ 0.244569,1.981328, 0.033736, 3.212531,0.016617,0.236335, 4.039234,0.031005,0.001308, 0.015802, 0.226278, 0.067365,0.0,   0.0,   0.0,   0.0] ; Need valid 2009-2013 data

  
  	_DP  = VALID_PERIODS(DATA.PERIOD)
  	OK  = WHERE(_DP.YEAR_START GE '1998' AND _DP.YEAR_START LE '2013' AND _DP.PERIOD_CODE EQ 'D' AND FIX(DATE_2DOY(_DP.DATE_START)) LE 181 ,COUNT)
  	D   = DATA[OK]
  	DP  = _DP[OK]
  	OK = WHERE(DINTERP.PERIOD NE MISSINGS(DINTERP.PERIOD),COUNT) & DINTERP = DINTERP[OK]
  	_DPI = VALID_PERIODS(DINTERP.PERIOD)
  	OK  = WHERE(_DPI.YEAR_START GE '1998' AND _DPI.YEAR_START LE '2009' AND _DPI.PERIOD_CODE EQ '!D' AND FIX(DATE_2DOY(_DPI.DATE_START)) LE 181 ,COUNT)	
  	I   = DINTERP[OK]
  	DPI = _DPI[OK]
  	INTDP = DATE_PARSE(_DPI.DATE_START)
  
  	CODES = [1];,2]
  	AY = [0.3,30]
  	AX = [1,183]
  	XMARGIN = [3.5,6.5]
  	YMARGIN = [0.25,0.25]
  	COLORS = [12,12]
  	THICKS = [3,3]
  	PSYM =   [5,-3]
  	LCOLOR = [0,0]
  	FONT = 0
  	CTICKNAMES = ['0.3','1','3','10','30']
  	YTITLE = 'Chlorophyll !8a!7 (mg m!E-3!N)!7'
  	XTITLE = 'Day of Year'
  	DOY = YDOY_2DATE('2020',AX) & DOY = DATE_2JD(DOY)
  	AX = DATE_AXIS(DOY,/FYEAR)
  	BSET = WHERE_SETS(DP.YEAR_START)
  	
  	
  	PSPRINT, FILENAME=PSFILE, /COLOR, /TIMES, /FULL	
  	FOR STH = 0L, N_ELEMENTS(CODES)-1 DO BEGIN
  		!P.MULTI = [0,2,6]
  	  OK = WHERE(D.SUBAREA_CODE EQ CODES(STH),COUNT)
  	  DCODE = D[OK]
  	  DPCODE = DATE_PARSE(DP[OK].DATE_START)
  	  
  	  NEW = CREATE_STRUCT('PERIOD','','YEAR','','DOY','','JD','','SUBAREA_NAME','','SUBAREA_CODE',0L,$
  	  			'CHLOR_A_N',0L,'CHLOR_A_MEAN',0.0,'CHLOR_A_BOXCAR',0.0,'CHLOR_A_LOWESS',0.0,'CHLOR_A_INTERP',0.0,'EXTRACT_CHLOR_A_INTERP',0.0,$
  	  			'SST_N',0L,'SST_MEAN',0.0,'SST_BOXCAR',0.0,'SST_LOWESS',0.0,'SST_INTERP',0.0,'EXTRACT_SST_INTERP',0.0)
  		NEW = STRUCT_2MISSINGS(NEW)
  		NEW = REPLICATE(NEW,COUNT)
  	  NEW.PERIOD = DCODE.PERIOD
  		NEW.YEAR = DPCODE.YEAR
  		NEW.DOY = DPCODE.IDOY
  		NEW.JD = DPCODE.JD
  		NEW.SUBAREA_NAME = DCODE.SUBAREA_NAME
  		NEW.SUBAREA_CODE = DCODE.SUBAREA_CODE
  		NEW.CHLOR_A_N = DCODE.N_CHLOR_A
  		NEW.SST_N = DCODE.N_SST
  		OKC = WHERE(DCODE.SUBAREA_CODE EQ CODES(STH) AND DCODE.MEAN_CHLOR_A NE MISSINGS(DCODE.MEAN_CHLOR_A) AND DCODE.N_CHLOR_A GT 10)
  		SETC  = WHERE_SETS(DPCODE(OKC).YEAR)
  		OKT = WHERE(DCODE.SUBAREA_CODE EQ CODES(STH) AND DCODE.MEAN_SST NE MISSINGS(DCODE.MEAN_SST) AND DCODE.N_SST GT 10)
  		SETT  = WHERE_SETS(DPCODE(OKT).YEAR)
  		IF STH EQ 0 THEN TITLE2 = 'Coastal Gulf of Maine' ELSE TITLE2 = 'Wilkinson'
      TITLE = ' '  
      OKM = WHERE(DATA.PERIOD EQ '!MONTH_01' AND DATA.SUBAREA_CODE EQ CODES(STH) AND DATA.MEAN_CHLOR_A NE MISSINGS(DATA.MEAN_CHLOR_A) AND _DP.YEAR_START GE '1998')
  		JAN = MEAN(FLOAT(DATA(OKM).MEAN_CHLOR_A))
  		JAN20 = JAN * 1.2
      OKI = WHERE(DINTERP.PERIOD EQ '!MONTH_01' AND DINTERP.SUBAREA_CODE EQ CODES(STH))
      IJAN20 = MEAN(FLOAT(DINTERP(OKI).MEAN_CHLOR_A)) * 1.2
  
  		FOR NTH = 0L, N_ELEMENTS(SETC)-1 DO BEGIN
  			SUBSC  = WHERE_SETS_SUBS(SETC[NTH])
  			CODEC  = DCODE(OKC(SUBSC))
  			_DPC   = DPCODE(OKC(SUBSC))
  			IJC 	= DOUBLE(INTERVAL([MIN(NEW(OKC(SUBSC)).JD),MAX(NEW(OKC(SUBSC)).JD)],1))
  			SUBST = WHERE_SETS_SUBS(SETT[NTH])
  			CODET = DCODE(OKT(SUBST))
  			_DPT  = DPCODE(OKT(SUBST))
  			IJT 	= DOUBLE(INTERVAL([MIN(NEW(OKT(SUBST)).JD),MAX(NEW(OKT(SUBST)).JD)],1))
  
  			SMC = SMOOTH(FLOAT(CODEC.MEAN_CHLOR_A),8,/EDGE_TRUNCATE)
  			SMT = SMOOTH(FLOAT(CODET.MEAN_SST),8,/EDGE_TRUNCATE)
  			SMS = SMOOTH(FLOAT(CODEC.STD_CHLOR_A),8,/EDGE_TRUNCATE)
  
  			LMC = LOWESS(FLOAT(_DPC.JD),FLOAT(CODEC.MEAN_CHLOR_A),FRACTION=0,WIDTH=5, DEG=1)
  			LMT = LOWESS(FLOAT(_DPT.JD),FLOAT(CODET.MEAN_SST),FRACTION=0,WIDTH=5, DEG=1)
  			LMS = LOWESS(FLOAT(_DPC.JD),FLOAT(CODEC.STD_CHLOR_A),FRACTION=0,WIDTH=5, DEG=1)
  
  			IMC = INTERPOL(LMC,FLOAT(_DPC.JD),IJC)
  			IMT = INTERPOL(LMT,FLOAT(_DPT.JD),IJT)
  			IMS = INTERPOL(LMS,FLOAT(_DPC.JD),IJC)
  
  			NEW(OKC(SUBSC)).CHLOR_A_MEAN = DCODE(OKC(SUBSC)).MEAN_CHLOR_A
  			NEW(OKC(SUBSC)).CHLOR_A_BOXCAR = SMC
  			NEW(OKC(SUBSC)).CHLOR_A_LOWESS = LMC
  
  			NEW(OKT(SUBST)).SST_MEAN = DCODE(OKT(SUBST)).MEAN_SST
  			NEW(OKT(SUBST)).SST_BOXCAR = SMT
  			NEW(OKT(SUBST)).SST_LOWESS = LMT
  
  			OKI  = WHERE(DINTERP.SUBAREA_CODE EQ CODES(STH) AND _DPI.YEAR_START EQ SETC[NTH].VALUE AND _DPI.PERIOD_CODE EQ '!D' )
  			_DPI2 = INTDP(OKI)
  			_INT = DINTERP(OKI)
        INC = FLOAT(_INT.MEAN_CHLOR_A)
        INT = FLOAT(_INT.MEAN_SST)
        INS = FLOAT(_INT.STD_CHLOR_A)
        OKM = WHERE_MATCH(_DPI2.YEAR+_DPI2.IDOY,NEW.YEAR+NEW.DOY,COUNT,VALID=VALID)
        NEW(VALID).EXTRACT_CHLOR_A_INTERP = INC(OKM)
        NEW(VALID).EXTRACT_SST_INTERP = INT(OKM)
  
        OKLC = WHERE_MATCH(NEW.JD,NUM2STR(IJC,DECIMALS=1),COUNT,VALID=VALIDLC)
        NEW(OKLC).CHLOR_A_INTERP = IMC(VALIDLC)
        OKLT = WHERE_MATCH(NEW.JD,NUM2STR(IJT,DECIMALS=1),COUNT,VALID=VALIDLT)
  			NEW(OKLT).SST_INTERP = IMS(VALIDLT)
  
  			CV    = (FLOAT(CODEC.STD_CHLOR_A)/FLOAT(CODEC.MEAN_CHLOR_A))
  
  ;      STDC  = EXP(   ((TOTAL((   ALOG(FLOAT(CHLOR_A)) - ALOG(MEAN(FLOAT(CHLOR_A))))   ^2)    )/N_ELEMENTS(CHLOR_A))^0.5)
  
        XTICKNAME = ['0','15','30','45','60','75','90','105','120','135','150','165','180']
        FUTURE_DATE = YDOY_2DATE('2020',XTICKNAME) 
        XTICKV = DATE_2JD(FUTURE_DATE)
        XTICKS = N_ELEMENTS(XTICKV)-1
        X_JD = MINMAX(XTICKV)
        
  
  
  			IF NTH MOD 2 THEN YTITLE = ' '  ELSE YTITLE = 'Chlorophyll !8a!7 (mg m!E-3!N)!7'
  			IF NTH EQ 0 THEN _TITLE = TITLE ELSE _TITLE = ' '
  			IF NTH EQ N_ELEMENTS(BSET)-1 OR NTH EQ N_ELEMENTS(BSET)-2 $
  			                             THEN PLOT, X_JD, AY, /YLOG, XMARGIN=XMARGIN, YMARGIN=YMARGIN, /NODATA, YTITLE=YTITLE, XTITLE=XTITLE,/XSTYLE, YSTYLE=8, CHARSIZE=1.5, $
  		      														XTICKNAME=XTICKNAME, XTICKS=XTICKS,XTICKV=XTICKV,XTICK_GET=XTICK_GET,THICK=2,TITLE=_TITLE,$
  		      														YTICKNAME=CTICKNAME,YTICKV=[0.3,1.0,3.0,10.0,30.0],YTICKS=4,YTICKLEN=0.008, XTICKLEN=0.05 $
  																	 ELSE	PLOT,X_JD, AY, /YLOG, XMARGIN=XMARGIN, YMARGIN=YMARGIN, /NODATA, YTITLE=YTITLE, XTITLE=' ',/XSTYLE, YSTYLE=8, CHARSIZE=1.5, $
  		      														XTICKNAME=REPLICATE(' ',N_ELEMENTS(XTICKNAME)), XTICKS=XTICKS,XTICKV=XTICKV,XTICK_GET=XTICK_GET,THICK=2,TITLE=_TITLE,$
  		      														YTICKNAME=CTICKNAME,YTICKV=[0.3,1.0,3.0,10.0,30.0],YTICKS=4,YTICKLEN=0.008, XTICKLEN=0.05
  		      														
        HS = DATE_2JD(YDOY_2DATE('2020',DOY_HATCH_START[NTH]))
        HE = DATE_2JD(YDOY_2DATE('2020',DOY_HATCH_END[NTH]))
        PS = DATE_2JD(YDOY_2DATE('2020',DOY_PULSE_START[NTH]))
        PE = DATE_2JD(YDOY_2DATE('2020',DOY_PULSE_END[NTH]))
        PP = DATE_2JD(YDOY_2DATE('2020',DOY_PULSE_PEAK[NTH]))
     ;   IF DOY_HATCH_START(NTH) GT 0 THEN POLYFILL,[HS,HE,HE,HS,HS],[AY(0),AY(0),3.0,3.0,AY(0)],COLOR=28,/DATA
     ;   IF DOY_PULSE_START(NTH) GT 0 THEN POLYFILL,[PS,PE,PE,PS,PS],[3.0,3.0,AY(1),AY(1),3.0]  ,COLOR=18,/DATA
        IF NTH EQ N_ELEMENTS(BSET)-1 OR NTH EQ N_ELEMENTS(BSET)-2 THEN AXIS, XAXIS=0, XRANGE=X_JD, CHARSIZE=1.5,XTITLE=' ',XTICKS=XTICKS,XTICKV=XTICKV,XTICKNAME=XTICKNAME,XTICKLEN=0.05 $
                                                                  ELSE AXIS, XAXIS=0, XRANGE=X_JD, CHARSIZE=1.5,XTITLE=' ',XTICKS=XTICKS,XTICKV=XTICKV,XTICKNAME=REPLICATE(' ',N_ELEMENTS(XTICKNAME)),XTICKLEN=0.05      
                                                                       AXIS, XAXIS=1, XRANGE=X_JD, CHARSIZE=1.5,XTITLE=' ',XTICKS=XTICKS,XTICKV=XTICKV,XTICKNAME=REPLICATE(' ',N_ELEMENTS(XTICKNAME)),XTICKLEN=0.05                                                                
        
  
  			CIRCLE,32, COLOR=COLORS(STH), FILL=0
  	    _DOYC = YDOY_2DATE('2020',_DPC.DOY)  & _DOYC = DATE_2JD(_DOYC)
  	    _DOYT = YDOY_2DATE('2020',_DPT.DOY)  & _DOYT = DATE_2JD(_DOYT)
  	    _DOYI = YDOY_2DATE('2020',_DPI2.DOY) & _DOYI = DATE_2JD(_DOYI)
  
  		;		YY = [STDM,STDP]
  		;		XX = [_DOYC,REVERSE(_DOYC)]
  		;		POLYFILL, XX, YY, COLOR = 34
  
  				OPLOT, _DOYC, FLOAT(CODEC.MEAN_CHLOR_A), THICK=2, COLOR=COLORS(STH), PSYM=8, SYMSIZE=0.35
  			;	OPLOT, _DOYC, SMC, THICK=4, COLOR=COLORS(STH)
  			  OPLOT, _DOYI, INC, THICK=4, COLOR=COLORS(STH)
  		;		OPLOT, _DOYC, REPLICATE(JAN20,N_ELEMENTS(_DOYC)), THICK=2,COLOR=32, LINESTYLE = 2
  		;		OPLOT, _DOYC, REPLICATE(IJAN20,N_ELEMENTS(_DOYC)), THICK=4,COLOR=22, LINESTYLE=4
  				IF JAN_BASELINE[NTH] GT 0 THEN OPLOT, _DOYC, REPLICATE(JAN_BASELINE[NTH],N_ELEMENTS(_DOYC)), THICK=4, COLOR=32, LINESTYLE=2
  				OK = WHERE(FLOAT(DOY_PULSE_PEAK[NTH]) EQ _DPI2.DOY, COUNT)        
          IF DOY_PULSE_PEAK[NTH] GT 0 AND COUNT GT 0 THEN PLOTS, PP, INC[OK], COLOR=0, PSYM=4, SYMSIZE=1.5, THICK=6
  
  				COOR = COORD_2PLOT(0.85,0.02)
  				XYOUTS, COOR.X,COOR.Y,BSET[NTH].VALUE, ALIGN=-0.1, CHARSIZE=1.0, COLOR=0, CHARTHICK=1
  
  				COOR = COORD_2PLOT(0.8,1.1)
  				IF NTH EQ 0 THEN XYOUTS, COOR.X,COOR.Y,TITLE2, CHARSIZE=1.25, COLOR=0, CHARTHICK=1				
  
  				CIRCLE, 32, COLOR=22, FILL=0, THICK=6
  				IF NTH MOD 2 THEN YTITLET = 'Survival Index!CTemperature (!Eo!NC)!CChl Std Dev' ELSE YTITLET = ' '
  				AXIS, YAXIS=1, /SAVE, YRANGE=[0,15], YLOG=0, CHARSIZE=1.5, YTITLE=YTITLET
  				IF STH EQ 0  AND SURVIVAL[NTH] GT 0.0 THEN BEGIN
  			;	  OPLOT, [H10(NTH),H50(NTH),H90(NTH)],REPLICATE(SURVIVAL(NTH),3), THICK=5, COLOR=22, LINESTYLE=0
  			;		PLOTS, H10(NTH), SURVIVAL(NTH), PSYM=8, SYMSIZE=0.75
  					PLOTS, H50[NTH], SURVIVAL[NTH], PSYM=8, SYMSIZE=1.2, THICK=6
  			;		PLOTS, H90(NTH), SURVIVAL(NTH), PSYM=8, SYMSIZE=1.25										
  				ENDIF
  				LEG_POS = [0.02 ,0.7,0.09,0.925]
          TXT = ['Jan-Feb Min + 25%', '50% Hatch','Pulse Peak']
          IF NTH EQ 0 THEN LEG,pos=LEG_POS,LCOLOR=0,color=[32,22,0],label=TXT,THICK=6,LINESTYLE=[2,0],PSYM=[0,8,4],LSIZE=1,BOX=BOX, FONT=FONT
       ;   LEG_POS = [0.02 ,0.75,0.07,0.915]
          TXT = ['Chlorophyll','SST','Standard Deviation']
          IF NTH EQ 1 THEN LEG,pos=LEG_POS,LCOLOR=0,color=[12,4,19],label=TXT,THICK=5,LINESTYLE=0,LSIZE=1,BOX=BOX, FONT=FONT
          
  				CIRCLE,32, COLOR=19, FILL=0
  				OPLOT, _DOYC,CODEC.STD_CHLOR_A, THICK=2, COLOR=19, PSYM=8, SYMSIZE=0.35
  			;	OPLOT, _DOYC,SMS, THICK=6, COLOR=19
  			  OPLOT, _DOYI,INS, THICK=6, COLOR=19
  				CIRCLE,32, COLOR=4, FILL=0
  				OPLOT, _DOYT, FLOAT(CODET.MEAN_SST), THICK=2, COLOR=4, PSYM=8, SYMSIZE=0.35
  			;	OPLOT, _DOYT, SMT, THICK=4, COLOR=4
  				OPLOT, _DOYI, INT, THICK=4, COLOR=4				
  		ENDFOR
  		OK = WHERE(NEW.SUBAREA_CODE EQ CODES(STH) AND NEW.PERIOD NE '')
  		STRUCT_2CSV, DISK + 'PROJECTS\FATE-SHRIMP\Daily-SUBAREA-NEC-GOM_SHRIMP-' + NEW(OK[0]).SUBAREA_NAME + '-SMOOTH.CSV', NEW[OK]
  	ENDFOR
  PSPRINT
  DIR_OUT = DISK + 'PROJECTS\FATE-SHRIMP\'
  GRACE = [100,100,100,100]
  ;IMAGE_TRIM, PSFILE, GRACE=GRACE,DPI=600, DIR_OUT=DIR_OUT+'PNGS\',/OVERWRITE
  
  STOP
  
  
  	!P.MULTI = [0,1,10]
  	PSPRINT, FILENAME=PSFILE, /COLOR, /TIMES, /FULL
  	PAL_36, R,G,B
  	FOR NTH = 0L, N_ELEMENTS(BSET)-1 DO BEGIN
  		SUBS = WHERE_SETS_SUBS(BSET[NTH])
  		YEAR = D(SUBS)
  		PRINT, NTH MOD 2
  		IF NTH MOD 2 THEN YTITLE = 'Chlorophyll !8a!7 (mg m!E-3!N)!7' ELSE YTITLE = ' '
  		IF NTH EQ N_ELEMENTS(BSET)-1 THEN PLOT, AX.JD, AY, /YLOG, XMARGIN=XMARGIN, YMARGIN=YMARGIN, /NODATA, YTITLE=YTITLE, /XSTYLE, /YSTYLE, CHARSIZE=1.5, $
  			      														XTICKNAME=AX.TICKNAME, XTICKS=AX.TICKS,XTICKV=AX.TICKV,XTICK_GET=XTICK_GET,THICK=2,$
  			      														YTICKNAME=CTICKNAME,YTICKV=[0.3,1.0,3.0,10.0,30.0],YTICKS=4,YTICKLEN=0.008, XTICKLEN=0.05 $
  																	 ELSE	PLOT, AX.JD, AY, /YLOG, XMARGIN=XMARGIN, YMARGIN=YMARGIN, /NODATA, YTITLE=YTITLE, /XSTYLE, /YSTYLE, CHARSIZE=1.5, $
  			      														XTICKNAME=REPLICATE(' ',N_ELEMENTS(AX.TICKNAME)), XTICKS=AX.TICKS,XTICKV=AX.TICKV,XTICK_GET=XTICK_GET,THICK=2,$
  			      														YTICKNAME=CTICKNAME,YTICKV=[0.3,1.0,3.0,10.0,30.0],YTICKS=4,YTICKLEN=0.008, XTICKLEN=0.05
  		FOR STH = 0L, N_ELEMENTS(CODES)-1 DO BEGIN
  			OK = WHERE(YEAR.SUBAREA_CODE EQ CODES(STH) AND YEAR.MEAN_CHLOR_A NE MISSINGS(YEAR.MEAN_CHLOR_A))
  			CODE = YEAR[OK]
  			SM = SMOOTH(FLOAT(CODE.MEAN_CHLOR_A),8,/EDGE_TRUNCATE)
  			_DP = DP(SUBS[OK])
  			CIRCLE,32, COLOR=COLORS(STH), FILL=0
  		;	AX = DATE_AXIS([MIN(_DP.DATE),MAX(_DP.DATE)],/DAY)
  	;		IF _DP(0).YEAR EQ '1998' THEN TITLE = CODE(0).SUBAREA_NAME ELSE TITLE = ' '
  
  	;		IF STH EQ 0 THEN YTICKNAME = CTICKNAMES ELSE YTICKNAME = REPLICATE(' ',N_ELEMENTS(CTICKNAMES))
  	    _DOY = YDOY_2DATE('2020',_DP.DOY) & _DOY = DATE_2JD(_DOY)
  			OPLOT, _DOY, FLOAT(CODE.MEAN_CHLOR_A), THICK=2, COLOR=COLORS(STH), PSYM=8, SYMSIZE=0.5
  			OPLOT, _DOY, SM, THICK=4, COLOR=COLORS(STH)
  			COOR = COORD_2PLOT(0.92,0.8)
  			IF STH EQ 0 THEN XYOUTS, COOR.X,COOR.Y,BSET[NTH].VALUE, ALIGN=-0.1, CHARSIZE=1.0, COLOR=0, CHARTHICK=1
  		ENDFOR
  		TXT = 'LT 100 m'
  		TXT = [TXT, 'Wilkinson']
  		LEG_POS = [0.02 ,0.7,0.05,0.88]
  		IF NTH EQ 0 THEN LEG,pos=LEG_POS,LCOLOR=colors,color=colors,label=TXT,THICK=THICKS,LSIZE=1,BOX=BOX, FONT=FONT
  	ENDFOR
  PSPRINT
  STOP
  
  
  
  		OK = WHERE(S.CHLOR_A_MEAN NE MISSINGS(0.0))
  		SAT = S[OK].CHLOR_A_MEAN
  		NS = N_ELEMENTS(SAT)
  		SDATE = DATE_2JD(S[OK].DATE)
  		SDOY = JD_2DOY(SDATE) & SDOY = YDOY_2DATE('2020',SDOY) & SDOY = DATE_2JD(SDOY)
  		SRT = SORT(SDATE) & SAT = SAT(SRT) & SDATE = SDATE(SRT)
  
  		PLOT, AX.JD, AY,YTITLE='Chlorophyll !8a!7 (mg/m!E3!N)!7',/YLOG,YRANGE=[0.1,60],/XSTYLE,/YSTYLE,XMARGIN=XMARGIN,YMARGIN=YMARGIN,$
  			XTICKS=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKV=AX.TICKV,XTICK_GET=XTICK_GET,CHARSIZE=1,/NODATA
  		OPLOT, SDATE, SAT, PSYM = -3, COLOR = 13, THICK = 1
  		OPLOT, CDATE, CHL, PSYM = 5, COLOR = 22, THICK = 3
  		TXT = '!8in situ!7 (n=' + STRTRIM(NC,2) + ')'
  		TXT = [TXT, 'SeaWiFS (n=' + STRTRIM(NS,2) + ')']
  		LEG_POS = [0.795 ,0.87,0.81,0.92]
  		LEG,pos = LEG_POS,LCOLOR=LCOLOR, color=colors,label=TXT,THICK=THICKS,PSYM=PSYM,LSIZE=1,BOX=BOX, FONT=FONT
  		TITLE = 'All Data'
  		COOR = COORD_2PLOT(0.02,0.875)
  		XYOUTS, COOR.X,COOR.Y,TITLE, ALIGN=-0.1, CHARSIZE=1.5, COLOR=0, CHARTHICK=1
  
  
  		PLOT,AX2.JD,[0,1],YSTYLE=1,XMARGIN=XMARGIN,YMARGIN=[0,0],YTICKS=1,YMINOR=0,YTICKNAME=YTICKNAMES,XTICKNAME=X2TICKNAME,/NODATA,CHARSIZE=CHARSIZE
  		LABEL = '!7 N04 !8  In situ!7 !E14!NC !8PP!Deu!n!7 (gC m!E-2!N d!E-1!N) at N04/N18'
  		LABEL2 = 'A'
  		COOR = COORD_2PLOT(-0.05,0.3)
  		XYOUTS, COOR.X,COOR.Y,LABEL, ALIGN=-0.1, CHARSIZE=CCHARSIZE, COLOR=0, CHARTHICK=1
  		COOR = COORD_2PLOT(0.95,0.3)
  		XYOUTS, COOR.X,COOR.Y,LABEL2, ALIGN=-0.1, CHARSIZE=CCHARSIZE, COLOR=0, CHARTHICK=1
  		YEARS = ['1998','1999','2000','2001','2002','2003','2004','2005']
  		YDOY = DATE_2DOY(N4DATE)
  		YDATE = YDOY_2DATE('2020',YDOY)
  		USERSYM,[-0.4,0,0.4],[0,-0.6,0],THICK=2
  
  ENDIF

; ****************************
  IF DO_NATL_SST GE 1 THEN BEGIN
; ****************************
    OVERWRITE = DO_NATL_SST GT 1
    PAL_SW3,R,G,B
    SS = 'VERY_LOW'
    PALS = ['PAL_SW3','PAL_HSL2','PAL_PETES24J','PAL_PETES24J2','PAL_SW1']
    FOR P=0, N_ELEMENTS(PALS)-1 DO BEGIN
      PAL = PALS(P)    
      PNGFILE=FIX_PATH(!S.PROJECTS + 'NORTHERN_SHRIMP/PLOTS/ANNUAL_SST-AVHRR-'+PAL+'.PNG')
      FILE = FIX_PATH(!S.DATASETS + 'SST-AVHRR-4\GEQ\STATS\SST\ANNUAL_1997_2012-AVHRR-4-GEQ-SST-MEAN.SAVE')
      IF UPDATE_CHECK(INFILES=[FILE,!S.PROGRAMS+PAL+'.PRO'],OUTFILE=PNGFILE) EQ 0 AND NOT KEYWORD_SET(OVERWRITE) THEN CONTINUE
      
      D = STRUCT_SD_READ(FILE,STRUCT=STRUCT)
      MASK = READ_LANDMASK(MAP='GEQ',/STRUCT)
      BDATA = SD_SCALES(D,PROD='SST',/DATA2BIN,SPECIAL_SCALE='')
      BDATA = BDATA(1101:2500,1300:*)
      SZ = SIZE(BDATA)
      SMASK = MASK.LANDMASK(1101:2500,1300:*)
      BDATA(WHERE(SMASK EQ MASK.LAND_CODE)) = 0
      BDATA(WHERE(SMASK EQ MASK.COAST_CODE)) = 0
      BYT = BYTARR(SZ[1],100) & BYT(*) = 255
      I  = IMAGE(BDATA,RGB_TABLE=CPAL_READ(PAL),DIMENSIONS=[SZ[1],SZ(2)],MARGIN=0)
      IB = IMAGE(BYT,  RGB_TABLE=CPAL_READ(PAL),POSITION = [0,0,SZ[1],100],/CURRENT,/DEVICE)
      CBAR = COLOR_BAR_SCALE_NG(PROD='SST',SPECIAL_SCALE=SS,PX=200,PY=60,CHARSIZE=16,BACKGROUND=255,XDIM=1000,YDIM=30,PAL=PAL,TITLE=UNITS('SST'),HORIZONTAL=1,BOTTOM=1,FONT='HELVETICA',/CURRENT)
      I.SAVE,PNGFILE
      I.CLOSE
    ENDFOR  
    STOP
    
  ENDIF ; DO_NATL_SST  
  
; ****************************
  IF DO_SPRING_BROWSE GE 1 THEN BEGIN
; ****************************
    OVERWRITE = DO_SPRING_BROWSE GT 1
    PAL_SW3,R,G,B
        
    MAP_IN  = ['NEC','NEC']
    MAP_OUT = ['NEC','GOMN']
    
    DATASETS = ['OC-SEAWIFS-MLAC','OC-MODIS-LAC']
    PRODS    = ['CHLOR_A-PAN',    'CHLOR_A-PAN']
    PROD_LABEL = ['SEAWIFS_CHL_PAN','MODIS_CHL_PAN']
    BAR_TITLE = UNITS(['CHLA','CHLOA'])    
    SS = ['.03_50','.03_50'] 
    USE_PRODS = ['CHLOR_A','CHLOR_A']
    DATERANGE = LIST(['19980101','20070701'],['20080101','20130701'])
    
    DATA_TYPE = ['STATS']
    PERIOD_TYPE = ['M_']
    PAL = ['PAL_SW3']
    
    YEARS = YEAR_RANGE('1998','2013',/STRING)
    MONTHS = ['02','03','04','05','06']
    NAMES = MONTH_NAMES(MONTHS)
    
    
    FOR M=0, N_ELEMENTS(MAP_OUT)-1 DO BEGIN
      DIR_OUT = FIX_PATH(!S.PROJECTS + 'NORTHERN_SHRIMP/PLOTS/'+MAP_OUT(M) + SL) & DIR_TEST,DIR_OUT
      FOR D=0, N_ELEMENTS(DATASETS)-1 DO BEGIN
        DATASET = DATASETS(D)
        DATE_RANGE = DATERANGE(D)
        FOR T=0, N_ELEMENTS(DATA_TYPE)-1 DO BEGIN
          FILES = FILE_SEARCH(!S.DATASETS + DATASET + SL + MAP_IN(M) + SL + DATA_TYPE(T) + SL + PRODS(D) + SL + PERIOD_TYPE(T)+'*MEAN*.SAVE')
          IF N_ELEMENTS(FILES) EQ 1 THEN CONTINUE
          FILES = DATE_SELECT(FILES,DATE_RANGE[0],DATE_RANGE[1])          
          FP = PARSE_IT(FILES)
          FILES = FILES[WHERE(FP.MONTH_START GE MIN(MONTHS) AND FP.MONTH_END LE MAX(MONTHS))]
          FP = PARSE_IT(FILES)          
          FOR F=0, N_ELEMENTS(FILES)-1 DO BEGIN
            AFILE = FILES(F)
            FA = FP(F)            
            LABEL = MONTH_NAMES(FA.MONTH_START) + ' ' + FA.YEAR_START             
            STRUCT_SD_2PNG_NG,AFILE,USE_PROD=USE_PRODS(D),SPECIAL_SCALE=SS(D),MAP_OUT=MAP_OUT(M),ADD_LABEL=LABEL,/ADD_LAND,/ADD_COAST,/ADD_COLORBAR,PAL=PAL(T),DIR_OUT=DIR_OUT
          ENDFOR          
          
        ENDFOR
      ENDFOR
    ENDFOR
    
  ENDIF ; DO_SPRING_BROWSE  

	END; #####################  End of Routine ################################



