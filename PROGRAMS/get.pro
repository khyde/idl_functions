; $ID:	GET.PRO,	2015-02-15	$
;+
;;#############################################################################################################
	FUNCTION GET,ARR,SUBS,NUM=NUM,LAST=LAST

; PURPOSE: THIS FUNCTION EXTRACTS AND RETURNS ELEMENTS FROM AN ARRAY
;          [OR THE TAG DATA FROM A STRUCTURE]
; 
; 
; CATEGORY:	SUBSCRIPTS;		 
;
; CALLING SEQUENCE: RESULT = GET(ARR,NUM)
;
; INPUTS: ARR DATA -SCALAR OR ARRAY 
;         SUBS - SUBSCRIPTS TO EXTRACT FROM ARR [IGNORED WHEN /LAST USED]

; OPTIONAL INPUTS:
;		
; KEYWORD PARAMETERS: 
;         NUM  - NUMBER OF ADJACENT SUBSCRIPTS TO GET
;         LAST - GET LAST NUM OF VALUES FROM ARR

; OUTPUTS: DATA FROM THE ARRAY
;		
;; EXAMPLES:
;          P,GET(INDGEN(5))
;          P,GET(INDGEN(5),1)
;          P,GET(INDGEN(5),1,NUM = 2)
;          P,GET(INDGEN(5),NUM = 2,/LAST)
;          P,GET(INDGEN(5),NUM = 3,/LAST)
;          P,GET(CREATE_STRUCT('DATA',INDGEN(9),'JUNK','JUNK'),'DATA')
;          P,GET(CREATE_STRUCT('DATA',INDGEN(9),'JUNK','JUNK'),'JUNK')
;          P,GET(CREATE_STRUCT('DATA',INDGEN(9),'JUNK','JUNK'),'DAT')          
; MODIFICATION HISTORY:
;			WRITTEN DEC 7, 2014 J.O'REILLY
;			FEB 15,2015,JOR  ADDED GET_TAG FUNCTION TO EXTRACT INFO FROM STRUCTURES:
;			                 IF IDLTYPE(ARR) EQ 'STRUCT' AND IDLTYPE(SUBS) EQ 'STRING' THEN RETURN,GET_TAG(ARR,SUBS)
;     

;#################################################################################
;-
;********************
ROUTINE_NAME  = 'GET'
;********************
IF IDLTYPE(ARR) EQ 'STRUCT' AND IDLTYPE(SUBS) EQ 'STRING' THEN RETURN,GET_TAG(ARR,SUBS)
IF NONE(ARR) THEN MESSAGE,'ERROR: ARR IS REQUIRED'
IF NONE(SUBS) THEN SUBS_ = 0 ELSE SUBS_ = SUBS
IF NONE(NUM) THEN NUM = 1
N = N_ELEMENTS(ARR)
IF KEY(LAST) THEN  BEGIN  
  SUBS_ = N-1L
  FIN = 0> SUBS_ < (N-1L)
  START   = SUBS_ - NUM + 1
ENDIF ELSE BEGIN
  START = 0> SUBS_ < (N-1L)
  FIN   = (START + NUM-1L) < (N-1L)
ENDELSE;IF KEY(LAST) THEN  BEGIN
  
START =  0L> START < (N-1L)
FIN =  0L> FIN < (N-1L)
IF FIN LT START THEN BEGIN
  A = START
  START = FIN
  FIN = A  
ENDIF;IF FIN LT START THEN BEGIN

RETURN, ARR(START:FIN)
          
	END; #####################  END OF ROUTINE ################################
