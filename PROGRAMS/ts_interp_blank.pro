; $ID:	TS_INTERP_BLANK.PRO,	2017-11-29-15,	USER-KJWH	$
;############################################################################################
 FUNCTION TS_INTERP_BLANK, JDS=JDS, INTERP_DATA=INTERP_DATA, INTERP_JD=INTERP_JD, SPAN=SPAN
;+
; NAME:
;       TS_INTERP_BLANK
;
; PURPOSE:
;				BLANK (MAKE MISSING) INTERPOLATED OBSERVATIONS WHERE ORIGINAL TIMES 
;				EXCEED THE INPUT TIME SPAN
;				
; KEYWORDS:
;   JDS............ ARRAY OF JULIAN DAYS FOR THE ORIGINAL NON-MISSING DATA
;   INTERP_DATA.... ARRAY OF INPUT INTERPOLATED DATA
;   INTERP_JD...... ARRAY OF JULIAN DAYS FOR THE INTERPOLATED DATA
;   SPAN........... THE WIDTH OF THE ALLOWED INTERPOLATION WINDOW.  IF THE JD RANGE EXCEEDS THIS SPAN, THEN BLANK THE DATA.
;   
;  MODIFICATION HISTORY:
;       WRITTEN BY:  J.E.O'REILLY, APRIL 30, 2004
;       NOV 21, 2011 - JEOR: REMOVED UNUSED KEYWORDS DATA, AND MISS (BECAUSE MISSINGS.PRO FUNCTION IS ALWAYS USED)
;       JAN 09, 2013 - JEOR: FORMATTING
;       JAN 20, 2017 - KJWH: CHANGED FROM A PROGRAM TO A FUNCTION
;                            FORMATTING
;############################################################################################
;-
;**************************************
  ROUTINE_NAME='TS_INTERP_BLANK'
;**************************************
     
; ===> DEFAULT SPAN:
  IF NONE(SPAN) THEN SPAN = 45 ; DAYS
  SPAN = DOUBLE(SPAN)
  N_INTERP=N_ELEMENTS(INTERP_DATA)

; ===> CHECK INPUT DATA
  IF N_ELEMENTS(INTERP_JD) NE N_INTERP THEN MESSAGE, 'ERROR: JDS AND DATA MUST HAVE THE SAME SIZE ARRAYS.' 

;	===> BLANK OUT INTERPOLATED DATA THAT EXCEED THE TIME SPAN (IN DAYS)
	IN_START = 0UL

;	FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	FOR _JD = 0L,N_ELEMENTS(JD)-2L DO BEGIN
		JD_THIS = JD(_JD)
		JD_NEXT   = JD(_JD+1)
;		===> FIND THE INTERP_JD ENCOMPASSING THE JD RANGE
		IF JD_NEXT-JD_THIS GT SPAN THEN BEGIN

;			FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
			FOR IN = IN_START, N_INTERP-1L DO BEGIN
				IF INTERP_JD(IN) GT JD_THIS THEN BEGIN
					BSTART=IN
;					FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
					FOR BOUT = BSTART,N_INTERP-1L DO BEGIN
						IF INTERP_JD(BOUT) LT JD_NEXT THEN BEGIN
							INTERP_DATA(BOUT) = MISSINGS(INTERP_DATA(BOUT))
						ENDIF ELSE BEGIN
							IN_START = BOUT +1L
							GOTO, NEXT
						ENDELSE ; IF INTERP_JD(BOUT) LT JD_NEXT THEN BEGIN
					ENDFOR ; FOR BOUT = BSTART,N_INTERP-1L DO BEGIN
					;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
				ENDIF ; IF INTERP_JD(IN) GT JD_THIS THEN BEGIN
			ENDFOR ; FOR IN = IN_START, N_INTERP-1L DO BEGIN
			;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
		ENDIF
    NEXT:
	ENDFOR ; FOR _JD = 0L,N_ELEMENTS(JD)-2L DO BEGIN
  ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF

  RETURN, INTERP_DATA
END; #####################  END OF ROUTINE ################################
