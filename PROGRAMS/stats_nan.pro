; $ID:	STATS_NAN.PRO,	2018-06-03-12,	USER-JEOR	$
;+
;;#############################################################################################################
	FUNCTION STATS_NAN,DATA_,BASIC=BASIC,NAME=NAME

; PURPOSE: THIS FUNCTION COMPUTES THE VERY BASIC STATS [MIN,MAX,MEAN,MED,VAR,STD] 
;          USING IDL'S NAN KEYWORD TO EXCLUDE MISSING AND NAN VALUES 
;          FROM THE STATS AND SUBSCRIPTS OF THE MIN AND MAX
; 
; 
; CATEGORY:	STATS;		 
;
; CALLING SEQUENCE: RESULT = STATS_NAN(DATA_)
;
; INPUTS: DATA_  

; OPTIONAL INPUTS:
;		
; KEYWORD PARAMETERS:  
;         BASIC..... RETURN THE VERY BASIC PARAMETERS:
;                    [BASIC_STATS = ['N','MIN','MAX','MED','MEAN','MED']
;         NAME...... FILE_NAME[OR A LABEL] TO LINK WITH RESULTS
;

; OUTPUTS: MIN.SUB_MIN,MAX,SUB_MAX,MEAN
;		
;; EXAMPLES: [ THESE TWO SHOW THAT THE MIN,MAX,SUB_MIN & SUB_MAX & MEAN ARE CORRECT WHEN A NAN IS ADDED TO THE INPUT DATA_]
;    S =STATS_NAN(FINDGEN(3))& PRINT,S.N,S.SUB_MIN,S.SUB_MAX,S.MIN,S.MAX,S.MEAN    
;    S = STATS_NAN([!VALUES.F_NAN,FINDGEN(3)])& PRINT,S.N,S.SUB_MIN,S.SUB_MAX,S.MIN,S.MAX,S.MEAN
;    [NOW COMPARE WITH STATS [ ESPECIALLY NOTE DIFFERENT N AND SUBSCRIPTS]
;    S = STATS_NAN([!VALUES.F_NAN,FINDGEN(3)])& PRINT,S.N,S.SUB_MIN,S.SUB_MAX,S.MIN,S.MAX,S.MEAN
;    S = STATS([!VALUES.F_NAN,FINDGEN(3)])& PRINT,S.N,S.SUB_MIN,S.SUB_MAX,S.MIN,S.MAX,S.MEAN
;    S = STATS_NAN([!VALUES.F_NAN,FINDGEN(3)],NAME = 'TEST')& ST,S
;	NOTES:

;
; MODIFICATION HISTORY:
;		WRITTEN: SEP 9, 2013 J.O'REILLY
;	  MODIFIED:		                    
;		MAR 03, 2015 - JOR:  MED = MEDIAN(DATA_(WHERE(FINITE(DATA_))))
;   AUG 16, 2015 - JOR:  REPLACED DATA WITH DATA_; ADDED KEY BASIC
;   OCT 07, 2016 - JOR:  ADDED KEY NAME
;   OCT 07, 2016 - KJWH: Removed ENDIF ELSE statement because it is not needed 
;                        Now making all output variables missings if N_GOOD is 0 
;                        * Program was crashing at the MEDIAN step if there were no FINITE values in the data array                   
;   MAR 19, 2017 - JEOR:CONVERT DATA_ TO DOUBLE PRECISION 
;                       MADE ALL FLOAT DOUBLE WHEN N_GOOD = 0
;   JUN 02, 2018 - JEOR: REMOVED SDEV FROM BASIC

;
;#################################################################################
;-
;***********************
  ROUTINE  = 'STATS_NAN'
;***********************
IF NONE(NAME) THEN NAME = ROUTINE
DATA_= DOUBLE(DATA_)
N = N_ELEMENTS(DATA_)
OK = WHERE(FINITE(DATA_),N_GOOD)
IF N_GOOD GT 0 THEN BEGIN
  MIN = MIN(DATA_,/NAN,SUB_MIN)   
  MAX = MAX(DATA_,/NAN,SUB_MAX) 
  MEAN = MEAN(DATA_,/NAN)
  MED = MEDIAN(DATA_[WHERE(FINITE(DATA_) EQ 1)])
  M = MOMENT(DATA_, /NAN, VARIANCE=VAR, SDEV=SDEV)
ENDIF ELSE BEGIN; N_GOOD GT 0   
  MIN    = 0.0D
  MAX    = 0.0D
  MEAN   = 0.0D
  MED    = 0.0D
  M      = 0.0D
  VAR    = 0.0D
  SDEV   = 0.0D
  SUB_MIN = MISSINGS(0L)
  SUB_MAX = MISSINGS(0L)
ENDELSE;IF N_GOOD GT 0 THEN BEGIN

  
  IF KEY(BASIC) THEN RETURN,CREATE_STRUCT('NAME',NAME,'N',N,'N_GOOD',N_GOOD,'MIN',MIN,'MAX',MAX,'MEAN',MEAN,'MED',MED)
  
  RETURN,CREATE_STRUCT('NAME',NAME,'N',N,'N_GOOD',N_GOOD,'MIN',MIN,'SUB_MIN',SUB_MIN,'MAX',MAX,'SUB_MAX',SUB_MAX,'MEAN',MEAN,'MED',MED,'VAR',VAR,'SDEV',SDEV)
  
        
END; #####################  END OF ROUTINE ################################
