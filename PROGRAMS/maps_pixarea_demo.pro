; $ID:	MAPS_PIXAREA_DEMO.PRO,	2021-04-15-17,	USER-KJWH	$
; 
PRO MAPS_PIXAREA_DEMO

; #########################################################################; 
;+
; THIS PROGRAM IS A DEMO ROUTINE FOR KIM HYDE'S MAP_2PIXAREA

; HISTORY:
;     MAR 5,  2014 - WRITTEN BY: J.E. O'REILLY
;     MAR 6,  2014 - JOR:  MODIFIED MAP_2PIXAREA TO WORK WITH GEQ
;     JUL 5,  2014 - JOR:  PROOFED
;     AUG 25, 2015 - KJWH: ADDED 'LONLAT' EXAMPLE
;     AUG 25, 2015 - JOR : DIR_OUT=DIR_DEMO
;     JUN 21, 2016 - KJWH: Updated the NEC and LONLAT examples to include plots of the AZIMUTH angle and to include a landmask in the LONLAT example
;     JUL 11, 2016 - KJWY: Added SWITCHES
;                          In LONLAT block - now just read the OUTFILE unless OVERWRITE is set
;     DEC 11, 2017 - KJWH: Changed LL.LON/LAT to LL.LONS/LATS
;-
; #########################################################################

;**********************************
ROUTINE_NAME  = 'MAPS_PIXAREA_DEMO'
;**********************************
  SL = PATH_SEP()
  DIR_DEMO = !S.DEMO + ROUTINE_NAME + SL & DIR_TEST, DIR_DEMO

; SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
; SSSSS       S W I T C H E S      CONTROLLING WHICH PROCESSING STEPS TO DO SSSSS
;SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS;	
; 0 (DO NOT DO THE STEP)
;	1 (DO THE STEP)
; 2 (DO THE STEP AND OVERWRITE ANY OUTPUT IF IT ALREAD EXISTS)
; 3 (STOP IN THE STEP)
; ================>
; SWITCHES CONTROLLING WHICH PROCESSING STEPS TO DO:
  DO_NEC          = 'Y'
  DO_SAMPLE       = ''
  DO_LONLAT       = '' 
  DO_MISSING      = ''
  DO_NEC_COMPARE  = ''
  DO_MAP          = 'Y'
;SSSSS     END OF SWITCHES     SSSSS

; ****************************
  IF KEY(DO_NEC) THEN BEGIN
; ****************************
    SWITCH_NAME = 'DO_NEC'
    SWITCHES,DO_NEC,STOPP=STOPP,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,INIT=INIT,R_FILES=R_FILES,R_DATASETS=R_DATASETS
    IF VERBOSE THEN , SWITCH_NAME

    AMAP = 'NEC'
    LL = MAPS_2LONLAT(AMAP)
    AREA = MAPS_PIXAREA(AMAP,WIDTHS=WD,HEIGHTS=HT,AZIMUTH=AZ,OUTFILE=OUTFILE)
    
    OUTFILE = DIR_DEMO + AMAP + '-LONLAT.SAV'
    PNGFILE = DIR_DEMO + AMAP + '-LONLAT.PNG'
    
    MARGIN=[0.01,0.12,0.01,0.08]
    W = WINDOW(DIMENSIONS=[1000,600])
    FONT_SIZE = 12
  
    PLON = 'LONGITUDE_-80.0_-60.0'
    BLON = PRODS_2BYTE(LL.LON,PROD=PLON)
    IMLON = IMAGE(BLON,RGB_TABLE=CPAL_READ('PAL_BR'),/CURRENT,LAYOUT=[3,2,1],MARGIN=MARGIN)
    POS = IMLON.POSITION
    CB_POS = [POS[0],POS[1]-0.03,POS(2),POS[1]-0.01]
    PRODS_COLORBAR,PLON, IMG=IMLON, POSITION=CB_POS, FONT_SIZE=FONT_SIZE, TICKNAME=['-80','-75','-70','-65','-60']
  
    PLAT = 'LATITUDE_30_50';  + '_' + ROUNDS(MIN(LAT),5,/SIG)+'_'+ROUNDS(MAX(LAT),5,/SIG)
    BLAT = PRODS_2BYTE(LL.LAT,PROD=PLAT)
    IMLAT = IMAGE(BLAT,RGB_TABLE=CPAL_READ('PAL_BR'),/CURRENT,LAYOUT=[3,2,4],MARGIN=MARGIN)
    POS = IMLAT.POSITION
    CB_POS = [POS[0],POS[1]-0.03,POS(2),POS[1]-0.01]
    PRODS_COLORBAR,PLAT, IMG=IMLAT, POSITION=CB_POS, FONT_SIZE=FONT_SIZE, TICKNAME=['30','35','40','45','50']
  
    PROD = 'AREA_' + STRJOIN(NUM2STR(NICE_RANGE(MM(AREA))),'_')
    BAREA = PRODS_2BYTE(AREA,PROD=PROD,LOG=1)
    IM = IMAGE(BAREA,RGB_TABLE=CPAL_READ('PAL_BR'),/CURRENT,LAYOUT=[3,2,2],MARGIN=MARGIN)
    POS = IM.POSITION
    CB_POS = [POS[0],POS[1]-0.03,POS(2),POS[1]-0.01]
    PRODS_COLORBAR,PROD, IMG=IM, POSITION=CB_POS, LOG=1, FONT_SIZE=FONT_SIZE, MAJOR=5;, TICKNAME=['1.540','1.545','1.550','1.555','1.560']
  
;    PROD = 'AZIMUTH_' + ROUNDS(MIN(AZ),5,/SIG)+ '_' + ROUNDS(MAX(AZ),5,/SIG)
;    BAREA = PRODS_2BYTE(AZ,PROD=PROD)
;    IM = IMAGE(BAREA,RGB_TABLE=CPAL_READ('PAL_BR'),/CURRENT,LAYOUT=[3,2,5],MARGIN=MARGIN)
;    POS = IM.POSITION
;    CB_POS = [POS[0],POS[1]-0.03,POS(2),POS[1]-0.01]
;    PRODS_COLORBAR,PROD, IMG=IM, POSITION=CB_POS, FONT_SIZE=FONT_SIZE;,TICKNAME=['-6','-3','0','3','6']
    
    PROD = 'NUM_' + STRJOIN(NUM2STR(NICE_RANGE(MM(WD))),'_')
    BAREA = PRODS_2BYTE(WD,PROD=PROD)
    IM = IMAGE(BAREA,RGB_TABLE=CPAL_READ('PAL_BR'),/CURRENT,LAYOUT=[3,2,3],MARGIN=MARGIN)
    POS = IM.POSITION
    CB_POS = [POS[0],POS[1]-0.03,POS(2),POS[1]-0.01]
    PRODS_COLORBAR, PROD, TITLE='WIDTH (km)', IMG=IM, POSITION=CB_POS, FONT_SIZE=FONT_SIZE;,TICKNAME=['1.22','1.23','1.24','1.25','1.26']
  
    PROD = 'NUM_' + STRJOIN(NUM2STR(NICE_RANGE(MM(HT))),'_')
    BAREA = PRODS_2BYTE(HT,PROD=PROD)
    IM = IMAGE(BAREA,RGB_TABLE=CPAL_READ('PAL_BR'),/CURRENT,LAYOUT=[3,2,6],MARGIN=MARGIN)
    POS = IM.POSITION
    CB_POS = [POS[0],POS[1]-0.03,POS(2),POS[1]-0.01]
    PRODS_COLORBAR,PROD, TITLE='HEIGHT (km)', IMG=IM, POSITION=CB_POS, FONT_SIZE=FONT_SIZE, MAJOR=5;,TICKNAME=['1.22','1.23','1.24','1.25','1.26']
      
    W.SAVE, PNGFILE
    WAIT, 20
    W.CLOSE
    
    , 'DO_NEC'
  ENDIF ; IF DO_NEC GE 1 THEN BEGIN
; ||||||||||||||||||||||||||||||||||||



; ****************************
  IF DO_SAMPLE GE 1 THEN BEGIN
; ****************************  
    SWITCH_NAME = 'DO_SAMPLE'
    SWITCHES,DO_SAMPLE,STOPP=STOPP,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,INIT=INIT,R_FILES=R_FILES,R_DATASETS=R_DATASETS
    IF VERBOSE THEN , SWITCH_NAME
    
    LL = MAPS_2LONLAT('NEC')
    LONS = LL.LON(100:104,100:104)
    LATS = LL.LAT(100:104,100:104)
        
    D = MAPS_PIXAREA(LONS=LONS, LATS=LATS, WIDTHS=WIDTHS, HEIGHTS=HEIGHTS)
    
    IF KEY(STOPP) THEN STOP
 ENDIF


; ****************************
  IF KEY(DO_LONLAT) THEN BEGIN
; ****************************
    SWITCH_NAME = 'DO_LONLAT'
    SWITCHES,DO_LONLAT,STOPP=STOPP,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,INIT=INIT,R_FILES=R_FILES,R_DATASETS=R_DATASETS
    IF VERBOSE THEN , SWITCH_NAME
    
    BUFFER = 1
    
    FILES = !S.FILES + ['S1998090165151.L2_MLAC_OC','A2002364070500.L2_LAC_SST.nc','A2006089175500.L2_LAC_SUB_OC','A2007124180000.L2_LAC_SUB_OC','A2007129164000.L2_LAC_SUB_OC','T2000177154500.L2_LAC_SST.nc']
    
    FOR N=0, N_ELEMENTS(FILES)-1 DO BEGIN
      FP = FILE_PARSE(FILES(N))
      SI = SENSOR_INFO(FILES(N))
      CASE SI.SENSOR OF
        'SEAWIFS': IM_ROT = 0
        'MODISA':  IM_ROT = 0
        'MODIST':  IM_ROT = 0
      ENDCASE
      INFILE  = DIR_DEMO + FP.NAME + '-LONLAT_DATA.SAV'
      OUTFILE = DIR_DEMO + FP.NAME + '-LONLAT_AREAS-IMG_ROT_'+ROUNDS(IM_ROT)+'.SAV'
      PNGFILE = DIR_DEMO + FP.NAME + '-LONLAT_AREAS-IMG_ROT_'+ROUNDS(IM_ROT)+'.PNG'
      
      IF FILE_MAKE(INFILE,[OUTFILE,PNGFILE],OVERWRITE=OVERWRITE) EQ 0 THEN CONTINUE
      
      ; Create INFILE (LON/LAT/LANDMASK file) from the original file if it does not exist
      IF EXISTS(INFILE) EQ 0 THEN BEGIN 
        IF FP.EXT EQ 'hdf' THEN SD = READ_HDF_2STRUCT(FILES(N),PRODUCTS=['LONGITUDE','LATITUDE']) $
                           ELSE SD = READ_NC(FILES(N),PRODS=['LONGITUDE','LATITUDE','L2_FLAGS'])
      
        LON = SD.SD.LONGITUDE.IMAGE
        LAT = SD.SD.LATITUDE.IMAGE
        LANDMASK = SD_FLAGS_COMBO(SD.SD.L2_FLAGS.IMAGE,1)
        STRUCT_WRITE, LON=LON, LAT=LAT, LANDMASK=LANDMASK, FILE=INFILE
      ENDIF   
      
      ; Read LON/LAT/LANDMASK file and rotate
      D = STRUCT_READ(INFILE,STRUCT=STRUCT)
      LON = ROTATE(STRUCT.LON,IM_ROT)
      LAT = ROTATE(STRUCT.LAT,IM_ROT)
      LANDMASK = ROTATE(STRUCT.LANDMASK,IM_ROT)
      LAND  = WHERE(STRUCT.LANDMASK EQ 1)
      LAND_COLOR = 252
                 
      IF EXISTS(OUTFILE) EQ 0 OR KEY(OVERWRITE) THEN D = MAPS_PIXAREA(LONS=STRUCT.LON, LATS=STRUCT.LAT, WIDTHS=WIDTHS, HEIGHTS=HEIGHTS, AZIMUTH=AZIMUTH, OUTFILE=OUTFILE)
      D = STRUCT_READ(OUTFILE,STRUCT=STR)
      
      SZ = SIZEXYZ(STRUCT.LAT,PX=PX,PY=PY)
      W = WINDOW(DIMENSIONS=[PX*PX/PY*2,PY*PX/PY],BUFFER=BUFFER)
      FONT_SIZE = 12
      MARGIN=[0.01,0.22,0.01,0.02]
          
      PROD = 'LONGITUDE_-90.0_-30.0'
      BARRAY = PRODS_2BYTE(ROTATE(STRUCT.LON,IM_ROT),PROD=PROD)
      BARRAY(LAND) = LAND_COLOR
      IM = IMAGE(BARRAY,RGB_TABLE=CPAL_READ('PAL_BR'),/CURRENT,LAYOUT=[3,2,1],MARGIN=MARGIN)
      POS = IM.POSITION
      CPOS = [POS[0],POS[1]-0.03,POS(2),POS[1]-0.01]
      PRODS_COLORBAR,PROD, IMG=IM, POSITION=CPOS, CB_POS='B', FONT_SIZE=FONT_SIZE, TICKNAME=['-90','-80','-70','-60','-50','-40','-30']
          
      PROD = 'LATITUDE_10_60'
      BARRAY = PRODS_2BYTE(ROTATE(STRUCT.LAT,IM_ROT),PROD=PROD)
      BARRAY(LAND) = LAND_COLOR
      IM = IMAGE(BARRAY,RGB_TABLE=CPAL_READ('PAL_BR'),/CURRENT,LAYOUT=[3,2,2],MARGIN=MARGIN)
      POS = IM.POSITION
      CPOS = [POS[0],POS[1]-0.03,POS(2),POS[1]-0.01]
      PRODS_COLORBAR,PROD, IMG=IM, POSITION=CPOS, CB_POS='B', FONT_SIZE=FONT_SIZE, TICKNAME=['10','20','20','30','40','50','60']
      
      PROD = 'AREA_1_20'
      BARRAY = PRODS_2BYTE(STR.DATA,PROD=PROD,LOG=1)
      BARRAY(LAND) = LAND_COLOR
      IM = IMAGE(BARRAY,RGB_TABLE=CPAL_READ('PAL_BR'),/CURRENT,LAYOUT=[3,2,3],MARGIN=MARGIN)
      POS = IM.POSITION
      CPOS = [POS[0],POS[1]-0.03,POS(2),POS[1]-0.01]
      PRODS_COLORBAR,PROD, IMG=IM, POSITION=CPOS, CB_POS='B', LOG=1, FONT_SIZE=FONT_SIZE, TICKNAME=['1','3','10','20']
      
      PROD = 'WIDTH_1.0_1.5'
      BARRAY = PRODS_2BYTE(STR.WIDTHS,PROD=PROD)
      BARRAY(LAND) = LAND_COLOR
      IM = IMAGE(BARRAY,RGB_TABLE=CPAL_READ('PAL_BR'),/CURRENT,LAYOUT=[3,2,4],MARGIN=MARGIN)
      POS = IM.POSITION
      CPOS = [POS[0],POS[1]-0.03,POS(2),POS[1]-0.01]
      PRODS_COLORBAR,PROD, IMG=IM, POSITION=CPOS, CB_POS='B', FONT_SIZE=FONT_SIZE,TICKNAME=['1.0','1.1','1.2','1.3','1.4','1.5']
      
      PROD = 'HEIGHT_0.75_1.25'
      BARRAY = PRODS_2BYTE(STR.HEIGHTS,PROD=PROD)
      BARRAY(LAND) = LAND_COLOR
      IM = IMAGE(BARRAY,RGB_TABLE=CPAL_READ('PAL_BR'),/CURRENT,LAYOUT=[3,2,5],MARGIN=MARGIN)
      POS = IM.POSITION
      CPOS = [POS[0],POS[1]-0.03,POS(2),POS[1]-0.01]
      PRODS_COLORBAR,PROD, IMG=IM, POSITION=CPOS, CB_POS='B', FONT_SIZE=FONT_SIZE, TICKNAME=['0.8','0.9','1.0','1.1','1.2']
     
      PROD = 'AZIMTH_-20_20'
      BARRAY = PRODS_2BYTE(STR.AZIMUTH,PROD=PROD,LOG=1)
      BARRAY(LAND) = LAND_COLOR
      IM = IMAGE(BARRAY,RGB_TABLE=CPAL_READ('PAL_BR'),/CURRENT,LAYOUT=[3,2,6],MARGIN=MARGIN)
      POS = IM.POSITION
      CPOS = [POS[0],POS[1]-0.03,POS(2),POS[1]-0.01]
      PRODS_COLORBAR,PROD, IMG=IM, POSITION=CPOS, CB_POS='B', LOG=1, FONT_SIZE=FONT_SIZE, TICKNAME=['-20','-15','-10','-5','0','5','10','15','20']
      W.SAVE, PNGFILE
      WAIT, 20
      W.CLOSE
    ENDFOR  
    IF KEY(STOPP) THEN STOP
  ENDIF ;   IF DO_LONLAT GE 1 THEN BEGIN
; ||||||||||||||||||||||||||||||||||||


; ****************************
  IF KEY(DO_MISSING) THEN BEGIN
; ****************************
    SWITCH_NAME = 'DO_MISSING'
    SWITCHES,DO_MISSING,STOPP=STOPP,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,INIT=INIT,R_FILES=R_FILES,R_DATASETS=R_DATASETS
    IF VERBOSE THEN , SWITCH_NAME
    
    
    FILE = FILE_SEARCH(!S.FILES,'A2002364070500.L2_LAC_SST.nc')
    FP = FILE_PARSE(FILE[0])
    OUTFILE = DIR_DEMO + FP.NAME + '-LONLAT.SAV'
    PNGFILE = DIR_DEMO + FP.NAME + '-LONLAT.PNG'
    IF FP.EXT EQ 'hdf' THEN SD = READ_HDF_2STRUCT(FILE[0],PRODUCTS=['LONGITUDE','LATITUDE']) $
    ELSE SD = READ_NC(FILE[0],PRODS=['LONGITUDE','LATITUDE'])
  
    LON = ROTATE(SD.SD.LONGITUDE.IMAGE,7)
    LAT = ROTATE(SD.SD.LATITUDE.IMAGE,7)
    
  ;  LON(*,200:300) = -999
  ;  LAT(*,200:300) =  999
  
;    W = WINDOW(DIMENSIONS=[1200,900])
;    FONT_SIZE = 12
;    MARGIN=[0.05,0.08,0.05,0.0]
;  
;    PROD = 'LONGITUDE_-95.0_-55.0'
;    BARRAY = PRODS_2BYTE(LON,PROD=PROD)
;    IM = IMAGE(BARRAY,RGB_TABLE=CPAL_READ('PAL_BR'),/CURRENT,LAYOUT=[5,1,1],MARGIN=MARGIN)
;    POS = IM.POSITION
;    CPOS = [POS[0],POS[1]-0.03,POS(2),POS[1]-0.01]
;    PRODS_COLORBAR,PROD, IMG=IM, POSITION=CPOS, CB_POS='B', FONT_SIZE=FONT_SIZE, TICKNAME=['-95','-85','-75','-65','-55']
;  
;    PROD = 'LATITUDE_30_55'
;    BARRAY = PRODS_2BYTE(LAT,PROD=PROD)
;    IM = IMAGE(BARRAY,RGB_TABLE=CPAL_READ('PAL_BR'),/CURRENT,LAYOUT=[5,1,2],MARGIN=MARGIN)
;    POS = IM.POSITION
;    CPOS = [POS[0],POS[1]-0.03,POS(2),POS[1]-0.01]
;    PRODS_COLORBAR,PROD, IMG=IM, POSITION=CPOS, CB_POS='B', FONT_SIZE=FONT_SIZE, TICKNAME=['30','35','40','45','50','55']
  
    D = MAPS_PIXAREA(LONS=LON, LATS=LAT, WIDTHS=WIDTHS, HEIGHTS=HEIGHTS, OUTFILE=OUTFILE)
  
    PROD = 'WIDTH_1.0_1.5'
    BARRAY = PRODS_2BYTE(WIDTHS,PROD=PROD)
    IM = IMAGE(BARRAY,RGB_TABLE=CPAL_READ('PAL_BR'),/CURRENT,LAYOUT=[5,1,3],MARGIN=MARGIN)
    POS = IM.POSITION
    CPOS = [POS[0],POS[1]-0.03,POS(2),POS[1]-0.01]
    PRODS_COLORBAR,PROD, IMG=IM, POSITION=CPOS, CB_POS='B', FONT_SIZE=FONT_SIZE
  
    PROD = 'HEIGHT_0.75_1.25'
    BARRAY = PRODS_2BYTE(HEIGHTS,PROD=PROD)
    IM = IMAGE(BARRAY,RGB_TABLE=CPAL_READ('PAL_BR'),/CURRENT,LAYOUT=[5,1,4],MARGIN=MARGIN)
    POS = IM.POSITION
    CPOS = [POS[0],POS[1]-0.03,POS(2),POS[1]-0.01]
    PRODS_COLORBAR,PROD, IMG=IM, POSITION=CPOS, CB_POS='B', FONT_SIZE=FONT_SIZE
  
    PROD = 'AREA_1_20'
    BARRAY = PRODS_2BYTE(D,PROD=PROD,LOG=1)
    IM = IMAGE(BARRAY,RGB_TABLE=CPAL_READ('PAL_BR'),/CURRENT,LAYOUT=[5,1,5],MARGIN=MARGIN)
    POS = IM.POSITION
    CPOS = [POS[0],POS[1]-0.03,POS(2),POS[1]-0.01]
    PRODS_COLORBAR,PROD, IMG=IM, POSITION=CPOS, CB_POS='B', LOG=1, FONT_SIZE=FONT_SIZE
    W.SAVE, PNGFILE
    WAIT, 20
    W.CLOSE
    IF KEY(STOPP) THEN STOP
ENDIF ;   IF DO_MISSING GE 1 THEN BEGIN
; ||||||||||||||||||||||||||||||||||||


; ****************************
  IF KEY(DO_NEC_COMPARE) THEN BEGIN
; ****************************
    SWITCH_NAME = 'DO_NEC_COMPARE'
    SWITCHES,DO_NEC_COMPARE,STOPP=STOPP,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,INIT=INIT,R_FILES=R_FILES,R_DATASETS=R_DATASETS
    IF VERBOSE THEN , SWITCH_NAME

		AMAP = 'NEC'
		NEC = MAPS_PIXAREA(AMAP,WIDTHS=NECW,HEIGHTS=NECH,AZIMUTH=NECZ,OUTFILE=OUTFILE)
		
		LL = MAPS_2LONLAT(AMAP)
		LONLAT = MAPS_PIXAREA('LONLAT',LONS=LL.LONS, LATS=LL.LATS, WIDTHS=LLW, HEIGHTS=LLH)
			
	  W = WINDOW(DIMENSIONS=[900,600])
	  FONT_SIZE = 12
		
		PLON = 'LONGITUDE_-80.0_-60.0'
		BLON = PRODS_2BYTE(LL.LONS,PROD=PLON)
		IMLON = IMAGE(BLON,RGB_TABLE=CPAL_READ('PAL_BR'),/CURRENT,LAYOUT=[4,2,1])
		POS = IMLON.POSITION
		CB_POS = [POS[0],POS[1]-0.03,POS(2),POS[1]-0.01]
		PRODS_COLORBAR,PLON, IMG=IMLON, POSITION=CB_POS, FONT_SIZE=FONT_SIZE, TICKNAME=['-80','-75','-70','-65','-60']
		
		PLAT = 'LATITUDE_30_50';  + '_' + ROUNDS(MIN(LAT),5,/SIG)+'_'+ROUNDS(MAX(LAT),5,/SIG)
		BLAT = PRODS_2BYTE(LL.LATS,PROD=PLAT)
		IMLAT = IMAGE(BLAT,RGB_TABLE=CPAL_READ('PAL_BR'),/CURRENT,LAYOUT=[4,2,5])
		POS = IMLAT.POSITION
		CB_POS = [POS[0],POS[1]-0.03,POS(2),POS[1]-0.01]
		PRODS_COLORBAR,PLAT, IMG=IMLAT, POSITION=CB_POS, FONT_SIZE=FONT_SIZE, TICKNAME=['30','35','40','45','50']

		PROD = 'AREA_1.54_1.56';+ '_' + ROUNDS(MIN(D.DATA),5,/SIG)+ '_' + ROUNDS(MAX(D.DATA),5,/SIG)
		BAREA = PRODS_2BYTE(NEC,PROD=PROD,LOG=1)
		IM = IMAGE(BAREA,RGB_TABLE=CPAL_READ('PAL_BR'),/CURRENT,LAYOUT=[4,2,2])
		POS = IM.POSITION
		CB_POS = [POS[0],POS[1]-0.03,POS(2),POS[1]-0.01]
		PRODS_COLORBAR,PROD, IMG=IM, POSITION=CB_POS, LOG=1, FONT_SIZE=FONT_SIZE, TICKNAME=['1.540','1.545','1.550','1.555','1.560']
		
		PROD = 'AREA_1.54_1.56';+ '_' + ROUNDS(MIN(D.DATA),5,/SIG)+ '_' + ROUNDS(MAX(D.DATA),5,/SIG)
		BAREA = PRODS_2BYTE(LONLAT,PROD=PROD,LOG=1)
		IM = IMAGE(BAREA,RGB_TABLE=CPAL_READ('PAL_BR'),/CURRENT,LAYOUT=[4,2,6])
		POS = IM.POSITION
		CB_POS = [POS[0],POS[1]-0.03,POS(2),POS[1]-0.01]
		PRODS_COLORBAR,PROD, IMG=IM, POSITION=CB_POS, LOG=1, FONT_SIZE=FONT_SIZE, TICKNAME=['1.540','1.545','1.550','1.555','1.560']
		
		PROD = 'WIDTH_1.22_1.26'
		BAREA = PRODS_2BYTE(NECW,PROD=PROD)
		IM = IMAGE(BAREA,RGB_TABLE=CPAL_READ('PAL_BR'),/CURRENT,LAYOUT=[4,2,3])
		POS = IM.POSITION
		CB_POS = [POS[0],POS[1]-0.03,POS(2),POS[1]-0.01]
		PRODS_COLORBAR,PROD, IMG=IM, POSITION=CB_POS, FONT_SIZE=FONT_SIZE
		
		PROD = 'HEIGHT_1.22_1.26'
		BAREA = PRODS_2BYTE(NECH,PROD=PROD)
		IM = IMAGE(BAREA,RGB_TABLE=CPAL_READ('PAL_BR'),/CURRENT,LAYOUT=[4,2,7])
		POS = IM.POSITION
		CB_POS = [POS[0],POS[1]-0.03,POS(2),POS[1]-0.01]
		PRODS_COLORBAR,PROD, IMG=IM, POSITION=CB_POS, FONT_SIZE=FONT_SIZE
		
		PROD = 'DIF_0.0000001_0.0000002'
		BAREA = PRODS_2BYTE(ABS(NECW-LLW),PROD=PROD)
		IM = IMAGE(BAREA,RGB_TABLE=CPAL_READ('PAL_BR'),/CURRENT,LAYOUT=[4,2,4])
		POS = IM.POSITION
		CB_POS = [POS[0],POS[1]-0.03,POS(2),POS[1]-0.01]
		PRODS_COLORBAR,PROD, IMG=IM, POSITION=CB_POS, FONT_SIZE=FONT_SIZE
		
		PROD = 'DIF_0.0000001_0.0000002'
		BAREA = PRODS_2BYTE(ABS(NECH-LLH),PROD=PROD)
		IM = IMAGE(BAREA,RGB_TABLE=CPAL_READ('PAL_BR'),/CURRENT,LAYOUT=[4,2,8])
		POS = IM.POSITION
		CB_POS = [POS[0],POS[1]-0.03,POS(2),POS[1]-0.01]
		PRODS_COLORBAR,PROD, IMG=IM, POSITION=CB_POS, FONT_SIZE=FONT_SIZE

    IF KEY(STOPP) THEN STOP		

		IF KEY(VERBOSE) THEN , 'DO_NEC_COMPARE'
  ENDIF ; IF DO_NEC_COMPARE GE 1 THEN BEGIN


; ****************************
  IF KEY(DO_MAP) THEN BEGIN
; ****************************
    SWITCH_NAME = 'DO_GEQ'
    SWITCHES,DO_GEQ,STOPP=STOPP,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,INIT=INIT,R_FILES=R_FILES,R_DATASETS=R_DATASETS
    IF VERBOSE THEN , SWITCH_NAME
    MPS = ['GL2','GL8','GL4','GL1'] 
    FOR M=0, N_ELEMENTS(MPS)-1 DO D = MAPS_PIXAREA(MPS(M), OVERWRITE=OVERWRITE) 
;    PROD = 'AREA'+ '_' + ROUNDS(MIN(D),5,/SIG)+ '_' + ROUNDS(MAX(D),5,/SIG)
;    PRODS_2PNG,OUTFILE,PROD=PROD, DIR_OUT=DIR_DEMO,/OVERWRITE,LOG=1
    , 'DO_MAP'
  ENDIF ; IF DO_GEQ GE 1 THEN BEGIN




END; #####################  END OF ROUTINE ################################
