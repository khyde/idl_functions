; $ID:	ECOAP_GLOBAL_MAPS.PRO,	2021-04-15-17,	USER-KJWH	$

	PRO ECOAP_GLOBAL_MAPS

;+
; NAME:
;		ECOAP_GLOBAL_MAPS
;
; PURPOSE:;
;		This procedure is the MAIN program for making figures for a book project with Michael Fogarty
;
; CATEGORY:
;		CATEGORY
;
; CALLING SEQUENCE:
;		NO KEYWORDS
;
; INPUTS:
;
; OPTIONAL INPUTS:
;
; KEYWORD PARAMETERS:
;
;	NOTES:
;
;
; MODIFICATION HISTORY:
;			Written May 22, 2011 by K.J.W.Hyde, 28 Tarzwell Drive, NMFS, NOAA 02882 (kimberly.hyde@noaa.gov)
;-
;	****************************************************************************************************
	ROUTINE_NAME = 'ECOAP_GLOBAL_MAPS'

;	===> Initialize ERROR to a null string. If errors are encountered ERROR will be set to a message.
;			 The calling routine can check error (e.g.IF ERROR NE 0 then there was a problem and do this or that)
	ERROR = ''

	
	DIR_PROJECTS = !S.PROJECTS + 'ECOAP/GLOBAL_MAPS/' 
  DIR_DATAS    = FIX_PATH(DIR_PROJECTS + 'DATA/')
	DIR_PNGS     = FIX_PATH(DIR_PROJECTS + 'PNGS/')
	DIR_NETCDF   = FIX_PATH(DIR_PROJECTS + 'NETCDF/')
	DIR_SUBAREAS = FIX_PATH(DIR_PROJECTS + 'SUBAREAS/')
	DIR_COMPS    = FIX_PATH(DIR_PROJECTS + 'COMPOSITES/')
	DIR_DATASETS = !S.DATASETS
	SL = DELIMITER(/PATH)
  
  DO_MAKE_LME_OUTLINES = 0 ; Added 06/11/13 - Make LME outlines for non-LME maps.
  DO_GLOBEC_COMPOSITE  = 0 ; Added 06/10/13
  DO_GLOBAL_COMPOSITES = 0 ; Added 02/22/13
  DO_LME_SUBAREA_MAP   = 0 ; Added 02/26/13
  DO_LME_TIMESERIES    = 0 ; Added 06/04/12  
  DO_EC_WC_STATS       = 0 ; Added 08/16/12
  DO_REGIONAL_CHL      = 0 ; Added 10/01/12
  DO_NEC_WC_KOR_MAPS   = 0 ; Added 09/25/12
  DO_US_MAPS           = 0 ; Added 01/03/13
  DO_NEC_WC_MAPS       = 0 ; Added 09/06/12
  DO_EC_WC_MAPS        = 0 ; Added 05/09/12
  DO_NETCDF_2_SST      = 0 ; Added 02/28/13
  DO_NETCDF_2_MAP      = 0 ; Added 03/12/12
  DO_BIODIVERSITY      = 0 ; Added 03/15/12
  DO_HUMAN_IMPACTS     = 0 ; Added 05/04/12  
  DO_GLOBAL_MAPS       = 0 ; Added 03/12/12
  DO_GLOBAL_LME        = 0 ; Added 05/23/12
  DO_ADD_LANDMASK      = 0 ; Added 09/24/12 


; ********************************************
  IF DO_MAKE_LME_OUTLINES GE 1 THEN BEGIN
; ********************************************
    OVERWRITE = DO_MAKE_LME_OUTLINES GE 2
    BUFFER = 0
    
    PAL_SW3,R,G,B
    MAPS = ['WC','NEC','SO']
    LME_MAP = READ_PNG(FIX_PATH(!S.DIR_IDL + 'LME\LME_OFFSHORE.PNG'))
    OK = WHERE(LME_MAP GT 0 AND LME_MAP LT 250)
    LME_MAP[OK] = 250
    
    FOR N=0, N_ELEMENTS(MAPS)-1 DO BEGIN
      AMAP = MAPS(N)
      M = MAPS_SIZE(AMAP)        
      NEW = MAP_REMAP(LME_MAP,MAP_OUT=AMAP,MAP_IN='GEQ',PX_OUT=M.PX_OUT,PY_OUT=M.PY_OUT,/REFRESH)
      PNGFILE  = !S.DIR_IMAGES + 'TO_BE_EDITED-MASK_OUTLINE-' + AMAP+'-PXY_'+NUM2STR(M.PX_OUT)+'_'+NUM2STR(M.PY_OUT)+'.PNG'
      WRITE_PNG, PNGFILE,NEW, R,G,B
    ENDFOR
    
  ENDIF ; DO_MAKE_LME_OUTLINES  


  
; ********************************************
  IF DO_GLOBEC_COMPOSITE GE 1 THEN BEGIN
; ********************************************
    OVERWRITE = DO_GLOBEC_COMPOSITE GE 2
    BUFFER = 0
    
    PRODS = ['BATHY']
    MAPS = ['WC','NEC','SO']
        
    BACKGROUND=255
    LAND_COLOR=252
    OCEAN_COLOR=254
    LONLAT_COLOR=253
    LONLAT_THICK=4
    OUTLINE_COLOR=255
    OUTLINE_THICK=6
    LABEL_FONT_SIZE=12
    WC_LATS = [25,35,45,55,65]
    WC_LONS = [-180,-160,-140,-120,-100]
    NC_LATS = [35,40,45]
    NC_LONS = [-75,-70,-65]
    SO_LATS = [-75,-50]
    SO_LONS = [-135,-90,-45,0,45,90,135,180]    
    NEAR = 0.2
    TXTSIZE = 30
    
    PAL = 'PAL_BATHY'
    SPECIAL_SCALE = ''
    CBAR_PROD = 'BATHY'
    CBAR_TITLE = UNITS('BATHY')
    OUTLINE_COLOR = 255
    
    DIMS = [3,1]
    PX  = 300
    PY  = 300
    WSP = 30
    HSP = 20
    BSP = 100
    
    WC = MAPS_2LONLAT('WC',PX=PX,PY=PX) 
    WLATL = WHERE_NEAREST(WC.LAT(0,*), FLOAT(WC_LATS),NEAR=NEAR,VALID=VALID) & WC_LATSL = WC_LATS(VALID)
    WLATR = WHERE_NEAREST(WC.LAT(-1,*),FLOAT(WC_LATS),NEAR=NEAR,VALID=VALID) & WC_LATSR = WC_LATS(VALID)
    WLONB = WHERE_NEAREST(WC.LON(*,0), FLOAT(WC_LONS),NEAR=NEAR,VALID=VALID) & WC_LONSB = WC_LONS(VALID)
    WLONU = WHERE_NEAREST(WC.LON(*,-1),FLOAT(WC_LONS),NEAR=0.3,VALID=VALID) & WC_LONSU = WC_LONS(VALID)    
    NC = MAPS_2LONLAT('NEC', PX=PX,PY=PY) 
    NLATL = WHERE_NEAREST(NC.LAT(0,*), FLOAT(NC_LATS),NEAR=NEAR,VALID=VALID) & NC_LATSL = NC_LATS(VALID)
    NLATR = WHERE_NEAREST(NC.LAT(-1,*),FLOAT(NC_LATS),NEAR=NEAR,VALID=VALID) & NC_LATSR = NC_LATS(VALID)
    NLONB = WHERE_NEAREST(NC.LON(*,0), FLOAT(NC_LONS),NEAR=NEAR,VALID=VALID) & NC_LONSB = NC_LONS(VALID)
    NLONU = WHERE_NEAREST(NC.LON(*,-1),FLOAT(NC_LONS),NEAR=NEAR,VALID=VALID) & NC_LONSU = NC_LONS(VALID)
    SO = MAPS_2LONLAT('SO',  PX=PX,PY=PY)     
    SLATC = WHERE_NEAREST(REVERSE(SO.LAT(PX/2.,PY/2:*)),FLOAT(SO_LATS),NEAR=0.1, VALID=VALID) & SO_LATSC = SO_LATS(VALID)
    SLONL = WHERE_NEAREST(SO.LON(0,*),    FLOAT(SO_LONS),NEAR=0.2, VALID=VALID) & SO_LONSL = SO_LONS(VALID)
    SLONR = WHERE_NEAREST(SO.LON(-1,*),   FLOAT(SO_LONS),NEAR=0.2, VALID=VALID) & SO_LONSR = SO_LONS(VALID)
    SLONB = WHERE_NEAREST(SO.LON(*,0),    FLOAT(SO_LONS),NEAR=0.2, VALID=VALID) & SO_LONSB = SO_LONS(VALID)
    SLONU = WHERE_NEAREST(SO.LON(*,-1),   FLOAT(SO_LONS),NEAR=0.2, VALID=VALID) & SO_LONSU = SO_LONS(VALID)
           
    WPOS = [WSP*1+PX*0,BSP,WSP*1+PX*1,BSP+PY]  & TXTXW = WSP   & TXTYW = BSP
    NPOS = [WSP*3+PX*1,BSP,WSP*3+PX*2,BSP+PY]  & TXTXN = WSP*3 & TXTYN = BSP
    SPOS = [WSP*5+PX*2,BSP,WSP*5+PX*3,BSP+PY]  & TXTXS = WSP*5 & TXTYS = BSP
    WDIM = [SPOS(2)+WSP,SPOS(3)+HSP]
    CPOS = [WDIM[0]/4,BSP/2]
    CWT  = WDIM[0]/2
    CHT  = BSP/4
    
    WDATA = STRUCT_SD_READ(!S.DIR_BATHY+'SRTM30PLUS-WC-PXY_1024_1024-BATHY-SMOOTH_5.SAVE', STRUCT=WSTRUCT) & WLME = !S.DIR_IMAGES + 'MASK_OUTLINE-WC-PXY_1024_1024-LME.PNG'
    NDATA = STRUCT_SD_READ(!S.DIR_BATHY+'SRTM30PLUS-NEC-PXY_1024_1024-BATHY-SMOOTH_5.SAVE',STRUCT=NSTRUCT) & NLME = !S.DIR_IMAGES + 'MASK_OUTLINE-NEC-PXY_1024_1024-LME.PNG'
    SDATA = STRUCT_SD_READ(!S.DIR_BATHY+'SRTM30PLUS-SO-PXY_1024_1024-BATHY-SMOOTH_5.SAVE', STRUCT=SSTRUCT) & SLME = !S.DIR_IMAGES + 'MASK_OUTLINE-SO-PXY_1024_1024-LME.PNG'
    
    ADD_COAST = 0
    W = WINDOW(DIMENSIONS=WDIM,BUFFER=BUFFER,MARGIN=0)
    WIMAGE = STRUCT_SD_2IMAGE_NG(WSTRUCT,BUFFER=BUFFER,PAL=PAL,BACKGROUND=BACKGROUND,/ADD_LAND,ADD_COAST=ADD_COAST,SPECIAL_SCALE=SPECIAL_SCALE,IMG_POSITION=WPOS,/CURRENT,/DEVICE,MARGIN=0,$
      /ADD_LONLAT_LINES,LONLAT_COLOR=LONLAT_COLOR,LONLAT_THICK=LONLAT_THICK,LATS=WC_LATS,LONS=WC_LONS,/ADD_OUTLINE,OUTLINE_FILE=WLME,OUTLINE_COLOR=OUTLINE_COLOR,OUTLINE_THICK=OUTLINE_THICK)
    FOR S=0, N_ELEMENTS(WLATL)-1 DO WNLAT = TEXT(WPOS[0],WLATL(S)+WPOS[1],NUM2STR(WC_LATSL(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=1,VERTICAL_ALIGNMENT=0.5)
    FOR S=0, N_ELEMENTS(WLATR)-1 DO WNLAT = TEXT(WPOS(2),WLATR(S)+WPOS[1],NUM2STR(WC_LATSR(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=0,VERTICAL_ALIGNMENT=0.5)
    FOR S=0, N_ELEMENTS(WLONB)-1 DO WNLON = TEXT(WPOS[0]+WLONB(S),WPOS[1],NUM2STR(WC_LONSB(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=0.5,VERTICAL_ALIGNMENT=1)
    FOR S=0, N_ELEMENTS(WLONU)-1 DO WNLON = TEXT(WPOS[0]+WLONU(S),WPOS(3),NUM2STR(WC_LONSU(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=0.5,VERTICAL_ALIGNMENT=0)
    TXTW1 = TEXT(45,300,'Gulf of Alaska',    FONT_SIZE=15,COLOR='WHITE',/DEVICE)
    TXTW2 = TEXT(45,180,'California Current',FONT_SIZE=15,COLOR='WHITE',/DEVICE)
  ;  TXT = TEXT(TXTXN,TXTYN,'a',FONT_SIZE=TXTSIZE,COLOR='BLACK',/DEVICE)
      
    NIMAGE = STRUCT_SD_2IMAGE_NG(NSTRUCT,BUFFER=BUFFER,PAL=PAL,BACKGROUND=BACKGROUND,/ADD_LAND,ADD_COAST=ADD_COAST,SPECIAL_SCALE=SPECIAL_SCALE,IMG_POSITION=NPOS,/CURRENT,/DEVICE,MARGIN=0,$
      /ADD_LONLAT_LINES,LONLAT_COLOR=LONLAT_COLOR,LONLAT_THICK=LONLAT_THICK,LATS=NC_LATS,LONS=NC_LONS,/ADD_OUTLINE,OUTLINE_FILE=NLME,OUTLINE_COLOR=OUTLINE_COLOR,OUTLINE_THICK=OUTLINE_THICK)
    FOR S=0, N_ELEMENTS(NLATL)-1 DO NNLAT = TEXT(NPOS[0],NLATL(S)+NPOS[1],NUM2STR(NC_LATSL(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=1,VERTICAL_ALIGNMENT=0.5)
    FOR S=0, N_ELEMENTS(NLATR)-1 DO NNLAT = TEXT(NPOS(2),NLATR(S)+NPOS[1],NUM2STR(NC_LATSR(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=0,VERTICAL_ALIGNMENT=0.5)
    FOR S=0, N_ELEMENTS(NLONB)-1 DO NNLON = TEXT(NPOS[0]+NLONB(S),NPOS[1],NUM2STR(NC_LONSB(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=0.5,VERTICAL_ALIGNMENT=1)
    FOR S=0, N_ELEMENTS(NLONU)-1 DO NNLON = TEXT(NPOS[0]+NLONU(S),NPOS(3),NUM2STR(NC_LONSU(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=0.5,VERTICAL_ALIGNMENT=0)
    TXTN1 = TEXT(590,270,'Georges!CBank',    FONT_SIZE=15,COLOR='BLACK',/DEVICE,ALIGNMENT=0.5)
    TXTN2 = TEXT(490,160,'Northeast!CContinental!CShelf',FONT_SIZE=15,COLOR='WHITE',/DEVICE)
    ;  TXT = TEXT(TXTXW,TXTYW,'c',FONT_SIZE=TXTSIZE,COLOR='BLACK',/DEVICE)
      
    SIMAGE = STRUCT_SD_2IMAGE_NG(SSTRUCT,BUFFER=BUFFER,PAL=PAL,BACKGROUND=BACKGROUND,/ADD_LAND,ADD_COAST=ADD_COAST,SPECIAL_SCALE=SPECIAL_SCALE,IMG_POSITION=SPOS,/CURRENT,/DEVICE,MARGIN=0,$
      /ADD_LONLAT_LINES,LONLAT_COLOR=LONLAT_COLOR,LONLAT_THICK=LONLAT_THICK,LATS=SO_LATS,LONS=SO_LONS,/ADD_OUTLINE,OUTLINE_FILE=SLME,OUTLINE_COLOR=OUTLINE_COLOR,OUTLINE_THICK=OUTLINE_THICK)
    ;FOR S=0, N_ELEMENTS(SLATL)-1 DO SNLAT = TEXT(SPOS[0]+PX/2,SLATL(S)+SPOS[1],NUM2STR(SO_LATSL(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=1,VERTICAL_ALIGNMENT=0)
    FOR S=0, N_ELEMENTS(SLATC)-1 DO SNLAT = TEXT(SPOS[0]+PX/2,SLATC(S)+PY/2+SPOS[1],NUM2STR(SO_LATSC(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='WHITE',ALIGNMENT=0,VERTICAL_ALIGNMENT=0)
                                    SNLON = TEXT(SPOS[0],     SLONR[1]+SPOS[1],NUM2STR(SO_LONSR(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=1,VERTICAL_ALIGNMENT=0.5)
                                    SNLON = TEXT(SPOS(2),     SLONL[1]+SPOS[1],NUM2STR(SO_LONSL(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=0,VERTICAL_ALIGNMENT=0.5)
    FOR S=0, N_ELEMENTS(SLONB)-1 DO SNLON = TEXT(SPOS[0]+SLONB(S),     SPOS[1],NUM2STR(SO_LONSB(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=0.5,VERTICAL_ALIGNMENT=1)
    FOR S=0, N_ELEMENTS(SLONU)-1 DO SNLON = TEXT(SPOS[0]+SLONU(S),     SPOS(3),NUM2STR(SO_LONSU(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=0.5,VERTICAL_ALIGNMENT=0)    
    TXTA1 = TEXT(830,325,'West Antarctic !CPeninsula',ALIGNMENT=0.5,FONT_SIZE=15,COLOR='WHITE',/DEVICE)
    TXTA2 = TEXT(900,150,'Antarctica',ALIGNMENT=0.5,FONT_SIZE=15,COLOR='WHITE',/DEVICE)
    BOXA  = POLYGON([805,860,860,805,805],[240,240,320,320,240],COLOR='YELLOW',THICK=4,/DEVICE,FILL_TRANSPARENCY=100)
;      TXT = TEXT(TXTXA,TXTYA,'b',FONT_SIZE=TXTSIZE,COLOR='BLACK',/DEVICE)
      
    BAR = COLOR_BAR_SCALE_NG(PROD=CBAR_PROD,SPECIAL_SCALE=SPECIAL_SCALE,PX=CPOS[0],PY=CPOS[1],CHARSIZE=13,BACKGROUND=BACKGROUND,XDIM=CWT,YDIM=CHT,PAL=PAL,LAYOUT=LAYOUT,$
      NO_NAME=no_name,NO_UNIT=no_unit,TITLE=CBAR_TITLE,VERTICAL=VERTICAL,HORIZONTAL=HORIZONTAL,BOTTOM=1,TOP=TOP,LEFT=LEFT,RIGHT=RIGHT,FONT='HELVETICA')
    W.SAVE,DIR_COMPS + 'GLOBEC_BATHY-WHITE-DPI_600.png',RESOLUTION=600
    W.CLOSE
    
 
  ENDIF  
  
  
  
; ********************************************
  IF DO_GLOBAL_COMPOSITES GE 1 THEN BEGIN
; ********************************************
    OVERWRITE = DO_GLOBAL_COMPOSITES GE 2
    BUFFER = 0
    DO_COMP1 = 0
    DO_COMP2 = 1
        
    IF DO_COMP1 GE 1 THEN BEGIN
      COMPFILE = DIR_COMPS+'GLOBAL_COMOSITES-POP_CHL_SST_BIO-2_2-NO_LAKES-600_DPI.PNG'
      PFILE = FIX_PATH(DIR_PROJECTS + 'HUMANIMPACTS/BINNED_TRANSFORMED_POPULATION_DATA-ROBINSON.SAVE')      
      CFILE = FIX_PATH(!S.DIR_DATASETS + 'PP-SEAWIFS-AVHRR-9/GEQ/STATS/PPD-VGPM2/ANNUAL_1998_2007-SEA_AV4-9-GEQ-PPD-VGPM2-MEAN.SAVE') ;CFILE = FIX_PATH(!S.DIR_DATASETS + 'OC-SEAWIFS-9/GEQ/STATS/CHLOR_A-OC/ANNUAL_1998_2007-SEAWIFS-R2010-9-GEQ-CHLOR_A-OC4-MEAN.SAVE')
      SFILE = FIX_PATH(!S.DIR_DATASETS + 'SST-AVHRR-4/GEQ/STATS/SST/ANNUAL_1982_2010-AVHRR-4-GEQ-SST-MEAN.SAVE')
      BFILE = FIX_PATH(DIR_PROJECTS + 'BIODIVERSITY/Global_patterns_predictors_marine_biodiversity_across_taxa.csv')
      
      MAP   = 'ROBINSON'
      MI = MAPS_SIZE(MAP)
      M=STRUCT_SD_REMAP(FILES=[CFILE,SFILE],DIR_OUT=DIR_DATA,MAP_OUT=MAP,OVERWRITE=OVERWRITE,PX_OUT=MI.PX, PY_OUT=MI.PY) 
      CFILE = FIX_PATH(DIR_DATA+'ANNUAL_1998_2007-SEA_AV4-9-ROBINSON-PPD-VGPM2-MEAN.SAVE')
      SFILE = FIX_PATH(DIR_DATA+'ANNUAL_1982_2010-AVHRR-4-ROBINSON-SST-MEAN.SAVE')
      
      PAL = 'PAL_SW3'
      RGB = CPAL_READ(PAL,PALLIST=PALLIST)
      BACKGROUND  = 252
      MISS_COLOR  = 254
      OCEAN_COLOR = 255
      LAND_COLOR  = 252
      NO_LAKES    = 1
      
      IF GET_MTIME(COMPFILE) GT MAX(GET_MTIME([PFILE,CFILE,SFILE,BFILE])) AND NOT KEYWORD_SET(OVERWRITE) THEN GOTO, SKIP_COMP1
      
      XDIM = 340
      YDIM = 20
      
      PPOS = [0,  531,682, 872] & PXPOS = 171 & PYPOS = 500     
      CPOS = [682,531,1365,872] & CXPOS = 853 & CYPOS = 500
      SPOS = [0,  100,682, 441] & SXPOS = 171 & SYPOS = 60
      BPOS = [682,100,1365,441] & BXPOS = 853 & BYPOS = 60
      
      PTITLE = 'Normalized Population Density'
      CTITLE = 'Primary Production ' + UNITS('PPD',/NO_NAME)
      STITLE = 'Sea Surface Temperature ' + UNITS('SST',/NO_NAME)
      BTITLE = 'Species Richness'
    
      W = WINDOW(DIMENSIONS=[1365,882],BACKGROUND_COLOR=PALLIST(BACKGROUND),BUFFER=BUFFER)
      
; ***** Population PNG *****
      IF KEYWORD_SET(NO_LAKES) THEN MASK = READ_LANDMASK(!S.DIR_IMAGES + 'MASK_LAND-ROBINSON-PXY_4096_2048-NOLAKES.PNG',/STRUCT) $
                               ELSE MASK = READ_LANDMASK(MAP=MAP,PX=MI.PX,PY=MI.PY,/STRUCT)
      IMG             = MASK.LANDMASK
      IMG(*)          = BACKGROUND
      IMG(MASK.OCEAN) = OCEAN_COLOR
      IMG(MASK.LAND)  = LAND_COLOR
                          
      PDATA = IDL_RESTORE(PFILE)
      OK = WHERE(PDATA.DATA GT 0)
      PDATA = PDATA[OK]
      PDATA.COLOR = SD_SCALES(PDATA.DATA,PROD='NUM',/DATA2BIN,SPECIAL_SCALE='0_1')
      BB = WHERE_SETS(PDATA.COLOR)    
      PIMAGE = IMAGE(IMG,RGB_TABLE=RGB,BACKGROUND_COLOR=PALLIST(BACKGROUND),POSITION=PPOS,/CURRENT,/DEVICE,MARGIN=0,BUFFER=BUFFER)
      FOR N=0,N_ELEMENTS(BB)-1 DO BEGIN
        IF BB(N).N LE 1 THEN CONTINUE
        SUBS = WHERE_SETS_SUBS(BB(N))
        COLOR = RGB(*,BB(N).VALUE)
        PRINT, 'Plotting ' + NUM2STR(N_ELEMENTS(SUBS)) + ' points ('+ NUM2STR(FLOAT(N_ELEMENTS(SUBS))/FLOAT(N_ELEMENTS(PDATA))*100,DECIMALS=2) +'%)- set ' + NUM2STR(N+1) + ' of ' + NUM2STR(N_ELEMENTS(BB)) + ' (' + NUM2STR((FLOAT(N+1)/FLOAT(N_ELEMENTS(BB))*100),DECIMALS=2) + '%)'
        P = PLOT(PDATA(SUBS).X,PDATA(SUBS).Y,/CURRENT,/DEVICE,AXIS_STYLE=0,MARGIN=0,LINESTYLE=6,SYMBOL='DOT',/SYM_FILLED,SYM_COLOR=COLOR,SYM_SIZE=4,/OVERPLOT,BUFFER=BUFFER)      
      ENDFOR  
      GONE, PDATA
      PBAR = COLOR_BAR_SCALE_NG(PROD='NUM',SPECIAL_SCALE='0_1',TITLE=PTITLE,PX=PXPOS,PY=PYPOS,CHARSIZE=13,BACKGROUND=BACKGROUND,XDIM=XDIM,YDIM=YDIM,PAL=PAL,LAYOUT=LAYOUT,HORIZONTAL=1,BOTTOM=1,FONT='HELVETICA',/CURRENT,/DEVICE)
      PT   = TEXT(20, 830,'A',FONT_SIZE=30,FONT_COLOR='BLACK',FONT_STYLE=1,FONT_NAME='HELVETICA',/DEVICE)
      ST   = TEXT(20, 389,'B',FONT_SIZE=30,FONT_COLOR='BLACK',FONT_STYLE=1,FONT_NAME='HELVETICA',/DEVICE)
      CT   = TEXT(695,830,'C',FONT_SIZE=30,FONT_COLOR='BLACK',FONT_STYLE=1,FONT_NAME='HELVETICA',/DEVICE)
      BT   = TEXT(695,389,'D',FONT_SIZE=30,FONT_COLOR='BLACK',FONT_STYLE=1,FONT_NAME='HELVETICA',/DEVICE)

; ***** PPD PNG *****
      CDATA  = STRUCT_SD_READ(CFILE,STRUCT=CSTRUCT)  
      GONE, CDATA      
      CIMAGE = STRUCT_SD_2IMAGE_NG(CSTRUCT,BUFFER=BUFFER,MAP_OUT=MAP,PAL=PAL,BACKGROUND=BACKGROUND,/ADD_LAND,NO_LAKES=NO_LAKES,SPECIAL_SCALE=SPECIAL_SCALE,IMG_POSITION=CPOS,MISS_COLOR=MISS_COLOR,LAND_COLOR=LAND_COLOR,/CURRENT,/DEVICE,MARGIN=0)
      CBAR = COLOR_BAR_SCALE_NG(PROD='PPD',SPECIAL_SCALE='',TITLE=CTITLE,PX=CXPOS,PY=CYPOS,CHARSIZE=13,BACKGROUND=BACKGROUND,XDIM=XDIM,YDIM=YDIM,PAL=PAL,LAYOUT=LAYOUT,ORIZONTAL=1,BOTTOM=1,FONT='HELVETICA',/CURRENT)   
;           
; ***** SST PNG *****
      LATS   = [-66.5,-23.5,23.5,66.5] & LONS = []       
      SDATA  = STRUCT_SD_READ(SFILE,STRUCT=SSTRUCT)  
      GONE, SDATA
      SIMAGE = STRUCT_SD_2IMAGE_NG(SSTRUCT,BUFFER=BUFFER,MAP_OUT=MAP,PAL=PAL,BACKGROUND=BACKGROUND,/ADD_LAND,NO_LAKES=NO_LAKES,SPECIAL_SCALE=SPECIAL_SCALE,IMG_POSITION=SPOS,MISS_COLOR=MISS_COLOR,LAND_COLOR=LAND_COLOR,/CURRENT,/DEVICE,MARGIN=0,$
               /ADD_LONLAT_LINES,ADD_LONLAT_NAMES=0,LONLAT_THICK=7,LONLAT_COLOR=225,LATS=LATS,LONS=LONS)
      SBAR = COLOR_BAR_SCALE_NG(PROD='SST',SPECIAL_SCALE='',TITLE=STITLE,PX=SXPOS,PY=SYPOS,CHARSIZE=13,BACKGROUND=BACKGROUND,XDIM=XDIM,YDIM=YDIM,PAL=PAL,LAYOUT=LAYOUT,ORIZONTAL=1,BOTTOM=1,FONT='HELVETICA',/CURRENT)            
      
; ***** Biodiversity PNG *****
      BDATA  = READALL(BFILE)    
      LDATA = REFORM(FLOAT(BDATA.ALLTAXA),45,18) & OK = WHERE(LDATA EQ 0.0) & LDATA[OK] = MISSINGS(LDATA) 
      LATS = REFORM(FLOAT(BDATA.LAT),45,18)
      LONS = REFORM(FLOAT(BDATA.LON),45,18)
      
      S = SCALE([0,1], [0,3500],INTERCEPT=INTERCEPT,SLOPE=SLOPE) & NDATA = (LDATA-INTERCEPT)/SLOPE      
      BIMG = MAP_REMAP(NDATA,CONTROL_LONS=LONS,CONTROL_LATS=LATS,MAP_IN='LONLAT',/CENTER_PIXEL,/REFRESH,MAP_OUT=MAP,PX_OUT=MI.PX,PY_OUT=MI.PY)
      BSTRUCT=STRUCT_SD_MAKE(BIMG, FILE_NAME='', MAP=MAP,PROD='LNUM', AMATH='', ASTAT='MEAN', $
             MISSING_CODE=MISSINGS(BIMG), SCALING='LINEAR', INTERCEPT=0.0,  SLOPE=1.0, DATA_UNITS=UNITS('LNUM'),INFILE=BFILE, NOTES=NOTES,ERROR=ERROR, HELP=HELP, _EXTRA=_extra)      
      BIMAGE = STRUCT_SD_2IMAGE_NG(BSTRUCT.(0),BUFFER=BUFFER,MAP_OUT=MAP,PAL=PAL,BACKGROUND=BACKGROUND,/ADD_LAND,NO_LAKES=NO_LAKES,SPECIAL_SCALE='0.01_1',IMG_POSITION=BPOS,MISS_COLOR=MISS_COLOR,LAND_COLOR=LAND_COLOR,/CURRENT,/DEVICE,MARGIN=0)
      BAR = COLOR_BAR_SCALE_NG(PROD='LNUM',SPECIAL_SCALE='0.01_1',TITLE=BTITLE,PX=BXPOS,PY=BYPOS,CHARSIZE=13,BACKGROUND=BACKGROUND,XDIM=XDIM,YDIM=YDIM,PAL=PAL,LAYOUT=LAYOUT,ORIZONTAL=1,BOTTOM=1,FONT='HELVETICA',/CURRENT)     
      
      W.SAVE, COMPFILE, RESOLUTION=600
      W.CLOSE           
    
    ENDIF
    SKIP_COMP1:

    IF DO_COMP2 GE 1 THEN BEGIN
      COMPFILE = DIR_COMPS+'GLOBAL_COMOSITES-IMPACT_SSTDIF_PHDIF_SLDIF-2_2.PNG'
      IFILE = DIR_PROJECTS + 'HUMANIMPACTS/impact_v2.tif' 
      TFILE = DIR_PROJECTS + 'NETCDF/DELTA_SST.SAVE'
      PFILE = DIR_PROJECTS + 'NETCDF/ANNUAL_2075_2100-pH-DIF.SAVE'
      HFILE = DIR_PROJECTS + 'NETCDF/ANNUAL_2075_2100-SSH-DIF.SAVE'
      IF GET_MTIME(COMPFILE) GT MAX(GET_MTIME([IFILE,TFILE,PFILE,HFILE])) AND NOT KEYWORD_SET(OVERWRITE) THEN GOTO, SKIP_COMP2
      
      MAP   = 'ROBINSON'
      MI = MAPS_SIZE(MAP)
      
      PAL = 'PAL_SW3'
      RGB = CPAL_READ(PAL,PALLIST=PALLIST)
      BACKGROUND  = 252
      MISS_COLOR  = 254
      OCEAN_COLOR = 255
      LAND_COLOR  = 252
      NO_LAKES    = 1
            
      XDIM = 340
      YDIM = 20      
      IPOS = [0,  531,682, 872] & IXPOS = 171 & IYPOS = 500     
      PPOS = [682,531,1365,872] & PXPOS = 853 & PYPOS = 500
      TPOS = [0,  100,682, 441] & TXPOS = 171 & TYPOS = 60
      HPOS = [682,100,1365,441] & HXPOS = 853 & HYPOS = 60
      
      ITITLE = 'Normalized Population Density'
      TTITLE = 'Sea Surface Temperature Difference ' + UNITS('SST',/NO_NAME)
      PTITLE = 'pH Difference '
      HTITLE = 'Sea Surface Height Difference (m)'
      
      TPROD = 'DIF' & TSS = '4'         & TPAL = 'PAL_DIF_BYR';'PAL_ANOM_RWB'
      PPROD = 'NUM' & PSS = '-0.5_-0.2' & PPAL = 'PAL_SW3_REVERSE'
      HPROD = 'DIF' & HSS = '0.2'         & HPAL = 'PAL_DIF_BYR'
    
      W = WINDOW(DIMENSIONS=[1365,882],BACKGROUND_COLOR=PALLIST(BACKGROUND),BUFFER=BUFFER)
      
;      IDATA   = READ_IMAGE(IFILE,r,g,b)
;      RR = REFORM(IDATA[0,*,*]) & RR = ROTATE(RR,7) & IDATA(0,*,*) = RR
;      GG = REFORM(IDATA[1,*,*]) & GG = ROTATE(GG,7) & IDATA(1,*,*) = GG
;      BB = REFORM(IDATA[2,*,*]) & BB = ROTATE(BB,7) & IDATA(2,*,*) = BB
;      GONE,RR
;      GONE,GG
;      GONE,BB
;      ;COLOR = BYTE(RR + 256* (GG + 256 * BB))
;      ;RGB_TABLE=CPAL_READ('PAL_ANOM_RWB')
;      ;iimage = image(COLOR,RGB_TABLE=RGB_TABLE);
;      IIMAGE  = IMAGE(IDATA,POSITION=IPOS,/CURRENT,/DEVICE)
           
      TDATA   = STRUCT_SD_READ(TFILE,STRUCT=TSTRUCT)
      TSTRUCT = STRUCT_SD_REMAP(STRUCT=TSTRUCT,MAP_IN='GEQ',MAP_OUT=MAP,PX_OUT=MI.PX_OUT,PY_OUT=MI.PY_OUT)
      TIMAGE  = STRUCT_SD_2IMAGE_NG(TSTRUCT,PAL=TPAL,USE_PROD=TPROD,SPECIAL_SCALE=TSS,IMG_POSITION=TPOS,BACKGROUND=BACKGROUND,/ADD_LAND,MISS_COLOR=MISS_COLOR,LAND_COLOR=LAND_COLOR,NO_LAKES=NO_LAKES,/CURRENT,/DEVICE,MARGIN=0,BUFFER=BUFFER)
      TBAR    = COLOR_BAR_SCALE_NG(PROD=TPROD,SPECIAL_SCALE=TSS,TITLE=TTITLE,PX=TXPOS,PY=TYPOS,PAL=TPAL,CHARSIZE=13,BACKGROUND=BACKGROUND,XDIM=XDIM,YDIM=YDIM,LAYOUT=LAYOUT,ORIZONTAL=1,BOTTOM=1,FONT='HELVETICA',/CURRENT)            
      
      PDATA   = STRUCT_SD_READ(PFILE,STRUCT=PSTRUCT)
      PSTRUCT = STRUCT_SD_REMAP(STRUCT=PSTRUCT,MAP_IN='GEQ',MAP_OUT=MAP,PX_OUT=MI.PX_OUT,PY_OUT=MI.PY_OUT)
      PIMAGE  = STRUCT_SD_2IMAGE_NG(PSTRUCT,PAL=PPAL,USE_PROD=PPROD,SPECIAL_SCALE=PSS,IMG_POSITION=PPOS,BACKGROUND=BACKGROUND,/ADD_LAND,MISS_COLOR=MISS_COLOR,LAND_COLOR=LAND_COLOR,NO_LAKES=NO_LAKES,/CURRENT,/DEVICE,MARGIN=0,BUFFER=BUFFER)
      PBAR    = COLOR_BAR_SCALE_NG(PROD=PPROD,SPECIAL_SCALE=PSS,TITLE=PTITLE,PX=PXPOS,PY=PYPOS,PAL=PPAL,CHARSIZE=13,BACKGROUND=BACKGROUND,XDIM=XDIM,YDIM=YDIM,LAYOUT=LAYOUT,ORIZONTAL=1,BOTTOM=1,FONT='HELVETICA',/CURRENT)
      
      HDATA   = STRUCT_SD_READ(HFILE,STRUCT=HSTRUCT)      
      HSTRUCT = STRUCT_SD_REMAP(STRUCT=HSTRUCT,MAP_IN='GEQ',MAP_OUT=MAP,PX_OUT=MI.PX_OUT,PY_OUT=MI.PY_OUT)
      HIMAGE  = STRUCT_SD_2IMAGE_NG(HSTRUCT,PAL=HPAL,USE_PROD=HPROD,SPECIAL_SCALE=HSS,IMG_POSITION=HPOS,BACKGROUND=BACKGROUND,/ADD_LAND,MISS_COLOR=MISS_COLOR,LAND_COLOR=LAND_COLOR,NO_LAKES=NO_LAKES,/CURRENT,/DEVICE,MARGIN=0,BUFFER=BUFFER)
      HBAR    = COLOR_BAR_SCALE_NG(PROD=HPROD,SPECIAL_SCALE=HSS,TITLE=HTITLE,PX=HXPOS,PY=HYPOS,PAL=HPAL,CHARSIZE=13,BACKGROUND=BACKGROUND,XDIM=XDIM,YDIM=YDIM,LAYOUT=LAYOUT,ORIZONTAL=1,BOTTOM=1,FONT='HELVETICA',/CURRENT)
      
   
      
      IT   = TEXT(20, 830,'A',FONT_SIZE=30,FONT_COLOR='BLACK',FONT_STYLE=1,FONT_NAME='HELVETICA',/DEVICE)
      PT   = TEXT(20, 389,'B',FONT_SIZE=30,FONT_COLOR='BLACK',FONT_STYLE=1,FONT_NAME='HELVETICA',/DEVICE)
      TT   = TEXT(695,830,'C',FONT_SIZE=30,FONT_COLOR='BLACK',FONT_STYLE=1,FONT_NAME='HELVETICA',/DEVICE)
      HT   = TEXT(695,389,'D',FONT_SIZE=30,FONT_COLOR='BLACK',FONT_STYLE=1,FONT_NAME='HELVETICA',/DEVICE)
      
      W.SAVE, COMPFILE, RESOLUTION=600
      W.CLOSE  
    stop
    ENDIF
    SKIP_COMP2:    

  ENDIF ;DO_GLOBAL_COMPOSITES
  
; ********************************************
  IF DO_LME_SUBAREA_MAP GE 1 THEN BEGIN
; ********************************************
    OVERWRITE = DO_LME_SUBAREA_MAP GE 2
    BUFFER = 0
    DO_PNG = 0
    
    SFILE = !S.DIR_IMAGES + 'MASK_SUBAREA-GEQ-PXY_8640_4320-LME.SAVE'
    PFILE = !S.DIR_IMAGES + 'MASK_SUBAREA-GEQ-PXY_8640_4320-LME.PNG'    
    OFILE = !S.DIR_IMAGES + 'MASK_SUBAREA-GEQ-PXY_8640_4320-FAO_POLYGONS.SAVE'
    BFILE = !S.DIR_IMAGES + 'LME_OFFSHORE-ROBINSON-PXY_4096_2048_OUTLINE_THICK.PNG'
    FFILE = DIR_SUBAREAS  + 'LME_SUBAREAS-ROBINSON.png'
    NFILE = DIR_SUBAREAS  + 'LME_CODES.csv'
    MFILE = DIR_SUBAREAS  + 'FAO_CODES.csv'    
    
    PAL = 'PAL_SW3'          
    RGB = CPAL_READ(PAL,PALLIST=PALLIST)
    LME_COLORS  = ['MEDIUM_BLUE']    
    ATLANTIC    = 'LIGHT_SKY_BLUE'
    PACIFIC     = 'AQUAMARINE'
    BACKGROUND  = 252     
    OCEAN_COLORS = [255]
    OTHER_COLORS = [254]
    
    COLOR_TAGS  = TAG_NAMES(!COLOR)      
    RGB_TABLE = CPAL_READ('PAL_SW3',PALLIST=PALLIST)
    RR = RGB_TABLE(0,*)
    GG = RGB_TABLE(1,*)
    BB = RGB_TABLE(2,*)

      IF DO_PNG EQ 1 THEN BEGIN
      ZWIN, IMG
        MAP_GEQ
        LL = MAPS_2LONLAT('GEQ',PX=8640,PY=4320)
      ZWIN
      MASK_NORTH  = WHERE(LL.LAT GT 60.0)
      MASK_PAC    = WHERE(LL.LAT GT 40 AND (LL.LON GE 100 OR LL.LON LE -90))
      MASK_SOUTH  = WHERE(LL.LAT LT -40.)
      MASK_ARCTIC = WHERE(LL.LAT GT 80.0)
      GONE, LL
      
      LMES = STRUCT_SD_READ(SFILE,STRUCT=STRUCT,PROD='SUBAREA',/NO_MASK)
      FAOS = STRUCT_SD_READ(OFILE,STRUCT=OSTRUCT,PROD='SUBAREA',/NO_MASK)
      MASK = READ_LANDMASK(MAP='GEQ',PX=8640,PY=4320,/STRUCT)
      CODES = READALL(NFILE)
      FCODES  = READALL(MFILE)
      LINES = READ_PNG(BFILE)
      OK_LINES = WHERE(LINES EQ 20B)
    ENDIF  
        
    FOR O=0, N_ELEMENTS(OCEAN_COLORS)-1 DO BEGIN
      IF OCEAN_COLORS(O) EQ 255 THEN OCEAN = 'WHITE' ELSE OCEAN = 'GREY'
      IF OTHER_COLORS(O) EQ 255 THEN OTHER = 'WHITE' ELSE OTHER = 'GREY'
    
      FOR C=0, N_ELEMENTS(LME_COLORS)-1 DO BEGIN
        ACOLOR = LME_COLORS(C)
        PNGFILE  = DIR_SUBAREAS + 'LME_SUBSET-ROBINSON-'+OCEAN+'_'+OTHER+'_'+ACOLOR+'-ARCTIC.png'
        COMPFILE = DIR_COMPS    + 'LME_COMPOSITE-ROBINSON.png'
        IF FILE_TEST(PNGFILE)  AND NOT KEYWORD_SET(OVERWRITE) THEN GOTO, SKIP_PNG
        IF FILE_TEST(COMPFILE) AND NOT KEYWORD_SET(OVERWRITE) THEN CONTINUE
        
        OKC = WHERE(COLOR_TAGS EQ ACOLOR)
        OKA = WHERE(COLOR_TAGS EQ ATLANTIC)
        OKP = WHERE(COLOR_TAGS EQ PACIFIC)
        RGB = !COLOR.(OKC)
        RR[1] = RGB[0]
        GG[1] = RGB[1]
        BB[1] = RGB(2)
        RGB = !COLOR.(OKA)
        RR(2) = RGB[0]
        GG(2) = RGB[1]
        BB(2) = RGB(2)
        RGB = !COLOR.(OKP)
        RR(3) = RGB[0]
        GG(3) = RGB[1]
        BB(3) = RGB(2)
        
        IMG = LMES        
        IMG(MASK.OCEAN) = OCEAN_COLORS(O)                           
        
        OK = WHERE(FCODES.MASK EQ 'A',COUNT)
        AFCODES = FCODES[OK]
        FOR N=0, COUNT-1 DO BEGIN
          ACODE = AFCODES(N).SUBAREA_CODE
          OKS = WHERE(FAOS EQ ACODE)
          IMG(OKS) = 2
        ENDFOR
                
        OK = WHERE(FCODES.MASK EQ 'P',COUNT)
        PFCODES = FCODES[OK]
        FOR N=0, COUNT-1 DO BEGIN
          ACODE = PFCODES(N).SUBAREA_CODE
          OKS = WHERE(FAOS EQ ACODE)
          IMG(OKS) = 3
        ENDFOR
         
        IMG(MASK_SOUTH)  = OCEAN_COLORS(O)
        IMG(MASK_NORTH)  = OCEAN_COLORS(O)
        IMG(MASK_PAC)    = OCEAN_COLORS(O)        
        IMG(MASK_ARCTIC) = 1      
        
        OK = WHERE(LMES GT 0)
        IMG[OK] = OTHER_COLORS(O)
        IMG(MASK.LAND) = 252
        
        OK = WHERE(CODES.MASK EQ 'X',COUNT)
        CODES = CODES[OK]
        FOR N=0, COUNT-1 DO BEGIN
          ACODE = CODES(N).CODE
          OKS = WHERE(LMES EQ ACODE)
          IMG(OKS) = 1
        ENDFOR
        RIMG = MAP_REMAP(IMG,MAP_IN='GEQ',MAP_OUT='ROBINSON',PX_OUT=4096,PY_OUT=2048) 
        RIMG(OK_LINES) = 0
        WRITE_PNG,PNGFILE,RIMG,RR,GG,BB
        
        SKIP_PNG:
        BUFFER=1
        W = WINDOW(DIMENSIONS=[768,896],BACKGROUND_COLOR=PALLIST(BACKGROUND),BUFFER=BUFFER)
        FPNG = READ_PNG(FFILE,  RF,GF,BF)
        LPNG = READ_PNG(PNGFILE,RL,GL,BL)
        RGB = BYTARR(3,256)
        RGB(0,*) = RL
        RGB(1,*) = GL
        RGB(2,*) = BL
        IM1 = IMAGE(FPNG,POSITION=[0,448,768,896],/CURRENT,/DEVICE,MARGIN=0,BUFFER=BUFFER)
        IM2 = IMAGE(LPNG,RGB_TABLE=RGB,POSITION=[0,0,768,512],/CURRENT,/DEVICE,MARGIN=0,BUFFER=BUFFER)
        T1 = TEXT(50,830,'A',FONT_SIZE=24,FONT_COLOR='BLACK',FONT_STYLE=1,FONT_NAME='HELVETICA',/DEVICE)
        T1 = TEXT(50,410,'B',FONT_SIZE=24,FONT_COLOR='BLACK',FONT_STYLE=1,FONT_NAME='HELVETICA',/DEVICE)
        GONE, FPNG
        GONE, LPNG
        W.SAVE,COMPFILE,RESOLUTION=600
        W.CLOSE
        STOP
      ENDFOR
    ENDFOR  
    
    
    STOP
  
  ENDIF ; DO_LME_SUBAREA_MAP
; ********************************************
  IF DO_LME_TIMESERIES GE 1 THEN BEGIN
; ********************************************
    BUFFER = 0
    DIMENSIONS=[1024,256]
    CDATA = IDL_RESTORE(!S.DIR_DATASETS + 'OC-SEAWIFS-9\L3B\TS_SUBAREAS\MULTI_PERIODS-A_ANNUAL_M_MONTH_W_WEEK-MASK_SUBAREA-GEQ-PXY_8640_4320-LME-SEAWIFS-R2010-A_CDOM_443.SAVE')
    PDATA = IDL_RESTORE(!S.DIR_DATASETS + 'PP-SA-N4AT-9_4\L3B\TS_SUBAREAS\M-MASK_SUBAREA-L3B-PXY_1_5940423-LME-SA_N4AT-9_4-PPD-VGPM2.SAVE')
    
    PDATA.PERIOD = STRMID(PDATA.PERIOD,1)
        
    CPROD = 'MEAN_CHLOR_A_PAN'
    PPROD = 'MEAN_PPD_VGPM2'
    
    CTAGS = TAG_NAMES(CDATA) & CPOS = WHERE(CTAGS EQ CPROD) 
    PTAGS = TAG_NAMES(PDATA) & PPOS = WHERE(PTAGS EQ PPROD)
    
    CTITLE = UNITS('CHLOROPHYLL')
    PTITLE = UNITS('PRIMARY_PRODUCTION')
    
    CRANGE = [0,2]
    PRANGE = [0,2]
    
    CCOLOR = 'NAVY'
    PCOLOR = 'ORANGE_RED'    
    
    PERIODS = ['A_','MONTH_','M_']
    NUM = [2,6,2]
    FOR PTH =0, N_ELEMENTS(PERIODS)-1 DO BEGIN
      _CDATA = CDATA[WHERE(STRMID(CDATA.PERIOD,0,NUM(PTH)) EQ PERIODS(PTH))]
      _PDATA = PDATA[WHERE(STRMID(PDATA.PERIOD,0,NUM(PTH)) EQ PERIODS(PTH))]
    
      _CDATA = _CDATA[SORT(PERIOD_2JD(_CDATA.PERIOD))]
      _PDATA = _PDATA[SORT(PERIOD_2JD(_PDATA.PERIOD))]
    
      IF PERIODS(PTH)  EQ 'M_' THEN AX = DATE_AXIS(['19970101','20101231'],/MONTH)
      IF PERIODS(PTH)  EQ 'A_' THEN AX = DATE_AXIS(['19980101','20101231'],/YEAR)
      IF PERIODS(PTH)  EQ 'MONTH_' THEN AX = DATE_AXIS(['20200101','20201231'],/FYEAR)
    
      CODES = _PDATA.SUBAREA_CODE
      NAMES = _PDATA.SUBAREA_NAME
      FOR C=0, N_ELEMENTS(CODES)-1 DO BEGIN
        PNGFILE = !S.DIR_PROJECTS + 'ECOAP/GLOBAL_MAPS/LME/'+PERIODS(PTH)+NAMES(C)+'-CHL_PP-MONTHLY_TIMESERIES.png'
        IF FILE_TEST(PNGFILE) EQ 1 AND NOT KEYWORD_SET(OVERWRITE) THEN CONTINUE
        P = PLOT(AX.JD,CRANGE,YTITLE=CTITLE,AXIS_STYLE=1,FONT_SIZE=14,XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,/NODATA,DIMENSIONS=DIMENSIONS,BUFFER=BUFFER)                    
        XTICKV = P.XTICKVALUES & OK = WHERE(JD_2MONTH(XTICKV) EQ '01',COUNT)
        IF PERIODS(PTH) EQ 'M_' THEN FOR G=1,COUNT-1 DO GR = PLOT([XTICKV(OK(G)),XTICKV(OK(G))],AXIS_STYLE=1,CRANGE,COLOR='GREY',/OVERPLOT,XRANGE=AX.JD,YRANGE=CRANGE)
        T = TEXT(0.13,0.92,NAMES(C),COLOR='BLACK',FONT_SIZE=12,/NORMAL,TARGET=P) 
        OK = WHERE(_CDATA.SUBAREA_CODE EQ CODES(C) AND _CDATA.(CPOS) NE MISSINGS(0.0))
        CMEAN = MEAN(_CDATA[OK].(CPOS)) 
        PC = PLOT(PERIOD_2JD(_CDATA[OK].PERIOD),_CDATA[OK].(CPOS),AXIS_STYLE=1,XRANGE=AX.JD,YRANGE=CRANGE,/OVERPLOT,COLOR=CCOLOR,SYMBOL='CIRCLE',SYM_SIZE=0.8, NAME='Chlorophyll',/SYM_FILLED,DIMENSIONS=DIMENSIONS)
   ;     PC = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(_CDATA[OK].PERIOD))),SMOOTH(_CDATA[OK].(CPOS),10,/EDGE_WRAP),XRANGE=AX.JD,YRANGE=CRANGE,THICK=2,/OVERPLOT,COLOR='RED',DIMENSIONS=DIMENSIONS)
        OK = WHERE(_PDATA.SUBAREA_CODE EQ CODES(C) AND _PDATA.(PPOS) NE MISSINGS(0.0)) 
        PMEAN = MEAN(_PDATA[OK].(PPOS))    
        PP = PLOT(PERIOD_2JD(_PDATA[OK].PERIOD),_PDATA[OK].(PPOS),                      XRANGE=AX.JD,YRANGE=PRANGE,XMINOR=0,/CURRENT,COLOR=PCOLOR,SYMBOL='CIRCLE',SYM_SIZE=0.8, NAME='Production',/SYM_FILLED,AXIS_STYLE=0,XSTYLE=1,DIMENSIONS=DIMENSIONS)
   ;     PP = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(_PDATA[OK].PERIOD))),SMOOTH(_PDATA[OK].(PPOS),10,/EDGE_WRAP),XRANGE=AX.JD,YRANGE=PRANGE,THICK=2,XMINOR=0,/CURRENT,COLOR='BLUE',AXIS_STYLE=0,XSTYLE=1,DIMENSIONS=DIMENSIONS)
        A1 = AXIS('X',TARGET=P, LOCATION=[MIN(AX.JD),MAX(CRANGE),0],TICKDIR=1,MAJOR=AX.TICKS,TICKVALUE=AX.TICKV,TICKNAME=REPLICATE('',N_ELEMENTS(AX.TICKNAME)),MINOR=0)
        A2 = AXIS('Y',TARGET=PP,LOCATION=[MAX(AX.JD),0,0],TEXTPOS=1,TICKDIR=1,TITLE=PTITLE,FONT_SIZE=14);,TICKVALUES=PTICKS)
        T1 = TEXT(0.64,0.80,UNITS('CHLOROPHYLL',/NO_UNIT)+'(Mean = '+NUM2STR(CMEAN,DECIMALS=2)+')',       COLOR=CCOLOR,FONT_SIZE=12,/NORMAL,TARGET=P)                         
        T2 = TEXT(0.64,0.74,UNITS('PRIMARY_PRODUCTION',/NO_UNIT)+'(Mean = '+NUM2STR(PMEAN,DECIMALS=2)+')',COLOR=PCOLOR,FONT_SIZE=12,/NORMAL,TARGET=P)
        PRINT, 'Writing ' + PNGFILE
        P.SAVE,PNGFILE,RESOLUTION=300
        P.CLOSE  
      ENDFOR
    ENDFOR    
  ENDIF
  
; ********************************************
  IF DO_EC_WC_STATS GE 1 THEN BEGIN
; ********************************************
    BUFFER = 0    
    PRODS = ['CHLOR_A-OC','PPD-VGPM2']
    PX = 1366 & NPX = 1366 & KPX = 1024
    PY = 2048 & NPY = 1366 & KPY = 1024
    
    WB = STRUCT_SD_READ(FIX_PATH(!S.DIR_BATHY + 'SRTM30PLUS-WC_ECO-PXY_'  +NUM2STR(PX) +'_'+NUM2STR(PY) +'-BATHY-SMOOTH_5.SAVE'),STRUCT=WBSTRUCT) & WSUBS = WHERE(WB GT 0.0 AND WB LT 200.0)
    EB = STRUCT_SD_READ(FIX_PATH(!S.DIR_BATHY + 'SRTM30PLUS-EC_ECO-PXY_'  +NUM2STR(PX) +'_'+NUM2STR(PY) +'-BATHY-SMOOTH_5.SAVE'),STRUCT=EBSTRUCT) & ESUBS = WHERE(EB GT 0.0 AND EB LT 200.0)
    NB = STRUCT_SD_READ(FIX_PATH(!S.DIR_BATHY + 'SRTM30PLUS-NEC2_ECO-PXY_'+NUM2STR(NPX)+'_'+NUM2STR(NPY)+'-BATHY-SMOOTH_5.SAVE'),STRUCT=NBSTRUCT) & NSUBS = WHERE(NB GT 0.0 AND NB LT 200.0)
    KB = STRUCT_SD_READ(FIX_PATH(!S.DIR_BATHY + 'SRTM30PLUS-KOREA-PXY_'   +NUM2STR(NPX)+'_'+NUM2STR(NPY)+'-BATHY-SMOOTH_5.SAVE'),STRUCT=KBSTRUCT) & KSUBS = WHERE(KB GT 0.0 AND KB LT 200.0)
    
    FOR P=0, N_ELEMENTS(PRODS)-1 DO BEGIN
      PROD = PRODS(P)
      WSTRUCT = []
      CASE PROD OF 
        'CHLOR_A-OC': BEGIN
          CHL     = STRUCT_SD_READ(FIX_PATH(!S.DIR_DATASETS + 'OC-SEA_AQU-9_4\GEQ\STATS\CHLOR_A-OC\ANNUAL_1998_2011-SEA_AQU-9_4-GEQ-CHLOR_A-OC-MEAN.SAVE'),STRUCT=STRUCT)
          WCSTRUCT = STRUCT_SD_REMAP(STRUCT=STRUCT,MAP_OUT='WC_ECO',PX=PX,PY=PY) & WC = WCSTRUCT.IMAGE & WCS = WC(WSUBS)
          CHL     = STRUCT_SD_READ(FIX_PATH(!S.DIR_DATASETS + 'OC-SEA_AQU-9_4\GEQ\STATS\CHLOR_A-OC\ANNUAL_1998_2011-SEA_AQU-9_4-GEQ-CHLOR_A-OC-MEAN.SAVE'),STRUCT=STRUCT)
          ECSTRUCT = STRUCT_SD_REMAP(STRUCT=STRUCT,MAP_OUT='EC_ECO',PX=PX,PY=PY) & EC = ECSTRUCT.IMAGE & ECS = EC(ESUBS)
          CHL     = STRUCT_SD_READ(FIX_PATH(!S.DIR_DATASETS + 'OC-SEA_AQU-9_4\GEQ\STATS\CHLOR_A-OC\ANNUAL_1998_2011-SEA_AQU-9_4-GEQ-CHLOR_A-OC-MEAN.SAVE'),STRUCT=STRUCT)
          NCSTRUCT = STRUCT_SD_REMAP(STRUCT=STRUCT,MAP_OUT='NEC2_ECO',PX=PX,PY=PY) & NC = NCSTRUCT.IMAGE & NCS = NC(NSUBS)
          CHL     = STRUCT_SD_READ(FIX_PATH(!S.DIR_DATASETS + 'OC-SEA_AQU-9_4\GEQ\STATS\CHLOR_A-OC\ANNUAL_1998_2011-SEA_AQU-9_4-GEQ-CHLOR_A-OC-MEAN.SAVE'),STRUCT=STRUCT)
          KCSTRUCT = STRUCT_SD_REMAP(STRUCT=STRUCT,MAP_OUT='KOREA',PX=PX,PY=PY) & KC = KCSTRUCT.IMAGE & KCS = KC(KSUBS)
          WCFULLSTATS = STATS(WC[WHERE(WC NE MISSINGS(WC))],TRANSFORM='ALOG') & WCSUBSTATS = STATS(WCS[WHERE(WCS NE MISSINGS(WCS))],TRANSFORM='ALOG')
          ECFULLSTATS = STATS(EC[WHERE(EC NE MISSINGS(EC))],TRANSFORM='ALOG') & ECSUBSTATS = STATS(ECS[WHERE(ECS NE MISSINGS(ECS))],TRANSFORM='ALOG')
          NCFULLSTATS = STATS(NC[WHERE(NC NE MISSINGS(NC))],TRANSFORM='ALOG') & NCSUBSTATS = STATS(NCS[WHERE(NCS NE MISSINGS(NCS))],TRANSFORM='ALOG')
          KCFULLSTATS = STATS(KC[WHERE(KC NE MISSINGS(KC))],TRANSFORM='ALOG') & KCSUBSTATS = STATS(KCS[WHERE(KCS NE MISSINGS(KCS))],TRANSFORM='ALOG')
        END
        'PPD-VGPM2': BEGIN
          PPD     = STRUCT_SD_READ(FIX_PATH(!S.DIR_DATASETS + 'PP-SA-N4AT-9_4\L3B\STATS\ANNUAL-SA_N4AT-9_4-L3B-PPD-VGPM2-MEAN.SAVE'),STRUCT=STRUCT)
          WPSTRUCT = STRUCT_SD_REMAP(STRUCT=STRUCT,MAP_OUT='WC_ECO',PX=PX,PY=PY) & WP = WPSTRUCT.IMAGE & WPS = WP(WSUBS)
          PPD     = STRUCT_SD_READ(FIX_PATH(!S.DIR_DATASETS + 'PP-SA-N4AT-9_4\L3B\STATS\ANNUAL-SA_N4AT-9_4-L3B-PPD-VGPM2-MEAN.SAVE'),STRUCT=STRUCT)
          EPSTRUCT = STRUCT_SD_REMAP(STRUCT=STRUCT,MAP_OUT='EC_ECO',PX=PX,PY=PY) & EP = EPSTRUCT.IMAGE & EPS = EP(ESUBS)
          PPD     = STRUCT_SD_READ(FIX_PATH(!S.DIR_DATASETS + 'PP-SA-N4AT-9_4\L3B\STATS\ANNUAL-SA_N4AT-9_4-L3B-PPD-VGPM2-MEAN.SAVE'),STRUCT=STRUCT)
          NPSTRUCT = STRUCT_SD_REMAP(STRUCT=STRUCT,MAP_OUT='NEC2_ECO',PX=PX,PY=PY) & NP = NPSTRUCT.IMAGE & NPS = NP(NSUBS)
          PPD     = STRUCT_SD_READ(FIX_PATH(!S.DIR_DATASETS + 'PP-SA-N4AT-9_4\L3B\STATS\ANNUAL-SA_N4AT-9_4-L3B-PPD-VGPM2-MEAN.SAVE'),STRUCT=STRUCT)
          KPSTRUCT = STRUCT_SD_REMAP(STRUCT=STRUCT,MAP_OUT='KOREA',PX=PX,PY=PY) & KP = KPSTRUCT.IMAGE & KPS = KP(KSUBS)
          WPFULLSTATS = STATS(WP[WHERE(WP NE MISSINGS(WP))],TRANSFORM='ALOG') & WPSUBSTATS = STATS(WPS[WHERE(WPS NE MISSINGS(WPS))],TRANSFORM='ALOG')
          EPFULLSTATS = STATS(EP[WHERE(WP NE MISSINGS(EP))],TRANSFORM='ALOG') & EPSUBSTATS = STATS(EPS[WHERE(EPS NE MISSINGS(EPS))],TRANSFORM='ALOG')          
          NPFULLSTATS = STATS(NP[WHERE(NP NE MISSINGS(NP))],TRANSFORM='ALOG') & NPSUBSTATS = STATS(NPS[WHERE(NPS NE MISSINGS(NPS))],TRANSFORM='ALOG')
          KPFULLSTATS = STATS(KP[WHERE(KP NE MISSINGS(KP))],TRANSFORM='ALOG') & KPSUBSTATS = STATS(KPS[WHERE(KPS NE MISSINGS(KPS))],TRANSFORM='ALOG')                
        END
      ENDCASE   
    ENDFOR
STOP      
    ENDIF    
  
    
; ********************************************
  IF DO_REGIONAL_CHL GE 1 THEN BEGIN
; ********************************************
    BUFFER = 0    
    
    PRODS = ['CHLOR_A']
    MAPS = ['AUST','WEURO','NAMER']
    GEQ = FIX_PATH(!S.DIR_DATASETS + 'OC-SEA_AQU-9_4\GEQ\STATS\CHLOR_A-OC\ANNUAL_1998_2011-SEA_AQU-9_4-GEQ-CHLOR_A-OC-MEAN.SAVE')
    DIR_DATA = FIX_PATH(!S.DIR_PROJECTS + 'ECOAP/GLOBAL_MAPS/DATA/')
    FOR MTH=0L, N_ELEMENTS(MAPS)-1 DO M=STRUCT_SD_REMAP(FILES=GEQ,DIR_OUT=DIR_DATA,PX=1280,PY=1280,MAP_OUT=MAPS(MTH),OVERWRITE=OVERWRITE) 
    
    NPX = 1280
    NPY = 1280
    WPX = 1280
    WPY = 1280
    APX = 1280
    APY = 1280
    
    LAND_COLOR=252
    OCEAN_COLOR=254
    BACKGROUND=255
    LABEL_FONT_SIZE=12
    US_LATS = [25,35,45]
    US_LONS = [-120,-105,-90,-75]
    NA_LATS = [5,15,25,35,45,55]
    NA_LONS = [-170,-150,-130,-110,-90,-70,-50]    
    WE_LATS = [30,40,50,60]
    WE_LONS = [-45,-30,-15,0,15,30,45] 
    AU_LATS = [-45,-35,-25,-15,-5]
    AU_LONS = [115,125,135,145,155]    
    NEAR = 0.1
    TXTSIZE = 30

    PAL = 'PAL_SW3'
    SPECIAL_SCALE = 'MEDIUM'
    CBAR_PROD = 'CHLOROPHYLL'
    CBAR_TITLE = UNITS('CHLOROPHYLL')
    
    NA = MAPS_2LONLAT('US_ECO',PX=660,PY=396) & NLATL = WHERE_NEAREST(NA.LAT(0,*), FLOAT(US_LATS),NEAR=NEAR,VALID=VALID) & NA_LATSL = US_LATS(VALID)
                                               NLATR = WHERE_NEAREST(NA.LAT(-1,*),FLOAT(US_LATS),NEAR=NEAR,VALID=VALID) & NA_LATSR = US_LATS(VALID)                                               
                                               NLONU = WHERE_NEAREST(NA.LON(*,-1),FLOAT(US_LONS),NEAR=NEAR,VALID=VALID) & NA_LONSU = US_LONS(VALID)
                                               NLONB = WHERE_NEAREST(NA.LON(*,0), FLOAT(US_LONS),NEAR=NEAR,VALID=VALID) & NA_LONSB = US_LONS(VALID)
    WE = MAPS_2LONLAT('WEURO', PX=300,PY=300) & WLATL = WHERE_NEAREST(WE.LAT(0,*), FLOAT(WE_LATS),NEAR=NEAR,VALID=VALID) & WE_LATSL = WE_LATS(VALID)
                                               WLATR = WHERE_NEAREST(WE.LAT(-1,*),FLOAT(WE_LATS),NEAR=NEAR,VALID=VALID) & WE_LATSR = WE_LATS(VALID)
                                               WLONB = WHERE_NEAREST(WE.LON(*,0), FLOAT(WE_LONS),NEAR=NEAR,VALID=VALID) & WE_LONSB = WE_LONS(VALID)
                                               WLONU = WHERE_NEAREST(WE.LON(*,-1),FLOAT(WE_LONS),NEAR=0.2, VALID=VALID) & WE_LONSU = WE_LONS(VALID)
    AU = MAPS_2LONLAT('AUST',  PX=300,PY=300) & ALATL = WHERE_NEAREST(AU.LAT(0,*), FLOAT(AU_LATS),NEAR=NEAR,VALID=VALID) & AU_LATSL = AU_LATS(VALID)
                                               ALATR = WHERE_NEAREST(AU.LAT(-1,*),FLOAT(AU_LATS),NEAR=NEAR,VALID=VALID) & AU_LATSR = AU_LATS(VALID)    
                                               ALONB = WHERE_NEAREST(AU.LON(*,0), FLOAT(AU_LONS),NEAR=0.2, VALID=VALID) & AU_LONSB = AU_LONS(VALID)
                                               ALONU = WHERE_NEAREST(AU.LON(*,-1),FLOAT(AU_LONS),NEAR=NEAR,VALID=VALID) & AU_LONSU = AU_LONS(VALID)
    

    NCHL = STRUCT_SD_READ(DIR_DATA+'ANNUAL_1998_2011-SEA_AQU-9_4-US_ECO-CHLOR_A-OC-MEAN.SAVE',STRUCT=NSTRUCT)
    WCHL = STRUCT_SD_READ(DIR_DATA+'ANNUAL_1998_2011-SEA_AQU-9_4-WEURO-PXY_1280_1280-CHLOR_A-OC-MEAN.SAVE',STRUCT=WSTRUCT)
    ACHL = STRUCT_SD_READ(DIR_DATA+'ANNUAL_1998_2011-SEA_AQU-9_4-AUST-CHLOR_A-OC-MEAN.SAVE',STRUCT=ASTRUCT)
      
    NPOS = [30,474,690,870]  & TXTXN = 40  & TXTYN = 830  
    WPOS = [390,130,690,430] & TXTXW = 400 & TXTYW = 390 
    APOS = [30,130,330,430]  & TXTXA = 40  & TXTYA = 390
    
    ADD_COAST = 0
    W = WINDOW(DIMENSIONS=[720,900],BUFFER=BUFFER,MARGIN=0)    
    NIMAGE = STRUCT_SD_2IMAGE_NG(NSTRUCT,BUFFER=BUFFER,PAL=PAL,BACKGROUND=BACKGROUND,/ADD_LAND,ADD_COAST=ADD_COAST,SPECIAL_SCALE=SPECIAL_SCALE,IMG_POSITION=NPOS,/CURRENT,/DEVICE,MARGIN=0,$
      /ADD_LONLAT_LINES,ADD_LONLAT_NAMES=1,LONLAT_THICK=1,LONLAT_COLOR=254,LATS=US_LATS,LONS=US_LONS)        
    FOR S=0, N_ELEMENTS(NLATL)-1 DO SNLAT = TEXT(30,NLATL(S)+474,NUM2STR(NA_LATSR(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=1,VERTICAL_ALIGNMENT=0)
    FOR S=0, N_ELEMENTS(NLATR)-1 DO SNLAT = TEXT(690,NLATR(S)+474,NUM2STR(NA_LATSL(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=0,VERTICAL_ALIGNMENT=0)
    FOR S=0, N_ELEMENTS(NLONB)-1 DO SNLON = TEXT(NLONB(S)+30,474,NUM2STR(NA_LONSB(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=0.5,VERTICAL_ALIGNMENT=1)
    FOR S=0, N_ELEMENTS(NLONU)-1 DO SNLON = TEXT(NLONU(S)+30,870,NUM2STR(NA_LONSU(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=0.5,VERTICAL_ALIGNMENT=0)
    TXT = TEXT(TXTXN,TXTYN,'a',FONT_SIZE=TXTSIZE,COLOR='BLACK',/DEVICE)        
    
    WIMAGE = STRUCT_SD_2IMAGE_NG(WSTRUCT,BUFFER=BUFFER,PAL=PAL,BACKGROUND=BACKGROUND,/ADD_LAND,ADD_COAST=ADD_COAST,SPECIAL_SCALE=SPECIAL_SCALE,IMG_POSITION=WPOS,/CURRENT,/DEVICE,MARGIN=0,$
      /ADD_LONLAT_LINES,ADD_LONLAT_NAMES=1,LONLAT_THICK=1,LONLAT_COLOR=254,LATS=WE_LATS,LONS=WE_LONS)            
    FOR S=0, N_ELEMENTS(WLATL)-1 DO SWLAT = TEXT(390,WLATL(S)+130,NUM2STR(WE_LATSR(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=1,VERTICAL_ALIGNMENT=0)
    FOR S=0, N_ELEMENTS(WLATR)-1 DO SWLAT = TEXT(690,WLATR(S)+130,NUM2STR(WE_LATSL(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=0,VERTICAL_ALIGNMENT=0)
    FOR S=0, N_ELEMENTS(WLONB)-1 DO SWLON = TEXT(WLONB(S)+390,130,NUM2STR(WE_LONSB(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=0.5,VERTICAL_ALIGNMENT=1)
    FOR S=0, N_ELEMENTS(WLONU)-1 DO SWLON = TEXT(WLONU(S)+390,430,NUM2STR(WE_LONSU(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=0.5,VERTICAL_ALIGNMENT=0)
    TXT = TEXT(TXTXW,TXTYW,'c',FONT_SIZE=TXTSIZE,COLOR='BLACK',/DEVICE)        
     
    AIMAGE = STRUCT_SD_2IMAGE_NG(ASTRUCT,BUFFER=BUFFER,PAL=PAL,BACKGROUND=BACKGROUND,/ADD_LAND,ADD_COAST=ADD_COAST,SPECIAL_SCALE=SPECIAL_SCALE,IMG_POSITION=APOS,/CURRENT,/DEVICE,MARGIN=0,$
      /ADD_LONLAT_LINES,ADD_LONLAT_NAMES=1,LONLAT_THICK=1,LONLAT_COLOR=254,LATS=AU_LATS,LONS=AU_LONS)            
    FOR S=0, N_ELEMENTS(ALATL)-1 DO SALAT = TEXT(30, ALATL(S)+130,NUM2STR(AU_LATSR(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=1,VERTICAL_ALIGNMENT=0)
    FOR S=0, N_ELEMENTS(ALATR)-1 DO SALAT = TEXT(330,ALATR(S)+130,NUM2STR(AU_LATSL(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=0,VERTICAL_ALIGNMENT=0)
    FOR S=0, N_ELEMENTS(ALONB)-1 DO SALON = TEXT(ALONB(S)+30, 130,NUM2STR(AU_LONSB(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=0.5,VERTICAL_ALIGNMENT=1)
    FOR S=0, N_ELEMENTS(ALONU)-1 DO SALON = TEXT(ALONU(S)+30, 430,NUM2STR(AU_LONSU(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=0.5,VERTICAL_ALIGNMENT=0)
    TXT = TEXT(TXTXA,TXTYA,'b',FONT_SIZE=TXTSIZE,COLOR='BLACK',/DEVICE)              
   
    BAR = COLOR_BAR_SCALE_NG(PROD=CBAR_PROD,SPECIAL_SCALE=SPECIAL_SCALE,PX=30,PY=70,CHARSIZE=13,BACKGROUND=BACKGROUND,XDIM=660,YDIM=30,PAL=PAL,LAYOUT=LAYOUT,$
         NO_NAME=no_name,NO_UNIT=no_unit,TITLE=CBAR_TITLE,VERTICAL=VERTICAL,HORIZONTAL=HORIZONTAL,BOTTOM=1,TOP=TOP,LEFT=LEFT,RIGHT=RIGHT,FONT='HELVETICA')
    W.SAVE,DIR_COMPS + 'CHLOR_A-W_EUROPE-US_ECO-AUST-V1.png',RESOLUTION=300
    W.CLOSE
  
    NA = MAPS_2LONLAT('NAMER', PX=630,PY=630) & NLATL = WHERE_NEAREST(NA.LAT(90,*), FLOAT(NA_LATS),NEAR=NEAR,VALID=VALID) & NA_LATSL = NA_LATS(VALID)
                                               NLATR = WHERE_NEAREST(NA.LAT(-1,*),FLOAT(NA_LATS),NEAR=NEAR,VALID=VALID) & NA_LATSR = NA_LATS(VALID)                                               
                                               NLONU = WHERE_NEAREST(NA.LON(*,-1),FLOAT(NA_LONS),NEAR=0.2, VALID=VALID) & NA_LONSU = NA_LONS(VALID)
                                               NLONB = WHERE_NEAREST(NA.LON(*,0), FLOAT(NA_LONS),NEAR=NEAR,VALID=VALID) & NA_LONSB = NA_LONS(VALID)
    WE = MAPS_2LONLAT('WEURO', PX=300,PY=300) & WLATL = WHERE_NEAREST(WE.LAT(0,*), FLOAT(WE_LATS),NEAR=NEAR,VALID=VALID) & WE_LATSL = WE_LATS(VALID)
                                               WLATR = WHERE_NEAREST(WE.LAT(-1,*),FLOAT(WE_LATS),NEAR=NEAR,VALID=VALID) & WE_LATSR = WE_LATS(VALID)
                                               WLONB = WHERE_NEAREST(WE.LON(*,0), FLOAT(WE_LONS),NEAR=NEAR,VALID=VALID) & WE_LONSB = WE_LONS(VALID)
                                               WLONU = WHERE_NEAREST(WE.LON(*,-1),FLOAT(WE_LONS),NEAR=0.2, VALID=VALID) & WE_LONSU = WE_LONS(VALID)
    AU = MAPS_2LONLAT('AUST',  PX=300,PY=300) & ALATL = WHERE_NEAREST(AU.LAT(0,*), FLOAT(AU_LATS),NEAR=NEAR,VALID=VALID) & AU_LATSL = AU_LATS(VALID)
                                               ALATR = WHERE_NEAREST(AU.LAT(-1,*),FLOAT(AU_LATS),NEAR=NEAR,VALID=VALID) & AU_LATSR = AU_LATS(VALID)    
                                               ALONB = WHERE_NEAREST(AU.LON(*,0), FLOAT(AU_LONS),NEAR=NEAR,VALID=VALID) & AU_LONSB = AU_LONS(VALID)
                                               ALONU = WHERE_NEAREST(AU.LON(*,-1),FLOAT(AU_LONS),NEAR=NEAR,VALID=VALID) & AU_LONSU = AU_LONS(VALID)
        
    NCHL = STRUCT_SD_READ(DIR_DATA+'ANNUAL_1998_2011-SEA_AQU-9_4-NAMER-CHLOR_A-OC-MEAN.SAVE',STRUCT=NSTRUCT)
    WCHL = STRUCT_SD_READ(DIR_DATA+'ANNUAL_1998_2011-SEA_AQU-9_4-WEURO-PXY_1280_1280-CHLOR_A-OC-MEAN.SAVE',STRUCT=WSTRUCT)
    ACHL = STRUCT_SD_READ(DIR_DATA+'ANNUAL_1998_2011-SEA_AQU-9_4-AUST-CHLOR_A-OC-MEAN.SAVE',STRUCT=ASTRUCT)
      
    NPOS = [300,130,930,760] & TXTXN = 400 & TXTYN = 725  
    WPOS = [30,460,330,760]  & TXTXW = 40  & TXTYW = 725 
    APOS = [30,130,330,430]  & TXTXA = 40  & TXTYA = 395
    
    MASK = BYTARR(90,630) & MASK(*) = 255
    
    ADD_COAST = 0
    W = WINDOW(DIMENSIONS=[960,790],BUFFER=BUFFER,MARGIN=0)    
    NIMAGE = STRUCT_SD_2IMAGE_NG(NSTRUCT,BUFFER=BUFFER,PAL=PAL,BACKGROUND=BACKGROUND,/ADD_LAND,ADD_COAST=ADD_COAST,SPECIAL_SCALE=SPECIAL_SCALE,IMG_POSITION=NPOS,/CURRENT,/DEVICE,MARGIN=0,$
      /ADD_LONLAT_LINES,ADD_LONLAT_NAMES=1,LONLAT_THICK=1,LONLAT_COLOR=254,LATS=NA_LATS,LONS=[NA_LONS,180])    
    BLANK = IMAGE(MASK,POSITION=[300,130,390,760],/CURRENT,/DEVICE,MARGIN=0,RGB_TABLE=CPAL_READ('PAL_SW3'))
    FOR S=0, N_ELEMENTS(NLATL)-1 DO SNLAT = TEXT(390,NLATL(S)+130,NUM2STR(NA_LATSR(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=1,VERTICAL_ALIGNMENT=0)
    FOR S=0, N_ELEMENTS(NLATR)-1 DO SNLAT = TEXT(930,NLATR(S)+130,NUM2STR(NA_LATSL(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=0,VERTICAL_ALIGNMENT=0)
    FOR S=0, N_ELEMENTS(NLONB)-1 DO SNLON = TEXT(NLONB(S)+300,130,NUM2STR(NA_LONSB(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=0.5,VERTICAL_ALIGNMENT=1)
    FOR S=0, N_ELEMENTS(NLONU)-1 DO SNLON = TEXT(NLONU(S)+300,760,NUM2STR(NA_LONSU(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=0.5,VERTICAL_ALIGNMENT=0)
    TXT = TEXT(TXTXN,TXTYN,'c',FONT_SIZE=TXTSIZE,COLOR='BLACK',/DEVICE)        
    
    WIMAGE = STRUCT_SD_2IMAGE_NG(WSTRUCT,BUFFER=BUFFER,PAL=PAL,BACKGROUND=BACKGROUND,/ADD_LAND,ADD_COAST=ADD_COAST,SPECIAL_SCALE=SPECIAL_SCALE,IMG_POSITION=WPOS,/CURRENT,/DEVICE,MARGIN=0,$
      /ADD_LONLAT_LINES,ADD_LONLAT_NAMES=1,LONLAT_THICK=1,LONLAT_COLOR=254,LATS=WE_LATS,LONS=WE_LONS)            
    FOR S=0, N_ELEMENTS(WLATL)-1 DO SWLAT = TEXT(30, WLATL(S)+460,NUM2STR(WE_LATSR(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=1,VERTICAL_ALIGNMENT=0)
    FOR S=0, N_ELEMENTS(WLATR)-1 DO SWLAT = TEXT(330,WLATR(S)+460,NUM2STR(WE_LATSL(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=0,VERTICAL_ALIGNMENT=0)
    FOR S=0, N_ELEMENTS(WLONB)-1 DO SWLON = TEXT(WLONB(S)+30, 460,NUM2STR(WE_LONSB(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=0.5,VERTICAL_ALIGNMENT=1)
    FOR S=0, N_ELEMENTS(WLONU)-1 DO SWLON = TEXT(WLONU(S)+30, 760,NUM2STR(WE_LONSU(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=0.5,VERTICAL_ALIGNMENT=0)
    TXT = TEXT(TXTXW,TXTYW,'a',FONT_SIZE=TXTSIZE,COLOR='BLACK',/DEVICE)        
     
    AIMAGE = STRUCT_SD_2IMAGE_NG(ASTRUCT,BUFFER=BUFFER,PAL=PAL,BACKGROUND=BACKGROUND,/ADD_LAND,ADD_COAST=ADD_COAST,SPECIAL_SCALE=SPECIAL_SCALE,IMG_POSITION=APOS,/CURRENT,/DEVICE,MARGIN=0,$
      /ADD_LONLAT_LINES,ADD_LONLAT_NAMES=1,LONLAT_THICK=1,LONLAT_COLOR=254,LATS=AU_LATS,LONS=AU_LONS)            
    FOR S=0, N_ELEMENTS(ALATL)-1 DO SALAT = TEXT(30, ALATL(S)+130,NUM2STR(AU_LATSR(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=1,VERTICAL_ALIGNMENT=0)
    FOR S=0, N_ELEMENTS(ALATR)-1 DO SALAT = TEXT(330,ALATR(S)+130,NUM2STR(AU_LATSL(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=0,VERTICAL_ALIGNMENT=0)
    FOR S=0, N_ELEMENTS(ALONB)-1 DO SALON = TEXT(ALONB(S)+30, 130,NUM2STR(AU_LONSB(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=0.5,VERTICAL_ALIGNMENT=1)
    FOR S=0, N_ELEMENTS(ALONU)-1 DO SALON = TEXT(ALONU(S)+30, 430,NUM2STR(AU_LONSU(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=0.5,VERTICAL_ALIGNMENT=0)
    TXT = TEXT(TXTXA,TXTYA,'b',FONT_SIZE=TXTSIZE,COLOR='BLACK',/DEVICE)              
   
    BAR = COLOR_BAR_SCALE_NG(PROD=CBAR_PROD,SPECIAL_SCALE=SPECIAL_SCALE,PX=30,PY=70,CHARSIZE=13,BACKGROUND=BACKGROUND,XDIM=900,YDIM=30,PAL=PAL,LAYOUT=LAYOUT,$
         NO_NAME=no_name,NO_UNIT=no_unit,TITLE=CBAR_TITLE,VERTICAL=VERTICAL,HORIZONTAL=HORIZONTAL,BOTTOM=1,TOP=TOP,LEFT=LEFT,RIGHT=RIGHT,FONT='HELVETICA')
    W.SAVE,DIR_COMPS + 'CHLOR_A-W_EUROPE-N_AMER-AUST-V2.png',RESOLUTION=300
    W.CLOSE

    NA = MAPS_2LONLAT('NAMER', PX=630,PY=630) & NLATL = WHERE_NEAREST(NA.LAT(0,*), FLOAT(NA_LATS),NEAR=NEAR,VALID=VALID) & NA_LATSL = NA_LATS(VALID)
                                               NLATR = WHERE_NEAREST(NA.LAT(-1,*),FLOAT(NA_LATS),NEAR=NEAR,VALID=VALID) & NA_LATSR = NA_LATS(VALID)                                               
                                               NLONU = WHERE_NEAREST(NA.LON(*,-1),FLOAT(NA_LONS),NEAR=0.2, VALID=VALID) & NA_LONSU = NA_LONS(VALID)
                                               NLONB = WHERE_NEAREST(NA.LON(*,0), FLOAT(NA_LONS),NEAR=NEAR,VALID=VALID) & NA_LONSB = NA_LONS(VALID)
    WE = MAPS_2LONLAT('WEURO', PX=300,PY=300) & WLATL = WHERE_NEAREST(WE.LAT(0,*), FLOAT(WE_LATS),NEAR=NEAR,VALID=VALID) & WE_LATSL = WE_LATS(VALID)
                                               WLATR = WHERE_NEAREST(WE.LAT(-1,*),FLOAT(WE_LATS),NEAR=NEAR,VALID=VALID) & WE_LATSR = WE_LATS(VALID)
                                               WLONB = WHERE_NEAREST(WE.LON(*,0), FLOAT(WE_LONS),NEAR=NEAR,VALID=VALID) & WE_LONSB = WE_LONS(VALID)
                                               WLONU = WHERE_NEAREST(WE.LON(*,-1),FLOAT(WE_LONS),NEAR=0.2, VALID=VALID) & WE_LONSU = WE_LONS(VALID)
    AU = MAPS_2LONLAT('AUST',  PX=300,PY=300) & ALATL = WHERE_NEAREST(AU.LAT(0,*), FLOAT(AU_LATS),NEAR=NEAR,VALID=VALID) & AU_LATSL = AU_LATS(VALID)
                                               ALATR = WHERE_NEAREST(AU.LAT(-1,*),FLOAT(AU_LATS),NEAR=NEAR,VALID=VALID) & AU_LATSR = AU_LATS(VALID)    
                                               ALONB = WHERE_NEAREST(AU.LON(*,0), FLOAT(AU_LONS),NEAR=NEAR,VALID=VALID) & AU_LONSB = AU_LONS(VALID)
                                               ALONU = WHERE_NEAREST(AU.LON(*,-1),FLOAT(AU_LONS),NEAR=NEAR,VALID=VALID) & AU_LONSU = AU_LONS(VALID)

   
    NCHL = STRUCT_SD_READ(DIR_DATA+'ANNUAL_1998_2011-SEA_AQU-9_4-NAMER-CHLOR_A-OC-MEAN.SAVE',STRUCT=NSTRUCT)
    WCHL = STRUCT_SD_READ(DIR_DATA+'ANNUAL_1998_2011-SEA_AQU-9_4-WEURO-PXY_1280_1280-CHLOR_A-OC-MEAN.SAVE',STRUCT=WSTRUCT)
    ACHL = STRUCT_SD_READ(DIR_DATA+'ANNUAL_1998_2011-SEA_AQU-9_4-AUST-CHLOR_A-OC-MEAN.SAVE',STRUCT=ASTRUCT)
      
    NPOS = [390,130,1020,760] & TXTXN = 400 & TXTYN = 725  
    WPOS = [30,460,330,760]   & TXTXW = 40  & TXTYW = 725 
    APOS = [30,130,330,430]   & TXTXA = 40  & TXTYA = 395
    
    ADD_COAST = 1
    W = WINDOW(DIMENSIONS=[1050,790],BUFFER=BUFFER,MARGIN=0)    
    NIMAGE = STRUCT_SD_2IMAGE_NG(NSTRUCT,BUFFER=BUFFER,PAL=PAL,BACKGROUND=BACKGROUND,/ADD_LAND,ADD_COAST=ADD_COAST,SPECIAL_SCALE=SPECIAL_SCALE,IMG_POSITION=NPOS,/CURRENT,/DEVICE,MARGIN=0,$
      /ADD_LONLAT_LINES,ADD_LONLAT_NAMES=1,LONLAT_THICK=1,LONLAT_COLOR=254,LATS=NA_LATS,LONS=[NA_LONS,180])    
    FOR S=0, N_ELEMENTS(NLATL)-1 DO SNLAT = TEXT(390, NLATL(S)+130,NUM2STR(NA_LATSR(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=1,VERTICAL_ALIGNMENT=0)
    FOR S=0, N_ELEMENTS(NLATR)-1 DO SNLAT = TEXT(1020,NLATR(S)+130,NUM2STR(NA_LATSL(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=0,VERTICAL_ALIGNMENT=0)
    FOR S=0, N_ELEMENTS(NLONB)-1 DO SNLON = TEXT(NLONB(S)+390,130, NUM2STR(NA_LONSB(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=0.5,VERTICAL_ALIGNMENT=1)
    FOR S=0, N_ELEMENTS(NLONU)-1 DO SNLON = TEXT(NLONU(S)+390,760, NUM2STR(NA_LONSU(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=0.5,VERTICAL_ALIGNMENT=0)
    TXT = TEXT(TXTXN,TXTYN,'c',FONT_SIZE=TXTSIZE,COLOR='BLACK',/DEVICE)        
    
    WIMAGE = STRUCT_SD_2IMAGE_NG(WSTRUCT,BUFFER=BUFFER,PAL=PAL,BACKGROUND=BACKGROUND,/ADD_LAND,ADD_COAST=ADD_COAST,SPECIAL_SCALE=SPECIAL_SCALE,IMG_POSITION=WPOS,/CURRENT,/DEVICE,MARGIN=0,$
      /ADD_LONLAT_LINES,ADD_LONLAT_NAMES=1,LONLAT_THICK=1,LONLAT_COLOR=254,LATS=WE_LATS,LONS=WE_LONS)            
    FOR S=0, N_ELEMENTS(WLATL)-1 DO SWLAT = TEXT(30, WLATL(S)+460,NUM2STR(WE_LATSR(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=1,VERTICAL_ALIGNMENT=0)
    FOR S=0, N_ELEMENTS(WLATR)-1 DO SWLAT = TEXT(330,WLATR(S)+460,NUM2STR(WE_LATSL(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=0,VERTICAL_ALIGNMENT=0)
    FOR S=0, N_ELEMENTS(WLONB)-1 DO SWLON = TEXT(WLONB(S)+30, 460,NUM2STR(WE_LONSB(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=0.5,VERTICAL_ALIGNMENT=1)
    FOR S=0, N_ELEMENTS(WLONU)-1 DO SWLON = TEXT(WLONU(S)+30, 760,NUM2STR(WE_LONSU(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=0.5,VERTICAL_ALIGNMENT=0)
    TXT = TEXT(TXTXW,TXTYW,'a',FONT_SIZE=TXTSIZE,COLOR='BLACK',/DEVICE)        
     
    AIMAGE = STRUCT_SD_2IMAGE_NG(ASTRUCT,BUFFER=BUFFER,PAL=PAL,BACKGROUND=BACKGROUND,/ADD_LAND,ADD_COAST=ADD_COAST,SPECIAL_SCALE=SPECIAL_SCALE,IMG_POSITION=APOS,/CURRENT,/DEVICE,MARGIN=0,$
      /ADD_LONLAT_LINES,ADD_LONLAT_NAMES=1,LONLAT_THICK=1,LONLAT_COLOR=254,LATS=AU_LATS,LONS=AU_LONS)            
    FOR S=0, N_ELEMENTS(ALATL)-1 DO SALAT = TEXT(30, ALATL(S)+130,NUM2STR(AU_LATSR(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=1,VERTICAL_ALIGNMENT=0)
    FOR S=0, N_ELEMENTS(ALATR)-1 DO SALAT = TEXT(330,ALATR(S)+130,NUM2STR(AU_LATSL(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=0,VERTICAL_ALIGNMENT=0)
    FOR S=0, N_ELEMENTS(ALONB)-1 DO SALON = TEXT(ALONB(S)+30, 130,NUM2STR(AU_LONSB(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=0.5,VERTICAL_ALIGNMENT=1)
    FOR S=0, N_ELEMENTS(ALONU)-1 DO SALON = TEXT(ALONU(S)+30, 430,NUM2STR(AU_LONSU(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=0.5,VERTICAL_ALIGNMENT=0)
    TXT = TEXT(TXTXA,TXTYA,'b',FONT_SIZE=TXTSIZE,COLOR='BLACK',/DEVICE)              
   
    BAR = COLOR_BAR_SCALE_NG(PROD=CBAR_PROD,SPECIAL_SCALE=SPECIAL_SCALE,PX=30,PY=70,CHARSIZE=13,BACKGROUND=BACKGROUND,XDIM=990,YDIM=30,PAL=PAL,LAYOUT=LAYOUT,$
         NO_NAME=no_name,NO_UNIT=no_unit,TITLE=CBAR_TITLE,VERTICAL=VERTICAL,HORIZONTAL=HORIZONTAL,BOTTOM=1,TOP=TOP,LEFT=LEFT,RIGHT=RIGHT,FONT='HELVETICA')
    W.SAVE,DIR_COMPS + 'CHLOR_A-W_EUROPE-N_AMER-AUST-V1_C.png',RESOLUTION=300
    W.CLOSE
stop
  ENDIF  
  
; ********************************************
  IF DO_NEC_WC_KOR_MAPS GE 1 THEN BEGIN
; ********************************************
    BUFFER = 0    
    PRODS = ['POP','BATHY','CHLOR_A']
    WPX = 1366
    WPY = 2048
    EPX = 1366
    EPY = 1366
    KPX = 1366
    KPY = 1366
    
    LAND_COLOR=252
    OCEAN_COLOR=254
    BACKGROUND=255
    LABEL_FONT_SIZE=18
    WC_LATS = [30,35,40,45]
    WC_LONS = [-128,-122,-116]
    EC_LATS = [35,40,45]
    EC_LONS = [-78,-72,-66] 
    KC_LATS = [32,36,40]
    KC_LONS = [120,124,128,132]
    TXTX    = 0.075
    TXTY    = 0.95
    TXTS    = 36
    NEAR = 0.1
    WL = MAPS_2LONLAT('WC_ECO',  PX=683,PY=1024) & WLAT = WHERE_NEAREST(WL.LAT(0,*),FLOAT(WC_LATS),NEAR=NEAR) & WLON = WHERE_NEAREST(WL.LON(*,0),FLOAT(WC_LONS),NEAR=NEAR)
    EL = MAPS_2LONLAT('NEC2_ECO',PX=683,PY=683)  & ELAT = WHERE_NEAREST(EL.LAT(0,*),FLOAT(EC_LATS),NEAR=NEAR) & ELON = WHERE_NEAREST(EL.LON(*,0),FLOAT(EC_LONS),NEAR=NEAR)
    KL = MAPS_2LONLAT('KOREA',   PX=683,PY=683)  & KLAT = WHERE_NEAREST(KL.LAT(0,*),FLOAT(KC_LATS),NEAR=NEAR) & KLON = WHERE_NEAREST(KL.LON(*,0),FLOAT(KC_LONS),NEAR=NEAR)
    
    FOR P=0, N_ELEMENTS(PRODS)-1 DO BEGIN
      PROD = PRODS(P)
      WSTRUCT = []
      CASE PROD OF 
        'CHLOR_A': BEGIN
          CHL     = STRUCT_SD_READ(FIX_PATH(!S.DIR_DATASETS + 'OC-SEA_AQU-9_4\GEQ\STATS\CHLOR_A-OC\ANNUAL_1998_2011-SEA_AQU-9_4-GEQ-CHLOR_A-OC-MEAN.SAVE'),STRUCT=STRUCT)
          WSTRUCT = STRUCT_SD_REMAP(STRUCT=STRUCT,MAP_OUT='WC_ECO',PX=WPX,PY=WPY)
          CHL     = STRUCT_SD_READ(FIX_PATH(!S.DIR_DATASETS + 'OC-SEA_AQU-9_4\GEQ\STATS\CHLOR_A-OC\ANNUAL_1998_2011-SEA_AQU-9_4-GEQ-CHLOR_A-OC-MEAN.SAVE'),STRUCT=STRUCT)
          ESTRUCT = STRUCT_SD_REMAP(STRUCT=STRUCT,MAP_OUT='NEC2_ECO',PX=EPX,PY=EPY)
          CHL     = STRUCT_SD_READ(FIX_PATH(!S.DIR_DATASETS + 'OC-SEA_AQU-9_4\GEQ\STATS\CHLOR_A-OC\ANNUAL_1998_2011-SEA_AQU-9_4-GEQ-CHLOR_A-OC-MEAN.SAVE'),STRUCT=STRUCT)
          KSTRUCT = STRUCT_SD_REMAP(STRUCT=STRUCT,MAP_OUT='KOREA',PX=KPX,PY=KPY)
          PAL = 'PAL_SW3'
          SPECIAL_SCALE = 'MEDIUM'
          CBAR_PROD = 'CHLOROPHYLL'
          CBAR_TITLE = UNITS('CHLOROPHYLL')
          LETW = 'g'
          LETE = 'h'
          LETK = 'i'
          LCOLW = 'BLACK'
          LCOLE = 'BLACK'
          LCOLK = 'BLACK'
        END
        'BATHY': BEGIN
          WC = STRUCT_SD_READ(FIX_PATH(!S.DIR_BATHY + 'SRTM30PLUS-WC_ECO-PXY_'  +NUM2STR(WPX)+'_'+NUM2STR(WPY)+'-BATHY-SMOOTH_5.SAVE'),STRUCT=WSTRUCT)
          EC = STRUCT_SD_READ(FIX_PATH(!S.DIR_BATHY + 'SRTM30PLUS-NEC2_ECO-PXY_'+NUM2STR(EPX)+'_'+NUM2STR(EPY)+'-BATHY-SMOOTH_5.SAVE'),STRUCT=ESTRUCT)
          KC = STRUCT_SD_READ(FIX_PATH(!S.DIR_BATHY + 'SRTM30PLUS-KOREA-PXY_'   +NUM2STR(KPX)+'_'+NUM2STR(KPY)+'-BATHY-SMOOTH_5.SAVE'),STRUCT=KSTRUCT)
          PAL = 'PAL_BATHY'
          SPECIAL_SCALE = ''
          CBAR_PROD = 'BATHY' 
          CBAR_TITLE = UNITS('BATHY')
          LETW = 'd'
          LETE = 'e'
          LETK = 'f'
          LCOLW = 'WHITE'
          LCOLE = 'BLACK'
          LCOLK = 'BLACK'
        END
        'POP': BEGIN  
          WC = IDL_RESTORE(!S.DIR_PROJECTS + 'ECOAP/GLOBAL_MAPS/HumanImpacts/BINNED_TRANSFORMED_POPULATION_DATA-WC_ECO-PXY_683_1024.SAVE') 
          EC = IDL_RESTORE(!S.DIR_PROJECTS + 'ECOAP/GLOBAL_MAPS/HumanImpacts/BINNED_TRANSFORMED_POPULATION_DATA-NEC2_ECO-PXY_1024_1024.SAVE') 
          KC = IDL_RESTORE(!S.DIR_PROJECTS + 'ECOAP/GLOBAL_MAPS/HumanImpacts/BINNED_TRANSFORMED_POPULATION_DATA-KOREA-PXY_1024_1024.SAVE')
          WC = WC[WHERE(WC.DATA NE 0)]
          EC = EC[WHERE(EC.DATA NE 0)]
          KC = KC[WHERE(KC.DATA NE 0)]
          WC.COLOR = SD_SCALES(WC.DATA,PROD='NUM',/DATA2BIN,SPECIAL_SCALE='0_1.0')  
          EC.COLOR = SD_SCALES(EC.DATA,PROD='NUM',/DATA2BIN,SPECIAL_SCALE='0_1.0')
          KC.COLOR = SD_SCALES(KC.DATA,PROD='NUM',/DATA2BIN,SPECIAL_SCALE='0_1.0')
          PAL = 'PAL_SW3'
          SPECIAL_SCALE = '0_1'
          CBAR_PROD = 'NUM'
          CBAR_TITLE = 'Normalized Population Density'
          RGB_TABLE = CPAL_READ(PAL)
          LETW = 'a'
          LETE = 'b'
          LETK = 'c'
          LCOLW = 'BLACK'
          LCOLE = 'BLACK'
          LCOLK = 'BLACK'
        END
      ENDCASE    
      
               
      WDIMS = [763,1064] & WPOS = [40,40,723,1064] & WDIF = 40
      EDIMS = [763,723]  & EPOS = [40,40,723,723]  & EDIF = 40
      KDIMS = [763,803]  & KPOS = [40,125,723,803] & KDIF = 125
            
      KM = MAPS_SIZE('KOREA')      
      KIMG  = READ_LANDMASK(MAP='KOREA',PX=KM.PX,PY=KM.PY)    
      KMASK = READ_LANDMASK(MAP='KOREA',PX=KM.PX,PY=KM.PY,/STRUCT)      
      KIMG(KMASK.OCEAN) = OCEAN_COLOR
      KIMG(KMASK.LAND)  = LAND_COLOR
      
      EM = MAPS_SIZE('NEC2_ECO')      
      EIMG  = READ_LANDMASK(MAP='NEC2_ECO',PX=EM.PX,PY=EM.PY)    
      EMASK = READ_LANDMASK(MAP='NEC2_ECO',PX=EM.PX,PY=EM.PY,/STRUCT)      
      EIMG(EMASK.OCEAN) = OCEAN_COLOR
      EIMG(EMASK.LAND)  = LAND_COLOR
      
      WM = MAPS_SIZE('WC_ECO')
      WIMG = READ_LANDMASK(MAP='WC_ECO', PX=WM.PX,PY=WM.PY)    
      WMASK = READ_LANDMASK(MAP='WC_ECO',PX=WM.PX,PY=WM.PY,/STRUCT)
      WIMG(WMASK.OCEAN) = OCEAN_COLOR
      WIMG(WMASK.LAND)  = LAND_COLOR
            
      IF PROD EQ 'POP' THEN BEGIN                 
        K = WINDOW(DIMENSIONS=KDIMS,BUFFER=BUFFER)        
        KIMAGE = IMAGE(KIMG,RGB_TABLE=RGB_TABLE,IMAGE_DIMENSIONS=[KM.PX,KM.PY],BACKGROUND_COLOR=RGB_TABLE(*,BACKGROUND),POSITION=KPOS,/DEVICE,/CURRENT);MARGIN=[0,22,0,22],         
        BB = WHERE_SETS(KC.COLOR)            
        FOR N=0,N_ELEMENTS(BB)-1 DO BEGIN
          IF BB(N).N LE 1 THEN CONTINUE
          SUBS = WHERE_SETS_SUBS(BB(N))
          COLOR = RGB_TABLE(*,BB(N).VALUE)
          PRINT, 'Plotting set ' + NUM2STR(N+1) + ' of ' + NUM2STR(N_ELEMENTS(BB)) + ' (' + NUM2STR((FLOAT(N+1)/FLOAT(N_ELEMENTS(BB))*100),DECIMALS=2) + '%)'
          KP = PLOT(KC(SUBS).X,KC(SUBS).Y,/CURRENT,/DEVICE,AXIS_STYLE=0,MARGIN=0,LINESTYLE=6,SYMBOL='DOT',/SYM_FILLED,SYM_COLOR=COLOR,SYM_SIZE=5,/OVERPLOT)      
        ENDFOR  
        FOR S=0, N_ELEMENTS(KLAT)-1 DO SKLAT = SYMBOL(40,KLAT(S)+KDIF, '_',SYM_SIZE=2,SYM_COLOR='BLACK',SYM_THICK=5,/SYM_FILLED,/CURRENT,/DEVICE,LABEL_STRING=NUM2STR(KC_LATS(S)),LABEL_POSITION='L',LABEL_FONT_SIZE=LABEL_FONT_SIZE)               
        FOR S=0, N_ELEMENTS(KLON)-1 DO SKLON = SYMBOL(KLON(S)+40,KDIF, '|',SYM_SIZE=2,SYM_COLOR='BLACK',SYM_THICK=5,/SYM_FILLED,/CURRENT,/DEVICE,LABEL_STRING=NUM2STR(KC_LONS(S)),LABEL_POSITION='B',LABEL_FONT_SIZE=LABEL_FONT_SIZE)
        TXT = TEXT(TXTX,TXTY,LETK,FONT_SIZE=TXTS,COLOR=LCOLK)
        BAR = COLOR_BAR_SCALE_NG(PROD=CBAR_PROD,SPECIAL_SCALE=SPECIAL_SCALE,PX=40,PY=50,CHARSIZE=14,BACKGROUND=BACKGROUND,XDIM=683,YDIM=40,PAL=PAL,LAYOUT=LAYOUT,$
            NO_NAME=no_name,NO_UNIT=no_unit,TITLE=CBAR_TITLE,VERTICAL=VERTICAL,HORIZONTAL=HORIZONTAL,BOTTOM=1,TOP=TOP,LEFT=LEFT,RIGHT=RIGHT,FONT='HELVETICA')
        
        K.SAVE,DIR_PNGS + PROD+'-KOR-VERT.png',RESOLUTION=300
        K.CLOSE
        
        E = WINDOW(DIMENSIONS=EDIMS,BUFFER=BUFFER)        
        EIMAGE = IMAGE(EIMG,RGB_TABLE=RGB_TABLE,IMAGE_DIMENSIONS=[EM.PX,EM.PY],BACKGROUND_COLOR=RGB_TABLE(*,BACKGROUND),POSITION=EPOS,/DEVICE,/CURRENT);MARGIN=[0,22,0,22],         
        BB = WHERE_SETS(EC.COLOR)            
        FOR N=0,N_ELEMENTS(BB)-1 DO BEGIN
          IF BB(N).N LE 1 THEN CONTINUE
          SUBS = WHERE_SETS_SUBS(BB(N))
          COLOR = RGB_TABLE(*,BB(N).VALUE)
          PRINT, 'Plotting set ' + NUM2STR(N+1) + ' of ' + NUM2STR(N_ELEMENTS(BB)) + ' (' + NUM2STR((FLOAT(N+1)/FLOAT(N_ELEMENTS(BB))*100),DECIMALS=2) + '%)'
          EP = PLOT(EC(SUBS).X,EC(SUBS).Y,/CURRENT,/DEVICE,AXIS_STYLE=0,MARGIN=0,LINESTYLE=6,SYMBOL='DOT',/SYM_FILLED,SYM_COLOR=COLOR,SYM_SIZE=5,/OVERPLOT)      
        ENDFOR  
        FOR S=0, N_ELEMENTS(ELAT)-1 DO SELAT = SYMBOL(40,ELAT(S)+EDIF, '_',SYM_SIZE=2,SYM_COLOR='BLACK',SYM_THICK=5,/SYM_FILLED,/CURRENT,/DEVICE,LABEL_STRING=NUM2STR(EC_LATS(S)),LABEL_POSITION='L',LABEL_FONT_SIZE=LABEL_FONT_SIZE)               
        FOR S=0, N_ELEMENTS(ELON)-1 DO SELON = SYMBOL(ELON(S)+40,EDIF, '|',SYM_SIZE=2,SYM_COLOR='BLACK',SYM_THICK=5,/SYM_FILLED,/CURRENT,/DEVICE,LABEL_STRING=NUM2STR(EC_LONS(S)),LABEL_POSITION='B',LABEL_FONT_SIZE=LABEL_FONT_SIZE)
        TXT = TEXT(TXTX,TXTY,LETE,FONT_SIZE=TXTS,COLOR=LCOLE)
        
        E.SAVE,DIR_PNGS + PROD+'-NEC-VERT.png',RESOLUTION=300
        E.CLOSE
                        
        W = WINDOW(DIMENSIONS=WDIMS,BUFFER=BUFFER)    
        WIMAGE = IMAGE(WIMG,RGB_TABLE=RGB_TABLE,IMAGE_DIMENSIONS=[WM.PX,WM.PY],BACKGROUND_COLOR=RGB_TABLE(*,BACKGROUND),POSITION=WPOS,/DEVICE,/CURRENT);MARGIN=[0,22,0,22],                
        BB = WHERE_SETS(WC.COLOR)    
        FOR N=0,N_ELEMENTS(BB)-1 DO BEGIN
          IF BB(N).N LE 1 THEN CONTINUE
          SUBS = WHERE_SETS_SUBS(BB(N))
          COLOR = RGB_TABLE(*,BB(N).VALUE)
          PRINT, 'Plotting set ' + NUM2STR(N+1) + ' of ' + NUM2STR(N_ELEMENTS(BB)) + ' (' + NUM2STR((FLOAT(N+1)/FLOAT(N_ELEMENTS(BB))*100),DECIMALS=2) + '%)'
          WP = PLOT(WC(SUBS).X,WC(SUBS).Y,/CURRENT,/DEVICE,AXIS_STYLE=0,MARGIN=0,LINESTYLE=6,SYMBOL='DOT',/SYM_FILLED,SYM_COLOR=COLOR,SYM_SIZE=5,/OVERPLOT)     
        ENDFOR  
        TXT = TEXT(TXTX,TXTY,LETW,FONT_SIZE=TXTS,COLOR=LCOLW)        
        FOR S=0, N_ELEMENTS(WLAT)-1 DO SWLAT = SYMBOL(40,WLAT(S)+40, '_', SYM_SIZE=2,SYM_COLOR='BLACK',SYM_THICK=5,/SYM_FILLED,/CURRENT,/DEVICE,LABEL_STRING=NUM2STR(WC_LATS(S)),LABEL_POSITION='L',LABEL_FONT_SIZE=LABEL_FONT_SIZE)      
        FOR S=0, N_ELEMENTS(WLON)-1 DO SWLON = SYMBOL(WLON(S)+40,40,  '|',SYM_SIZE=2,SYM_COLOR='BLACK',SYM_THICK=5,/SYM_FILLED,/CURRENT,/DEVICE,LABEL_STRING=NUM2STR(WC_LONS(S)),LABEL_POSITION='B',LABEL_FONT_SIZE=LABEL_FONT_SIZE)
        W.SAVE,DIR_PNGS+PROD+'-WC-VERT.png',RESOLUTION=300
        W.CLOSE
      ENDIF ELSE BEGIN        
        K = WINDOW(DIMENSIONS=KDIMS,BUFFER=BUFFER)
        KIMAGE = STRUCT_SD_2IMAGE_NG(KSTRUCT,BUFFER=BUFFER,PAL=PAL,BACKGROUND=BACKGROUND,/ADD_LAND,SPECIAL_SCALE=SPECIAL_SCALE,$
                 IMG_DIMENSIONS=[KM.PX,KM.PY],IMG_POSITION=KPOS,/CURRENT,/DEVICE,$ ;IMG_LOCATION=[803,200],,
                 ADD_LONLAT_LINES=0,ADD_LONLAT_NAMES=0,LONLAT_THICK=4,LONLAT_COLOR=0,LATS=KC_LATS,LONS=KC_LONS)
        FOR S=0, N_ELEMENTS(KLAT)-1 DO SKLAT = SYMBOL(40,KLAT(S)+KDIF, '_',SYM_SIZE=2,SYM_COLOR='BLACK',SYM_THICK=5,/SYM_FILLED,/CURRENT,/DEVICE,LABEL_STRING=NUM2STR(KC_LATS(S)),LABEL_POSITION='L',LABEL_FONT_SIZE=LABEL_FONT_SIZE)               
        FOR S=0, N_ELEMENTS(KLON)-1 DO SKLON = SYMBOL(KLON(S)+40,KDIF, '|',SYM_SIZE=2,SYM_COLOR='BLACK',SYM_THICK=5,/SYM_FILLED,/CURRENT,/DEVICE,LABEL_STRING=NUM2STR(KC_LONS(S)),LABEL_POSITION='B',LABEL_FONT_SIZE=LABEL_FONT_SIZE)
        TXT = TEXT(TXTX,TXTY,LETK,FONT_SIZE=TXTS,COLOR=LCOLK)
        BAR = COLOR_BAR_SCALE_NG(PROD=CBAR_PROD,SPECIAL_SCALE=SPECIAL_SCALE,PX=40,PY=50,CHARSIZE=14,BACKGROUND=BACKGROUND,XDIM=683,YDIM=40,PAL=PAL,LAYOUT=LAYOUT,$
            NO_NAME=no_name,NO_UNIT=no_unit,TITLE=CBAR_TITLE,VERTICAL=VERTICAL,HORIZONTAL=HORIZONTAL,BOTTOM=1,TOP=TOP,LEFT=LEFT,RIGHT=RIGHT,FONT='HELVETICA')
        K.SAVE,DIR_PNGS+PROD+'-KOR-VERT.png',RESOLUTION=300
        K.CLOSE
        
        E = WINDOW(DIMENSIONS=EDIMS,BUFFER=BUFFER)
        EIMAGE = STRUCT_SD_2IMAGE_NG(ESTRUCT,BUFFER=BUFFER,PAL=PAL,BACKGROUND=BACKGROUND,/ADD_LAND,SPECIAL_SCALE=SPECIAL_SCALE,$
                 IMG_DIMENSIONS=[EM.PX,EM.PY],IMG_POSITION=EPOS,/CURRENT,/DEVICE,$ ;IMG_LOCATION=[803,200],,
                 ADD_LONLAT_LINES=0,ADD_LONLAT_NAMES=0,LONLAT_THICK=4,LONLAT_COLOR=0,LATS=EC_LATS,LONS=EC_LONS)
        FOR S=0, N_ELEMENTS(ELAT)-1 DO SELAT = SYMBOL(40,ELAT(S)+EDIF, '_',SYM_SIZE=2,SYM_COLOR='BLACK',SYM_THICK=5,/SYM_FILLED,/CURRENT,/DEVICE,LABEL_STRING=NUM2STR(EC_LATS(S)),LABEL_POSITION='L',LABEL_FONT_SIZE=LABEL_FONT_SIZE)               
        FOR S=0, N_ELEMENTS(ELON)-1 DO SELON = SYMBOL(ELON(S)+40,EDIF, '|',SYM_SIZE=2,SYM_COLOR='BLACK',SYM_THICK=5,/SYM_FILLED,/CURRENT,/DEVICE,LABEL_STRING=NUM2STR(EC_LONS(S)),LABEL_POSITION='B',LABEL_FONT_SIZE=LABEL_FONT_SIZE)
        TXT = TEXT(TXTX,TXTY,LETE,FONT_SIZE=TXTS,COLOR=LCOLE)        
        E.SAVE,DIR_PNGS+PROD+'-NEC-VERT.png',RESOLUTION=300
        E.CLOSE
        IF WSTRUCT NE [] THEN BEGIN
          W = WINDOW(DIMENSIONS=[763,1046],BUFFER=BUFFER)        
          WIMAGE = STRUCT_SD_2IMAGE_NG(WSTRUCT,BUFFER=BUFFER,PAL=PAL,BACKGROUND=BACKGROUND,/ADD_LAND,SPECIAL_SCALE=SPECIAL_SCALE,$
                  IMG_DIMENSIONS=[WM.PX,WM.PY],IMG_POSITION=[40,40,723,1046],/CURRENT,/DEVICE,$ ; IMG_LOCATION=[100,200],
                  ADD_LONLAT_LINES=0,ADD_LONLAT_NAMES=0,LONLAT_THICK=4,LONLAT_COLOR=0,LATS=WC_LATS,LONS=WC_LONS);,/ADD_MASK,MASK_SUBS=OK_MASK,MASK_COLOR=MASK_COLOR)        
        
          FOR S=0, N_ELEMENTS(WLAT)-1 DO SWLAT = SYMBOL(40,WLAT(S)+40, '_', SYM_SIZE=2,SYM_COLOR='BLACK',SYM_THICK=5,/SYM_FILLED,/CURRENT,/DEVICE,LABEL_STRING=NUM2STR(WC_LATS(S)),LABEL_POSITION='L',LABEL_FONT_SIZE=LABEL_FONT_SIZE)      
          FOR S=0, N_ELEMENTS(WLON)-1 DO SWLON = SYMBOL(WLON(S)+40,40,  '|',SYM_SIZE=2,SYM_COLOR='BLACK',SYM_THICK=5,/SYM_FILLED,/CURRENT,/DEVICE,LABEL_STRING=NUM2STR(WC_LONS(S)),LABEL_POSITION='B',LABEL_FONT_SIZE=LABEL_FONT_SIZE)                           
          TXT = TEXT(TXTX,TXTY,LETW,FONT_SIZE=TXTS,COLOR=LCOLW)
          W.SAVE,DIR_PNGS+PROD+'-WC-VERT.png',RESOLUTION=300
          W.CLOSE
        ENDIF
      ENDELSE
    ENDFOR
    
    FILES = []
    FOR P=0, N_ELEMENTS(PRODS)-1 DO FILES = [FILES,DIR_PNGS+PRODS(P)+'-WC-VERT.png']
    FOR P=0, N_ELEMENTS(PRODS)-1 DO FILES = [FILES,DIR_PNGS+PRODS(P)+'-NEC-VERT.png']
    FOR P=0, N_ELEMENTS(PRODS)-1 DO FILES = [FILES,DIR_PNGS+PRODS(P)+'-KOR-VERT.png']
    OUTFILE = !S.DIR_PROJECTS + 'ECOAP/GLOBAL_MAPS/MERGED_PRODS-KOR_NEC_WC-VERT.png'
    IMAGE_WELD_PAGE,FILES=FILES,ROWS=3,COLS=3,PAL='PAL_SW3',PNGFILE=OUTFILE,SPACE=20,PX=px,py=py,BACKGROUND=255,/NOTRIM
    
  ENDIF   
  
; ********************************************
  IF DO_US_MAPS GE 1 THEN BEGIN
; ********************************************
    BUFFER = 0    
    PRODS = ['POP'];,'BATHY','CHLOR_A']
    UPX = 1280
    UPY = 768
    APX = 1024
    APY = 1024
    HPX = 512
    HPY = 512
    PAL_SW3,R,G,B
    
    LAND_COLOR=252
    OCEAN_COLOR=255
    BACKGROUND=255
    LABEL_FONT_SIZE=14
    US_LATS = [25,30,35,40,45]
    US_LONS = [-120,-105,-90,-75];[-120,-110,-100,-90,-80,-70]
    AL_LATS = [50,55,60,65,70]
    AL_LONS = [-160,-150,-140] 
    HI_LATS = [18,20,22]
    HI_LONS = [-159,-157,-155]
    TXTX    = 0.075
    TXTY    = 0.95
    TXTS    = 36
    NEAR = 0.1
    
    US = MAPS_2LONLAT('US_ECO', PX=1050,PY=630)
    AL = MAPS_2LONLAT('ALASKA', PX=300,PY=300)
    HI = MAPS_2LONLAT('HAWAII', PX=300,PY=300)
    ULATL = WHERE_NEAREST(US.LAT(0,*), FLOAT(US_LATS),NEAR=NEAR,VALID=VALID) & US_LATSL = US_LATS(VALID)
    ULATR = WHERE_NEAREST(US.LAT(-1,*),FLOAT(US_LATS),NEAR=NEAR,VALID=VALID) & US_LATSR = US_LATS(VALID)                                               
    ULONU = WHERE_NEAREST(US.LON(*,-1),FLOAT(US_LONS),NEAR=NEAR,VALID=VALID) & US_LONSU = US_LONS(VALID)
    ULONB = WHERE_NEAREST(US.LON(*,0), FLOAT(US_LONS),NEAR=NEAR,VALID=VALID) & US_LONSB = US_LONS(VALID)
    ALATL = WHERE_NEAREST(AL.LAT(0,*), FLOAT(AL_LATS),NEAR=NEAR,VALID=VALID) & AL_LATSL = AL_LATS(VALID)
    ALATR = WHERE_NEAREST(AL.LAT(-1,*),FLOAT(AL_LATS),NEAR=NEAR,VALID=VALID) & AL_LATSR = AL_LATS(VALID)
    ALONB = WHERE_NEAREST(AL.LON(*,0), FLOAT(AL_LONS),NEAR=NEAR,VALID=VALID) & AL_LONSB = AL_LONS(VALID)
    ALONU = WHERE_NEAREST(AL.LON(*,-1),FLOAT(AL_LONS),NEAR=NEAR,VALID=VALID) & AL_LONSU = AL_LONS(VALID)
    HLATL = WHERE_NEAREST(HI.LAT(0,*), FLOAT(HI_LATS),NEAR=NEAR,VALID=VALID) & HI_LATSL = HI_LATS(VALID)
    HLATR = WHERE_NEAREST(HI.LAT(-1,*),FLOAT(HI_LATS),NEAR=NEAR,VALID=VALID) & HI_LATSR = HI_LATS(VALID)    
    HLONB = WHERE_NEAREST(HI.LON(*,0), FLOAT(HI_LONS),NEAR=NEAR,VALID=VALID) & HI_LONSB = HI_LONS(VALID)
    HLONU = WHERE_NEAREST(HI.LON(*,-1),FLOAT(HI_LONS),NEAR=NEAR,VALID=VALID) & HI_LONSU = HI_LONS(VALID)
    
    FOR P=0, N_ELEMENTS(PRODS)-1 DO BEGIN
      PROD = PRODS(P)
      WSTRUCT = []
      CASE PROD OF 
        'CHLOR_A': BEGIN
          CHL = STRUCT_SD_READ(FIX_PATH(!S.DIR_PROJECTS + 'ECOAP/GLOBAL_MAPS/DATA/ANNUAL_1998_2011-SEA_AQU-9_4-US_ECO-CHLOR_A-OC-MEAN.SAVE'),STRUCT=USTRUCT) 
          CHL = STRUCT_SD_READ(FIX_PATH(!S.DIR_PROJECTS + 'ECOAP/GLOBAL_MAPS/DATA/ANNUAL_1998_2011-SEA_AQU-9_4-ALASKA-CHLOR_A-OC-MEAN.SAVE'),STRUCT=ASTRUCT)
          CHL = STRUCT_SD_READ(FIX_PATH(!S.DIR_PROJECTS + 'ECOAP/GLOBAL_MAPS/DATA/ANNUAL_1998_2011-SEA_AQU-9_4-HAWAII-CHLOR_A-OC-MEAN.SAVE'),STRUCT=HSTRUCT)          
          PAL = 'PAL_SW3'
          SPECIAL_SCALE = 'MEDIUM'
          CBAR_PROD = 'CHLOROPHYLL'
          CBAR_TITLE = UNITS('CHLOROPHYLL')
          LETW = 'g'
          LETE = 'h'
          LETK = 'i'
          LCOLW = 'BLACK'
          LCOLE = 'BLACK'
          LCOLK = 'BLACK'
        END
        'BATHY': BEGIN
          UC = STRUCT_SD_READ(FIX_PATH(!S.DIR_BATHY + 'SRTM30PLUS-US_ECO-PXY_'+NUM2STR(UPX)+'_'+NUM2STR(UPY)+'-BATHY-SMOOTH_5.SAVE'),STRUCT=USTRUCT)
          AC = STRUCT_SD_READ(FIX_PATH(!S.DIR_BATHY + 'SRTM30PLUS-ALASKA-PXY_'+NUM2STR(APX)+'_'+NUM2STR(APY)+'-BATHY-SMOOTH_5.SAVE'),STRUCT=ASTRUCT)
          HC = STRUCT_SD_READ(FIX_PATH(!S.DIR_BATHY + 'SRTM30PLUS-HAWAII-PXY_'+NUM2STR(HPX)+'_'+NUM2STR(HPY)+'-BATHY-SMOOTH_5.SAVE'),STRUCT=HSTRUCT)
          PAL = 'PAL_BATHY'
          SPECIAL_SCALE = ''
          CBAR_PROD = 'BATHY' 
          CBAR_TITLE = UNITS('BATHY')
          LETW = 'd'
          LETE = 'e'
          LETK = 'f'
          LCOLW = 'WHITE'
          LCOLE = 'BLACK'
          LCOLK = 'BLACK'
        END
        'POP': BEGIN                      
          UC = IDL_RESTORE(!S.DIR_PROJECTS + 'ECOAP/GLOBAL_MAPS/HumanImpacts/BINNED_TRANSFORMED_POPULATION_DATA-US_ECO-PXY_1280_768.SAVE') 
          AC = IDL_RESTORE(!S.DIR_PROJECTS + 'ECOAP/GLOBAL_MAPS/HumanImpacts/BINNED_TRANSFORMED_POPULATION_DATA-ALASKA-PXY_1024_1024.SAVE') 
          HC = IDL_RESTORE(!S.DIR_PROJECTS + 'ECOAP/GLOBAL_MAPS/HumanImpacts/BINNED_TRANSFORMED_POPULATION_DATA-HAWAII-PXY_512_512.SAVE')
          UC = UC[WHERE(UC.DATA NE 0)] & UC.COLOR = SD_SCALES(UC.DATA,PROD='NUM',/DATA2BIN,SPECIAL_SCALE='0_1.0')
          AC = AC[WHERE(AC.DATA NE 0)] & AC.COLOR = SD_SCALES(AC.DATA,PROD='NUM',/DATA2BIN,SPECIAL_SCALE='0_1.0')
          HC = HC[WHERE(HC.DATA NE 0)] & HC.COLOR = SD_SCALES(HC.DATA,PROD='NUM',/DATA2BIN,SPECIAL_SCALE='0_1.0')
                      
          UM = MAPS_SIZE('US_ECO')      
          UIMG  = READ_LANDMASK(MAP='US_ECO',PX=UM.PX,PY=UM.PY)    
          UMASK = READ_LANDMASK(MAP='US_ECO',PX=UM.PX,PY=UM.PY,/STRUCT)      
          UIMG(UMASK.OCEAN) = OCEAN_COLOR
          UIMG(UMASK.LAND)  = LAND_COLOR          
          LL = MAPS_2LONLAT('US_ECO',PX=UM.PX,PY=UM.PY)    
          ZWIN, LL.LAT    
          TV,UIMG
            CONTOUR,LL.LAT,LEVELS=US_LATS,C_COLORS=254,C_THICK=3,XSTYLE=5,YSTYLE=5,XMARGIN=[0,0],YMARGIN=[0,0],POSITION=[0,0,1,1], CLOSED=0,/NOERASE,_EXTRA=_extra
            CONTOUR,LL.LON,LEVELS=US_LONS,C_COLORS=254,C_THICK=3,XSTYLE=5,YSTYLE=5,XMARGIN=[0,0],YMARGIN=[0,0],POSITION=[0,0,1,1], CLOSED=0,/NOERASE,_EXTRA=_extra
            UIMG = TVRD()
          ZWIN            
          BB = WHERE_SETS(UC.COLOR)    
          ZWIN, UIMG           
          MAP_US_ECO
          TV, UIMG
          FOR N=0,N_ELEMENTS(BB)-1 DO BEGIN
            IF BB(N).N LE 1 THEN CONTINUE
            SUBS = WHERE_SETS_SUBS(BB(N))    
            CIRCLE,32, COLOR=BB(N).VALUE, FILL=1 
            PLOTS,UC(SUBS).LON,UC(SUBS).LAT,PSYM=8,COLOR=BB(N).VALUE,/NOCLIP,SYMSIZE=0.5, THICK=1.5
          ENDFOR            
          UIMG = TVRD()
          ZWIN
          
          AM = MAPS_SIZE('ALASKA')      
          AIMG  = READ_LANDMASK(MAP='ALASKA',PX=AM.PX,PY=AM.PY)    
          AMASK = READ_LANDMASK(MAP='ALASKA',PX=AM.PX,PY=AM.PY,/STRUCT)      
          AIMG(AMASK.OCEAN) = OCEAN_COLOR
          AIMG(AMASK.LAND)  = LAND_COLOR          
          LL = MAPS_2LONLAT('ALASKA',PX=AM.PX,PY=AM.PY)    
          ZWIN, LL.LAT    
          TV,AIMG
            CONTOUR,LL.LAT,LEVELS=AL_LATS,C_COLORS=254,C_THICK=3,XSTYLE=5,YSTYLE=5,XMARGIN=[0,0],YMARGIN=[0,0],POSITION=[0,0,1,1], CLOSED=0,/NOERASE,_EXTRA=_extra
            CONTOUR,LL.LON,LEVELS=AL_LONS,C_COLORS=254,C_THICK=3,XSTYLE=5,YSTYLE=5,XMARGIN=[0,0],YMARGIN=[0,0],POSITION=[0,0,1,1], CLOSED=0,/NOERASE,_EXTRA=_extra
            AIMG = TVRD()
          ZWIN            
          BB = WHERE_SETS(AC.COLOR)    
          ZWIN, AIMG           
          MAP_ALASKA
          TV, AIMG
          FOR N=0,N_ELEMENTS(BB)-1 DO BEGIN
            IF BB(N).N LE 1 THEN CONTINUE
            SUBS = WHERE_SETS_SUBS(BB(N))    
            CIRCLE,32, COLOR=BB(N).VALUE, FILL=1 
            PLOTS,AC(SUBS).LON,AC(SUBS).LAT,PSYM=8,COLOR=BB(N).VALUE,/NOCLIP,SYMSIZE=0.5, THICK=1.5
          ENDFOR            
          AIMG = TVRD()
          ZWIN
          
          HM = MAPS_SIZE('HAWAII')      
          HIMG  = READ_LANDMASK(MAP='HAWAII',PX=HM.PX,PY=HM.PY)    
          HMASK = READ_LANDMASK(MAP='HAWAII',PX=HM.PX,PY=HM.PY,/STRUCT)      
          HIMG(HMASK.OCEAN) = OCEAN_COLOR
          HIMG(HMASK.LAND)  = LAND_COLOR          
          LL = MAPS_2LONLAT('HAWAII',PX=HM.PX,PY=HM.PY)    
          ZWIN, LL.LAT    
          TV,HIMG
            CONTOUR,LL.LAT,LEVELS=HI_LATS,C_COLORS=254,C_THICK=3,XSTYLE=5,YSTYLE=5,XMARGIN=[0,0],YMARGIN=[0,0],POSITION=[0,0,1,1], CLOSED=0,/NOERASE,_EXTRA=_extra
            CONTOUR,LL.LON,LEVELS=HI_LONS,C_COLORS=254,C_THICK=3,XSTYLE=5,YSTYLE=5,XMARGIN=[0,0],YMARGIN=[0,0],POSITION=[0,0,1,1], CLOSED=0,/NOERASE,_EXTRA=_extra
            HIMG = TVRD()
          ZWIN            
          BB = WHERE_SETS(UC.COLOR)    
          ZWIN, HIMG           
          MAP_HAWAII
          TV, HIMG
          FOR N=0,N_ELEMENTS(BB)-1 DO BEGIN
            IF BB(N).N LE 1 THEN CONTINUE
            SUBS = WHERE_SETS_SUBS(BB(N))    
            CIRCLE,32, COLOR=BB(N).VALUE, FILL=1 
            PLOTS,HC(SUBS).LON,HC(SUBS).LAT,PSYM=8,COLOR=BB(N).VALUE,/NOCLIP,SYMSIZE=0.5, THICK=1.5
          ENDFOR            
          HIMG = TVRD()
          ZWIN
          
          PAL = 'PAL_SW3'
          SPECIAL_SCALE = '0_1'
          CBAR_PROD = 'NUM'
          CBAR_TITLE = 'Normalized Population Density'
          RGB_TABLE = CPAL_READ(PAL)
          LETW = 'a'
          LETE = 'b'
          LETK = 'c'
          LCOLW = 'BLACK'
          LCOLE = 'BLACK'
          LCOLK = 'BLACK'
        END
      ENDCASE    
            
      UPOS = [360,130,1410,760] & TXTXU = 400 & TXTYU = 725  
      APOS = [30,460,330,760]  & TXTXA = 40  & TXTYA = 725 
      HPOS = [30,130,330,430]  & TXTXH = 40  & TXTYH = 395
      
      ADD_COAST = 0
      MISS_COLOR=255
      
      IF PROD EQ 'POP' THEN BEGIN
        W = WINDOW(DIMENSIONS=[1440,790],BUFFER=BUFFER,MARGIN=0)    
        UIMAGE = IMAGE(UIMG,RGB_TABLE=CPAL_READ('PAL_SW3'),POSITION=UPOS,/CURRENT,/DEVICE)    
        MASK=BYTARR(90,630) & MASK(*)=255 & BLANK=IMAGE(MASK,POSITION=[300,130,390,780],  /CURRENT,/DEVICE,MARGIN=0,RGB_TABLE=CPAL_READ('PAL_SW3'))
        MASK=BYTARR(50,630) & MASK(*)=255 & BLANK=IMAGE(MASK,POSITION=[1390,130,1440,780],/CURRENT,/DEVICE,MARGIN=0,RGB_TABLE=CPAL_READ('PAL_SW3'))
        MASK=BYTARR(8,5) & MASK(*)=252 & BLANK=IMAGE(MASK,POSITION=[537,532,546,537],/CURRENT,/DEVICE,MARGIN=0,RGB_TABLE=CPAL_READ('PAL_SW3'))
        MASK=BYTARR(8,5) & MASK(*)=252 & BLANK=IMAGE(MASK,POSITION=[520,400,528,405],/CURRENT,/DEVICE,MARGIN=0,RGB_TABLE=CPAL_READ('PAL_SW3'))
        MASK=BYTARR(35,35) & MASK(*)=252 & BLANK=IMAGE(MASK,POSITION=[620,530,655,565],/CURRENT,/DEVICE,MARGIN=0,RGB_TABLE=CPAL_READ('PAL_SW3'))
        MASK=BYTARR(20,20) & MASK(*)=252 & BLANK=IMAGE(MASK,POSITION=[540,380,560,400],/CURRENT,/DEVICE,MARGIN=0,RGB_TABLE=CPAL_READ('PAL_SW3'))
        BOX   = POLYGON([390,1390,1390,390,390],[130,130,760,760,130],/CURRENT,/DEVICE,THICK=2,FILL_TRANSPARENCY=100)
        FOR S=0, N_ELEMENTS(ULATL)-1 DO SULAT = TEXT(389,ULATL(S)+125,NUM2STR(US_LATSR(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=1,VERTICAL_ALIGNMENT=0)
        FOR S=0, N_ELEMENTS(ULATR)-1 DO SULAT = TEXT(1391,ULATR(S)+125,NUM2STR(US_LATSL(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=0,VERTICAL_ALIGNMENT=0)
        FOR S=0, N_ELEMENTS(ULONU)-1 DO SULON = TEXT(ULONB(S)+360,129,NUM2STR(US_LONSB(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=0.5,VERTICAL_ALIGNMENT=1)
        FOR S=0, N_ELEMENTS(ULONB)-1 DO SULON = TEXT(ULONU(S)+360,761,NUM2STR(US_LONSU(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=0.5,VERTICAL_ALIGNMENT=0)
        
        AIMAGE = IMAGE(AIMG,RGB_TABLE=CPAL_READ('PAL_SW3'),POSITION=APOS,/CURRENT,/DEVICE)            
        BOX   = POLYGON([30,330,330,30,30],[460,460,760,760,460],/CURRENT,/DEVICE,THICK=2,FILL_TRANSPARENCY=100)
        FOR S=0, N_ELEMENTS(ALATL)-1 DO SALAT = TEXT(29, ALATL(S)+460,NUM2STR(AL_LATSR(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=1,VERTICAL_ALIGNMENT=0)
        FOR S=0, N_ELEMENTS(ALATR)-1 DO SALAT = TEXT(331,ALATR(S)+460,NUM2STR(AL_LATSL(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=0,VERTICAL_ALIGNMENT=0)
        FOR S=0, N_ELEMENTS(ALONB)-1 DO SALON = TEXT(ALONB(S)+30, 459,NUM2STR(AL_LONSB(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=0.5,VERTICAL_ALIGNMENT=1)
        FOR S=0, N_ELEMENTS(ALONU)-1 DO SALON = TEXT(ALONU(S)+30, 761,NUM2STR(AL_LONSU(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=0.5,VERTICAL_ALIGNMENT=0)
         
        HIMAGE = IMAGE(HIMG,RGB_TABLE=CPAL_READ('PAL_SW3'),POSITION=HPOS,/CURRENT,/DEVICE)            
        MASK=BYTARR(300,15) & MASK(*)=255 & BLANK=IMAGE(MASK,POSITION=[30,415,330,430],/CURRENT,/DEVICE,MARGIN=0,RGB_TABLE=CPAL_READ('PAL_SW3'))
       ; MASK=BYTARR(300,15) & MASK(*)=255 & BLANK=IMAGE(MASK,POSITION=[30,130,330,145],/CURRENT,/DEVICE,MARGIN=0,RGB_TABLE=CPAL_READ('PAL_SW3'))
        BOX   = POLYGON([30,330,330,30,30],[130,130,415,415,130],/CURRENT,/DEVICE,THICK=2,FILL_TRANSPARENCY=100)
        FOR S=0, N_ELEMENTS(HLATL)-1 DO HALAT = TEXT(29, HLATL(S)+130,NUM2STR(HI_LATSR(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=1,VERTICAL_ALIGNMENT=0)
        FOR S=0, N_ELEMENTS(HLATR)-1 DO HALAT = TEXT(331,HLATR(S)+130,NUM2STR(HI_LATSL(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=0,VERTICAL_ALIGNMENT=0)
        FOR S=0, N_ELEMENTS(HLONB)-1 DO HALON = TEXT(HLONB(S)+30, 129,NUM2STR(HI_LONSB(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=0.5,VERTICAL_ALIGNMENT=1)
        FOR S=0, N_ELEMENTS(HLONU)-1 DO HALON = TEXT(HLONU(S)+30, 416,NUM2STR(HI_LONSU(S))+'$\deg$',/CURRENT,/DEVICE,FONT_SIZE=LABEL_FONT_SIZE,COLOR='BLACK',ALIGNMENT=0.5,VERTICAL_ALIGNMENT=0)
       
        BAR = COLOR_BAR_SCALE_NG(PROD=CBAR_PROD,SPECIAL_SCALE=SPECIAL_SCALE,PX=220,PY=60,CHARSIZE=LABEL_FONT_SIZE,BACKGROUND=BACKGROUND,XDIM=1000,YDIM=30,PAL=PAL,LAYOUT=LAYOUT,$
             NO_NAME=no_name,NO_UNIT=no_unit,TITLE=CBAR_TITLE,VERTICAL=VERTICAL,HORIZONTAL=HORIZONTAL,BOTTOM=1,TOP=TOP,LEFT=LEFT,RIGHT=RIGHT,FONT='HELVETICA')
        W.SAVE,DIR_COMPS + PROD+'-US_MAPS.png',RESOLUTION=300
        W.CLOSE
      ENDIF  
     

   
    ENDFOR
stop
  ENDIF  
  
; ********************************************
  IF DO_NEC_WC_MAPS GE 1 THEN BEGIN
; ********************************************
    BUFFER = 0
    SKIP_HORZ = 1
    PRODS = ['POP','BATHY','CHLOR_A']
    WPX = 1366
    WPY = 2048
    EPX = 1366
    EPY = 1366
    LAND_COLOR=252
    OCEAN_COLOR=254
    BACKGROUND=255
    LABEL_FONT_SIZE=14
    WC_LATS = [30,35,40,45]
    WC_LONS = [-128,-122,-116]
    EC_LATS = [35,40,45]
    EC_LONS = [-78,-72,-66] 
    TXTX    = 0.075
    TXTY    = 0.955
    TXTS    = 30
    NEAR = 0.1
    WL = MAPS_2LONLAT('WC_ECO',  PX=683,PY=1024) & WLAT = WHERE_NEAREST(WL.LAT(0,*),FLOAT(WC_LATS),NEAR=NEAR) & WLON = WHERE_NEAREST(WL.LON(*,0),FLOAT(WC_LONS),NEAR=NEAR)
    EL = MAPS_2LONLAT('NEC2_ECO',PX=683,PY=683)  & ELAT = WHERE_NEAREST(EL.LAT(0,*),FLOAT(EC_LATS),NEAR=NEAR) & ELON = WHERE_NEAREST(EL.LON(*,0),FLOAT(EC_LONS),NEAR=NEAR)
    
    FOR P=0, N_ELEMENTS(PRODS)-1 DO BEGIN
      PROD = PRODS(P)
      WSTRUCT = []
      CASE PROD OF 
        'CHLOR_A': BEGIN
          CHL     = STRUCT_SD_READ(FIX_PATH(!S.DIR_DATASETS + 'OC-SEA_AQU-9_4\GEQ\STATS\CHLOR_A-OC\ANNUAL_1998_2011-SEA_AQU-9_4-GEQ-CHLOR_A-OC-MEAN.SAVE'),STRUCT=STRUCT)
          WSTRUCT = STRUCT_SD_REMAP(STRUCT=STRUCT,MAP_OUT='WC_ECO',PX=WPX,PY=WPY)
          CHL     = STRUCT_SD_READ(FIX_PATH(!S.DIR_DATASETS + 'OC-SEA_AQU-9_4\GEQ\STATS\CHLOR_A-OC\ANNUAL_1998_2011-SEA_AQU-9_4-GEQ-CHLOR_A-OC-MEAN.SAVE'),STRUCT=STRUCT)
          ESTRUCT = STRUCT_SD_REMAP(STRUCT=STRUCT,MAP_OUT='NEC2_ECO',PX=EPX,PY=EPY)
          PAL = 'PAL_SW3'
          SPECIAL_SCALE = 'MEDIUM'
          CBAR_PROD = 'CHLOROPHYLL'
          CBAR_TITLE = UNITS('CHLOROPHYLL')
          LETW = 'e'
          LETE = 'f'
          LCOLW = 'BLACK'
          LCOLE = 'BLACK'
        END
        'BATHY': BEGIN
          WC = STRUCT_SD_READ(FIX_PATH(!S.DIR_BATHY + 'SRTM30PLUS-WC_ECO-PXY_'  +NUM2STR(WPX)+'_'+NUM2STR(WPY)+'-BATHY-SMOOTH_5.SAVE'),STRUCT=WSTRUCT)
          EC = STRUCT_SD_READ(FIX_PATH(!S.DIR_BATHY + 'SRTM30PLUS-NEC2_ECO-PXY_'+NUM2STR(EPX)+'_'+NUM2STR(EPY)+'-BATHY-SMOOTH_5.SAVE'),STRUCT=ESTRUCT)
          PAL = 'PAL_BATHY'
          SPECIAL_SCALE = ''
          CBAR_PROD = 'BATHY' 
          CBAR_TITLE = UNITS('BATHY')
          LETW = 'c'
          LETE = 'd'
          LCOLW = 'WHITE'
          LCOLE = 'BLACK'
        END
        'POP': BEGIN  
          WC = IDL_RESTORE(!S.DIR_PROJECTS + 'ECOAP/GLOBAL_MAPS/HumanImpacts/BINNED_TRANSFORMED_POPULATION_DATA-WC_ECO.SAVE') 
          EC = IDL_RESTORE(!S.DIR_PROJECTS + 'ECOAP/GLOBAL_MAPS/HumanImpacts/BINNED_TRANSFORMED_POPULATION_DATA-NEC2_ECO.SAVE') 
          WC = WC[WHERE(WC.DATA NE 0)]
          EC = EC[WHERE(EC.DATA NE 0)]
          WC.COLOR = SD_SCALES(WC.DATA,PROD='NUM',/DATA2BIN,SPECIAL_SCALE='0_1.0')  
          EC.COLOR = SD_SCALES(EC.DATA,PROD='NUM',/DATA2BIN,SPECIAL_SCALE='0_1.0')
          PAL = 'PAL_SW3'
          SPECIAL_SCALE = '0_1'
          CBAR_PROD = 'NUM'
          CBAR_TITLE = 'Normalized Population Density'
          RGB_TABLE = CPAL_READ(PAL)
          LETW = 'a'
          LETE = 'b'
          LCOLW = 'BLACK'
          LCOLE = 'BLACK'
        END
      ENDCASE    
      
      IF WSTRUCT EQ [] THEN EDIMS = [763,803]         ELSE EDIMS = [763,803]
      IF WSTRUCT EQ [] THEN EPOS  = [40,125,723,803]  ELSE EPOS  = [40,125,723,803]
      IF WSTRUCT EQ [] THEN EDIF  = 125               ELSE EDIF  = 125 
      
      EM = MAPS_SIZE('NEC2_ECO')      
      EIMG = READ_LANDMASK(MAP='NEC2_ECO',PX=EM.PX,PY=EM.PY)    
      EMASK = READ_LANDMASK(MAP='NEC2_ECO',PX=EM.PX,PY=EM.PY,/STRUCT)      
      EIMG(EMASK.OCEAN) = OCEAN_COLOR
      EIMG(EMASK.LAND)  = LAND_COLOR
      
      WM = MAPS_SIZE('WC_ECO')
      WIMG = READ_LANDMASK(MAP='WC_ECO',PX=WM.PX,PY=WM.PY)    
      WMASK = READ_LANDMASK(MAP='WC_ECO',PX=WM.PX,PY=WM.PY,/STRUCT)
      WIMG(WMASK.OCEAN) = OCEAN_COLOR
      WIMG(WMASK.LAND)  = LAND_COLOR
            
      IF PROD EQ 'POP' THEN BEGIN                 
        E = WINDOW(DIMENSIONS=EDIMS,BUFFER=BUFFER)        
        EIMAGE = IMAGE(EIMG,RGB_TABLE=RGB_TABLE,IMAGE_DIMENSIONS=[EM.PX,EM.PY],BACKGROUND_COLOR=RGB_TABLE(*,BACKGROUND),POSITION=EPOS,/DEVICE,/CURRENT);MARGIN=[0,22,0,22],         
        BB = WHERE_SETS(EC.COLOR)            
        FOR N=0,N_ELEMENTS(BB)-1 DO BEGIN
          IF BB(N).N LE 1 THEN CONTINUE
          SUBS = WHERE_SETS_SUBS(BB(N))
          COLOR = RGB_TABLE(*,BB(N).VALUE)
          PRINT, 'Plotting set ' + NUM2STR(N+1) + ' of ' + NUM2STR(N_ELEMENTS(BB)) + ' (' + NUM2STR((FLOAT(N+1)/FLOAT(N_ELEMENTS(BB))*100),DECIMALS=2) + '%)'
          EP = PLOT(EC(SUBS).X,EC(SUBS).Y,/CURRENT,/DEVICE,AXIS_STYLE=0,MARGIN=0,LINESTYLE=6,SYMBOL='DOT',/SYM_FILLED,SYM_COLOR=COLOR,SYM_SIZE=5,/OVERPLOT)      
        ENDFOR  
        FOR S=0, N_ELEMENTS(ELAT)-1 DO SELAT = SYMBOL(40,ELAT(S)+EDIF, '_',SYM_SIZE=2,SYM_COLOR='BLACK',SYM_THICK=5,/SYM_FILLED,/CURRENT,/DEVICE,LABEL_STRING=NUM2STR(EC_LATS(S)),LABEL_POSITION='L',LABEL_FONT_SIZE=LABEL_FONT_SIZE)               
        FOR S=0, N_ELEMENTS(ELON)-1 DO SELON = SYMBOL(ELON(S)+40,EDIF, '|',SYM_SIZE=2,SYM_COLOR='BLACK',SYM_THICK=5,/SYM_FILLED,/CURRENT,/DEVICE,LABEL_STRING=NUM2STR(EC_LONS(S)),LABEL_POSITION='B',LABEL_FONT_SIZE=LABEL_FONT_SIZE)
        TXT = TEXT(TXTX,TXTY,LETE,FONT_SIZE=TXTS,COLOR=LCOLE)
        BAR = COLOR_BAR_SCALE_NG(PROD=CBAR_PROD,SPECIAL_SCALE=SPECIAL_SCALE,PX=40,PY=50,CHARSIZE=14,BACKGROUND=BACKGROUND,XDIM=683,YDIM=40,PAL=PAL,LAYOUT=LAYOUT,$
            NO_NAME=no_name,NO_UNIT=no_unit,TITLE=CBAR_TITLE,VERTICAL=VERTICAL,HORIZONTAL=HORIZONTAL,BOTTOM=1,TOP=TOP,LEFT=LEFT,RIGHT=RIGHT,FONT='HELVETICA')
        
        E.SAVE,DIR_PNGS+PROD+'-NEC-VERT.png',RESOLUTION=300
        E.CLOSE
                        
        W = WINDOW(DIMENSIONS=[763,1064],BUFFER=BUFFER)    
        WIMAGE = IMAGE(WIMG,RGB_TABLE=RGB_TABLE,IMAGE_DIMENSIONS=[WM.PX,WM.PY],BACKGROUND_COLOR=RGB_TABLE(*,BACKGROUND),POSITION=[40,40,723,1064],/DEVICE,/CURRENT);MARGIN=[0,22,0,22],        
        BB = WHERE_SETS(WC.COLOR)    
        FOR N=0,N_ELEMENTS(BB)-1 DO BEGIN
          IF BB(N).N LE 1 THEN CONTINUE
          SUBS = WHERE_SETS_SUBS(BB(N))
          COLOR = RGB_TABLE(*,BB(N).VALUE)
          PRINT, 'Plotting set ' + NUM2STR(N+1) + ' of ' + NUM2STR(N_ELEMENTS(BB)) + ' (' + NUM2STR((FLOAT(N+1)/FLOAT(N_ELEMENTS(BB))*100),DECIMALS=2) + '%)'
          WP = PLOT(WC(SUBS).X,WC(SUBS).Y,/CURRENT,/DEVICE,AXIS_STYLE=0,MARGIN=0,LINESTYLE=6,SYMBOL='DOT',/SYM_FILLED,SYM_COLOR=COLOR,SYM_SIZE=5,/OVERPLOT)      
        ENDFOR  
        TXT = TEXT(TXTX,TXTY,LETW,FONT_SIZE=TXTS,COLOR=LCOLW)        
        FOR S=0, N_ELEMENTS(WLAT)-1 DO SWLAT = SYMBOL(40,WLAT(S)+40, '_', SYM_SIZE=2,SYM_COLOR='BLACK',SYM_THICK=5,/SYM_FILLED,/CURRENT,/DEVICE,LABEL_STRING=NUM2STR(WC_LATS(S)),LABEL_POSITION='L',LABEL_FONT_SIZE=LABEL_FONT_SIZE)      
        FOR S=0, N_ELEMENTS(WLON)-1 DO SWLON = SYMBOL(WLON(S)+40,40,  '|',SYM_SIZE=2,SYM_COLOR='BLACK',SYM_THICK=5,/SYM_FILLED,/CURRENT,/DEVICE,LABEL_STRING=NUM2STR(WC_LONS(S)),LABEL_POSITION='B',LABEL_FONT_SIZE=LABEL_FONT_SIZE)
        W.SAVE,DIR_PNGS+PROD+'-WC-VERT.png',RESOLUTION=300
        W.CLOSE
      ENDIF ELSE BEGIN        
        
        E = WINDOW(DIMENSIONS=EDIMS,BUFFER=BUFFER)
        EIMAGE = STRUCT_SD_2IMAGE_NG(ESTRUCT,BUFFER=BUFFER,PAL=PAL,BACKGROUND=BACKGROUND,/ADD_LAND,SPECIAL_SCALE=SPECIAL_SCALE,$
                 IMG_DIMENSIONS=[EM.PX,EM.PY],IMG_POSITION=EPOS,/CURRENT,/DEVICE,$ ;IMG_LOCATION=[803,200],,
                 ADD_LONLAT_LINES=0,ADD_LONLAT_NAMES=0,LONLAT_THICK=4,LONLAT_COLOR=0,LATS=EC_LATS,LONS=EC_LONS)
        FOR S=0, N_ELEMENTS(ELAT)-1 DO SELAT = SYMBOL(40,ELAT(S)+EDIF, '_',SYM_SIZE=2,SYM_COLOR='BLACK',SYM_THICK=5,/SYM_FILLED,/CURRENT,/DEVICE,LABEL_STRING=NUM2STR(EC_LATS(S)),LABEL_POSITION='L',LABEL_FONT_SIZE=LABEL_FONT_SIZE)               
        FOR S=0, N_ELEMENTS(ELON)-1 DO SELON = SYMBOL(ELON(S)+40,EDIF, '|',SYM_SIZE=2,SYM_COLOR='BLACK',SYM_THICK=5,/SYM_FILLED,/CURRENT,/DEVICE,LABEL_STRING=NUM2STR(EC_LONS(S)),LABEL_POSITION='B',LABEL_FONT_SIZE=LABEL_FONT_SIZE)
        TXT = TEXT(TXTX,TXTY,LETE,FONT_SIZE=TXTS,COLOR=LCOLE)
        BAR = COLOR_BAR_SCALE_NG(PROD=CBAR_PROD,SPECIAL_SCALE=SPECIAL_SCALE,PX=40,PY=50,CHARSIZE=14,BACKGROUND=BACKGROUND,XDIM=683,YDIM=40,PAL=PAL,LAYOUT=LAYOUT,$
            NO_NAME=no_name,NO_UNIT=no_unit,TITLE=CBAR_TITLE,VERTICAL=VERTICAL,HORIZONTAL=HORIZONTAL,BOTTOM=1,TOP=TOP,LEFT=LEFT,RIGHT=RIGHT,FONT='HELVETICA')
        E.SAVE,DIR_PNGS+PROD+'-NEC-VERT.png',RESOLUTION=300
        E.CLOSE
        IF WSTRUCT NE [] THEN BEGIN
          W = WINDOW(DIMENSIONS=[763,1046],BUFFER=BUFFER)        
          WIMAGE = STRUCT_SD_2IMAGE_NG(WSTRUCT,BUFFER=BUFFER,PAL=PAL,BACKGROUND=BACKGROUND,/ADD_LAND,SPECIAL_SCALE=SPECIAL_SCALE,$
                  IMG_DIMENSIONS=[WM.PX,WM.PY],IMG_POSITION=[40,40,723,1046],/CURRENT,/DEVICE,$ ; IMG_LOCATION=[100,200],
                  ADD_LONLAT_LINES=0,ADD_LONLAT_NAMES=0,LONLAT_THICK=4,LONLAT_COLOR=0,LATS=WC_LATS,LONS=WC_LONS);,/ADD_MASK,MASK_SUBS=OK_MASK,MASK_COLOR=MASK_COLOR)        
        
          FOR S=0, N_ELEMENTS(WLAT)-1 DO SWLAT = SYMBOL(40,WLAT(S)+40, '_', SYM_SIZE=2,SYM_COLOR='BLACK',SYM_THICK=5,/SYM_FILLED,/CURRENT,/DEVICE,LABEL_STRING=NUM2STR(WC_LATS(S)),LABEL_POSITION='L',LABEL_FONT_SIZE=LABEL_FONT_SIZE)      
          FOR S=0, N_ELEMENTS(WLON)-1 DO SWLON = SYMBOL(WLON(S)+40,40,  '|',SYM_SIZE=2,SYM_COLOR='BLACK',SYM_THICK=5,/SYM_FILLED,/CURRENT,/DEVICE,LABEL_STRING=NUM2STR(WC_LONS(S)),LABEL_POSITION='B',LABEL_FONT_SIZE=LABEL_FONT_SIZE)                           
          TXT = TEXT(TXTX,TXTY,LETW,FONT_SIZE=TXTS,COLOR=LCOLW)
          W.SAVE,DIR_PNGS+PROD+'-WC-VERT.png',RESOLUTION=300
          W.CLOSE
        ENDIF
      ENDELSE
      
      FILES = [DIR_PNGS+PROD+'-WC-VERT.png',DIR_PNGS+PROD+'-EC-VERT.png']
      IF N_ELEMENTS(FILES) NE 2 THEN CONTINUE
      OUTFILE = DIR_COMPS + PROD+'-NEC_WC-VERT.png'
      IMAGE_WELD_PAGE,FILES=FILES,ROWS=2,COLS=1,PAL='PAL_SW3',PNGFILE=OUTFILE,SPACE=20,PX=px,py=py,BACKGROUND=255,/NOTRIM
      
      IF KEYWORD_SET(SKIP_HORZ) THEN GOTO, SKIP_HORZ      
      W = WINDOW(DIMENSIONS=[1466,1149],LAYOUT=[2,1,0],MARGIN=0.1,BUFFER=BUFFER)     
      IF PROD EQ 'POP' THEN BEGIN          
        WIMAGE = IMAGE(WIMG,RGB_TABLE=RGB_TABLE,IMAGE_DIMENSIONS=[WM.PX,WM.PY],BACKGROUND_COLOR=RGB_TABLE(*,BACKGROUND),POSITION=[40,125,723,1149],/DEVICE,/CURRENT);MARGIN=[0,22,0,22],        
        BB = WHERE_SETS(WC.COLOR)    
        FOR N=0,N_ELEMENTS(BB)-1 DO BEGIN
          IF BB(N).N LE 1 THEN CONTINUE
          SUBS = WHERE_SETS_SUBS(BB(N))
          COLOR = RGB_TABLE(*,BB(N).VALUE)
          PRINT, 'Plotting set ' + NUM2STR(N+1) + ' of ' + NUM2STR(N_ELEMENTS(BB)) + ' (' + NUM2STR((FLOAT(N+1)/FLOAT(N_ELEMENTS(BB))*100),DECIMALS=2) + '%)'
          WP = PLOT(WC(SUBS).X,WC(SUBS).Y,/CURRENT,/DEVICE,AXIS_STYLE=0,MARGIN=0,LINESTYLE=6,SYMBOL='DOT',/SYM_FILLED,SYM_COLOR=COLOR,SYM_SIZE=5,/OVERPLOT)      
        ENDFOR  
                
        EIMAGE = IMAGE(EIMG,RGB_TABLE=RGB_TABLE,IMAGE_DIMENSIONS=[EM.PX,EM.PY],BACKGROUND_COLOR=RGB_TABLE(*,BACKGROUND),POSITION=[743,125,1426,1149],/DEVICE,/CURRENT);MARGIN=[0,22,0,22],        
        BB = WHERE_SETS(EC.COLOR)    
        FOR N=0,N_ELEMENTS(BB)-1 DO BEGIN
          IF BB(N).N LE 1 THEN CONTINUE
          SUBS = WHERE_SETS_SUBS(BB(N))
          COLOR = RGB_TABLE(*,BB(N).VALUE)
          PRINT, 'Plotting set ' + NUM2STR(N+1) + ' of ' + NUM2STR(N_ELEMENTS(BB)) + ' (' + NUM2STR((FLOAT(N+1)/FLOAT(N_ELEMENTS(BB))*100),DECIMALS=2) + '%)'
          EP = PLOT(EC(SUBS).X,EC(SUBS).Y,/CURRENT,/DEVICE,AXIS_STYLE=0,MARGIN=0,LINESTYLE=6,SYMBOL='DOT',/SYM_FILLED,SYM_COLOR=COLOR,SYM_SIZE=5,/OVERPLOT)      
        ENDFOR          
        ; get XY coordinates of the LAKE and LAKESIDE subscripts and overplot onto image
      ENDIF ELSE BEGIN            
        WIMAGE = STRUCT_SD_2IMAGE_NG(WSTRUCT,BUFFER=BUFFER,PAL=PAL,BACKGROUND=BACKGROUND,/ADD_LAND,SPECIAL_SCALE=SPECIAL_SCALE,$
                IMG_DIMENSIONS=[WM.PX,WM.PY],IMG_POSITION=[40,125,723,1149],/CURRENT,/DEVICE,$ ; IMG_LOCATION=[100,200],
                ADD_LONLAT_LINES=0,ADD_LONLAT_NAMES=0,LONLAT_THICK=4,LONLAT_COLOR=0,LATS=WC_LATS,LONS=WC_LONS);,/ADD_MASK,MASK_SUBS=OK_MASK,MASK_COLOR=MASK_COLOR)
        EIMAGE = STRUCT_SD_2IMAGE_NG(ESTRUCT,BUFFER=BUFFER,PAL=PAL,BACKGROUND=BACKGROUND,/ADD_LAND,SPECIAL_SCALE=SPECIAL_SCALE,$
               IMG_DIMENSIONS=[EM.PX,EM.PY],IMG_POSITION=[743,125,1426,803],/CURRENT,/DEVICE,$ ;IMG_LOCATION=[803,200],
               ADD_LONLAT_LINES=0,ADD_LONLAT_NAMES=0,LONLAT_THICK=4,LONLAT_COLOR=0,LATS=EC_LATS,LONS=EC_LONS)
      ENDELSE        
      
      FOR S=0, N_ELEMENTS(WLAT)-1 DO SWLAT = SYMBOL(40,  WLAT(S)+125, '_',SYM_SIZE=2,SYM_COLOR='BLACK',SYM_THICK=5,/SYM_FILLED,/CURRENT,/DEVICE,LABEL_STRING=NUM2STR(WC_LATS(S)),LABEL_POSITION='L')
      FOR S=0, N_ELEMENTS(ELAT)-1 DO SELAT = SYMBOL(1426,ELAT(S)+125, '_',SYM_SIZE=2,SYM_COLOR='BLACK',SYM_THICK=5,/SYM_FILLED,/CURRENT,/DEVICE,LABEL_STRING=NUM2STR(EC_LATS(S)),LABEL_POSITION='R')
      FOR S=0, N_ELEMENTS(WLON)-1 DO SWLON = SYMBOL(WLON(S)+40, 125,  '|',SYM_SIZE=2,SYM_COLOR='BLACK',SYM_THICK=5,/SYM_FILLED,/CURRENT,/DEVICE,LABEL_STRING=NUM2STR(WC_LONS(S)),LABEL_POSITION='B')
      FOR S=0, N_ELEMENTS(ELON)-1 DO SELON = SYMBOL(ELON(S)+743,125,  '|',SYM_SIZE=2,SYM_COLOR='BLACK',SYM_THICK=5,/SYM_FILLED,/CURRENT,/DEVICE,LABEL_STRING=NUM2STR(EC_LONS(S)),LABEL_POSITION='B')
                   
      BAR = COLOR_BAR_SCALE_NG(PROD=CBAR_PROD,SPECIAL_SCALE=SPECIAL_SCALE,PX=391,PY=50,CHARSIZE=14,BACKGROUND=BACKGROUND,XDIM=683,YDIM=40,PAL=PAL,LAYOUT=LAYOUT,$
          NO_NAME=no_name,NO_UNIT=no_unit,TITLE=CBAR_TITLE,VERTICAL=VERTICAL,HORIZONTAL=HORIZONTAL,BOTTOM=1,TOP=TOP,LEFT=LEFT,RIGHT=RIGHT,FONT='HELVETICA')
         
      W.SAVE,DIR_COMPS + PROD+'-WC_EC.png',RESOLUTION=300
      W.CLOSE    
      SKIP_HORZ:    
    ENDFOR
    
    FILES = []
    FOR P=0, N_ELEMENTS(PRODS)-1 DO FILES = [FILES,!S.DIR_PROJECTS + 'ECOAP/GLOBAL_MAPS/'+PRODS(P)+'-WC-VERT.png']
    FOR P=0, N_ELEMENTS(PRODS)-1 DO FILES = [FILES,!S.DIR_PROJECTS + 'ECOAP/GLOBAL_MAPS/'+PRODS(P)+'-NEC-VERT.png']
    OUTFILE = DIR_COMPS + 'MERGED_PRODS-NEC_WC-VERT.png'
    IMAGE_WELD_PAGE,FILES=FILES,ROWS=2,COLS=3,PAL='PAL_SW3',PNGFILE=OUTFILE,SPACE=20,PX=px,py=py,BACKGROUND=255,/NOTRIM
    
  ENDIF    
  
  
; ********************************************
  IF DO_EC_WC_MAPS GE 1 THEN BEGIN
; ********************************************
    BUFFER = 0
    SKIP_HORZ = 1
    PRODS = ['POP','BATHY','CHLOR_A'];,'SST_2050_2075','SST_2075_2100','PH_1981_2000','PH_2050_2075','PH_2075_2100']
    PX = 1366
    PY = 2048
    LAND_COLOR=252
    OCEAN_COLOR=254
    BACKGROUND=255
    LABEL_FONT_SIZE=14
    WC_LATS = [30,35,40,45]
    WC_LONS = [-128,-122,-116]
    EC_LATS = [30,35,40,45]
    EC_LONS = [-78,-72,-66] 
    TXTX    = 0.075
    TXTY    = 0.955
    TXTS    = 30
    NEAR = 0.1
    WL = MAPS_2LONLAT('WC_ECO',PX=683,PY=1024) & WLAT = WHERE_NEAREST(WL.LAT(0,*),FLOAT(WC_LATS),NEAR=NEAR) & WLON = WHERE_NEAREST(WL.LON(*,0),FLOAT(WC_LONS),NEAR=NEAR)
    EL = MAPS_2LONLAT('EC_ECO',PX=683,PY=1024) & ELAT = WHERE_NEAREST(EL.LAT(0,*),FLOAT(EC_LATS),NEAR=NEAR) & ELON = WHERE_NEAREST(EL.LON(*,0),FLOAT(EC_LONS),NEAR=NEAR)
    
    FOR P=0, N_ELEMENTS(PRODS)-1 DO BEGIN
      PROD = PRODS(P)
      WSTRUCT = []
      CASE PROD OF 
        'SST_2050_2075': BEGIN
          SST     = STRUCT_SD_READ(FIX_PATH(!S.DIR_PROJECTS + 'ECOAP/GLOBAL_MAPS/NETCDF/ANNUAL_2050_2075-SST-DIF.SAVE'),STRUCT=STRUCT)
          ESTRUCT = STRUCT_SD_REMAP(STRUCT=STRUCT,MAP_OUT='EC_ECO',PX=PX,PY=PY)    
          PAL = 'PAL_ANOM_RWB'
          SPECIAL_SCALE = '4'
          CBAR_PROD = 'DIF' 
          CBAR_TITLE = 'SST Difference'
        END
        'SST_2075_2100': BEGIN
          SST     = STRUCT_SD_READ(FIX_PATH(!S.DIR_PROJECTS + 'ECOAP/GLOBAL_MAPS/NETCDF/ANNUAL_2075_2100-SST-DIF.SAVE'),STRUCT=STRUCT)
          ESTRUCT = STRUCT_SD_REMAP(STRUCT=STRUCT,MAP_OUT='EC_ECO',PX=PX,PY=PY)
          PAL = 'PAL_ANOM_RWB'
          SPECIAL_SCALE = '4'
          CBAR_PROD = 'DIF'    
          CBAR_TITLE = 'SST Difference'
        END
        'PH_1981_2000': BEGIN
          PH      = STRUCT_SD_READ(FIX_PATH(!S.DIR_PROJECTS + 'ECOAP/GLOBAL_MAPS/NETCDF/ANNUAL_1981_2000-pH-MEAN.SAVE'),STRUCT=STRUCT)
          ESTRUCT = STRUCT_SD_REMAP(STRUCT=STRUCT,MAP_OUT='EC_ECO',PX=PX,PY=PY)    
          PAL = 'PAL_SW3'
          SPECIAL_SCALE = '7.8_8.2'
          CBAR_PROD = 'PH'
          CBAR_TITLE = 'pH'
        END
        'PH_2050_2075': BEGIN
          PH      = STRUCT_SD_READ(FIX_PATH(!S.DIR_PROJECTS + 'ECOAP/GLOBAL_MAPS/NETCDF/ANNUAL_2050_2075-pH-MEAN.SAVE'),STRUCT=STRUCT)
          ESTRUCT = STRUCT_SD_REMAP(STRUCT=STRUCT,MAP_OUT='EC_ECO',PX=PX,PY=PY)    
          PAL = 'PAL_SW3'
          SPECIAL_SCALE = '7.8_8.2'
          CBAR_PROD = 'PH'
          CBAR_TITLE = 'pH'
        END
        'PH_2075_2100': BEGIN
          PH      = STRUCT_SD_READ(FIX_PATH(!S.DIR_PROJECTS + 'ECOAP/GLOBAL_MAPS/NETCDF/ANNUAL_2075_2100-pH-MEAN.SAVE'),STRUCT=STRUCT)
          ESTRUCT = STRUCT_SD_REMAP(STRUCT=STRUCT,MAP_OUT='EC_ECO',PX=PX,PY=PY)
          PAL = 'PAL_SW3'
          SPECIAL_SCALE = '7.8_8.2'
          CBAR_PROD = 'PH'
          CBAR_TITLE = 'pH'    
        END
        'CHLOR_A': BEGIN
          CHL     = STRUCT_SD_READ(FIX_PATH(!S.DIR_DATASETS + 'OC-SEA_AQU-9_4\GEQ\STATS\CHLOR_A-OC\ANNUAL_1998_2011-SEA_AQU-9_4-GEQ-CHLOR_A-OC-MEAN.SAVE'),STRUCT=STRUCT)
          WSTRUCT = STRUCT_SD_REMAP(STRUCT=STRUCT,MAP_OUT='WC_ECO',PX=PX,PY=PY)
          CHL     = STRUCT_SD_READ(FIX_PATH(!S.DIR_DATASETS + 'OC-SEA_AQU-9_4\GEQ\STATS\CHLOR_A-OC\ANNUAL_1998_2011-SEA_AQU-9_4-GEQ-CHLOR_A-OC-MEAN.SAVE'),STRUCT=STRUCT)
          ESTRUCT = STRUCT_SD_REMAP(STRUCT=STRUCT,MAP_OUT='EC_ECO',PX=PX,PY=PY)
          PAL = 'PAL_SW3'
          SPECIAL_SCALE = 'LOW'
          CBAR_PROD = 'CHLOROPHYLL'
          CBAR_TITLE = UNITS('CHLOROPHYLL')
          LETW = 'e'
          LETE = 'f'
          LCOLW = 'BLACK'
          LCOLE = 'BLACK'
        END
        'BATHY': BEGIN
          WC = STRUCT_SD_READ(FIX_PATH(!S.DIR_BATHY + 'SRTM30PLUS-WC_ECO-PXY_'+NUM2STR(PX)+'_'+NUM2STR(PY)+'-BATHY-SMOOTH_5.SAVE'),STRUCT=WSTRUCT)
          EC = STRUCT_SD_READ(FIX_PATH(!S.DIR_BATHY + 'SRTM30PLUS-EC_ECO-PXY_'+NUM2STR(PX)+'_'+NUM2STR(PY)+'-BATHY-SMOOTH_5.SAVE'),STRUCT=ESTRUCT)
          PAL = 'PAL_BATHY'
          SPECIAL_SCALE = ''
          CBAR_PROD = 'BATHY' 
          CBAR_TITLE = UNITS('BATHY')
          LETW = 'c'
          LETE = 'd'
          LCOLW = 'WHITE'
          LCOLE = 'BLACK'
        END
        'POP': BEGIN  
          WC = IDL_RESTORE(!S.DIR_PROJECTS + 'ECOAP/GLOBAL_MAPS/HumanImpacts/BINNED_TRANSFORMED_POPULATION_DATA-WC_ECO.SAVE') 
          EC = IDL_RESTORE(!S.DIR_PROJECTS + 'ECOAP/GLOBAL_MAPS/HumanImpacts/BINNED_TRANSFORMED_POPULATION_DATA-EC_ECO.SAVE') 
          WC = WC[WHERE(WC.DATA NE 0)]
          EC = EC[WHERE(EC.DATA NE 0)]
          WC.COLOR = SD_SCALES(WC.DATA,PROD='NUM',/DATA2BIN,SPECIAL_SCALE='0_1.0')  
          EC.COLOR = SD_SCALES(EC.DATA,PROD='NUM',/DATA2BIN,SPECIAL_SCALE='0_1.0')
          PAL = 'PAL_SW3'
          SPECIAL_SCALE = '0_1'
          CBAR_PROD = 'NUM'
          CBAR_TITLE = 'Normalized Population Density'
          RGB_TABLE = CPAL_READ(PAL)
          LETW = 'a'
          LETE = 'b'
          LCOLW = 'BLACK'
          LCOLE = 'BLACK'
        END
      ENDCASE    
      
      IF WSTRUCT EQ [] THEN EDIMS = [763,1149]        ELSE EDIMS = [763,1149]
      IF WSTRUCT EQ [] THEN EPOS  = [40,125,723,1149] ELSE EPOS  = [40,125,723,1149]
      IF WSTRUCT EQ [] THEN EDIF  = 125               ELSE EDIF  = 125 
      
      EM = MAPS_SIZE('EC_ECO')      
      EIMG = READ_LANDMASK(MAP='EC_ECO',PX=EM.PX,PY=EM.PY)    
      EMASK = READ_LANDMASK(MAP='EC_ECO',PX=EM.PX,PY=EM.PY,/STRUCT)      
      EIMG(EMASK.OCEAN) = OCEAN_COLOR
      EIMG(EMASK.LAND)  = LAND_COLOR
      
      WM = MAPS_SIZE('WC_ECO')
      WIMG = READ_LANDMASK(MAP='WC_ECO',PX=WM.PX,PY=WM.PY)    
      WMASK = READ_LANDMASK(MAP='WC_ECO',PX=WM.PX,PY=WM.PY,/STRUCT)
      WIMG(WMASK.OCEAN) = OCEAN_COLOR
      WIMG(WMASK.LAND)  = LAND_COLOR
            
      IF PROD EQ 'POP' THEN BEGIN                 
        E = WINDOW(DIMENSIONS=EDIMS,BUFFER=BUFFER)        
        EIMAGE = IMAGE(EIMG,RGB_TABLE=RGB_TABLE,IMAGE_DIMENSIONS=[EM.PX,EM.PY],BACKGROUND_COLOR=RGB_TABLE(*,BACKGROUND),POSITION=EPOS,/DEVICE,/CURRENT);MARGIN=[0,22,0,22],         
        BB = WHERE_SETS(EC.COLOR)            
        FOR N=0,N_ELEMENTS(BB)-1 DO BEGIN
          IF BB(N).N LE 1 THEN CONTINUE
          SUBS = WHERE_SETS_SUBS(BB(N))
          COLOR = RGB_TABLE(*,BB(N).VALUE)
          PRINT, 'Plotting set ' + NUM2STR(N+1) + ' of ' + NUM2STR(N_ELEMENTS(BB)) + ' (' + NUM2STR((FLOAT(N+1)/FLOAT(N_ELEMENTS(BB))*100),DECIMALS=2) + '%)'
          EP = PLOT(EC(SUBS).X,EC(SUBS).Y,/CURRENT,/DEVICE,AXIS_STYLE=0,MARGIN=0,LINESTYLE=6,SYMBOL='DOT',/SYM_FILLED,SYM_COLOR=COLOR,SYM_SIZE=5,/OVERPLOT)      
        ENDFOR  
        FOR S=0, N_ELEMENTS(ELAT)-1 DO SELAT = SYMBOL(40,ELAT(S)+EDIF, '_',SYM_SIZE=2,SYM_COLOR='BLACK',SYM_THICK=5,/SYM_FILLED,/CURRENT,/DEVICE,LABEL_STRING=NUM2STR(EC_LATS(S)),LABEL_POSITION='L',LABEL_FONT_SIZE=LABEL_FONT_SIZE)               
        FOR S=0, N_ELEMENTS(ELON)-1 DO SELON = SYMBOL(ELON(S)+40,EDIF, '|',SYM_SIZE=2,SYM_COLOR='BLACK',SYM_THICK=5,/SYM_FILLED,/CURRENT,/DEVICE,LABEL_STRING=NUM2STR(EC_LONS(S)),LABEL_POSITION='B',LABEL_FONT_SIZE=LABEL_FONT_SIZE)
        TXT = TEXT(TXTX,TXTY,LETE,FONT_SIZE=TXTS,COLOR=LCOLE)
        BAR = COLOR_BAR_SCALE_NG(PROD=CBAR_PROD,SPECIAL_SCALE=SPECIAL_SCALE,PX=40,PY=50,CHARSIZE=14,BACKGROUND=BACKGROUND,XDIM=683,YDIM=40,PAL=PAL,LAYOUT=LAYOUT,$
            NO_NAME=no_name,NO_UNIT=no_unit,TITLE=CBAR_TITLE,VERTICAL=VERTICAL,HORIZONTAL=HORIZONTAL,BOTTOM=1,TOP=TOP,LEFT=LEFT,RIGHT=RIGHT,FONT='HELVETICA')
        
        E.SAVE,DIR_PNGS+PROD+'-EC-VERT.png',RESOLUTION=300
        E.CLOSE
                        
        W = WINDOW(DIMENSIONS=[763,1064],BUFFER=BUFFER)    
        WIMAGE = IMAGE(WIMG,RGB_TABLE=RGB_TABLE,IMAGE_DIMENSIONS=[WM.PX,WM.PY],BACKGROUND_COLOR=RGB_TABLE(*,BACKGROUND),POSITION=[40,40,723,1064],/DEVICE,/CURRENT);MARGIN=[0,22,0,22],        
        BB = WHERE_SETS(WC.COLOR)    
        FOR N=0,N_ELEMENTS(BB)-1 DO BEGIN
          IF BB(N).N LE 1 THEN CONTINUE
          SUBS = WHERE_SETS_SUBS(BB(N))
          COLOR = RGB_TABLE(*,BB(N).VALUE)
          PRINT, 'Plotting set ' + NUM2STR(N+1) + ' of ' + NUM2STR(N_ELEMENTS(BB)) + ' (' + NUM2STR((FLOAT(N+1)/FLOAT(N_ELEMENTS(BB))*100),DECIMALS=2) + '%)'
          WP = PLOT(WC(SUBS).X,WC(SUBS).Y,/CURRENT,/DEVICE,AXIS_STYLE=0,MARGIN=0,LINESTYLE=6,SYMBOL='DOT',/SYM_FILLED,SYM_COLOR=COLOR,SYM_SIZE=5,/OVERPLOT)      
        ENDFOR  
        TXT = TEXT(TXTX,TXTY,LETW,FONT_SIZE=TXTS,COLOR=LCOLW)        
        FOR S=0, N_ELEMENTS(WLAT)-1 DO SWLAT = SYMBOL(40,WLAT(S)+40, '_', SYM_SIZE=2,SYM_COLOR='BLACK',SYM_THICK=5,/SYM_FILLED,/CURRENT,/DEVICE,LABEL_STRING=NUM2STR(WC_LATS(S)),LABEL_POSITION='L',LABEL_FONT_SIZE=LABEL_FONT_SIZE)      
        FOR S=0, N_ELEMENTS(WLON)-1 DO SWLON = SYMBOL(WLON(S)+40,40,  '|',SYM_SIZE=2,SYM_COLOR='BLACK',SYM_THICK=5,/SYM_FILLED,/CURRENT,/DEVICE,LABEL_STRING=NUM2STR(WC_LONS(S)),LABEL_POSITION='B',LABEL_FONT_SIZE=LABEL_FONT_SIZE)
        W.SAVE,DIR_PNGS+PROD+'-WC-VERT.png',RESOLUTION=300
        W.CLOSE
      ENDIF ELSE BEGIN        
        
        E = WINDOW(DIMENSIONS=EDIMS,BUFFER=BUFFER)
        EIMAGE = STRUCT_SD_2IMAGE_NG(ESTRUCT,BUFFER=BUFFER,PAL=PAL,BACKGROUND=BACKGROUND,/ADD_LAND,SPECIAL_SCALE=SPECIAL_SCALE,$
                 IMG_DIMENSIONS=[EM.PX,EM.PY],IMG_POSITION=EPOS,/CURRENT,/DEVICE,$ ;IMG_LOCATION=[803,200],,
                 ADD_LONLAT_LINES=0,ADD_LONLAT_NAMES=0,LONLAT_THICK=4,LONLAT_COLOR=0,LATS=EC_LATS,LONS=EC_LONS)
        FOR S=0, N_ELEMENTS(ELAT)-1 DO SELAT = SYMBOL(40,ELAT(S)+EDIF, '_',SYM_SIZE=2,SYM_COLOR='BLACK',SYM_THICK=5,/SYM_FILLED,/CURRENT,/DEVICE,LABEL_STRING=NUM2STR(EC_LATS(S)),LABEL_POSITION='L',LABEL_FONT_SIZE=LABEL_FONT_SIZE)               
        FOR S=0, N_ELEMENTS(ELON)-1 DO SELON = SYMBOL(ELON(S)+40,EDIF, '|',SYM_SIZE=2,SYM_COLOR='BLACK',SYM_THICK=5,/SYM_FILLED,/CURRENT,/DEVICE,LABEL_STRING=NUM2STR(EC_LONS(S)),LABEL_POSITION='B',LABEL_FONT_SIZE=LABEL_FONT_SIZE)
        TXT = TEXT(TXTX,TXTY,LETE,FONT_SIZE=TXTS,COLOR=LCOLE)
        BAR = COLOR_BAR_SCALE_NG(PROD=CBAR_PROD,SPECIAL_SCALE=SPECIAL_SCALE,PX=40,PY=50,CHARSIZE=14,BACKGROUND=BACKGROUND,XDIM=683,YDIM=40,PAL=PAL,LAYOUT=LAYOUT,$
            NO_NAME=no_name,NO_UNIT=no_unit,TITLE=CBAR_TITLE,VERTICAL=VERTICAL,HORIZONTAL=HORIZONTAL,BOTTOM=1,TOP=TOP,LEFT=LEFT,RIGHT=RIGHT,FONT='HELVETICA')
        E.SAVE,DIR_PNGS+PROD+'-EC-VERT.png',RESOLUTION=300
        E.CLOSE
        IF WSTRUCT NE [] THEN BEGIN
          W = WINDOW(DIMENSIONS=[763,1046],BUFFER=BUFFER)        
          WIMAGE = STRUCT_SD_2IMAGE_NG(WSTRUCT,BUFFER=BUFFER,PAL=PAL,BACKGROUND=BACKGROUND,/ADD_LAND,SPECIAL_SCALE=SPECIAL_SCALE,$
                  IMG_DIMENSIONS=[WM.PX,WM.PY],IMG_POSITION=[40,40,723,1046],/CURRENT,/DEVICE,$ ; IMG_LOCATION=[100,200],
                  ADD_LONLAT_LINES=0,ADD_LONLAT_NAMES=0,LONLAT_THICK=4,LONLAT_COLOR=0,LATS=WC_LATS,LONS=WC_LONS);,/ADD_MASK,MASK_SUBS=OK_MASK,MASK_COLOR=MASK_COLOR)        
        
          FOR S=0, N_ELEMENTS(WLAT)-1 DO SWLAT = SYMBOL(40,WLAT(S)+40, '_', SYM_SIZE=2,SYM_COLOR='BLACK',SYM_THICK=5,/SYM_FILLED,/CURRENT,/DEVICE,LABEL_STRING=NUM2STR(WC_LATS(S)),LABEL_POSITION='L',LABEL_FONT_SIZE=LABEL_FONT_SIZE)      
          FOR S=0, N_ELEMENTS(WLON)-1 DO SWLON = SYMBOL(WLON(S)+40,40,  '|',SYM_SIZE=2,SYM_COLOR='BLACK',SYM_THICK=5,/SYM_FILLED,/CURRENT,/DEVICE,LABEL_STRING=NUM2STR(WC_LONS(S)),LABEL_POSITION='B',LABEL_FONT_SIZE=LABEL_FONT_SIZE)                           
          TXT = TEXT(TXTX,TXTY,LETW,FONT_SIZE=TXTS,COLOR=LCOLW)
          W.SAVE,DIR_PNGS+PROD+'-WC-VERT.png',RESOLUTION=300
          W.CLOSE
        ENDIF
      ENDELSE
      
      FILES = [DIR_PNGS+PROD+'-WC-VERT.png',DIR_PNGS+PROD+'-EC-VERT.png']
      IF N_ELEMENTS(FILES) NE 2 THEN CONTINUE
      OUTFILE = DIR_COMPS + PROD+'-EC_WC-VERT.png'
      IMAGE_WELD_PAGE,FILES=FILES,ROWS=2,COLS=1,PAL='PAL_SW3',PNGFILE=OUTFILE,SPACE=20,PX=px,py=py,BACKGROUND=255,/NOTRIM
      
      IF KEYWORD_SET(SKIP_HORZ) THEN GOTO, SKIP_HORIZONTAL      
      W = WINDOW(DIMENSIONS=[1466,1149],LAYOUT=[2,1,0],MARGIN=0.1,BUFFER=BUFFER)     
      IF PROD EQ 'POP' THEN BEGIN          
        WIMAGE = IMAGE(WIMG,RGB_TABLE=RGB_TABLE,IMAGE_DIMENSIONS=[WM.PX,WM.PY],BACKGROUND_COLOR=RGB_TABLE(*,BACKGROUND),POSITION=[40,125,723,1149],/DEVICE,/CURRENT);MARGIN=[0,22,0,22],        
        BB = WHERE_SETS(WC.COLOR)    
        FOR N=0,N_ELEMENTS(BB)-1 DO BEGIN
          IF BB(N).N LE 1 THEN CONTINUE
          SUBS = WHERE_SETS_SUBS(BB(N))
          COLOR = RGB_TABLE(*,BB(N).VALUE)
          PRINT, 'Plotting set ' + NUM2STR(N+1) + ' of ' + NUM2STR(N_ELEMENTS(BB)) + ' (' + NUM2STR((FLOAT(N+1)/FLOAT(N_ELEMENTS(BB))*100),DECIMALS=2) + '%)'
          WP = PLOT(WC(SUBS).X,WC(SUBS).Y,/CURRENT,/DEVICE,AXIS_STYLE=0,MARGIN=0,LINESTYLE=6,SYMBOL='DOT',/SYM_FILLED,SYM_COLOR=COLOR,SYM_SIZE=5,/OVERPLOT)      
        ENDFOR  
                
        EIMAGE = IMAGE(EIMG,RGB_TABLE=RGB_TABLE,IMAGE_DIMENSIONS=[EM.PX,EM.PY],BACKGROUND_COLOR=RGB_TABLE(*,BACKGROUND),POSITION=[743,125,1426,1149],/DEVICE,/CURRENT);MARGIN=[0,22,0,22],        
        BB = WHERE_SETS(EC.COLOR)    
        FOR N=0,N_ELEMENTS(BB)-1 DO BEGIN
          IF BB(N).N LE 1 THEN CONTINUE
          SUBS = WHERE_SETS_SUBS(BB(N))
          COLOR = RGB_TABLE(*,BB(N).VALUE)
          PRINT, 'Plotting set ' + NUM2STR(N+1) + ' of ' + NUM2STR(N_ELEMENTS(BB)) + ' (' + NUM2STR((FLOAT(N+1)/FLOAT(N_ELEMENTS(BB))*100),DECIMALS=2) + '%)'
          EP = PLOT(EC(SUBS).X,EC(SUBS).Y,/CURRENT,/DEVICE,AXIS_STYLE=0,MARGIN=0,LINESTYLE=6,SYMBOL='DOT',/SYM_FILLED,SYM_COLOR=COLOR,SYM_SIZE=5,/OVERPLOT)      
        ENDFOR          
        ; get XY coordinates of the LAKE and LAKESIDE subscripts and overplot onto image
      ENDIF ELSE BEGIN            
        WIMAGE = STRUCT_SD_2IMAGE_NG(WSTRUCT,BUFFER=BUFFER,PAL=PAL,BACKGROUND=BACKGROUND,/ADD_LAND,SPECIAL_SCALE=SPECIAL_SCALE,$
                IMG_DIMENSIONS=[WM.PX,WM.PY],IMG_POSITION=[40,125,723,1149],/CURRENT,/DEVICE,$ ; IMG_LOCATION=[100,200],
                ADD_LONLAT_LINES=0,ADD_LONLAT_NAMES=0,LONLAT_THICK=4,LONLAT_COLOR=0,LATS=WC_LATS,LONS=WC_LONS);,/ADD_MASK,MASK_SUBS=OK_MASK,MASK_COLOR=MASK_COLOR)
        EIMAGE = STRUCT_SD_2IMAGE_NG(ESTRUCT,BUFFER=BUFFER,PAL=PAL,BACKGROUND=BACKGROUND,/ADD_LAND,SPECIAL_SCALE=SPECIAL_SCALE,$
               IMG_DIMENSIONS=[EM.PX,EM.PY],IMG_POSITION=[743,125,1426,1149],/CURRENT,/DEVICE,$ ;IMG_LOCATION=[803,200],
               ADD_LONLAT_LINES=0,ADD_LONLAT_NAMES=0,LONLAT_THICK=4,LONLAT_COLOR=0,LATS=EC_LATS,LONS=EC_LONS)
      ENDELSE        
      
      FOR S=0, N_ELEMENTS(WLAT)-1 DO SWLAT = SYMBOL(40,  WLAT(S)+125, '_',SYM_SIZE=2,SYM_COLOR='BLACK',SYM_THICK=5,/SYM_FILLED,/CURRENT,/DEVICE,LABEL_STRING=NUM2STR(WC_LATS(S)),LABEL_POSITION='L')
      FOR S=0, N_ELEMENTS(ELAT)-1 DO SELAT = SYMBOL(1426,ELAT(S)+125, '_',SYM_SIZE=2,SYM_COLOR='BLACK',SYM_THICK=5,/SYM_FILLED,/CURRENT,/DEVICE,LABEL_STRING=NUM2STR(EC_LATS(S)),LABEL_POSITION='R')
      FOR S=0, N_ELEMENTS(WLON)-1 DO SWLON = SYMBOL(WLON(S)+40, 125,  '|',SYM_SIZE=2,SYM_COLOR='BLACK',SYM_THICK=5,/SYM_FILLED,/CURRENT,/DEVICE,LABEL_STRING=NUM2STR(WC_LONS(S)),LABEL_POSITION='B')
      FOR S=0, N_ELEMENTS(ELON)-1 DO SELON = SYMBOL(ELON(S)+743,125,  '|',SYM_SIZE=2,SYM_COLOR='BLACK',SYM_THICK=5,/SYM_FILLED,/CURRENT,/DEVICE,LABEL_STRING=NUM2STR(EC_LONS(S)),LABEL_POSITION='B')
                   
      BAR = COLOR_BAR_SCALE_NG(PROD=CBAR_PROD,SPECIAL_SCALE=SPECIAL_SCALE,PX=391,PY=50,CHARSIZE=14,BACKGROUND=BACKGROUND,XDIM=683,YDIM=40,PAL=PAL,LAYOUT=LAYOUT,$
          NO_NAME=no_name,NO_UNIT=no_unit,TITLE=CBAR_TITLE,VERTICAL=VERTICAL,HORIZONTAL=HORIZONTAL,BOTTOM=1,TOP=TOP,LEFT=LEFT,RIGHT=RIGHT,FONT='HELVETICA')
         
      W.SAVE,DIR_COMPS + PROD+'-WC_EC.png',RESOLUTION=300
      W.CLOSE    
      SKIP_HORIZONTAL:    
    ENDFOR
    
    FILES = []
    FOR P=0, N_ELEMENTS(PRODS)-1 DO FILES = [FILES,DIR_PNGS+PRODS(P)+'-WC-VERT.png']
    FOR P=0, N_ELEMENTS(PRODS)-1 DO FILES = [FILES,DIR_PNGS+PRODS(P)+'-EC-VERT.png']
    OUTFILE = !S.DIR_PROJECTS + 'ECOAP/GLOBAL_MAPS/MERGED_PRODS-EC_WC-VERT.png'
    IMAGE_WELD_PAGE,FILES=FILES,ROWS=2,COLS=3,PAL='PAL_SW3',PNGFILE=OUTFILE,SPACE=20,PX=px,py=py,BACKGROUND=255,/NOTRIM
    
  ENDIF  

; Create SST saves from netcdf files for Vince
; ********************************************
  IF DO_NETCDF_2_SST GE 1 THEN BEGIN
; ********************************************
  	HFILES = FIX_PATH(DIR_NETCDF+'SST_DATA/'+['HISTORICAL_SST_199601_200012.nc','HISTORICAL_SST_200101_200512.nc'])
		FFILES = FIX_PATH(DIR_NETCDF+'SST_DATA/'+['FUTURE_SST_209101_209512.nc',    'FUTURE_SST_209601_210012.nc'])

		
		FSUM = []
		H1DATA = READ_NETCDF_2STRUCT(HFILES[0],PRODUCTS=['TOS'])     & H2DATA = READ_NETCDF_2STRUCT(HFILES[1],PRODUCTS=['TOS'])		
		H1SST = H1DATA.SD.TOS.IMAGE  & GONE, H1DATA                  & H2SST = H2DATA.SD.TOS.IMAGE  & GONE, H2DATA		
		H1SIZE = SIZE(H1SST)                                         & H2SIZE = SIZE(H2SST)				
		H1SUM = FLTARR(H1SIZE[1],H1SIZE(2)) & H1SUM(*) = 0           & H2SUM = FLTARR(H2SIZE[1],H2SIZE(2)) & H2SUM(*) = 0		
		H1OK  = WHERE(H1SST EQ MAX(H1SST))                           & H2OK  = WHERE(H2SST EQ MAX(H2SST))
		FOR N=0,H1SIZE(3)-1 DO H1SUM = H1SUM + (H1SST(*,*,N)-272.15) & FOR N=0,H2SIZE(3)-1 DO H2SUM = H2SUM + (H2SST(*,*,N)-272.15)
		H1MEAN = H1SUM/H2SIZE(3)                                     & H2MEAN = H2SUM/H2SIZE(3)		
		H1MEAN(H1OK) = MISSINGS(0.0)                                 & H2MEAN(H2OK) = MISSINGS(0.0)
				
		F1DATA = READ_NETCDF_2STRUCT(FFILES[0],PRODUCTS=['TOS'])     & F2DATA = READ_NETCDF_2STRUCT(FFILES[1],PRODUCTS=['TOS']) 		
		F1SST = F1DATA.SD.TOS.IMAGE  & GONE, F1DATA                  & F2SST = F2DATA.SD.TOS.IMAGE  & GONE, F2DATA		
		F1SIZE = SIZE(F1SST)                                         & F2SIZE = SIZE(F2SST)		
		F1SUM = FLTARR(F1SIZE[1],F1SIZE(2)) & F1SUM(*) = 0           & F2SUM = FLTARR(F2SIZE[1],F2SIZE(2)) & F2SUM(*) = 0		
		F1OK  = WHERE(F1SST EQ MAX(F1SST))                           & F2OK  = WHERE(F2SST EQ MAX(F2SST))		
		FOR N=0,F1SIZE(3)-1 DO F1SUM = F1SUM + (F1SST(*,*,N)-272.15) & FOR N=0,F2SIZE(3)-1 DO F2SUM = F2SUM + (F2SST(*,*,N)-272.15)		
		F1MEAN = F1SUM/F2SIZE(3)                                     & F2MEAN = F2SUM/F2SIZE(3)		
		F1MEAN(F1OK) = MISSINGS(0.0)                                 & F2MEAN(F2OK) = MISSINGS(0.0)
		
		HSUM  = H1SUM + H2SUM
		HMEAN = HSUM/(H1SIZE(3)+H2SIZE(3))
		HMEAN(H1OK) = MISSINGS(0.0)
		
		FSUM  = F1SUM + F2SUM
		FMEAN = FSUM/(F1SIZE(3)+F2SIZE(3))
		FMEAN(F1OK) = MISSINGS(0.0)
		
		DELTA = FMEAN - HMEAN
		DELTA(F1OK) = MISSINGS(0.0)
		IMG = DELTA
		
		LDATA = READ_NETCDF_2STRUCT(HFILES[0],PRODUCTS=['RLAT','RLON','LAT','LON','GLOBAL'])
		
;		IN_LONS = LDATA.SD.RLON.IMAGE
;		OK = WHERE(IN_LONS LT -180)
;		IN_LONS[OK] = IN_LONS[OK]+359.5;_IN_LONS[OK] = REVERSE(IN_LONS[OK]+180.)*(-1)
;		
;		IN_LATS = LDATA.SD.RLAT.IMAGE
;		LON_ARRAY = IMG & LON_ARRAY(*) = MISSINGS(IN_LONS) & FOR L=0, N_ELEMENTS(IN_LATS)-1 DO LON_ARRAY(*,L) = TRANSPOSE(IN_LONS)
;		LAT_ARRAY = IMG & LAT_ARRAY(*) = MISSINGS(IN_LATS) & FOR L=0, N_ELEMENTS(IN_LONS)-1 DO LAT_ARRAY(L,*) = IN_LATS
;		
		
		
		
		LON_ARRAY = LDATA.SD.LON.IMAGE
		OK = WHERE(LON_ARRAY LT -180)
		LON_ARRAY[OK] = LON_ARRAY[OK]+359.5;LON_ARRAY[OK] = REVERSE(LON_ARRAY[OK]+180.)*(-1)						
		CENTER_LON=100
		LON_ARRAY = [LON_ARRAY(CENTER_LON:*,*),LON_ARRAY(0:CENTER_LON-1,*)]
 		IMG     = [IMG(CENTER_LON:*,*),IMG(0:CENTER_LON-1,*)]
 		
 		LAT_ARRAY = LDATA.SD.LAT.IMAGE
 		
		IMG = MAP_REMAP(IMG,MAP_IN='LONLAT',MAP_OUT='GEQ',PX_OUT=4096,PY_OUT=2048,REFRESH=1,CONTROL_LONS=LON_ARRAY,CONTROL_LATS=LAT_ARRAY,CONTROL_SUBS_LON=CTL_LONS,CONTROL_SUBS_LAT=CTL_LATS)
		ZWIN,IMG
			MAP_GEQ
			LL = MAPS_2LONLAT('GEQ',PX=4096,PY=2048)
		ZWIN
		OK = WHERE(LL.LAT GT 70 OR LL.LAT LT -70)
		IMG[OK] = MISSINGS(0.0)

		OUT_PROD = 'SST'
		OUT_MATH = 'DIF'
		OUT_STAT = ''
		SPECIAL_SCALE = '4'
		PAL = 'PAL_DIF_BWR'
		MASK          = READALL(DIR_PNGS + 'ROBINSON_EDGE_MASK_4096_2048.PNG')
		MASK_SUBS     = WHERE(MASK EQ 0,COUNT_MASK)
		MASK_COLOR    = 252
		
		SAVEFILE = REPLACE(DIR_NETCDF+ 'DELTA_SST.SAVE')
		STRUCT=STRUCT_SD_MAKE(IMG, FILE_NAME=SAVEFILE, MAP='GEQ',PROD=OUT_PROD, AMATH=OUT_MATH, ASTAT=OUT_STAT, GLOBAL=LDATA.GLOBAL,$
			SCALE_FACTOR=1.0,MISSING_CODE=MISSINGS(IMG), SCALING='LINEAR', INTERCEPT=0.0,  SLOPE=1.0, DATA_UNITS=UNITS(OUT_PROD),INFILE=[HFILES,FFILES], NOTES=NOTES,ERROR=ERROR, HELP=HELP, _EXTRA=_extra)
		SAVE,FILENAME=SAVEFILE,STRUCT,/COMPRESS
		BIMAGE = STRUCT_SD_2IMAGE_NG(STRUCT.(0),MAP_OUT='ROBINSON',PAL=PAL,USE_PROD='DIF',SPECIAL_SCALE='4',/ADD_LAND,/NO_LAKES,/ADD_MASK,MASK_SUBS=MASK_SUBS,MASK_COLOR=MASK_COLOR,/ADD_COLORBAR,REFRESH=1)		
		BIMAGE.SAVE,REPLACE(SAVEFILE,'.SAVE','.PNG'),RESOLUTION=300
		BIMAGE.CLOSE
  		
  	
  ENDIF ;DO_NETCDF_2_SST
  

; Create saves from netcdf files for Vince
; ********************************************
  IF DO_NETCDF_2_MAP GE 1 THEN BEGIN
; ********************************************
    FILES = FIX_PATH(DIR_NETCDF+['ANNUAL_2075_2100-pH-DIF.nc',$
                                 'ANNUAL_2075_2100-SST-DIF-V2.nc',$
                                 'ANNUAL_2075_2100-SSH-DIF.nc',$
                                 'ANNUAL_2050_2075-SST-DIF.nc',$
                                 'ANNUAL_2075_2100-SST-DIF.nc',$
                                 'ANNUAL_1981_2000-pH-MEAN.nc',$
                                 'ANNUAL_2050_2075-pH-MEAN.nc',$
                                 'ANNUAL_2075_2100-pH-MEAN.nc'])
    NC_LAT  = ['RLAT','RLAT','RLAT','LAT','LAT','XT_OCEAN','XT_OCEAN','XT_OCEAN']
    NC_LON  = ['RLON','RLON','RLON','LON','LON','YT_OCEAN','YT_OCEAN','YT_OCEAN']
    CEN_LON = [100.,180.,100.,0,0,180.,180.,180.]
    FX_LON  = [0,0,0,1,1,0,0,0]
    NC_PROD = ['DIFF','DIFF','E185','MID_DIFF','END_DIFF','PH_HIST_UNITS','PH_MID_CHANGE','PH_END_CHANGE']       
    OUT_PROD = ['PH','SST','SSH','SST','SST','PH','PH','PH']
    OUT_MATH = ['DIF','DIF','DIF','DIF','DIF','','','']
    OUT_STAT = ['','','','','','MEAN','MEAN','MEAN']       
    SPECIAL_SCALE = ['-0.5','4','4','0.2','4','7.8_8.2','7.8_8.2','7.8_8.2']  
    PAL = ['PAL_ANOMCY','PAL_ANOMCY','PAL_ANOMCY','PAL_ANOMCY','PAL_ANOMCY','PAL_SW3','PAL_SW3','PAL_SW3']   
    
    EDGE_MASK = DIR_PNGS + 'ROBINSON_EDGE_MASK_4096_2048.PNG'
    PH_MASK   = DIR_PNGS + 'ROBINSON_pH_MASK_4096_2048.PNG'
    MASK          = READALL(EDGE_MASK)
    OK_MASK       = WHERE(MASK EQ 0,COUNT_MASK)
    MASK_COLOR    = 252
    ;SHIFT = [                                                    
  ; !!!!! Note, there is an error in the READ_NETCDF_2STRUCT program so will need to manually save the file at the STOP !!!!!    
    FP = FILE_PARSE(FILES)
        
    FOR N=0, N_ELEMENTS(FILES)-1 DO BEGIN
      SAVEFILE=REPLACE(FILES(N),'nc','SAVE')
      IF GET_MTIME(SAVEFILE) GT GET_MTIME(FILES(N)) AND NOT KEYWORD_SET(OVERWRITE) THEN CONTINUE
      PRINT, FILES(N)
      DATA = READ_NETCDF_2STRUCT(FILES(N),PRODUCTS=[NC_LAT(N),NC_LON(N),NC_PROD(N),'GLOBAL'])
      IMG = DATA.SD.(2).IMAGE
      OK  = WHERE(IMG EQ MIN(IMG))
      IMG[OK] = MISSINGS(IMG)
      IN_LONS = DATA.SD.(0).IMAGE 
      IF OUT_PROD(N) EQ 'PH' THEN IN_LONS = [FINDGEN(100)+80.5,REVERSE((FINDGEN(180)+0.5)*(-1)),FINDGEN(80)+0.5]      
      IF MAX(IN_LONS) GT 180 THEN BEGIN 
        OK = WHERE(IN_LONS GT 180) 
        IN_LONS[OK] = REVERSE(IN_LONS[OK]-180.)*(-1)
      ENDIF  
      IF MIN(IN_LONS) LT -180 THEN BEGIN
        ;_IN_LONS = IN_LONS
        OK = WHERE(IN_LONS LT -180) 
        IN_LONS[OK] = IN_LONS[OK]+359.5;_IN_LONS[OK] = REVERSE(IN_LONS[OK]+180.)*(-1)
      ENDIF
      IN_LATS = DATA.SD.(1).IMAGE        
      LON_ARRAY = IMG & LON_ARRAY(*) = MISSINGS(IN_LONS) & FOR L=0, N_ELEMENTS(IN_LATS)-1 DO LON_ARRAY(*,L) = TRANSPOSE(IN_LONS)
      LAT_ARRAY = IMG & LAT_ARRAY(*) = MISSINGS(IN_LATS) & FOR L=0, N_ELEMENTS(IN_LONS)-1 DO LAT_ARRAY(L,*) = IN_LATS
      OK = WHERE(LAT_ARRAY GT 70 OR LAT_ARRAY LT -70)
      IMG[OK] = MISSINGS(IMG)
      
      MAP_OUT = 'GEQ'
      MS = MAPS_SIZE(MAP_OUT)
      IM_MAP = 'ROBINSON'
      MI = MAPS_SIZE(IM_MAP)
      CENTER_LON = CEN_LON(N)
      IF CEN_LON(N) EQ 0 THEN BEGIN
        IF IM_MAP EQ 'ROBINSON_100' THEN CENTER_LON = 81.
        IF IM_MAP EQ 'ROBINSON_180' THEN CENTER_LON = 0.     
        IF IM_MAP EQ 'GEQ'          THEN CENTER_LON = 0.
      ENDIF  
      
      IF CENTER_LON GT 0 THEN BEGIN
        LON_ARRAY = [LON_ARRAY(CENTER_LON:*,*),LON_ARRAY(0:CENTER_LON-1,*)]
        IMG       = [IMG(CENTER_LON:*,*),IMG(0:CENTER_LON-1,*)]      
        IMG(N_ELEMENTS(IN_LONS)-1,*) = MISSINGS(IMG)
      ENDIF  
            
      IMG = MAP_REMAP(IMG,MAP_IN='LONLAT',MAP_OUT=MAP_OUT,REFRESH=1,CONTROL_LONS=LON_ARRAY,CONTROL_LATS=LAT_ARRAY,CONTROL_SUBS_LON=CTL_LONS,CONTROL_SUBS_LAT=CTL_LATS,PX_OUT=MI.PX,PY_OUT=MI.PY)
      IF OUT_PROD(N) EQ 'PH' THEN BEGIN
        PHMASK = READ_PNG(PH_MASK)        
        OK_MASK =[OK_MASK, WHERE(PHMASK EQ 22)]
        ;IMG(OK) = MISSINGS(IMG)
      ENDIF
      
      STRUCT=STRUCT_SD_MAKE(IMG, FILE_NAME=REPLACE(FILES(N),'nc','SAVE'), MAP=MAP_OUT,PROD=OUT_PROD(N), AMATH=OUT_MATH(N), ASTAT=OUT_STAT(N), GLOBAL=DATA.GLOBAL,$
                    SCALE_FACTOR=1.0,MISSING_CODE=MISSINGS(IMG), SCALING='LINEAR', INTERCEPT=0.0,  SLOPE=1.0, DATA_UNITS=UNITS(OUT_PROD(N)),INFILE=FILES(N), NOTES=NOTES,ERROR=ERROR, HELP=HELP, _EXTRA=_extra)
      SAVE,FILENAME=SAVEFILE,STRUCT,/COMPRESS                         
      BIMAGE = STRUCT_SD_2IMAGE_NG(STRUCT.(0),MAP_OUT=IM_MAP,PAL=PAL(N),/ADD_LAND,/NO_LAKES,/ADD_MASK,MASK_SUBS=OK_MASK,MASK_COLOR=MASK_COLOR,/ADD_COLORBAR,REFRESH=1) 
      ;BIMAGE = STRUCT_SD_2IMAGE_NG(STRUCT.[0],MAP_OUT=IM_MAP,REFRESH=1,PX_OUT=MI.PX,PY_OUT=MI.PY,IMG_DIMENSIONS=[MI.PX_OUT,MI.PY_OUT],/NO_LAKES,BUFFER=BUFFER,PAL=PAL(N),$
      ;          MISSING_COLOR=252,/ADD_LAND,SPECIAL_SCALE=SPECIAL_SCALE(N),/ADD_COLORBAR,SCALE_FACTOR=1.0,/ADD_MASK,MASK_SUBS=OK_MASK,MASK_COLOR=MASK_COLOR)      
      BIMAGE.SAVE,DIR_NETCDF+FP(N).NAME+'.png',RESOLUTION=300
      BIMAGE.CLOSE
   
   ENDFOR
  ENDIF ;DO_NETCDF_2_MAP

; ********************************************
  IF DO_BIODIVERSITY GE 1 THEN BEGIN
; ********************************************
    FILES = FIX_PATH(!S.PROJECTS + 'EcoAP/GLOBAL_MAPS/BIODIVERSITY/'+['Global_patterns_predictors_marine_biodiversity_across_taxa.csv']);,$
                                                                    
    NC_LAT = ['LAT'];,'LAT','XT_OCEAN','XT_OCEAN','XT_OCEAN']
    NC_LON = ['LON'];,'LON','YT_OCEAN','YT_OCEAN','YT_OCEAN']
    FX_LON = [0,0,0,0,0]
    NC_PROD = ['ALLTAXA'];MID_DIFF','END_DIFF','PH_HIST_UNITS','PH_MID_CHANGE','PH_END_CHANGE']    
    OUT_PROD = ['LNUM'];,'SST','PH','PH','PH']
    OUT_MATH = [''];,'DIF','','','']
    OUT_STAT = ['MEAN'];,'','MEAN','MEAN','MEAN']       
    SPECIAL_SCALE = ['0.01_1'];,'5','7.8_8.2','7.8_8.2','7.8_8.2']  
    PAL = 'PAL_SW3';,'PAL_ANOM','PAL_SW3','PAL_SW3','PAL_SW3']   
    RGB_TABLE = CPAL_READ(PAL)
    BORDER = 'BLUE'
    RGB = [30,92,144]
    IF BORDER EQ 'BLUE' THEN BEGIN
      RGB_TABLE(0,254) = RGB[0]
      RGB_TABLE(1,254) = RGB[1]
      RGB_TABLE(2,254) = RGB(2)
    ENDIF
  
    BUFFER=0
    LI, FILES
    FP = FILE_PARSE(FILES)
    MAP_OUT = 'GEQ'
    IM_MAP  = 'MOLLEIDE'
    MI = MAPS_SIZE(MAP_OUT)
    FOR N=0, N_ELEMENTS(FILES)-1 DO BEGIN
      D  = READALL(FILES(N))
      TAGS  = TAG_NAMES(D)
      DATAP = WHERE(TAGS EQ NC_PROD(N))  & DATA = REFORM(FLOAT(D.(DATAP)),45,18) & OK = WHERE(DATA EQ 0.0) & DATA[OK] = MISSINGS(DATA)
      LATP  = WHERE(TAGS EQ NC_LAT(N))   & LATS = REFORM(FLOAT(D.(LATP)) ,45,18)
      LONP  = WHERE(TAGS EQ NC_LON(N))   & LONS = REFORM(FLOAT(D.(LONP)) ,45,18)
        
      LDATA = ALOG10(DATA)
      S = SCALE([0,1], [0,3500],intercept=intercept,slope=slope) 
      NDATA = (DATA-INTERCEPT)/SLOPE      
      IMG = MAP_REMAP(NDATA,CONTROL_LONS=LONS,CONTROL_LATS=LATS,MAP_IN='LONLAT',/CENTER_PIXEL,/REFRESH,MAP_OUT=MAP_OUT,PX_OUT=MI.PX,PY_OUT=MI.PY)
      STRUCT=STRUCT_SD_MAKE(IMG, FILE_NAME=REPLACE(FILES(N),'csv','save'), MAP=MAP_OUT,PROD=OUT_PROD(N), AMATH=OUT_MATH(N), ASTAT=OUT_STAT(N), $
                    MISSING_CODE=MISSINGS(IMG), SCALING='LINEAR', INTERCEPT=0.0,  SLOPE=1.0, DATA_UNITS=UNITS(OUT_PROD(N)),INFILE=FILES(N), NOTES=NOTES,ERROR=ERROR, HELP=HELP, _EXTRA=_extra)      

      BIMAGE = STRUCT_SD_2IMAGE_NG(STRUCT.(0),MAP_OUT=IM_MAP,REFRESH=1,PX_OUT=MI.PX,PY_OUT=MI.PY,IMG_DIMENSIONS=[MI.PX,MI.PY],/NO_LAKES,/ADD_COLORBAR,COLORBAR_TITLE='Species Richness',BUFFER=BUFFER,PAL=PAL(N),$
               ADD_LONLAT_LINES=1,ADD_LONLAT_NAMES=0,LONLAT_THICK=4,LONLAT_COLOR=0,LATS=_LATS,LONS=_LONS,MISSING_COLOR=252,/ADD_LAND,SPECIAL_SCALE=SPECIAL_SCALE(N))      
      BIMAGE.SAVE,DIR_PNGS+FP(N).NAME+'.png',RESOLUTION=300
      BIMAGE.CLOSE
   
   ENDFOR
  ENDIF ;DO_GLOBAL_BIODIVERSITY
  
  
; ********************************************  
  IF DO_HUMAN_IMPACTS GE 1 THEN BEGIN
; ********************************************
  
    PAL = 'PAL_SW3'
    RGB_TABLE = CPAL_READ(PAL)    
    
    FILE_TYPES = ['SHIPPING','POPULATION']
    DO_TYPE = [0,1]
    COLORBAR_TITLE = ['Normalized Shipping Density', 'Normalized Population Density']
    PRODS = ['NUM','NUM']
    SPECIAL_SCALE = ['0_0.6','0_1']
    SYM_SIZE = [2,4]
    
    MAP_OUT  = ['NEC','KOREA','NEC2_ECO','ROBINSON','WC_ECO','EC_ECO','ALASKA','HAWAII','US_ECO']
    PX       = [1024,1024,1024,4096,683,683,1024,512,1280]
    PY       = [1024,1024,1024,2048,1024,1024,1024,512,768]
    DO_MAP   = [1,0,0,0,0,0,0,0,0]
    DO_IMAGE = [1,0,0,0,0,0,0,0,0]
    
    FOR M=0, N_ELEMENTS(MAP_OUT)-1 DO BEGIN
      IF DO_MAP(M) EQ 0 THEN CONTINUE
      AMAP = MAP_OUT(M)
      MS   = MAPS_SIZE(AMAP)
      PX_OUT = PX(M)
      PY_OUT = PY(M)
      MASK  = READ_LANDMASK(MAP=AMAP,PX=PX_OUT,PY=PY_OUT) 
      
      
      FOR F=0, N_ELEMENTS(FILE_TYPES)-1 DO BEGIN
        IF DO_TYPE(F) EQ 0 THEN CONTINUE
        FT = FILE_TYPES(F)
        FILE   = FIX_PATH(!S.DIR_PROJECTS + 'ECOAP/GLOBAL_MAPS/HUMANIMPACTS/TRANSFORMED_'+FT+'_DATA.SAVE')
        BINNED = FIX_PATH(!S.DIR_PROJECTS + 'ECOAP/GLOBAL_MAPS/HUMANIMPACTS/BINNED_TRANSFORMED_'+FT+'_DATA-'+AMAP+'-PXY_'+NUM2STR(PX_OUT)+'_'+NUM2STR(PY_OUT)+'.SAVE')
        TXT_FILES = FILE_SEARCH(!S.DIR_PROJECTS + 'ECOAP/GLOBAL_MAPS/HUMANIMPACTS/'+FT+'/*.csv')
        SAV_FILES = REPLACE(TXT_FILES,'.csv','-'+AMAP+'-PXY_'+NUM2STR(PX_OUT)+'_'+NUM2STR(PY_OUT)+'.save')
        IF FILE_TEST(BINNED) EQ 0 OR GET_MTIME(BINNED) LT MIN(GET_MTIME(SAV_FILES)) THEN BEGIN                
          FOR T = 0, N_ELEMENTS(TXT_FILES)-1 DO BEGIN
            IF FILE_TEST(SAV_FILES(T)) EQ 1 AND GET_MTIME(TXT_FILES(T)) LT GET_MTIME(SAV_FILES(T)) THEN CONTINUE
            PRINT, 'Reading file ' + TXT_FILES(T) + ' (' + NUM2STR(T+1) + ' of ' + NUM2STR(N_ELEMENTS(TXT_FILES)) + ')' & TIMER
            TXT = READALL(TXT_FILES(T))
            TAGS = TAG_NAMES(TXT)
            IF TAGS[0] EQ '_FID' THEN BEGIN
              PRINT, 'Renaming structure tags...'
              TXT = STRUCT_REMOVE(TXT,['_FID','_POINTID'])
              TXT = STRUCT_RENAME(TXT,['_GRID_CODE','_LAT','_LON'],['DATA','LAT','LON'])
              STRUCT_2CSV,TXT_FILES(T),TXT
            ENDIF
            PRINT, 'Creating BINNED data structure......'
            NEW = REPLICATE(STRUCT_2MISSINGS(CREATE_STRUCT('LAT',0.0,'LON',0.0,'DATA',0.0,'COLOR',0,'X',0,'Y',0)),N_ELEMENTS(TXT))
            NEW.LAT  = FLOAT(TXT.LAT) 
            NEW.LON  = FLOAT(TXT.LON) 
            NEW.DATA = FLOAT(TXT.DATA)  
            GONE, TXT
            NEW = NEW[WHERE(NEW.LAT  GE -90.0  AND NEW.LAT LE 90.0)]
            NEW = NEW[WHERE(NEW.LON  GE -180.0 AND NEW.LON LE 180.0)]
            NEW = NEW[WHERE(NEW.DATA GT 0.0)]
            PRINT, 'Determing XY pixel locations for ' + NUM2STR(N_ELEMENTS(NEW)) + ' rows...'  
            ZWIN,MASK
              CALL_PROCEDURE, 'MAP_' + AMAP
              PXPY=MAP_DEG2IMAGE(MASK,NEW.LON,NEW.LAT,X=X, Y=Y,AROUND=around, SUBS=subs)
            ZWIN  
            GONE, PXPY
            NEW.X=X 
            NEW.Y=Y 
            OK = WHERE(X GE 0 AND Y GE 0,COUNT)
            IF COUNT GE 1 THEN NEW = NEW[OK] ELSE CONTINUE
            GONE, X
            GONE, Y            
            PRINT, 'Creating XY variable...' 
            XY = NUM2STR(NEW.X) + '_' + NUM2STR(NEW.Y)      
            
            PRINT, 'Running WHERE_SETS to determine unqiue XY values...' 
            XYSET = WHERE_SETS(XY,/VERBOSE)      
                
            PRINT, 'Creating new structure for binned data...'
            DATA = REPLICATE(STRUCT_2MISSINGS(CREATE_STRUCT('LAT',0.0,'LON',0.0,'DATA',0.0,'COLOR',0,'X',0,'Y',0)),N_ELEMENTS(XYSET))      
                
            PRINT, 'Filling in new binned data structure...'
            FOR N=0, N_ELEMENTS(XYSET)-1 DO BEGIN        
              PRINT, 'Set ' + NUM2STR(N+1) + ' of ' + NUM2STR(N_ELEMENTS(XYSET)) + ' (' + NUM2STR((FLOAT(N)/FLOAT(N_ELEMENTS(XYSET))*100),DECIMALS=2) + '%)'        
              SUBS = WHERE_SETS_SUBS(XYSET(N))
              SET  = NEW(SUBS)
              OK   = WHERE(SET.DATA EQ MAX(SET.DATA))
              DATA(N).LAT  = SET(OK[0]).LAT
              DATA(N).LON  = SET(OK[0]).LON
              DATA(N).DATA = SET(OK[0]).DATA
              DATA(N).X    = SET(OK[0]).X
              DATA(N).Y    = SET(OK[0]).Y
            ENDFOR      
            
            PRINT, 'Saving new structure ' + SAV_FILES(T) & TIMER,/STOP
            SAVE, DATA,FILENAME=SAV_FILES(T),/COMPRESS
            GONE, DATA  
          ENDFOR 
        ENDIF  
                    
        SAV_FILES = FILE_SEARCH(FIX_PATH(!S.DIR_PROJECTS + 'ECOAP/GLOBAL_MAPS/HUMANIMPACTS/'+FT+'/*-'+AMAP+'-PXY_'+NUM2STR(PX_OUT)+'_'+NUM2STR(PY_OUT)+'.save'))   
        IF FILE_TEST(BINNED) EQ 0 OR MAX(GET_MTIME(SAV_FILES)) GT GET_MTIME(BINNED) THEN BEGIN 
          PRINT, 'Create new MERGED data structure...' & TIMER
          FOR S = 0, N_ELEMENTS(SAV_FILES)-1 DO BEGIN
            PRINT, 'Merging file ' + SAV_FILES(S) + ' (' + NUM2STR(S+1) + ' of ' + NUM2STR(N_ELEMENTS(SAV_FILES)) + ')'
            IF S EQ 0 THEN DATA = IDL_RESTORE(SAV_FILES(S)) ELSE DATA = STRUCT_CONCAT(DATA,IDL_RESTORE(SAV_FILES(S)))
          ENDFOR  
          PRINT, 'Finished creating MERGED data structure...' & TIMER, /STOP          
          SAVE, DATA,FILENAME=BINNED,/COMPRESS
          GONE, DATA
          PRINT, 'Finished creating BINNED data structure...' 
        ENDIF  
    
        IF DO_IMAGE(M) EQ 1 THEN BEGIN                      
          DIR_OUT = DIR_PNGS               
          IMG = READ_LANDMASK(MAP=AMAP,PX=PX_OUT,PY=PY_OUT)    
          MASK = READ_LANDMASK(MAP=AMAP,PX=PX_OUT,PY=PY_OUT,/STRUCT)
          IMG(MASK.OCEAN) = 255
          IMG(MASK.LAND)  = 252
          LAND_ARR  = ARRAY_INDICES(IMG,MASK.LAND)
          OCEAN_ARR = ARRAY_INDICES(IMG,MASK.OCEAN)
          LANDXY  = NUM2STR(REFORM(LAND_ARR(0,*)))  + '_' + NUM2STR(REFORM(LAND_ARR(1,*)))       
          OCEANXY = NUM2STR(REFORM(OCEAN_ARR(0,*))) + '_' + NUM2STR(REFORM(OCEAN_ARR(1,*)))
                    
          DATA = IDL_RESTORE(BINNED)
          OK = WHERE(DATA.DATA GT 0)
          DATA = DATA[OK]
          DATA.COLOR = SD_SCALES(DATA.DATA,PROD=PRODS(F),/DATA2BIN,SPECIAL_SCALE=SPECIAL_SCALE(F))
          BB = WHERE_SETS(DATA.COLOR)    
          BIMAGE = IMAGE(IMG,RGB_TABLE=RGB_TABLE,DIMENSIONS=[PX_OUT,PY_OUT],BACKGROUND_COLOR=RGB_TABLE(*,252),MARGIN=0,/DEVICE,/BUFFER);MARGIN=[0,22,0,22],
          FOR N=0,N_ELEMENTS(BB)-1 DO BEGIN
            IF BB(N).N LE 1 THEN CONTINUE
            SUBS = WHERE_SETS_SUBS(BB(N))
            COLOR = RGB_TABLE(*,BB(N).VALUE)
            PRINT, 'Plotting ' + NUM2STR(N_ELEMENTS(SUBS)) + ' points ('+ NUM2STR(FLOAT(N_ELEMENTS(SUBS))/FLOAT(N_ELEMENTS(DATA))*100,DECIMALS=2) +'%)- set ' + NUM2STR(N+1) + ' of ' + NUM2STR(N_ELEMENTS(BB)) + ' (' + NUM2STR((FLOAT(N+1)/FLOAT(N_ELEMENTS(BB))*100),DECIMALS=2) + '%)'
            P = PLOT(DATA(SUBS).X,DATA(SUBS).Y,/CURRENT,/DEVICE,AXIS_STYLE=0,MARGIN=0,LINESTYLE=6,SYMBOL='DOT',/SYM_FILLED,SYM_COLOR=COLOR,SYM_SIZE=SYM_SIZE(F),/OVERPLOT,/BUFFER)      
          ENDFOR  
          
          SD_ADD_COLORBAR_NG,MAP=AMAP,PX=MS.PX,PY=MS.PY,PROD=PRODS(F),SPECIAL_SCALE=SPECIAL_SCALE(F),LAYOUT=LAYOUT,WDIMENSIONS=WDIMENSIONS,$
                            COLORBAR_TITLE=COLORBAR_TITLE(F),BAR_TYPE='BAR',PAL=PAL,FONT='HELVETICA',$
                            SCALE_FACTOR=1.02709,WELD=WELD,ADD_DATEBAR=0,LABEL=LABEL,$
                            BOTTOM=COLORBAR_BOTTOM,TOP=COLORBAR_TOP,LEFT=COLORBAR_LEFT,RIGHT=COLORBAR_RIGHT     
          BIMAGE.SAVE,!S.DIR_PROJECTS + 'ECOAP/GLOBAL_MAPS/'+FT+'_DENSITY-'+AMAP+'.png',RESOLUTION=300
          BIMAGE.CLOSE
        ENDIF  
      ENDFOR
    ENDFOR     
  ENDIF ; DO_GLOBAL_POPULATION  
    
  IF DO_GLOBAL_MAPS GE 1 THEN BEGIN    
    BUFFER = 0
    MAPS = ['ROBINSON'];,'ROBINSON_180','GEQ']    
    FILES = ['SRTM30PLUS-ROBINSON-PXY_2048_1024-BATHY-SMOOTH_5','ANNUAL_1998_2010-AVHRR-4-GEQ-SST-MEAN','ANNUAL_1982_2010-AVHRR-4-GEQ-SST-MEAN','ANNUAL_1998_2011-SEA_AQU-9_4-GEQ-CHLOR_A-OC-MEAN'];,'ANNUAL-SA_N4AT-9_4-L3B-PPD-OPAL-MEAN','ANNUAL-SA_N4AT-9_4-L3B-PPD-VGPM2-MEAN']
    SPECIAL_SCALES = ['','','','LOW','LOW','LOW']
   ; PAL = ['PAL_BATHY','PAL_SW3','PAL_SW3','PAL_SW3','PAL_SW3']
    ADD_LATS = [0,1,1,0,0,0]
    FOR F=0,N_ELEMENTS(FILES)-1 DO BEGIN 
      DATA   = STRUCT_SD_READ(FIX_PATH(!S.PROJECTS + 'EcoAP/GLOBAL_MAPS/DATA/'+FILES(F)+'.SAVE'),STRUCT=_STRUCT,SUBS=SUBS)   
      FOR N=0,N_ELEMENTS(MAPS)-1 DO BEGIN     
        MI = MAPS_SIZE(MAPS(N)) 
        PNGFILE = FIX_PATH(!S.PROJECTS + 'EcoAP/GLOBAL_MAPS/'+ REPLACE(FILES(F),['L3B','GEQ'],[MAPS(N),MAPS(N)])+'.PNG')
        STRUCT = _STRUCT        
        IF ADD_LATS(F) EQ 1 THEN LATS = [-66.5,-23.5,23.5,66.5] ELSE LATS = []
        LONS = []         
        BIMAGE = STRUCT_SD_2IMAGE_NG(STRUCT,BUFFER=BUFFER,MAP_OUT=MAPS(N),REFRESH=1,IMG_DIMENSIONS=[MI.PX,MI.PY],PX_OUT=MI.PX,PY_OUT=MI.PY,SCALE_FACTOR=1.0,$
                 ADD_LONLAT_LINES=ADD_LATS,ADD_LONLAT_NAMES=0,LONLAT_THICK=7,LONLAT_COLOR=225,LATS=LATS,LONS=LONS,/ADD_LAND,SPECIAL_SCALE=SPECIAL_SCALES(F),/ADD_COLORBAR)                            
        BIMAGE.SAVE,PNGFILE,RESOLUTION=300
        BIMAGE.CLOSE
      ENDFOR
    ENDFOR          
  ENDIF 
  
  
   IF DO_GLOBAL_LME GE 1 THEN BEGIN    
    BUFFER = 0
    MAPS = ['ROBINSON'];,'ROBINSON_180','GEQ']
    
    DIR_OUT = FIX_PATH(!S.DIR_PROJECTS + 'ECOAP/GLOBAL_MAPS/')   
                
    FILES = ['ANNUAL-SA_N4AT-9_4-L3B-PPD-VGPM2-MEAN','SRTM30PLUS-ROBINSON-PXY_2048_1024-BATHY-SMOOTH_5','ANNUAL_1998_2010-AVHRR-4-GEQ-SST-MEAN','ANNUAL_1982_2010-AVHRR-4-GEQ-SST-MEAN','ANNUAL_1998_2011-SEA_AQU-9_4-GEQ-CHLOR_A-OC-MEAN'];,'ANNUAL-SA_N4AT-9_4-L3B-PPD-OPAL-MEAN','ANNUAL-SA_N4AT-9_4-L3B-PPD-VGPM2-MEAN']
    SPECIAL_SCALES = ['LOW','','','','LOW','LOW','LOW']
    OUTLINE_COLORS = [0,255,255,255]       
    FOR F=0,N_ELEMENTS(FILES)-1 DO BEGIN 
      DATA   = STRUCT_SD_READ(FIX_PATH(!S.DIR_PROJECTS + 'EcoAP/GLOBAL_MAPS/DATA/'+FILES(F)+'.SAVE'),STRUCT=_STRUCT,SUBS=SUBS)   
      FOR N=0,N_ELEMENTS(MAPS)-1 DO BEGIN     
        MI = MAPS_SIZE(MAPS(N)) 
        PNGFILE = FIX_PATH(!S.DIR_PROJECTS + 'EcoAP/GLOBAL_MAPS/'+ REPLACE(FILES(F),['L3B','GEQ'],[MAPS(N),MAPS(N)])+'-LME_OUTLINE.PNG')
        STRUCT = _STRUCT                        
        BIMAGE = STRUCT_SD_2IMAGE_NG(STRUCT,BUFFER=BUFFER,MAP_OUT=MAPS(N),REFRESH=1,IMG_DIMENSIONS=[MI.PX,MI.PY],PX_OUT=MI.PX,PY_OUT=MI.PY,SCALE_FACTOR=1.0,$
                 /ADD_LAND,SPECIAL_SCALE=SPECIAL_SCALES(F),/ADD_COLORBAR,/ADD_LME_OUTLINE,OUTLINE_COLOR=OUTLINE_COLORS(F))                            
        BIMAGE.SAVE,PNGFILE,RESOLUTION=300
        BIMAGE.CLOSE
      ENDFOR
    ENDFOR
    
    RGB_TABLE = CPAL_READ('PAL_LMEW')              
    LMEGEQ = READ_PNG(FIX_PATH(DIR_OUT + '/LME/LME_MASK_17280_8640.png'),R,G,B)
    FOR N=0,N_ELEMENTS(MAPS)-1 DO BEGIN 
      MS = MAPS_SIZE(MAPS(N))     
      IMG  = READ_LANDMASK(MAP=MAPS(N),PX=MS.PX,PY=MS.PY)    
      MASK = READ_LANDMASK(MAP=MAPS(N),PX=MS.PX,PY=MS.PY,/STRUCT)
      IMG = MAP_REMAP(LMEGEQ,MAP_IN='GEQ',MAP_OUT=MAPS(N),PX_OUT=MS.PX, PY_OUT=MS.PY)
      IMG(WHERE(IMG EQ 0)) = 252
      IMG(WHERE(IMG EQ 254)) = 252  
      IMG(1900:2350,0:30) = 252   
      BIMAGE = IMAGE(IMG,RGB_TABLE=RGB_TABLE,DIMENSIONS=[MS.PX,MS.PY],BACKGROUND_COLOR=RGB_TABLE(*,252),MARGIN=0,/DEVICE)
      BIMAGE.SAVE,!S.DIR_PROJECTS + 'ECOAP/GLOBAL_MAPS/LME_SUBAREAS-'+MAPS(N)+'.png',RESOLUTION=300
      BIMAGE.CLOSE
         
      OUTLINE = READ_PNG(!S.DIR_IMAGES+'LME_OFFSHORE-'+MAPS(N)+'-PXY_'+STRTRIM(MS.PX,2)+'_'+STRTRIM(MS.PY,2)+'_OUTLINE_THICK.PNG')
      OK_OUTLINE = WHERE(OUTLINE EQ 20B,COUNT_OUTLINE)      
      IMG(MASK.OCEAN) = 255
      IMG(MASK.LAND)  = 252
      IMG(OK_OUTLINE) = 0
      BIMAGE = IMAGE(IMG,RGB_TABLE=RGB_TABLE,DIMENSIONS=[MS.PX,MS.PY],BACKGROUND_COLOR=RGB_TABLE(*,252),MARGIN=0,/DEVICE)
      BIMAGE.SAVE,!S.DIR_PROJECTS + 'ECOAP/GLOBAL_MAPS/LME_BOUNDARIES-'+MAPS(N)+'.png',RESOLUTION=300
      BIMAGE.CLOSE
    ENDFOR 
  ENDIF 
  
  
; ********************************************
  IF DO_ADD_LANDMASK GE 1 THEN BEGIN
; ********************************************
  
    MAPS   = ['US_ECO','KOREA','AUST','WEURO','NAMER','HAWAII','ALASKA']
    DO_MAP = [0,       0,      0,     0,      0,       1,       1]
    PX     = ['1280', '1024', '1280','1024', '1280',  '512',   '1024']
    PY     = ['768',  '1024', '1280','1024', '1280',  '512',   '1024']
    PX_OUT = LIST([1280],[1366,683],[640],[640,1280],[640],[512],[1024])
    PY_OUT = LIST([768], [1366,683],[640],[640,1280],[640],[512],[1024])
    PAL_36,R,G,B
    FOR NTH =0L, N_ELEMENTS(MAPS)-1 DO BEGIN
      IF DO_MAP[NTH] EQ 0 THEN CONTINUE
      TO_BE_EDITED = !S.DIR_IMAGES+'MASK_LAND-'+MAPS[NTH]+'-PXY_'+PX[NTH]+'_'+PY[NTH]+'-TO_BE_EDITED.PNG'
      EDIT_COAST   = !S.DIR_IMAGES+'MASK_LAND-'+MAPS[NTH]+'-PXY_'+PX[NTH]+'_'+PY[NTH]+'-FIXED_COAST-TO_BE_EDITED.PNG'
      EDITED       = !S.DIR_IMAGES+'MASK_LAND-'+MAPS[NTH]+'-PXY_'+PX[NTH]+'_'+PY[NTH]+'-EDITED.PNG'
      FINAL        = !S.DIR_IMAGES+'MASK_LAND-'+MAPS[NTH]+'-PXY_'+PX[NTH]+'_'+PY[NTH]+'.PNG'
      IF FILE_TEST(EDITED) EQ 1 AND FILE_TEST(FINAL) EQ 0 THEN BEGIN
        R[0]=R(255) & G[0]=G(255) & B[0]=B(255)
        R[1]=R(247) & G[1]=G(247) & B[1]=B(247)
        R(2)=R(252) & G(2)=G(252) & B(2)=B(252)
        R(3)=R(253) & G(3)=G(253) & B(3)=B(253)
        R(4)=R(254) & G(4)=G(254) & B(4)=B(254)
      
        IMG = READALL(EDITED)
        OK_LAND  = WHERE(IMG EQ 34)
        OK_COAST = WHERE(IMG EQ 22)
        OK_OCEAN = WHERE(IMG EQ 0)
      
        IMG(OK_LAND)  = 2
        IMG(OK_COAST) = 1
        
        WRITE_PNG,FINAL,IMG,R,G,B  
        _PX_OUT = PX_OUT[NTH]
        _PY_OUT = PY_OUT[NTH]
        FOR P=0, N_ELEMENTS(_PX_OUT)-1 DO BEGIN  
          IMGR = MAP_REMAP(IMG,MAP_IN=MAPS[NTH],MAP_OUT=MAPS[NTH],PX_OUT=_PX_OUT(P),PY_OUT=_PY_OUT(P))
          WRITE_PNG,!S.DIR_IMAGES+'MASK_LAND-'+MAPS[NTH]+'-PXY_'+NUM2STR(_PX_OUT(P))+'_'+NUM2STR(_PY_OUT(P))+'.PNG',IMGR,R,G,B
        ENDFOR  
        CONTINUE      
      ENDIF
  
      M = MAPS_SIZE(MAPS[NTH])
      ZWIN,[M.PX,M.PY]
      CALL_PROCEDURE, 'MAP_'+ MAPS[NTH]
      MAP_CONTINENTS,HIRES=1,COLOR=34,COAST=1,/FILL_CONTINENTS
      LAND = TVRD()
      ZWIN
          
      ZWIN,[M.PX,M.PY]
      CALL_PROCEDURE, 'MAP_'+ MAPS[NTH]
      MAP_CONTINENTS,HIRES=1,COLOR=1,COAST=1
      COAST = TVRD()
      ZWIN
      
      OK = WHERE(COAST EQ 1)
      IMG = LAND
      IMG[OK] = 22
      WRITE_PNG,TO_BE_EDITED,IMG,R,G,B
          
      OCEAN = WHERE(IMG EQ 0,COUNT_OCEAN)    
      FOR I = 0L, COUNT_OCEAN-1 DO BEGIN
        BOX = BOX_AROUND(IMG,OCEAN(I),SUBS=SUBS,AROUND=1)        
        OK = WHERE(BOX EQ 34,COUNT) ; FIND LAND PIXELS NEXT TO OCEAN PIXELS
        IF COUNT GE 1 THEN IMG(SUBS[OK]) = 22
      ENDFOR  
      WRITE_PNG,EDIT_COAST,IMG,R,G,B
    ENDFOR  
  ENDIF
  
STOP


END; #####################  End of Routine ################################
