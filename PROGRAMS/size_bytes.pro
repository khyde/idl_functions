; $ID:	SIZE_BYTES.PRO,	2020-06-30-17,	USER-KJWH	$
;+
;	THIS FUNCTION RETURNS THE SIZE IN BYTES OF AN IDL VARIBLE (SCALER, ARRAY OR STRUCTURE)

; HISTORY:
;		JULY 9, 2004 WRITTEN BY:	J.E. O'REILLY, NOAA, 28 TARZWELL DRIVE, NARRAGANSETT, RI 02882
;		DEC 06, 2015,JEOR: COUNT = ULONG64[0]

;-
; *************************************************************************

FUNCTION SIZE_BYTES, DATA
  ROUTINE_NAME='SIZE_BYTES'

;	===> DETERMINE THE IDL DATA TYPE
  TYPE = IDLTYPE(DATA,/CODE)
  COUNT = ULONG64[0]

;	===> IS DATA A STRUCTURE ?
  IF TYPE EQ 8 THEN BEGIN
  	FOR NTH = 0L,N_ELEMENTS(TAG_NAMES(DATA))-1L DO BEGIN
  		SZ=SIZE(DATA.(NTH),/STRUCT)
  		IF SZ.TYPE EQ 7 THEN BEGIN
  			COUNT=COUNT + LONG(TOTAL(IDLTYPE(DATA.(NTH),/NBYTES)))
  		ENDIF ELSE BEGIN
  			IF SZ.TYPE EQ 8 THEN BEGIN
  				COUNT = COUNT + SIZE_BYTES(DATA.(NTH))
  			ENDIF ELSE BEGIN
  				COUNT= COUNT + (SZ.N_ELEMENTS * IDLTYPE(DATA.(NTH),/NBYTES))
  			ENDELSE
  		ENDELSE
  	ENDFOR

  ENDIF ELSE BEGIN
		SZ=SIZE(DATA,/STRUCT)
   IF SZ.TYPE EQ 7 THEN BEGIN
  			COUNT=COUNT + LONG(TOTAL(IDLTYPE(DATA,/NBYTES)))
  		ENDIF ELSE BEGIN
  		COUNT= COUNT + (SZ.N_ELEMENTS * IDLTYPE(DATA,/NBYTES))
  		ENDELSE
	ENDELSE

RETURN, COUNT

END; #####################  END OF ROUTINE ################################
