; $ID:	STRUCT_MERGE.PRO,	2020-06-30-17,	USER-KJWH	$
; ###############################################################################################
FUNCTION STRUCT_MERGE, STRUCT1,STRUCT2,STRUCT3,STRUCT4,STRUCT5,STRUCT6,STRUCT7,STRUCT8,STRUCT9,STRUCT10,STRUCT11,STRUCT12,$
                      DELIM = DELIM
;+
;	THIS FUNCTION MERGES TWO OR MORE STRUCTURES TO FORM A NEW STRUCTURE
;
; SYNTAX:
;	RESULT = STRUCT_MERGE(STRUCT1, STRUCT2)
; OUTPUT:
;	A NEW STRUCTURE WITH ALL TAGS AND DATA FROM BOTH INPUT STRUCTURES
; ARGUMENTS:
; 	STRUCT1:	FIRST STRUCTURE
; 	STRUCT2:	SECOND STRUCTURE
; KEYWORDS:
;
; EXAMPLES:
;		SEE STRUCT_MERGE_DEMO.PRO
; 	STRUCT1 = CREATE_STRUCT('AA',0B,'BB',1,'CC',2L) & STRUCT1=REPLICATE(STRUCT1,5)
; 	STRUCT2 = CREATE_STRUCT('E',3.,'F',4D,'G','5')  & STRUCT2=REPLICATE(STRUCT2,5)
; 	RESULT  = STRUCT_MERGE(STRUCT1,STRUCT2)
;
; NOTES:
;		THIS ROUTINE EXPECTS SIMPLE (SPREADSHEET OR DATABASE TYPE) STRUCTURES.
;		BOTH STRUCTURES MUST HAVE THE SAME NUMBER OF ELEMENTS(RECORDS).
;		IF ANY OF THE TAGNAMES IN THE SECOND STRUCTURE (STRUCT2) MATCH ANY IN THE FIRST STRUCTURE (STRUCT1)
;		THEN THE DUPLICATE TAGS IN THE SECOND STRUCTURE WILL BE RENAMED WITH A SUFFIX ($2) TO AVOID DUPLICATE
;		TAGNAMES IN THE FINAL MERGED STRUCTURE
;
; HISTORY:
;		FEB 4,1998	WRITTEN BY:	J.E. O'REILLY, NOAA, 28 TARZWELL DRIVE, NARRAGANSETT, RI 02882
;		DEC 17, 2004 JOR ALLOWS UP TO 10 STRUCTURES TO BE MERGED AND DUPLICATE TAGNAMES ARE RENAMED ACCORDING
;										 TO THE ORDER OF THE INPUT STRUCTURE
;		AUG 24,2013,JOR FORMATTING
;		AUG 6,2014,JOR ADDED KEYWORD DELIM
;-
; ###############################################################################################

;*****************************
ROUTINE_NAME  = 'STRUCT_MERGE'
;*****************************
;COMMON _STRUCT_MERGE, DELIM

;	===> THE SUFFIX TO BE ADDED TO TAGNAMES IN STRUCT2 IF ANY OF THEM ARE DUPLICATES OF TAGNAMES IN STRUCT1
  IF NONE(DELIM) THEN DELIM ='$2'

; =====> MAKE SURE STRUCT1 AND STRUCT2 ARE STRUCTURES
  SIZE_STRUCT1=SIZE(STRUCT1,/STRUCT)
  SIZE_STRUCT2=SIZE(STRUCT2,/STRUCT)

  IF SIZE_STRUCT1.TYPE  NE 8 OR $
     SIZE_STRUCT2.TYPE  NE 8 OR $
     SIZE_STRUCT1.N_ELEMENTS NE SIZE_STRUCT2.N_ELEMENTS THEN BEGIN
     PRINT,'ERROR: STRUCT1,STRUCT2 MUST BE STRUCTURES WITH SAME NUMBER OF ELEMENTS'
     RETURN, -1L
  ENDIF

; =====> GET INFORMATION ON STRUCT1, STRUCT2
  NAMES1   = TAG_NAMES(STRUCT1)
  NAMES2   = TAG_NAMES(STRUCT2)
  N_TAGS1  = N_TAGS(STRUCT1)
  N_TAGS2  = N_TAGS(STRUCT2)
  N1 = SIZE_STRUCT1.N_ELEMENTS
  N2 = SIZE_STRUCT2.N_ELEMENTS

;	===> FIND UNIQUE TAGNAMES
	NAMES = [NAMES1,NAMES2]
  NAMES = NAMES[UNIQ(SORT(NAMES))]

	OLD_NAMES = NAMES2
	DUP_TAGNAMES = 0
	CHECK = 1
	WHILE CHECK EQ 1 DO BEGIN
;		===> FIND THE NAMES IN ARRAY2 REDUNDANT WITH NAMES IN NAMES1
 		OK=WHERE_IN(NAMES2,NAMES1,COUNT)
;		===> IF NEEDED, RENAME NAMES2 BY ADDING A SUFFIX TO AVOID TAGNAME CONFLICTS IN THE MERGED STRUCTURE
		IF COUNT GE 1 THEN BEGIN
			NAMES2[OK] =  NAMES2[OK]+ DELIM
			DUP_TAGNAMES = DUP_TAGNAMES + COUNT
		ENDIF ELSE CHECK = 0
	ENDWHILE

;	===> IF REQUIRED, RENAME TAGNAMES IN STRUCT2
	IF DUP_TAGNAMES GE 1 THEN STRUCT2=STRUCT_RENAME(STRUCT2,OLD_NAMES, NAMES2)

; =====> MAKE A NEW STRUCTURE TO HOLD EACH OF THE TAGNAMES IN STRUCT1
  FOR NTH = 0L, N_TAGS1-1L DO BEGIN
    ANAM = NAMES1[NTH]
    AVAL = STRUCT1[0].(NTH)
    IF NTH EQ 0 THEN BEGIN
      TEMPLATE = CREATE_STRUCT(ANAM,AVAL)
    ENDIF ELSE BEGIN
      TEMPLATE = CREATE_STRUCT(TEMPLATE,ANAM,AVAL)
    ENDELSE
  ENDFOR

;	===> EXPAND THE NEW STRUCTURE TO INCLUDE EACH OF THE TAGNAMES IN STRUCT2
  FOR NTH = 0, N_TAGS2-1L DO BEGIN
    ANAM = NAMES2[NTH]
    AVAL = STRUCT2[0].(NTH)
    TEMPLATE = CREATE_STRUCT(TEMPLATE,ANAM,AVAL)
  ENDFOR

; ===> REPLICATE THE TEMPLATE TO HOLD ALL DATA FROM THE INPUT STRUCT
  DATA = REPLICATE(TEMPLATE,N1)

; ===> FILL THE DATA STRUCT STRUCTURE WITH THE APPROPRIATE VALUES FROM STRUCT1
  START = 0 & FINISH = N_TAGS1 -1L
  FOR NTH = START, FINISH DO BEGIN
    DATA(*).(NTH) = STRUCT1(*).(NTH)
  ENDFOR

; ===> FILL THE DATA STRUCT STRUCTURE WITH THE APPROPRIATE VALUES FROM STRUCT2
  START = N_TAGS1 & FINISH = N_TAGS1+N_TAGS2 -1L
  FOR NTH = START, FINISH DO BEGIN
     DATA(*).(NTH) = STRUCT2(*).(NTH-START)
  ENDFOR


;	===> IF MORE THAN 2 STRUCTURES WERE PROVIDED THEN MERGE THEM AS WELL
	N_STRUCTS = N_PARAMS()

;	LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
	FOR COUNTER = 3,N_STRUCTS DO BEGIN
		TXT = STRTRIM(COUNTER,2)
		DELIM='$'+ TXT
		CMD = 'COPY2 = STRUCT'+TXT
		A=EXECUTE(CMD)
	  DATA = STRUCT_MERGE(DATA,COPY2)
	ENDFOR

;	===> SET DELIM ='$2' TO REINITIALIZE COMMON DELIM, DELIM
	DELIM ='$2'

  RETURN, DATA
  END; #####################  END OF ROUTINE #############################
