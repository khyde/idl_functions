; $ID:	PHYSAT_ALVAIN.PRO,	2020-07-08-15,	USER-KJWH	$

	FUNCTION PHYSAT_ALVAIN

;+
; NAME:
;		PHYSAT_ALVAIN
;
; PURPOSE:;
;		This function uses Alvain et al (2008) to identify phtyoplankton functional groups from SeaWiFS
;
; CATEGORY:
;		Algorithms
;
; CALLING SEQUENCE:
;		
;
;		
;
; INPUTS:
;		
;
; OPTIONAL INPUTS:
;		
;
; KEYWORD PARAMETERS:
;		
;
; OUTPUTS:
;		
;

;
;	REFERENCES:
;	    Alvain, S., Moulin, C., Dandonneau, Y., Loisel, H., 2008. Seasonal distribution and succession of dominant phytoplankton groups in the global ocean: A satellite view.
;	         Global Biogeochemical Cycles 22.
;
;
; NOTES:
; 
; COPYRIGHT:
; Copyright (C) 2018, Department of Commerce, National Oceanic and Atmospheric Administration, National Marine Fisheries Service,
;   Northeast Fisheries Science Center, Narragansett Laboratory.
;   This software may be used, copied, or redistributed as long as it is not sold and this copyright notice is reproduced on each copy made.
;   This routine is provided AS IS without any express or implied warranties whatsoever.
;
;   This program was adapted by Kimberly Hyde, DOC/NOAA/NMFS/NEFSC Narragansett, RI, kimberly.hyde@noaa.gov (original algorithm code and chemtax_ratio_subsets.csv file provided by Xiaoju Pan).
;
;
; MODIFICATION HISTORY:
;     Written March 25, 2019 by K.J.W.Hyde, 28 Tarzwell Drive, NMFS, NOAA 02882 (kimberly.hyde@noaa.gov) 
;     Modified Mar 26, 2019 - KJWH: 
;
;-
;	****************************************************************************************************
	ROUTINE_NAME = 'PHYSAT_ALVAIN'

;	===> Initialize ERROR to a null string. If errors are encountered ERROR will be set to a message.
;			 The calling routine can check error (e.g.IF ERROR NE 0 then there was a problem and do this or that)
	ERROR = ''

  OVERWRITE = 0             ; SET OVERWRITE=1 TO RE-CREATE FILES IF ALREADY PRESENT
  DO_CHL_PLOT   = 0
  DO_NLW_REF    = 0
  DO_PHYTO_ID   = 2
  DO_STATS      = 0
  DO_PHYSAT_PAL = 0

  DATE_RANGE = ['19980101','20071231']
 ; DATE_RANGE = ['19980201','19980525']
  CHL_RANGE  = [0.04,25.0]

; Table 1 from Alvain 2008
; Characterisitcs of nLw* spectra for the six phtyoplanktno groups detected with PHYSAT
; WAVELENGTH  412 443  490 510 555
  NANO_MIN = [0.4,0.55,0.6,0.6,0.6]
  NANO_MAX = [0.8,0.9,0.95,1.0,1.0]
  PROC_MIN = [0.8,0.9,0.9,0.9,0.9]
  PROC_MAX = [1.0,1.0,1.0,1.0,1.0]
  SYNC_MIN = [1.0,1.0,1.0,1.0,1.0]
  SYNC_MAX = [1.2,1.2,1.15,1.15,1.15]
  DIAT_MIN = [1.2,1.2,1.15,1.15,1.15]
  DIAT_MAX = [2.2,1.8,1.5,1.4,1.4]
  PHAE_MIN = [1.3,1.4,1.4,1.4,1.4]
  PHAE_MAX = [1.5,1.6,1.6,1.6,1.6]
  COCC_MIN = [2.5,2.5,2.5,2.5,2.5]
  COCC_MAX = [6.0,6.0,6.0,6.0,6.0]

  COMPUTER = GET_COMPUTER()
  IF COMPUTER EQ 'HALIBUT' THEN DIR_PROJECTS = 'D:\PROJECTS\PHYTO_FUNCTIONAL\' ELSE DIR_PROJECTS = 'T:\PROJECTS\PHYTO_FUNCTIONAL\'
  IF COMPUTER EQ 'HALIBUT' THEN DIR_DATASETS = 'D:\DATASETS\'                  ELSE DIR_DATASETS = 'S:\'
  DIR_DATA          = 'D:\IDL\DATA\'
  DIR_LOOKUP        = DIR_PROJECTS + 'LOOK_UP_FILES\'
  DIR_REF           = DIR_PROJECTS + 'NLW_REF\'
  DIR_SPE           = DIR_PROJECTS + 'NLW_SPECIFIC\'
  DIR_PLOTS         = DIR_PROJECTS + 'PLOTS\'
  DIR_SAVE          = DIR_PROJECTS + 'PHYSAT_SAVE\'
  DIR_STATS         = DIR_PROJECTS + 'PHYSAT_STATS\'
  DIR_BROWSE        = DIR_PROJECTS + 'PHYSAT_BROWSE\'
  DIR_STATS_BROWSE  = DIR_PROJECTS + 'PHYSAT_STATS_BROWSE\'
  DIR_PER_BROWSE    = DIR_PROJECTS + 'PHYSAT_PER_BROWSE\'
  DIR_IN            = DIR_DATASETS + 'OC-SEAWIFS-MLAC-NEC\SAVE\'
  

; LIST OF WAVELENGTHS IN THE LOOK-UP TABLE
  NLWS = ['412','443','490','510','555']
  LOOK_UP = 0  ; LOOK TO SEE IF LOOK-UP FILES EXIST, IF NOT RUN PHYSAT_LOOKUP_TABLE.PRO
  FOR NTH = 0L, N_ELEMENTS(NLWS)-1 DO BEGIN
    IF FILE_TEST(DIR_LOOKUP + 'NLW_' + NLWS[NTH] + '-CHLOROPHYLL_INTERVAL-MEAN.SAVE') EQ 1 THEN CONTINUE ELSE LOOK_UP = 1
  ENDFOR
  IF LOOK_UP EQ 1 THEN PHYSAT_LOOKUP_TABLE

; LOAD THE LOOK_UP NLW FILES
  NLW_412 = IDL_RESTORE(DIR_LOOKUP + 'NLW_412-CHLOROPHYLL_INTERVAL-MEAN.SAVE') & REF_412 = IDL_RESTORE(DIR_LOOKUP + 'NLW_412-REFERENCE-CHLOROPHYLL_INTERVAL-MEAN.SAVE')
  NLW_443 = IDL_RESTORE(DIR_LOOKUP + 'NLW_443-CHLOROPHYLL_INTERVAL-MEAN.SAVE') & REF_443 = IDL_RESTORE(DIR_LOOKUP + 'NLW_443-REFERENCE-CHLOROPHYLL_INTERVAL-MEAN.SAVE')
  NLW_490 = IDL_RESTORE(DIR_LOOKUP + 'NLW_490-CHLOROPHYLL_INTERVAL-MEAN.SAVE') & REF_490 = IDL_RESTORE(DIR_LOOKUP + 'NLW_490-REFERENCE-CHLOROPHYLL_INTERVAL-MEAN.SAVE')
  NLW_510 = IDL_RESTORE(DIR_LOOKUP + 'NLW_510-CHLOROPHYLL_INTERVAL-MEAN.SAVE') & REF_510 = IDL_RESTORE(DIR_LOOKUP + 'NLW_510-REFERENCE-CHLOROPHYLL_INTERVAL-MEAN.SAVE')
  NLW_555 = IDL_RESTORE(DIR_LOOKUP + 'NLW_555-CHLOROPHYLL_INTERVAL-MEAN.SAVE') & REF_555 = IDL_RESTORE(DIR_LOOKUP + 'NLW_555-REFERENCE-CHLOROPHYLL_INTERVAL-MEAN.SAVE')
  CTAGS = TAG_NAMES(NLW_412)

; RECREATE FIGURE 1 FROM ALVAIN ET AL., 2005
  IF DO_CHL_PLOT GE 1 THEN BEGIN
    _OVERWRITE = DO_CHL_PLOT GT 1
    XRANGE = [400,560] & XMARGIN = [2,2] & XTITLE = 'Wavelength (nm)'
    YRANGE = [0.0,2.4] & YMARGIN = [2,2] & YTITLE = 'nLw ' + UNITS('NLW_412',/NO_NAME)
    PAL_36,R,G,B
    PSFILE = DIR_PLOTS + 'LOOK_UP_TABLE_PLOT-FIG1.PS'
    PSPRINT,FILENAME=PSFILE,/COLOR,/LANDSCAPE,/FULL,/ARIAL
    !P.MULTI = [0,1,1]
    PLOT,XRANGE,YRANGE,XSTYLE=1,YSTYLE=1,XRANGE=XRANGE,YRANGE=YRANGE,XTITLE=XTITLE,YTITLE=YTITLE,XMARGIN=XMARGIN,YMARGIN=YMARGIN,$
         XTICKS=8,YTICKS=12,XMINOR=4,YMINOR=2,CHARSIZE=1.5,/NODATA
    FOR NTH = 0L, N_ELEMENTS(CTAGS)-1 DO BEGIN
      CHL = REPLACE(STRMID(CTAGS[NTH],4,4),'_','.')
      VALUES = [NLW_412.(NTH),NLW_443.(NTH),NLW_490.(NTH),NLW_510.(NTH),NLW_555.(NTH)]
      NLW = [412,443,490,510,555]
      OPLOT, NLW, VALUES, COLOR=NTH, PSYM=-4, SYMSIZE=0.5
      XYOUTS, 405, VALUES[0],CHL, /DATA, CHARSIZE=0.75, COLOR=NTH
    ENDFOR

    PLOT,XRANGE,YRANGE,XSTYLE=1,YSTYLE=1,XRANGE=XRANGE,YRANGE=YRANGE,XTITLE=XTITLE,YTITLE=YTITLE,XMARGIN=XMARGIN,YMARGIN=YMARGIN,$
         XTICKS=8,YTICKS=12,XMINOR=4,YMINOR=2,CHARSIZE=1.5,/NODATA
    FOR NTH = 0L, N_ELEMENTS(CTAGS)-1 DO BEGIN
      CHL = REPLACE(STRMID(CTAGS[NTH],4,4),'_','.')
      VALUES = [NLW_412.(NTH),NLW_443.(NTH),NLW_490.(NTH),NLW_510.(NTH),NLW_555.(NTH)]
      REFS = [REF_412.(NTH),REF_443.(NTH),REF_490.(NTH),REF_510.(NTH),REF_555.(NTH)]
      NLW = [412,443,490,510,555]
      OPLOT, NLW, REFS, COLOR=NTH, PSYM=-4, SYMSIZE=0.5
      XYOUTS, 405, VALUES[0],CHL, /DATA, CHARSIZE=0.75, COLOR=NTH
    ENDFOR

    COLORS = [4,12,19,22,8,28]
    LABELS = ['Nanoeukaryotes','Prochlorococcus','Synechococcus','Diatoms','Phaeocystis','Coccolithes']
    DATA   = [NANO_MIN,NANO_MAX,PROC_MIN,PROC_MAX,SYNC_MIN,SYNC_MAX,DIAT_MIN,DIAT_MAX,PHAE_MIN,PHAE_MAX,COCC_MIN,COCC_MAX]
    YRANGE = [0.0,2.2] & YTITLE = 'nLw* ' + UNITS('NLW_412',/NO_NAME)
    PLOT,XRANGE,YRANGE,XSTYLE=1,YSTYLE=1,XRANGE=XRANGE,YRANGE=YRANGE,XTITLE=XTITLE,YTITLE=YTITLE,XMARGIN=XMARGIN,YMARGIN=YMARGIN,$
         XTICKS=8,YTICKS=11,XMINOR=4,YMINOR=2,CHARSIZE=1.5,/NODATA
    COUNTER1 = 0
    COUNTER2 = 5
    FOR NTH = 0L, N_ELEMENTS(LABELS)-1 DO BEGIN
      DATA_MIN = DATA(COUNTER1:COUNTER1+4)
      DATA_MAX = DATA(COUNTER2:COUNTER2+4)
      NLW = [412,443,490,510,555]
      OPLOT, NLW, DATA_MIN, COLOR=COLORS[NTH], THICK=2, LINESTYLE=1
      OPLOT, NLW, DATA_MAX, COLOR=COLORS[NTH], THICK=2, LINESTYLE=1
      OPLOT, NLW, (DATA_MIN+DATA_MAX)/2, COLOR=COLORS[NTH], THICK=5, PSYM=-4, SYMSIZE=1.5
      XYOUTS, 530, 0.05+(DATA_MAX(4)+DATA_MIN(4))/2,LABELS[NTH], /DATA, CHARSIZE=1.25, COLOR=COLORS[NTH]
      COUNTER1 = COUNTER1 + 10
      COUNTER2 = COUNTER2 + 10
      PRINT, DATA_MIN
      PRINT, DATA_MAX
    ENDFOR
    PSPRINT
    stop
  ENDIF

  IF DO_NLW_REF GE 1 THEN BEGIN
    OVERWRITE = DO_NLW_REF GT 1
;   THE OBJECTIVE IS TO SHOW THE SPECTRAL CHANGES OF NLW RELATED TO PIGMENTS OTHER THAN CHLOROPHYLL A IN ORDER TO USE THEM AS BIOMARKERS OF
;   SPECIFIC PHYTOPLANKTON GROUPS.  WATER LEAVING RADIANCE IS DEFINED IN THE FOLLOWING EQUATION IN ORDER TO ISOLATE THE SECOND ORDER
;   VARIATION FROM THE TOTAL NLW SPECTRAL VARIABILITY.
;
;   ***  nLw* = nLw/nLw_ref(FUNCTION OF WAVELENGTH AND CHLOROPHYLL)
    CHL_FILES = FILE_SEARCH(DIR_SAVE + '!S_*NEC*CHLOR_A*.SAVE')
    FP = PARSE_IT(CHL_FILES)
    OK = WHERE(FP.DATE_START GE DATE_RANGE[0] AND FP.DATE_START LE DATE_RANGE[1])
    CHL_FILES = CHL_FILES[OK] & FP = FP[OK]

    FOR CTH = 0L, N_ELEMENTS(CHL_FILES)-1 DO BEGIN
      FA = FP(CTH)
      FOR NTH = 0L, N_ELEMENTS(NLWS)-1 DO BEGIN
        INFILE  = DIR_SAVE + FA.PERIOD+'-SEAWIFS-OV2-MLAC-REPRO5-NEC-NLW_'+NLWS[NTH]+'.SAVE'           & FA_IN  = FILE_ALL(INFILE)
        OUTFILE = DIR_SPE  + FA.PERIOD+'-SEAWIFS-OV2-MLAC-REPRO5-NEC-NLW_'+NLWS[NTH]+'-SPECIFIC.SAVE'  & FA_OUT = FILE_ALL(OUTFILE)
        IF OVERWRITE NE 1 AND FA_IN.MTIME  LT FA_OUT.MTIME AND FILE_TEST(OUTFILE) EQ 1 THEN CONTINUE
        IF N_ELEMENTS(CHL) EQ 0 THEN CHL = STRUCT_SD_READ(CHL_FILES(CTH),STRUCT=CHL_STRUCT)
        CLK  = FLOAT(REPLACE(STRMID(CTAGS,4,4),'_','.'))
        NIMAGE = STRUCT_SD_READ(INFILE,STRUCT=STRUCT)
        RIMAGE = NIMAGE & RIMAGE(*,*) = MISSINGS(RIMAGE)
        OK = WHERE(CHL GE CHL_RANGE[0] AND CHL LE CHL_RANGE[1] AND CHL NE MISSINGS(CHL) AND NIMAGE GT 0.0 AND NIMAGE NE MISSINGS(NIMAGE),COUNT,NCOMPLEMENT=NCOMPLEMENT,COMPLEMENT=COMPLEMENT)
        IF COUNT EQ 0 THEN CONTINUE
        CASE NLWS[NTH] OF
          '412' : NLW = NLW_412
          '443' : NLW = NLW_443
          '490' : NLW = NLW_490
          '510' : NLW = NLW_510
          '555' : NLW = NLW_555
        ENDCASE
        NLW = STRUCT_2ARR(NLW)
        IF NCOMPLEMENT GE 1 THEN RIMAGE(COMPLEMENT) = MISSINGS(RIMAGE)
        FOR PIX = 0L, COUNT-1 DO BEGIN
          X  = CLK
          V  = NLW
          VV = CHL(OK(PIX))
          XX = INTERPOL(V,X,VV)
          RIMAGE(OK(PIX)) = XX
        ENDFOR

        IMAGE = RIMAGE & IMAGE(*,*) = MISSINGS(RIMAGE)
        OK = WHERE(RIMAGE NE MISSINGS(RIMAGE) AND RIMAGE GT 0.0 AND NIMAGE NE MISSINGS(NIMAGE) AND NIMAGE GT 0.0,COUNT)
        IF COUNT GE 1 THEN BEGIN
        	IMAGE[OK] = NIMAGE[OK]/RIMAGE[OK]
	        STRUCT_SD_WRITE, OUTFILE,IMAGE=IMAGE,PROD=NSTRUCT.PROD,MISSING_CODE=NSTRUCT.MISSING_CODE,MISSING_NAME=NSTRUCT.MISSING_NAME,$
	          MASK=NSTRUCT.MASK,CODE_MASK=NSTRUCT.CODE_MASK,CODE_NAME_MASK=NSTRUCT.CODE_NAME_MASK,DATA_UNITS='',$
	          PERIOD=NSTRUCT.PERIOD,SENSOR=NSTRUCT.SENSOR,SATELLITE=NSTRUCT.SATELLITE,  $
	          ASTAT=NSTRUCT.STAT,AMATH='',METHOD=NSTRUCT.METHOD,SUITE=NSTRUCT.SUITE,MAP=NSTRUCT.MAP, $
	          INFILE=[REFFILE,INFILE],NOTES='NLW SPECIFIC (*) BASED ON ALVAIN ET AL., 2005'
				ENDIF
        GONE, RIMAGE
        GONE, NIMAGE
      ENDFOR
      GONE, CHL
    ENDFOR
  ENDIF  ; DO_NLW_REF

  IF DO_PHYTO_ID GE 1 THEN BEGIN
    OVERWRITE = DO_PHYTO_ID GT 1
    FILES = FILE_SEARCH(DIR_SPE + '!S_199905101*NLW_412-SPECIFIC.SAVE') & FP = FILE_ALL(FILES)
    OK = WHERE(FP.DATE_START GE DATE_RANGE[0] AND FP.DATE_START LE DATE_RANGE[1])
    FILES = FILES[OK] & FP = FP[OK]
    FOR NTH = 0L, N_ELEMENTS(FILES)-1 DO BEGIN
      OUTFILE = REPLACE(FP[NTH].FULLNAME,'NLW_412-SPECIFIC','PHYSAT')
      OUTFILE = REPLACE(OUTFILE,'\NLW_SPECIFIC\','\PHYSAT_SAVE\') & FA_OUT = FILE_ALL(OUTFILE)

      IF OVERWRITE NE 1 AND FP[NTH].MTIME LT FA_OUT.MTIME AND FILE_TEST(OUTFILE) EQ 1 THEN CONTINUE
      N412 = STRUCT_SD_READ(FP[NTH].FULLNAME,STRUCT=S412)
      N443 = STRUCT_SD_READ(REPLACE(FP[NTH].FULLNAME,'NLW_412','NLW_443'),STRUCT=S443)
      N490 = STRUCT_SD_READ(REPLACE(FP[NTH].FULLNAME,'NLW_412','NLW_490'),STRUCT=S490)
      N510 = STRUCT_SD_READ(REPLACE(FP[NTH].FULLNAME,'NLW_412','NLW_510'),STRUCT=S510)
      N555 = STRUCT_SD_READ(REPLACE(FP[NTH].FULLNAME,'NLW_412','NLW_555'),STRUCT=S555)
      IMAGE = BYTE(N412) & IMAGE(*,*) = 0
      OK_GOOD = WHERE(N412 NE MISSINGS(N412) AND $
                      N443 NE MISSINGS(N443) AND $
                      N490 NE MISSINGS(N490) AND $
                      N510 NE MISSINGS(N510) AND $
                      N555 NE MISSINGS(N555), COUNT_GOOD)
      IF COUNT_GOOD GE 1 THEN IMAGE(OK_GOOD) = 255                            ; Make all non-missing data 1, which will represent the
                                                                              ; 'unclassified' pixels after applying the PHYSAT criteria
      OK_NANO = WHERE(N412 GE NANO_MIN[0] AND N412 LT NANO_MAX[0] AND $
                      N443 GE NANO_MIN[1] AND N443 LT NANO_MAX[1] AND $
                      N490 GE NANO_MIN(2) AND N490 LT NANO_MAX(2) AND $
                      N510 GE NANO_MIN(3) AND N510 LT NANO_MAX(3) AND $
                      N555 GE NANO_MIN(4) AND N555 LT NANO_MAX(4) AND $
                      N412 LT N443 AND N443 LT N490,COUNT_NANO)

      OK_PROC = WHERE(N412 GE PROC_MIN[0] AND N412 LT PROC_MAX[0] AND $
                      N443 GE PROC_MIN[1] AND N443 LT PROC_MAX[1] AND $
                      N490 GE PROC_MIN(2) AND N490 LT PROC_MAX(2) AND $
                      N510 GE PROC_MIN(3) AND N510 LT PROC_MAX(3) AND $
                      N555 GE PROC_MIN(4) AND N555 LT PROC_MAX(4),COUNT_PROC)

      OK_SYNC = WHERE(N412 GE SYNC_MIN[0] AND N412 LT SYNC_MAX[0] AND $
                      N443 GE SYNC_MIN[1] AND N443 LT SYNC_MAX[1] AND $
                      N490 GE SYNC_MIN(2) AND N490 LT SYNC_MAX(2) AND $
                      N510 GE SYNC_MIN(3) AND N510 LT SYNC_MAX(3) AND $
                      N555 GE SYNC_MIN(4) AND N555 LT SYNC_MAX(4),COUNT_SYNC)

      OK_DIAT = WHERE(N412 GE DIAT_MIN[0] AND N412 LT DIAT_MAX[0] AND $
                      N443 GE DIAT_MIN[1] AND N443 LT DIAT_MAX[1] AND $
                      N490 GE DIAT_MIN(2) AND N490 LT DIAT_MAX(2) AND $
                      N510 GE DIAT_MIN(3) AND N510 LT DIAT_MAX(3) AND $
                      N555 GE DIAT_MIN(4) AND N555 LT DIAT_MAX(4) AND $
                      N412 GT N490 AND N555 LT N490,COUNT_DIAT)

      OK_PHAE = WHERE(N412 GE PHAE_MIN[0] AND N412 LT PHAE_MAX[0] AND $
                      N443 GE PHAE_MIN[1] AND N443 LT PHAE_MAX[1] AND $
                      N490 GE PHAE_MIN(2) AND N490 LT PHAE_MAX(2) AND $
                      N510 GE PHAE_MIN(3) AND N510 LT PHAE_MAX(3) AND $
                      N555 GE PHAE_MIN(4) AND N555 LT PHAE_MAX(4) AND $
                      N412 LT N443 AND N443 LT N490 AND N510 GT N555,COUNT_PHAE)

      OK_COCC = WHERE(N412 GE COCC_MIN[0] AND N412 LT COCC_MAX[0] AND $
                      N443 GE COCC_MIN[1] AND N443 LT COCC_MAX[1] AND $
                      N490 GE COCC_MIN(2) AND N490 LT COCC_MAX(2) AND $
                      N510 GE COCC_MIN(3) AND N510 LT COCC_MAX(3) AND $
                      N555 GE COCC_MIN(4) AND N555 LT COCC_MAX(4) AND $
                      N412 LT N443,COUNT_COCC)

      IF COUNT_NANO GT 0 THEN IMAGE(OK_NANO) = 1
      IF COUNT_PROC GT 0 THEN IMAGE(OK_PROC) = 2
      IF COUNT_SYNC GT 0 THEN IMAGE(OK_SYNC) = 3
      IF COUNT_DIAT GT 0 THEN IMAGE(OK_DIAT) = 4
      IF COUNT_PHAE GT 0 THEN IMAGE(OK_PHAE) = 5
      IF COUNT_COCC GT 0 THEN IMAGE(OK_COCC) = 6

      STRUCT = S412
      STRUCT_SD_WRITE, OUTFILE,IMAGE=IMAGE,MISSING_CODE=0,PROD='PHYSAT',$
          MASK=STRUCT.MASK,CODE_MASK=STRUCT.CODE_MASK,CODE_NAME_MASK=STRUCT.CODE_NAME_MASK,DATA_UNITS='',$
          TRANSFORMATION=STRUCT.TRANSFORMATION,PERIOD=STRUCT.PERIOD,SENSOR=STRUCT.SENSOR,SATELLITE=STRUCT.SATELLITE,  $
          ASTAT=STRUCT.STAT,AMATH=STRUCT.MATH,METHOD=STRUCT.METHOD,SUITE=STRUCT.SUITE,MAP=STRUCT.MAP, $
          INFILE=INFILE,NOTES='PHYSAT BASED ON ALVAIN ET AL., 2005'
      STRUCT_SD_2PNG, OUTFILE, DIR_OUT=DIR_BROWSE, /ADD_LAND, /ADD_COAST, /ADD_COLORBAR, /ADDDATE, USE_PROD='PHYSAT',PAL='PAL_PHYSAT',OVERWRITE=OVERWRITE

    ENDFOR
  ENDIF ; DO_PHYTO_ID

  IF DO_STATS GE 1 THEN BEGIN
    OVERWRITE = DO_STATS GT 1

    FILES = FILE_SEARCH(DIR_SAVE + '!S_2*SEAWIFS-OV2-MLAC-REPRO5-NEC-PHYSAT.save')    
    SD_STATS_ALL, FILES,PROD='PHYSAT',PERIOD_CODE_IN=['!S'],PERIOD_CODE_OUT=['!M'],OVERWRITE=OVERWRITE,FILE_LABEL=FILE_LABEL,STAT_TYPE='NUM',DATE_RANGE=DATE_RANGE,DIR_STATS=DIR_STATS     
    FILES = FILE_SEARCH(DIR_STATS + '!M_*PHYSAT_*.SAVE')
    STRUCT_SD_2PNG,FILES,/ADD_LAND,DIR_OUT=DIR_PER_BROWSE,USE_PROD='PERCENT', /ADD_COAST, /ADD_COLORBAR, /ADDDATE,PAL='PAL_SW3',OVERWRITE=OVERWRITE
    FILES = FILE_SEARCH(DIR_STATS + '!M_*PHYSAT.SAVE')
    STRUCT_SD_2PNG,FILES,/ADD_LAND,DIR_OUT=DIR_STATS_BROWSE,USE_PROD='PHYSAT', /ADD_COAST, /ADD_COLORBAR, /ADDDATE,PAL='PAL_PHYSAT',OVERWRITE=OVERWRITE
                        

  ENDIF ; DO_STATS

  IF DO_PHYSAT_PAL GE 1 THEN BEGIN
    OVERWRITE = DO_PHYSAT_PAL GT 1

    PAL_SW3,R,G,B         ; Load PAL_SW3 as the palette to get the colors from
    RR = R & GG = G & BB = B
    COLORS = [45,101,165,145,230]
    RR(1:49)    = R(COLORS[0]) & GG(1:49)    = G(COLORS[0]) & BB(1:49)    = B(COLORS[0])
    RR(51:99)   = R(COLORS[1]) & GG(51:99)   = G(COLORS[1]) & BB(51:99)   = B(COLORS[1])
    RR(101:149) = R(COLORS(2)) & GG(101:149) = G(COLORS(2)) & BB(101:149) = B(COLORS(2))
    RR(151:199) = R(COLORS(3)) & GG(151:199) = G(COLORS(3)) & BB(151:199) = B(COLORS(3))
    RR(201:249) = R(COLORS(4)) & GG(201:249) = G(COLORS(4)) & BB(201:249) = B(COLORS(4))
    BLACK = [0,50,100,150,200,250]
    RR(BLACK) = 0
    GG(BLACK) = 0
    BB(BLACK) = 0
    PAL = 'pal_physat'            ; Palette named saved in D:\IDL\PROGRAMS
    WRITEPAL,PAL,RR,GG,BB         ; Create the new color palette
  ; Make demo colorbar with new palette
    BAR = COLOR_BAR_SCALE(PROD='PHYSAT',/NO_UNIT,PAL='PAL_PHYSAT',BACKGROUND=255,TITLE=' ')
    SLIDEW, BAR

;   PHYSAT PAL WITH 6 CATEGORIES (NANO, PROC, SYNC, DIATOM, PHAE, COCCO)
    PAL_SW3,R,G,B         ; Load PAL_SW3 as the palette to get the colors from
    RR = R & GG = G & BB = B
    COLORS = [1,65,101,145,230,165]
    RR(1:40)    = R(COLORS[0]) & GG(1:40)    = G(COLORS[0]) & BB(1:40)    = B(COLORS[0])
    RR(42:82)   = R(COLORS[1]) & GG(42:82)   = G(COLORS[1]) & BB(42:82)   = B(COLORS[1])
    RR(84:124)  = R(COLORS(2)) & GG(84:124)  = G(COLORS(2)) & BB(84:124)  = B(COLORS(2))
    RR(126:166) = R(COLORS(3)) & GG(126:166) = G(COLORS(3)) & BB(126:166) = B(COLORS(3))
    RR(168:208) = R(COLORS(4)) & GG(168:208) = G(COLORS(4)) & BB(168:208) = B(COLORS(4))
    RR(210:249) = R(COLORS(5)) & GG(210:249) = G(COLORS(5)) & BB(210:249) = B(COLORS(5))
    BLACK = [0,41,83,125,167,209,250]
    RR(BLACK) = 0
    GG(BLACK) = 0
    BB(BLACK) = 0
    PAL = 'pal_physat6'            ; Palette named saved in D:\IDL\PROGRAMS
    WRITEPAL,PAL,RR,GG,BB         ; Create the new color palette
  ; Make demo colorbar with new palette
    BAR = COLOR_BAR_SCALE(PROD='PHYSAT',SPECIAL_SCALE='6',/NO_UNIT,PAL=PAL,BACKGROUND=255,TITLE=' ')
    SLIDEW, BAR
STOP
  ENDIF ; DO_PHYSAT_PAL



	END; #####################  End of Routine ################################
