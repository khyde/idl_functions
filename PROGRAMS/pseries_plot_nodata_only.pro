; $ID:	PSERIES_PLOT_NODATA_ONLY.PRO,	2020-07-08-15,	USER-KJWH	$
PRO PSERIES_PLOT_NODATA_ONLY

  DO_GET_SUBSCRIPTS  				= 0
  DO_PSERIES_EXTRACT 				= 0
  DO_PLOT_EXTRACTED  				= 1
  DO_PLOT_EXTRACTED_NODATA 	= 0

	MAPS = 'LME_BALTIC_SEA'
	EC_SUBS  = ['1038330','1048575','1014756']
	BAL_SUBS = ['27400','56255','106240','136280']
	PROD = 'PAR_*_SUB_'
	DATE_MIN = '19980101000000'  &  JD_MIN = DATE_2JD(DATE_MIN)
  DATE_MAX = '20071231235959'  &  JD_MAX = DATE_2JD(DATE_MAX)

  COMPUTER = GET_COMPUTER()
  IF COMPUTER EQ 'HALIBUT' THEN DIR = 'D:\' ELSE DIR = 'T:\'
  DIR_PROJ = DIR + 'PROJECTS\NO_DATA_DAYS\'
  DIR_DATA = DIR_PROJ + 'DATA\'
  DIR_PSER = DIR_PROJ + 'PSERIES\'
  DIR_SAVE = DIR_PROJ + 'SAVE\'
  DIR_FIGS = DIR_PROJ + 'FIGURES\'
  DIR_BROW = DIR_PROJ + 'BROWSE\'



  IF DO_GET_SUBSCRIPTS GE 1 THEN BEGIN
    OVERWRITE = DO_GET_SUBSCRIPTS GT 1
    FOR MTH = 0L, N_ELEMENTS(MAPS)-1 DO BEGIN
      MAP  = MAPS(MTH)
      IF MAP EQ 'LME_BALTIC_SEA' THEN BEGIN
        PIXELS_X = [200,255,240,280]
        PIXELS_Y = [68,140,265,340]
  			PIXELS_X = [20,30,20,50]
        PIXELS_Y = [68,140,265,380]
      ENDIF
      MI    = MAPS_SIZE(MAP)
      LL    = MAPS_2LONLAT(MAP,PX=MI.PX,PY=MI.PY)
      IMAGE = IMAGE_PXPY(BYTARR(MI.PX,MI.PY))
      SUBS  = REPLICATE(0.0,N_ELEMENTS(PIXELS_X))
      FOR PTH = 0L, N_ELEMENTS(PIXELS_X)-1 DO BEGIN
       SUBS(PTH) = WHERE(IMAGE.X EQ PIXELS_X(PTH) AND IMAGE.Y EQ PIXELS_Y(PTH))
      ENDFOR
      SUBS = STRING(ROUND(SUBS))
      PRINT, SUBS
      IF MAP EQ 'EC' THEN EC_SUBS = SUBS
      IF MAP EQ 'LME_BALTIC_SEA' THEN BAL_SUBS = SUBS
    ENDFOR
  ENDIF



  IF DO_PSERIES_EXTRACT GE 1 THEN BEGIN
    OVERWRITE = DO_PSERIES_EXTRACT GT 1
    FOR MTH = 0L, N_ELEMENTS(MAPS)-1 DO BEGIN
      MAP = MAPS(MTH)
      MI  = MAPS_SIZE(MAP)
      IF MAP EQ 'EC' THEN SUBS = EC_SUBS
      IF MAP EQ 'LME_BALTIC_SEA' THEN SUBS = BAL_SUBS
      PFILE   = FILE_SEARCH(DIR_PSER + 'TS_IMAGES-SEAWIFS-REPRO*'+MAP+'-PAR-PSERIES_*.INT')
      CSVFILE = FILE_SEARCH(DIR_PSER + 'TS_IMAGES-SEAWIFS-REPRO*'+MAP+'-PAR-PSERIES_*.CSV')
      TFILE   = FILE_SEARCH(DIR_PSER + 'TS_IMAGES-SEAWIFS-REPRO*'+MAP+'-PAR-TEMPLATE.SAVE')

      TEMPLATE = IDL_RESTORE(TFILE)
      SLOPE = TEMPLATE.(0).SLOPE
      INTERCEPT = TEMPLATE.(0).INTERCEPT
      CLOSE,/ALL
      OPENR,1,PFILE
      SZ = FSTAT[1]
      N_SERIES = SZ.SIZE/(MI.PX*MI.PY*2)
      ISERIES = INTARR(N_SERIES)
      TS = ASSOC(1,ISERIES)
      CSV = READ_CSV(CSVFILE)
      FP  = PARSE_IT(CSV.FIRST_NAME)
      DATE = JD_2DATE(PERIOD_2JD(FP.PERIOD))
      LL = MAPS_2LONLAT(MAP)
      FOR NTH = 0L, N_ELEMENTS(SUBS)-1 DO BEGIN
        NEW = REPLICATE(STRUCT_2MISSINGS(CREATE_STRUCT('DATE','','PAR',0.0,'SOL_ELEV',0.0,'SOL_DECLIN',0.0,'DAY_LENGTH',0.0)),N_ELEMENTS(DATE))
        SUB = SUBS[NTH]
        SERIES = TS(SUB)
        PAR = REPLICATE(MISSINGS(0.0),N_SERIES)
        OK = WHERE(SERIES GT -32766.0 AND SERIES LT 32766.0 AND SERIES NE MISSINGS(SERIES),COUNT)
        PAR[OK] = SERIES[OK]*SLOPE+INTERCEPT
        LAT = LL.LAT(SUBS[NTH])
        LON = LL.LON(SUBS[NTH])
        ISUN = I_SUN_KIRK(LON,LAT,DATE)
        NEW.DATE       = ISUN.DATE
        NEW.PAR        = PAR
        NEW.DAY_LENGTH = ISUN.DAY_LENGTH
        NEW.SOL_DECLIN = ISUN.SOL_DEC
        NEW.SOL_ELEV   = ISUN.SOL_EL
        SAVEFILE = DIR_SAVE + 'TS_IMAGES-SEAWIFS-REPRO5-'+MAP+'-PAR-EXTRACT-SUB_'+NUM2STR(SUB)+'.SAVE'
        CSVFILE  = DIR_SAVE + 'TS_IMAGES-SEAWIFS-REPRO5-'+MAP+'-PAR-EXTRACT-SUB_'+NUM2STR(SUB)+'.CSV'
        SAVE,NEW,FILENAME=SAVEFILE,/COMPRESS
        STRUCT_2CSV,CSVFILE,NEW
      ENDFOR
    CLOSE,/ALL
    ENDFOR
  ENDIF


  IF DO_PLOT_EXTRACTED GE 1 THEN BEGIN
    OVERWRITE = DO_PLOT_EXTRACTED GT 1
	  PAL_36,R,G,B
	  FOR MTH = 0L, N_ELEMENTS(MAPS)-1 DO BEGIN
	    AMAP = MAPS(MTH)
	    LL  = MAPS_2LONLAT(AMAP)
	    IF AMAP EQ 'EC' THEN SUBS = EC_SUBS
	    IF AMAP EQ 'LME_BALTIC_SEA' THEN SUBS = BAL_SUBS
	    PSFILE  = DIR_FIGS + 'NO_DATA_DAYS-PIXEL_EXTRACTS-'+AMAP+'-PAR.PS'
	    PSPRINT,FILENAME=PSFILE,/COLOR,/LANDSCAPE,/FULL,/TIMES
	    !P.MULTI = [0,1,N_ELEMENTS(SUBS)]
	    FOR NTH = 0L, N_ELEMENTS(SUBS)-1 DO BEGIN
	      SUB = SUBS[NTH]
	      LL_TXT = 'Latitude ' + NUM2STR(LL.LAT(SUBS[NTH]),DECIMALS=3) + '  Longitude ' + NUM2STR(LL.LON(SUBS[NTH]),DECIMALS=3)
	      SFILE   = DIR_SAVE + 'TS_IMAGES-SEAWIFS-REPRO5-'+AMAP+'-PAR-EXTRACT-SUB_'+NUM2STR(SUB)+'.SAVE'
	      DATA = IDL_RESTORE(SFILE)
	      JD=DATE_2JD(DATA.DATE)
	  	  OK_JD = WHERE(JD GE JD_MIN AND JD LE JD_MAX,COUNT_JD)
	      JD = JD(OK_JD)
	      DATA = DATA(OK_JD)
	  	  AX = DATE_AXIS([JD_MIN,JD_MAX],/MONTH)
	      AY = DATE_AXIS([JD_MIN,JD_MAX],/YEAR)

	      PRODS = ['Zero PAR','PAR','Day Length','Solar Elevation']
	      COLORS = [3,9,20]
	      YTITLE = 'PAR!CDay Length'
	      YTITLE2= 'Solar Elevation'

	      YRANGE=[-5.0,45.0]
	      PAR = DATA.PAR & SPAR = PAR
	      OK = WHERE(PAR EQ MISSINGS(0.0),COMPLEMENT=COMPLEMENT,COUNT)
	      SPAR(COMPLEMENT) = SMOOTH(PAR(COMPLEMENT),12)
	      IF NTH EQ N_ELEMENTS(SUBS)-1 THEN XTICKNAME = AX.TICKNAME ELSE XTICKNAME = REPLICATE(' ',N_ELEMENTS(AX.TICKNAME))
	      IF NTH EQ 0 THEN TITLE = AMAP ELSE TITLE = ' '
	    	PLOT,AX.JD,YRANGE,XTICKS=AX.TICKS,XTICKV=AX.TICKV,XTICKNAME=XTICKNAME,XTITLE=XTITLE,XCHARSIZE=XCHARSIZE,YTITLE=YTITLE,TITLE=TITLE,$
	    		         YRANGE=YRANGE,YSTYLE=9,TICKLEN=-0.005,YMINOR=1,/NODATA,YMARGIN=[0.25,0.25],XMARGIN=[0.5,0.5],CHARSIZE=1.5,COLOR=0
	    	GRIDS,X=AY.TICKV,/NO_Y,THICK=1.5,COLOR=34
	  		USERSYM,[0.5,0.5],[-0.75,0.75]
	  	  OPLOT,JD,PAR,THICK=0.5,COLOR=35
	  	  OPLOT,JD,SPAR,COLOR=COLORS[0],THICK=3.5
	  	  OPLOT,JD[OK],REPLICATE(0,COUNT),COLOR=COLORS[0],PSYM=8,SYMSIZE=1.2
	     	OPLOT,JD,DATA.DAY_LENGTH,THICK=5,COLOR=COLORS[1]

	  		YRANGE2=[-50,0.0]
	  		AXIS, /SAVE,YAXIS=1,YRANGE =YRANGE2,YSTYLE=1,YMINOR=1,TICKLEN=-0.005,YTITLE=YTITLE2,CHARSIZE=1.5
	     	OPLOT,JD,DATA.SOL_ELEV,THICK=3,SYMSIZE=0.05,COLOR=COLORS(2)
	     	GRIDS,Y=[-40,-30,-20,-10],/NO_X,THICK=1.5,COLOR=34,YMINOR=1
	     	COOR = COORD_2PLOT(0.5,0.01)
	     	XYOUTS,COOR.X,COOR.Y, LL_TXT,ALIGNMENT=0.5,CHARSIZE=1.15,COLOR=0
	    ENDFOR
	    LEGEND,PRODS,POSITION=[0.12,-0.04],/NORMAL,BOX=0,/HORIZONTAL,CHARSIZE=1.05,COLOR=[3,COLORS],PSYM=[8,0,0,0],THICK=5
	  	PSPRINT
	  	STOP
	    IMAGE_TRIM,PSFILE,DIR_OUT=DIR_FIGS,DPI=600,BACKGROUND=255,GRACE=[10,10,10,10],/OVERWRITE
	  ENDFOR
	ENDIF;IF DO_PLOT_EXTRACTED GE 1 THEN BEGIN



  IF DO_PLOT_EXTRACTED_NODATA GE 1 THEN BEGIN
    OVERWRITE = DO_PLOT_EXTRACTED_NODATA GT 1
	  PAL_36,R,G,B

		BAL_SUBS = ['27220','27400','56030','56255','106020','106240','136280','152050']


STOP
	  FOR MTH = 0L, N_ELEMENTS(MAPS)-1 DO BEGIN
	    AMAP = MAPS(MTH)
	    LL  = MAPS_2LONLAT(AMAP)
	    IF AMAP EQ 'EC' THEN SUBS = EC_SUBS
	    IF AMAP EQ 'LME_BALTIC_SEA' THEN SUBS = BAL_SUBS
	    PSFILE  = DIR_FIGS + 'NO_DATA_DAYS-PIXEL_EXTRACTS-'+AMAP+'-PAR-ONLY_NODATA.PS'
	    PSPRINT,FILENAME=PSFILE,/COLOR,/PORTRAIT,/FULL,/TIMES
	    !P.MULTI = [0,1,N_ELEMENTS(SUBS)]
	    FOR NTH = 0L, N_ELEMENTS(SUBS)-1 DO BEGIN
	      SUB = SUBS[NTH]
	      LL_TXT = 'Latitude ' + NUM2STR(LL.LAT(SUBS[NTH]),DECIMALS=3) + '  Longitude ' + NUM2STR(LL.LON(SUBS[NTH]),DECIMALS=3)
	      SFILE    = DIR_SAVE + 'TS_IMAGES-SEAWIFS-REPRO5-'+AMAP+'-PAR-EXTRACT-SUB_'+NUM2STR(SUB)+'_NODATA.CSV'
	      SAVEFILE = DIR_SAVE + 'TS_IMAGES-SEAWIFS-REPRO5-'+AMAP+'-PAR-EXTRACT-SUB_'+NUM2STR(SUB)+'.SAVE'
	      DATA = IDL_RESTORE(SAVEFILE)
	      CSV=READ_CSV(SFILE)
	      PAR=FLOAT(CSV.PAR)
	      OK=WHERE(DATA.PAR EQ MISSINGS(0.0))
	      DATA[OK].PAR = 0.0
	      SOL_ELEV=FLOAT(CSV.SOL_ELEV)
	      SOL_DECLIN=FLOAT(CSV.SOL_DECLIN)
	      DAY_LENGTH=FLOAT(CSV.DAY_LENGTH)

				NEW = REPLICATE(STRUCT_2MISSINGS(CREATE_STRUCT('DATE','','PAR',0.0,'SOL_ELEV',0.0,'SOL_DECLIN',0.0,'DAY_LENGTH',0.0)),N_ELEMENTS(CSV))
				FOR _N=0,N_ELEMENTS(CSV)-1L DO BEGIN

STOP
					OK = WHERE(	FIX(DATA.PAR*100.0) EQ FIX(PAR(_N)*100.0) AND FIX(DATA.SOL_ELEV*100.0) EQ FIX(SOL_ELEV(_N)*100.0) AND $
							FIX(DATA.SOL_DECLIN*100.0) EQ FIX(SOL_DECLIN(_N)*100.0) AND FIX(DATA.DAY_LENGTH*100.0) EQ FIX(DAY_LENGTH(_N)*100.0),COUNT)
					PRINT, COUNT

					IF COUNT EQ	1 THEN BEGIN
						_DATA=DATA[OK]


						NEW(_N).DATE=DATA[OK].DATE
						NEW(_N).PAR=DATA[OK].PAR
						NEW(_N).SOL_ELEV=DATA[OK].SOL_ELEV
						NEW(_N).SOL_DECLIN=DATA[OK].SOL_DECLIN
						NEW(_N).DAY_LENGTH=DATA[OK].DAY_LENGTH
					ENDIF
				ENDFOR

	      JD=DATE_2JD(DATA.DATE)
	  	  OK_JD = WHERE(JD GE JD_MIN AND JD LE JD_MAX,COUNT_JD)
	      JD = JD(OK_JD)
	      DATA = DATA(OK_JD)
	  	  AX = DATE_AXIS([JD_MIN,JD_MAX],/MONTH)
	      AY = DATE_AXIS([JD_MIN,JD_MAX],/YEAR)

	      PRODS = ['Zero PAR','PAR','Day Length','Solar Elevation']
	      COLORS = [3,9,20]
	      YTITLE = 'PAR!CDay Length'
	      YTITLE2= 'Solar Elevation'

	      YRANGE=[-5.0,20.0]
	      PAR = FLOAT(DATA.PAR) & SPAR = PAR
	      OK = WHERE(PAR EQ MISSINGS(0.0),COMPLEMENT=COMPLEMENT,COUNT)
	      SPAR(COMPLEMENT) = SMOOTH(PAR(COMPLEMENT),12)
	      IF NTH EQ N_ELEMENTS(SUBS)-1 THEN XTICKNAME = AX.TICKNAME ELSE XTICKNAME = REPLICATE(' ',N_ELEMENTS(AX.TICKNAME))
	      IF NTH EQ 0 THEN TITLE = AMAP ELSE TITLE = ' '
	    	PLOT,AX.JD,YRANGE,XTICKS=AX.TICKS,XTICKV=AX.TICKV,XTICKNAME=XTICKNAME,XTITLE=XTITLE,XCHARSIZE=XCHARSIZE,YTITLE=YTITLE,TITLE=TITLE,$
	    		         YRANGE=YRANGE,YSTYLE=9,TICKLEN=-0.005,YMINOR=1,/NODATA,YMARGIN=[0.25,0.25],XMARGIN=[0.5,0.5],CHARSIZE=1.5,COLOR=0
	    	GRIDS,X=AY.TICKV,/NO_Y,THICK=1.5,COLOR=34
	  		USERSYM,[0.5,0.5],[-0.75,0.75]
	  	  OPLOT,JD,PAR,THICK=0.5,COLOR=35
	  	  OPLOT,JD,SPAR,COLOR=COLORS[0],THICK=3.5
	  	  OPLOT,JD[OK],REPLICATE(0,COUNT),COLOR=COLORS[0],PSYM=8,SYMSIZE=1.2
	     	OPLOT,JD,FLOAT(DATA.DAY_LENGTH),THICK=5,COLOR=COLORS[1]

	  		YRANGE2=[-50,-20.0]
	  		AXIS, /SAVE,YAXIS=1,YRANGE =YRANGE2,YSTYLE=1,YMINOR=1,TICKLEN=-0.005,YTITLE=YTITLE2,CHARSIZE=1.5
	     	OPLOT,JD,FLOAT(DATA.SOL_ELEV),THICK=3,SYMSIZE=0.05,COLOR=COLORS(2)
	     	GRIDS,Y=[-40,-30],/NO_X,THICK=1.5,COLOR=34,YMINOR=1
	     	COOR = COORD_2PLOT(0.5,0.01)
	     	XYOUTS,COOR.X,COOR.Y, LL_TXT,ALIGNMENT=0.5,CHARSIZE=1.15,COLOR=0
	    ENDFOR
	    LEGEND,PRODS,POSITION=[0.12,-0.04],/NORMAL,BOX=0,/HORIZONTAL,CHARSIZE=1.05,COLOR=[3,COLORS],PSYM=[8,0,0,0],THICK=5
	  	PSPRINT
	  	STOP
	    IMAGE_TRIM,PSFILE,DIR_OUT=DIR_FIGS,DPI=600,BACKGROUND=255,GRACE=[10,10,10,10],/OVERWRITE
	  ENDFOR
	ENDIF;IF DO_PLOT_EXTRACTED_NODATA GE 1 THEN BEGIN





END
