; $ID:	SUBAREAS_MAKE_MASTER.PRO,	2020-07-08-15,	USER-KJWH	$
;+
;#############################################################################################################
	PRO SUBAREAS_MAKE_MASTER

;
; PURPOSE: MAKES THE SUBAREA MASTER DATABASE AS A SAVE FILE
;
; CATEGORY:	SUBAREAS FAMILY
;
; CALLING SEQUENCE: SUBAREAS_MAKE_MASTER,STRUCT
;
; INPUTS: STRUCTURE [SPREAD SHEET TYPE DATABASE]
;		
; OPTIONAL INPUTS:
;		NONE:	
;		
; KEYWORD PARAMETERS:
;		TAG: THE TAGNAME TO PLOT

; OUTPUTS: 
;		
; EXAMPLES: 
;
; MODIFICATION HISTORY:
;			MAY 30,2014,WRITTEN BY J.O'REILLY & KIM HYDE
;			MAY 31,JOR, ADDED BATS AS A TEST FOR A SINGLE LONLAT 
;			NOV 22, 2017 - KJWH: Changed PLT_SHP to READ_SHPFILE
;			
;			
;			
;#################################################################################
;-
;*************************************
ROUTINE_NAME  = 'SUBAREAS_MAKE_MASTER'
;*************************************
;
;
;SSSSSS SWITCHES   SSSSSSS
DO_ECOREGIONS  = 0
DO_LME         = 1
DO_ADD_BATS    = 0
DO_REMOVE_DUPS = 0
;===> DEFAULTS
TEMPLATE = !S.MASTER + 'SUBAREAS_TEMPLATE.CSV'
M = CSV_READ(TEMPLATE) & M= STRUCT_2MISSINGS(M)
MASTER = !S.MASTER + 'SUBAREAS_MASTER.SAV'
SAV = IDL_RESTORE(MASTER)

 
;*******************************
IF DO_ECOREGIONS GE 1 THEN BEGIN
;*******************************
DIR_IN = !S.IDL_SHAPEFILES + 'ECOREGIONS\'
FILES = FILE_SEARCH(DIR_IN, '*.SHP') & PL,FILES
;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FOR NTH = 0,N_ELEMENTS(FILES)-1 DO BEGIN
  FILE = FILES[NTH]
  FN = FILE_PARSE(FILE)
  D=M  
  D.SOURCE = FN.FULLNAME
  D.REGION = STRTRIM(STRUPCASE(FN.SUB),2)
  D.SUBAREA =STRTRIM(STRUPCASE(FN.NAME),2)
  D.METHOD = STRTRIM(STRUPCASE(FN.EXT),2)
  D.AUTHOR = "J O'REILLY"
  D.PERIOD = STRTRIM(DATE_2PERIOD(DATE_NOW()),2)
  ;===> GET LON,LAT FROM SHPFILE
  MAPS_SET,'GEQ' ; SO NO  CONSTRAINTS ON LATLON
  READ_SHPFILE, FILE,COLOR=COLOR,FILL=1,THICK=THICK,VERBOSE=0,$
    GET_RANGE=GET_RANGE,TAGNAME=TAGNAME,VALUE=VALUE,$
    RANGE_LON = RANGE_LON, RANGE_LAT = RANGE_LAT,NORMAL=NORMAL,$
    DO_ALL = DO_ALL,AUTO=AUTO,LONS=LONS,LATS=LATS,_EXTRA=_EXTRA
    D.NPTS = ROUNDS(N_ELEMENTS(LONS))
    D.LATMIN = RANGE_LAT[0]
    D.LONMIN = RANGE_LON[0]
    D.LATMAX = RANGE_LAT[1]
    D.LONMAX = RANGE_LON[1]
    D.LON = STRJOIN(STR_ADD(ROUNDS(LONS,6,/SIG),';' ,/NO_LAST))
    D.LAT = STRJOIN(STR_ADD(ROUNDS(LATS,6,/SIG),';' ,/NO_LAST))
    IF NONE(SAV) THEN SAV = D ELSE SAV = [SAV,D]

ENDFOR;FOR NTH = 0,N_ELEMENTS(FILES)-1 DO BEGIN
;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF

SAVE,FILENAME = MASTER,SAV,/VERBOSE & PFILE,MASTER
ENDIF;IF DO_ECOREGIONS GE 1 THEN BEGIN
;|||||||||||||||||||||||||||||||||||||

;************************
IF DO_LME GE 1 THEN BEGIN
;************************
SAV = IDL_RESTORE(MASTER)
DB =  READ_LME_DB() & MAPS=DB.MAP & LME_NAMES = STRTRIM(DB.LME_NAME,2)
DIR_IN = !S.IDL_SHAPEFILES + 'LME\'
FILE = FILE_SEARCH(DIR_IN, '*LME66.SHP') &  FN = FILE_PARSE(FILE)

  ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
  FOR NTH = 0,N_ELEMENTS(LME_NAMES)-1 DO BEGIN
    LME_NAME = LME_NAMES[NTH]
    MAP = MAPS[NTH]
    D=M
    D.SOURCE = FN.FULLNAME
    D.REGION = STRUPCASE(FN.SUB)
    D.SUBAREA =STRUPCASE(MAP)
    D.METHOD = STRUPCASE(FN.EXT)
    D.AUTHOR = "J O'REILLY"
    D.PERIOD = DATE_2PERIOD(DATE_NOW())
    ;===> GET LON,LAT FROM SHPFILE
    MAPS_SET,'GEQ' ; SO NO  CONSTRAINTS ON LATLON
    READ_SHPFILE, FILE,COLOR=COLOR,FILL=1,THICK=THICK,VERBOSE=0,$
      GET_RANGE=GET_RANGE,TAGNAME='LME_NAME',VALUE=LME_NAME,$
      RANGE_LON = RANGE_LON, RANGE_LAT = RANGE_LAT,NORMAL=NORMAL,$
      DO_ALL = DO_ALL,AUTO=AUTO,LONS=LONS,LATS=LATS,_EXTRA=_EXTRA
    D.NPTS = ROUNDS(N_ELEMENTS(LONS))
    D.LATMIN = RANGE_LAT[0]
    D.LONMIN = RANGE_LON[0]
    D.LATMAX = RANGE_LAT[1]
    D.LONMAX = RANGE_LON[1]
    D.LON = STRJOIN(STR_ADD(ROUNDS(LONS,6,/SIG),';' ,/NO_LAST))
    D.LAT = STRJOIN(STR_ADD(ROUNDS(LATS,6,/SIG),';' ,/NO_LAST))
    IF NONE(SAV) THEN SAV = D ELSE SAV = [SAV,D]

  ENDFOR;FOR NTH = 0,N_ELEMENTS(FILES)-1 DO BEGIN
  ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
  
SAVE,FILENAME = MASTER,SAV,/VERBOSE & PFILE,MASTER
ENDIF;IF DO_LME GE 1 THEN BEGIN
;||||||||||||||||||||||||||||||

;*****************************
IF DO_ADD_BATS GE 1 THEN BEGIN
;*****************************
 ;BATS -64.1000,31.6667
 SAV = IDL_RESTORE(MASTER)
 YN =STRUPCASE(DIALOG_MESSAGE(TITLE = 'ADD A NEW LON-LAT POINT','ENTER Y OR N',/DEFAULT_NO,/QUESTION))
 IF YN EQ 'YES' THEN BEGIN
 D = M
 VAL = 0.0
 READ,VAL,PROMPT = 'ENTER THE  LONGITUDE  : [NO QUOTES]  ' & D.LON = STRTRIM(VAL,2)
 READ,VAL,PROMPT = 'ENTER THE  LATITUDE   : [NO QUOTES]  ' & D.LAT = STRTRIM(VAL,2)
 TAGNAMES = TAG_NAMES(M)
 
 ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
 FOR NTH = 0,N_ELEMENTS(TAGNAMES)-1 DO BEGIN
   NAME = TAGNAMES[NTH]
   IF NAME EQ 'LON' OR NAME EQ 'LAT'  THEN CONTINUE;>>>>>>>>>>>>>>>>>>>>>>>>>>>
   IF NAME EQ 'METHOD' THEN BEGIN
    D.METHOD = 'MAN'
    CONTINUE ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
   ENDIF;IF NAME EQ 'METHOD' THEN BEGIN
       
   IF NAME EQ 'PERIOD' THEN BEGIN
     D.PERIOD = DATE_2PERIOD(DATE_NOW())
    CONTINUE ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
   ENDIF;IF NAME EQ 'PERIOD' THEN BEGIN 
     
   IF NAME EQ 'NPTS' THEN BEGIN
     D.NPTS = '1'
    CONTINUE ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
   ENDIF;IF NAME EQ 'NPTS' THEN BEGIN
    
;===> SET MIN MAX TO POINT LON LAT    
   IF NAME EQ 'LONMIN' THEN BEGIN
     D.LONMIN = D.LON
     CONTINUE ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
   ENDIF;IF NAME EQ 'LONMIN' THEN BEGIN
    
   IF NAME EQ 'LONMAX' THEN BEGIN
     D.LONMAX = D.LON
     CONTINUE ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
   ENDIF;IF NAME EQ 'LONMAX' THEN BEGIN
    
   IF NAME EQ 'LATMIN' THEN BEGIN
     D.LATMIN = D.LAT
     CONTINUE ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
   ENDIF;IF NAME EQ 'LATMIN' THEN BEGIN
    
   IF NAME EQ 'LATMAX' THEN BEGIN
     D.LATMAX = D.LAT
     CONTINUE ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
   ENDIF;IF NAME EQ 'LATMAX' THEN BEGIN 
    
         
   VAL = ''
   READ,VAL,PROMPT = 'ENTER THE  ' + NAME + ' : [NO QUOTES]  ' &  D.(NTH) = VAL 
 ENDFOR;FOR NTH = 0,N_ELEMENTS(TAGNAMES)-1 DO BEGIN
 ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
  IF NONE(SAV) THEN SAV = D ELSE SAV = [SAV,D]
  SAVE,FILENAME = MASTER,SAV,/VERBOSE & PFILE,MASTER
 ENDIF;IF YN EQ 'YES' THEN BEGIN
 
ENDIF;IF DO_ADD_BATS GE 1 THEN BEGIN
;|||||||||||||||||||||||||||||||||||

;********************************
IF DO_REMOVE_DUPS GE 1 THEN BEGIN
;********************************
  SAV = IDL_RESTORE(MASTER)
P
  TXT = SAV.REGION + ';' + SAV.SUBAREA + ';' + SAV.SOURCE + ';' + SAV.METHOD + ';' 
  DUPS = WHERE_DUPS(TXT)
  IF N_ELEMENTS(DUPS) GE 1 THEN BEGIN
    
  ENDIF;IF N_ELEMENTS(DUPS) GE 1 THEN BEGIN
  
  
ENDIF;IF DO_REMOVE_DUPS GE 1 THEN BEGIN
;||||||||||||||||||||||||||||||||||||||
P



END; #####################  END OF ROUTINE ################################
