; $ID:	STATS_PERIOD_2CSV.PRO,	2020-06-30-17,	USER-KJWH	$
;#############################################################################################################
	PRO STATS_PERIOD_2CSV,FILES,STRUCT=STRUCT,DIR_OUT=DIR_OUT,OVERWRITE=OVERWRITE
	
;  PRO STATS_PERIOD_2CSV
;+
; NAME:
;		STATS_PERIOD_2CSV
;
; PURPOSE: THIS PROGRAM MAKES CSV FILES FROM A STATS_PERIOD STRUCTURE
;
; CATEGORY:
;		PALETTE
;		 
;
; CALLING SEQUENCE: STATS_PERIOD_2CSV
;
; INPUTS: 
;     FILES: FILENAMES CONTAINING A STRUCTURE FROM SATS_PERIOD
;		
;		
; OPTIONAL INPUTS:
;		NONE:	
;		
; KEYWORD PARAMETERS:
; STRUCT: STRUCT FROM STATS_PERIOD
;		DIR_OUT: OUTPUT DIRECTORY

; OUTPUTS: A SERIES OF CSV FILES, ONE FOR EACH TAG IN THE STRUCT
;		
;; EXAMPLES:
;
;  STATS_PERIOD_2CSV,STRUCT
;
; MODIFICATION HISTORY:
;			WRITTEN JUN 11,2013 J.O'REILLY
;			OCT 17,2013,JOR:  ;###> CHANGE INFO TO LME_NUMBER  ####
;			MAR 22,2014,JOR ADDED PROD,ALG: TO OUTPUT
;			NAMES = ['D', 'W', 'WEEK', 'WEEKS', 'M', 'MONTH', 'DOY', 'Y', 'YEAR', 'ANNUAL', 'TREND_D', 'TREND_Y', 'TREND_M_ANOM', 'TREND_MONTH_ANOM', 'LNP_D', 'LNP_M_ANOM', 'DFT', 'ACF', 'ACT']

;			
;#################################################################################
;-
;***************************
ROUTINE_NAME  = 'STATS_PERIOD_2CSV'
;***************************
IF N_ELEMENTS(FILES) EQ 0 THEN MESSAGE,'ERROR: MUST PROVIDE FILES'

;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FOR _FILE = 0,N_ELEMENTS(FILES)-1 DO BEGIN
  FILE = FILES(_FILE)
  S = IDL_RESTORE(FILE) & PFILE,FILE,/R 
  IF IDLTYPE(S) NE 'STRUCT' THEN MESSAGE,'ERROR: FILE MUST CONTAIN A STRUCTURE'  
  FN = FILE_PARSE(FILE)
  IF N_ELEMENTS(DIR_OUT) EQ 0 THEN _DIR_OUT = FN.DIR ELSE _DIR_OUT = DIR_OUT
  TAGNAMES = TAG_NAMES(S)
  
  
  NAMES = ['D', 'M', 'MONTH', 'DOY', 'Y', 'YEAR', 'ANNUAL', 'TREND_D', 'TREND_Y', 'TREND_M_ANOM', 'TREND_MONTH_ANOM', 'LNP_D', 'LNP_M_ANOM', 'DFT', 'ACF', 'ACT']
  OK = WHERE_IN(TAGNAMES , NAMES,COUNT)
  P
  IF COUNT GE 1 THEN TAGNAMES = TAGNAMES[OK]
  OK = WHERE_STRING(TAGNAMES,['LNP','DFT'],COUNT) & IF COUNT GE 1 THEN TAGNAMES = REMOVE(TAGNAMES,OK)
  C=STRUCT_COPY(S,TAGNAMES =TAGNAMES)
  ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
  FOR NTH = 0,N_ELEMENTS(TAGNAMES) -1 DO BEGIN
    NAME = TAGNAMES[NTH] & PRINT,'TAGNAME:   ' ,NAME
    DB = C.(NTH)    
    OUTFILE = _DIR_OUT + FN.NAME +'-TAG_'+ NAME + '.CSV'
    IF FILE_MAKE(IN = FILES,OUT = OUTFILE,OVERWRITE=OVERWRITE) EQ 0 THEN CONTINUE;>>>>>>>>>>>>>>
    CSV_WRITE,OUTFILE,DB   
  ENDFOR;FOR NTH = 0,N_ELEMENTS(C) -1 DO BEGIN
  ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF

ENDFOR;FOR _FILE = 0,N_ELEMENTS(FILES)-1 DO BEGIN
;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF


END; #####################  END OF ROUTINE ################################
