; $ID:	PLIST.PRO,	2020-06-30-17,	USER-KJWH	$
;##################################################################################################################################################################
PRO PLIST ,DATA, DATA2, SKIP=SKIP, NOSEQ=NOSEQ, NOHEAD=NOHEAD, FILE=FILE,NOTES=NOTES, DELIM=DELIM,TAGS=TAGS,TAGNAMES=TAGNAMES,OVERWRITE=OVERWRITE
;##################################################################################################################################################################

;+
;	THIS PROGRAM PRINTS A VERTICAL LIST OF THE INPUT DATA  .
; CATEGORY:
;   CATEGORY
;    INFO
; OUTPUT:
;	PRINTS TO SCREEN OR TO A FILE IF FILE NAME IS PROVIDED

; ARGUMENTS:
; 	DATA:	DATA ARRAY TO PLIST:
;   DATA2- A SECOND ARRAY TO PAIR WITH DATA WHEN LISTING
; KEYWORDS:
;		SKIP:		PRINTS EVERY NTH VALUE IN ARRAY
;		NOSEQ:	DO NOT NUMBER OR SEQUENCE THE PLIST
;		NOHEAD: DO NOT PRINTS HEADINGS [ NAMES OR TAGNAMES OF STRUCTURES)
;		FILE:		FULL PATH AND NAME OF FILE TO OPEN AND WRITE THE PRINTED DATA
;		       ! CAUTION ! IF THE SPECIFIED FILE NAME ALREADY EXISTS THEN PLIST WILL APPEND TO IT
;		       ! IF KEYWORD OVERWRITE IS SET THEN THE FILE WILL BE COMPLETELY OVERWRITTEN BY PLIST
;		NOTES: 	NOTES CAN BE A STRING OR STRING ARRAY
;		DELIM:	DELIMITER TO USE AFTER THE SEQUENCE NUMBER, DEFAULT IS ':'
;		TAGS:		THE TAG NUMBERS OF STRUCTURE ARRAYS TO EXTRACT FROM THE STRUCTURE
;		
; EXAMPLES:
;   PLIST,['ONE','TWO','THREE','FOUR','FIVE','SIX','SEVEN','EIGHT','NINE','TEN']
;   PLIST,['ONE','TWO','THREE','FOUR','FIVE','SIX','SEVEN','EIGHT','NINE','TEN'],/NOHEAD
;   PLIST,['ONE','TWO','THREE','FOUR','FIVE','SIX','SEVEN','EIGHT','NINE','TEN'],/NOSEQ
;   PLIST,['ONE','TWO','THREE','FOUR','FIVE','SIX','SEVEN','EIGHT','NINE','TEN'],SKIP=2
;		PLIST,['ONE','TWO','THREE','FOUR','FIVE','SIX','SEVEN','EIGHT','NINE','TEN'], FILE='PLIST'+'-JUNK.TXT'
; MODIFICATION HISTORY:

;	SEP 22, 1998	WRITTEN BY:	J.E. O'REILLY
;	MAY 07, 2003 - JEOR: TAGS=TAGS, REWROTE PROGRAM
;	FEB 16, 2004 - JEOR: FORMAT FOR COMPLEX AND DCOMPLEX
;	MAY 05, 2012 - JEOR: KEYWORD NOHEADING CHANGED KEYWORDS NOHEADING TO  NOHEAD,PLIST_OVERWRITE TO OVERWRITE
;	JUL 20, 2014 - JEOR: IF ANY(DATA2) THEN DATA = STRTRIM(DATA) + STRTRIM(DATA2)
; AUG 20, 2014 - JEOR: _DATA = DATA 
; JUL 26, 2015 - JEOR: ADDED CATCH TO BYPASS ANY PROBLEM
; MAR 19, 2018 - JEOR: IF ANY(DATA2) THEN _DATA = STRTRIM(_DATA) +'   '+ STRTRIM(_DATA2)
; MAY 14, 2018 - KJWH: Updated formating and removed final PRINT at the end of the program


;##################################################################################################################################################################

;-
; *********************************
  ROUTINE_NAME='PLIST'
; *********************************
  CATCH, ERRORSTATUS

; ERROR HANDLER
  IF (ERRORSTATUS NE 0) THEN BEGIN
    CATCH, /CANCEL
    PRINT,!ERROR_STATE.MSG
    PRINT, ' GOING TO DONE >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>'
    WAIT,1
    GOTO,DONE
  ENDIF;IF (ERRORSTATUS NE 0) THEN BEGIN

  IF N_ELEMENTS(DATA) EQ 0 THEN BEGIN
    PRINT,'ERROR: DATA ARE REQUIRED'
    GOTO, DONE
  ENDIF ELSE BEGIN
    TYPE = IDLTYPE(DATA) ;    ===> DETERMINE DATA TYPE
    IF TYPE EQ 'BYTE'THEN _DATA =FIX(DATA) ELSE _DATA = DATA 
  ENDELSE ;IF N_ELEMENTS(DATA) EQ 0 THEN BEGIN
    
  IF N_ELEMENTS(DATA2) GE 1 THEN BEGIN   
    TYPE = IDLTYPE(DATA) ;    ===> DETERMINE DATA TYPE
    IF TYPE EQ 'BYTE'THEN DATA2 =FIX(DATA2)
  ENDIF ;IF N_ELEMENTS(DATA2) EQ 0 THEN BEGIN  
    
  
  IF ANY(DATA2) THEN _DATA = STRTRIM(_DATA,2) +'   '+ STRTRIM(DATA2,2)   
  IF N_ELEMENTS(DELIM) NE 1 THEN DELIM = ':'
  IF N_ELEMENTS(SKIP) NE 1 THEN SKIP = 1
  TYPE = IDLTYPE(_DATA,/CODE)
  CASE TYPE OF
    0:  FORMAT = 'UNDEFINED'
    1:  FORMAT = 'I)'
    2:  FORMAT = 'I)'
    3:  FORMAT = 'I)'
    4:  FORMAT = 'F)'
    5:  FORMAT = 'D)'
    6:  FORMAT = ''
    7:  FORMAT = 'A)'
    8:  FORMAT = 'A)' ; STRUCTURE TAGS CONVERTED TO STRING
    9:  FORMAT = ''
    10: FORMAT = ''
    11: FORMAT = ''
    12: FORMAT = 'I)'
    13: FORMAT = 'I)'
    14: FORMAT = 'I)'
    15: FORMAT = 'I)'
  ENDCASE

	IF FORMAT NE '' THEN BEGIN
  	IF KEYWORD_SET(NOSEQ) THEN FORMAT = "(A,"+FORMAT ELSE FORMAT = "(I,'"+DELIM+"'," +FORMAT
	ENDIF

	IF TYPE NE 8 THEN BEGIN ; IF NOT A SIMPLE SPREADSHEET TYPE STRUCTURE
		TXT = _DATA
		IF NOT KEYWORD_SET(NOHEAD) THEN BEGIN
			IF NOT KEYWORD_SET(NOSEQ) THEN HEADING = 'SEQ'+DELIM+'DATA' ELSE HEADING = 'DATA'
		ENDIF
	ENDIF ELSE BEGIN
		IF N_ELEMENTS(TAGS) GE 1 OR N_ELEMENTS(TAGNAMES) GE 1 THEN COPY = STRUCT_COPY(DATA,TAGS=TAGS,TAGNAMES=TAGNAMES) ELSE COPY = _DATA
    IF  KEYWORD_SET(NOHEAD) THEN BEGIN
    	TXT=STRUCT_2STRING(COPY)
    ENDIF ELSE BEGIN
    	TXT=STRUCT_2STRING(COPY,/HEADING)
    	HEADING = TXT[0]
    	TXT=TXT(1:*)
    ENDELSE
	ENDELSE

	N = N_ELEMENTS(TXT)

  IF KEYWORD_SET(NOSEQ) THEN SEQ = REPLICATE('',N) ELSE SEQ = [SINDGEN(N)]


	IF N_ELEMENTS(FILE) NE 1 THEN BEGIN
;		=====> PRINTING TO SCREEN NOTES FIRST
		FOR NTH = 1L,N_ELEMENTS(NOTES) DO PRINT, NOTES(NTH-1)
  	
; 	=====> PRINT HEADING
		FOR NTH = 1L,N_ELEMENTS(HEADING) DO PRINT, HEADING(NTH-1)
  	
; 	=====> PRINT DATA
  	FOR NTH = 0L,N-1L, SKIP DO PRINT, SEQ[NTH], TXT[NTH],FORMAT=FORMAT
  	PRINT
	ENDIF ELSE BEGIN
; =====> PRINTING TO A FILE
    IF KEYWORD_SET(OVERWRITE) THEN OPENW,LUN,FILE,/GET_LUN ELSE OPENW,LUN,FILE,/GET_LUN,/APPEND

;		=====> PRINT NOTES FIRST
		FOR NTH = 1L,N_ELEMENTS(NOTES) DO PRINTF,LUN, NOTES(NTH-1)
  	
; 	=====> PRINT HEADING
		FOR NTH = 1L,N_ELEMENTS(HEADING) DO PRINTF,LUN, HEADING(NTH-1)

; =====> PRINT DATA
    FOR NTH = 0L,N-1L, SKIP DO  PRINTF,LUN, SEQ[NTH], TXT[NTH],FORMAT=FORMAT
  	PRINTF, LUN
  	CLOSE,LUN
    FREE_LUN,LUN
    PFILE,FILE
  ENDELSE ; IF N_ELEMENTS(FILE) EQ 1 THEN BEGIN

; ***************************************

  DONE:

END; #####################  END OF ROUTINE ################################
