; $ID:	PLT_MERGE.PRO,	2020-07-01-12,	USER-KJWH	$
;#############################################################################################################
	PRO PLT_MERGE,FILES,DIR_OUT=DIR_OUT,COLS=COLS,ROWS=ROWS,$
	              BUFFER=BUFFER,OVERWRITE=OVERWRITE,MARGIN=MARGIN
;  PRO PLT_MERGE
;+
; NAME:
;		PLT_MERGE
;
; PURPOSE: MERGE A SET OF IMAGE FILES INTO A SINGLE COMPOSITE PAGE
;
; CATEGORY:	IMG;	
;
; CALLING SEQUENCE: PLT_MERGE,FILES,DIR_OUT=DIR_OUT
;
; INPUTS: FILES:  FULLNAMES OF FILES WITH THE NAME OF A PROD BEING PART OF THE NAME
;		
; OPTIONAL INPUTS:
;		NONE:	
;		
; KEYWORD PARAMETERS:
;		STAT:    THE STAT TO READ USING STATS_READ [DEFAULT IS 'MEAN']
;		NOBAR:   DO NOT ADD THE COLORBAR
;		DIR_OUT: DIRECTORY TO WRITE THE OUTPUT PNGFILE
;		CB_POS:  POSITION FOR THE COLORBAR ['T'=TOP,'B'=BOTTOM,'L'=LEFT,'R'=RIGHT,'I'=INSIDE;
;		MAP_OUT: REMAP INPUT ARRAY TO A DIFFERENT MAP	[MAP_OUT]	
;		ADD_NAME: ADDS THE FIRST NAME OF THE INPUT FILE TO THE RIGHT OF THE COLORBAR
;		EDIT:    PROGRAM STOPS TO ALLOW EDITS 
;   _EXTRA:  VALID KEYWORDS FOR USE BY COLORBAR [FONT_SIZE=,POSITION=,ETC
;   BIT_DEPTH: SEE WINDOW SAVE METHOD OUR DEFAULT = 1 [NORMAL 8-BIT PNG WITH R,G,B, ARRAYS]

; OUTPUTS: AN IMAGE DISPLAY AND A PNG IMAGE OF THE DATA IN THE FILE
;		
;; EXAMPLES:;
; PLT_MERGE,"C:\IDL\DEMO\ANNUAL-OSTAM-2010_12-SMI-CHLOR_A-MEAN.SAVE",/ADD_NAME,DIR_OUT = !S.IDL_TEMP

;===> MULTIPLE FILES EXAMPLE:
; 1) FILES = FILE_SEARCH('F:\SMI\STATS_PERIODS','M_*SST*.SAVE')
; 2) PLT_MERGE',FILES,DIR_OUT = 'F:\SMI\STATS_BROWSE\',/ADD_NAME

; RESTRICTIONS:

; MODIFICATION HISTORY:
;			APR 18,2014 WRITTEN BY J.O'REILLY
;     OCT 22,JOR ADDED KEYS COLS,ROWS

;#################################################################################
;-
;***************************
ROUTINE_NAME  = 'PLT_MERGE'
;***************************

;#######  CONSTANTS AND DEFAULTS    #############
IF NONE(MARGIN) THEN MARGIN = [0,0.1,0,.15] 
PAL='PAL_SW3'  & RGB_TABLE = RGBS([0,255],PAL=PAL)
FONT_HELVETICA
FONT_SIZE=14 ; [COLORBAR]
RES = 600
BACKGROUND_COLOR = RGBS(255)
LAND_COLOR  = 253
COAST_COLOR = 0 
MISS_COLOR  = 254
BORDER = 0 ; [AROUND PAGE]
ASPECT = 0.05
BIT_DEPTH= 0 ;[TRUE COLOR]
DIMENSIONS =[8000,10000]
RESOLUTION = 600
!X.OMARGIN = [0,0]
!Y.OMARGIN = [0,0]
;|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

;##############   PARSE THE FILE NAME   ######################
IF NONE(FILES) THEN MESSAGE,'ERROR: FILES ARE REQUIRED'

IF N_ELEMENTS(DIR_OUT) EQ 1 THEN _DIR_OUT = DIR_OUT ELSE _DIR_OUT = !S.IDL_TEMP

PNGFILE = _DIR_OUT + ROUTINE_NAME  +'.PNG'
;||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

;################# OVERWRITE ?  #########################
IF FILE_MAKE(IN=FILES,OUT=PNGFILE,OVERWRITE=OVERWRITE,QUIET=QUIET) EQ 0 THEN GOTO, DONE; >>>>>>>>>>>>>>
;||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
NUM = N_ELEMENTS(FILES)
; ===> DETERMINE COLUMNS AND ROWS 
IF NONE(COLS) THEN COLS = FLOOR( SQRT(NUM+ SQRT(NUM)))
IF NONE(ROWS) THEN ROWS = CEIL(SQRT(NUM))

;#####################  WINDOW     ###################################
W  = WINDOW(DIMENSIONS = DIMENSIONS,BUFFER=BUFFER,BACKGROUND_COLOR=BACKGROUND_COLOR,WINDOW_TITLE = ROUTINE_NAME)

;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FOR NTH = 0,N_ELEMENTS(FILES)-1 DO BEGIN
  FILE = FILES[NTH] 
  LAYOUT = [COLS,ROWS,NTH+1]  
;###########>  READ THE PNG FILE   ###############
BYT = READ_IMAGE(FILE)
;||||||||||||||||||||||||||||||||||||||||||||||||||||

;#####################  IMAGE    ######################################
IM = IMAGE(BYT,RGB_TABLE=RGB_TABLE,BACKGROUND_COLOR= BACKGROUND_COLOR,$          
          LAYOUT = LAYOUT,/CURRENT,MARGIN=MARGIN)
;||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
;

ENDFOR;FOR NTH = 0,N_ELEMENTS(FILES)-1 DO BEGIN
;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
;###############  WRITE THE PNGFILE   ###############>

W.SAVE, PNGFILE,RESOLUTION=RESOLUTION,WIDTH = WIDTH,HEIGHT = HEIGHT ,BORDER =BORDER,BIT_DEPTH = BIT_DEPTH
PFILE,PNGFILE
W.CLOSE
;|||||||||||||||||||||||||||||||||||||||||||||||||||||
DONE:

END; #####################  END OF ROUTINE ################################
