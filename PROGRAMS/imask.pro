; $ID:	IMASK.PRO,	2015-03-25	$
;#############################################################################################################
	FUNCTION IMASK,IMG,WIDTH ,NAN=NAN,SUBS=SUBS,COUNT
	
;+
; NAME:
;		IMASK
;
; PURPOSE: THIS FUNCTION MAKES A MASK, A FLOAT IMAGE, DIMENSIONED AS [PX,PY]
;          WHERE THE CENTER PIXEL OF EACH BOX (WIDTH X WIDTH) IN A MOVING WINDOW 
;          IS SET TO ZERO [OR NAN]
;          AND THE NEIGHBORING PIXELS ARE SET TO ONE
;
; CATEGORY:
;		IMAGE
;		 
;
; CALLING SEQUENCE:RESULT = IMASK(IMG,WIDTH,SUBS=SUBS,COUNT)
;
; INPUTS:
;		 IMG.......... A 2D IMAGE ARRAY OR ITS WIDTH,HEIGHT [PX,PY]
;		 WIDTH........ WIDTH OF BOX IN WHICH THE CENTER PIXED WILL BE SET TO ZERO [DEFAULT = 3]
;		
; OPTIONAL INPUTS:
;		NONE:	
;		
; KEYWORDS:
;          NAN........ SET THE CENTER VALUE TO NAN INSTEAD OF ZERO
;          SUBS....... SUBSCRIPTS OF THE CENTER PIXELS 

; OTHER PARAMETERS:
;          COUNT....... THE NUMBER OF CENTER PIXELS

; OUTPUTS:A 2-DIMENSIONAL FLOAT IMAGE MASK OF ONES AND ZEROES[ OR NANS]
;		
;; EXAMPLES:
;     MASK = IMASK(BYTARR([3,3]),3) & P,MASK
;     MASK = IMASK([3,3],3,/NAN) & P,MASK
;     MASK = IMASK([7,7],3,/NAN,SUBS=SUBS,COUNT) &P,SUBS
;     MASK = IMASK([9,9],3,/NAN,SUBS=SUBS,COUNT) & SPREAD,MASK
;     MASK = IMASK([1024,1024],3,SUBS=SUBS,COUNT) & HELP,MASK & PC,COUNT & PC,(1024.*1024)/(3*3)
;     MASK = IMASK([1024,1024],5,SUBS=SUBS,COUNT) & HELP,MASK & PC,COUNT & PC,(1024.*1024)/(5*5)
;
; MODIFICATION HISTORY:
;			WRITTEN MAR 21,2015 J.O'REILLY
;#################################################################################
;
;
;-
;	*********************
ROUTINE_NAME  = 'IMASK'
; *********************
;===> DEFAULTS
IF NONE(WIDTH) THEN WIDTH  = 3L
WIDTH = WIDTH > 3
;|||||||||||||||||||||||||||||||

IF NONE(IMG) THEN MESSAGE,'ERROR: IMG IS REQUIRED'
IF KEY(NAN) THEN VAL = !VALUES.F_NAN  ELSE VAL = 0.0

;===> MAKE AN ARRAY OF ONES
S = SIZEXYZ(IMG) & PX=S.PX & PY = S.PY & PZ = S.PZ
IF PZ EQ 0 THEN MASK = MAKE_ARRAY([PX,PY],VALUE=1.0) ELSE MASK = MAKE_ARRAY([PX,PY,PZ],VALUE=1.0)

;===> START,FINISH AND STEP FOR SUBS
START = WIDTH + 1L
FIN = NOF(MASK)-START
STEP = WIDTH*WIDTH

;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FOR N = START,FIN,STEP DO  MASK(N) = VAL
;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
SUBS = WHERE(FINITE(MASK) EQ 0 OR MASK EQ VAL,COUNT)
RETURN,MASK
          
	END; #####################  END OF ROUTINE ################################
