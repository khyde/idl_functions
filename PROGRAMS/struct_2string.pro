; $ID:	STRUCT_2STRING.PRO,	2020-06-30-17,	USER-KJWH	$
; ;###################################################################################
FUNCTION STRUCT_2STRING, STRUCT, DELIM=DELIM, HEADING=HEADING, TAGNAMES=TAGNAMES,ARR=ARR,TRANSP=TRANSP,ERROR=ERROR
;+
;	THIS FUNCTION CONVERT TAGS IN A SIMPLE (SPREADSHEET) STRUCTURE INTO DELIMITED STRINGS.
;
; SYNTAX:
;		RESULT = STRUCT_2STRING(STRUCT, [DELIM=DELIM], [HEADING=HEADING]   )
; OUTPUT:
;		STRING ARRAY
; ARGUMENTS:
; 	STRUCT:	A SIMPLE (DATABASE-LIKE OR SPREADSHEET-LIKE IDL STRUCTURE)
; KEYWORDS:
;		DELIM; 	THE CHARACTER(S) TO APPEND TO EACH TAG AFTER IT IS CONVERTED TO STRING
;              	IF DELIM = 'TAB' THEN 9B (THE BYTE VALUE OF THE ASCII TAB CHARACTER) IS THE DELIM.:
;		HEADING:  	ADDS THE TAGNAMES (FIELD NAMES) TO THE FIRST LINE OF THE OUTPUT STRING ARRAY
;
;		TAGNAMES: 	RETURNS A DELIMITED STRING WITH JUST THE STRUCTURE TAGNAMES
;		ARR OR TRANSP: TRANSPOSES THE STRUCTURE SO THAT THE OUTPUT ROWS ARE THE TAGNAMES AND THE COLUMNS ARE THE DATA
;	ERROR:     ANY ERROR MESSAGES ARE PLACED IN ERROR, IF NO ERRORS THEN ERROR = ''
; EXAMPLES:
;
;	STRUCT = CREATE_STRUCT('AA',0B,'BB',1,'CC',2L,'FF',1E16,'GG','HELLO')& STRUCT = REPLICATE(STRUCT,5)
;	RESULT = STRUCT_2STRING(STRUCT)                 	; RESULTS IN A COMMA-DELIMITED STRING ARRAY
;
; RESULT = STRUCT_2STRING(STRUCT,DELIM=',')   	; RESULTS IN A COMMA-DELIMITED STRING ARRAY
;	RESULT = STRUCT_2STRING(STRUCT,DELIM=' ')   	; RESULTS IN A SPACE-DELIMITED STRING ARRAY
; RESULT = STRUCT_2STRING(STRUCT,DELIM='TAB') 	; RESULTS IN A TAB-DELIMITED STRING ARRAY
;	RESULT = STRUCT_2STRING(STRUCT,DELIM='CAT') 	; RESULTS IN A 'CAT'-DELIMITED STRING ARRAY
;
;
;	EXAMPLE OF HOW TO EASILY MAKE A CSV FILE FROM A SIMPLE ROW VS COLUMN STRUCTURE
;		STRUCT = CREATE_STRUCT('AA',0B,'BB',1,'CC',2L,'FF',1E16,'GG','HELLO')& STRUCT = REPLICATE(STRUCT,5)
;		STRUCT_2CSV,'TEST.CSV',STRUCT
;		NOW CHECK OUT THE TEST.CSV FILE IN EXCEL OR WORD PROCESSOR
;
; CATEGORY:
;	STRUCTURES
;
; NOTES:
;	CONVERSION OF FLOAT AND DOUBLE USES IDL 'G' FORMAT
;	CONVERSION OF BINARY           USES IDL 'I' FORMAT
;   MISSINGS.PRO IS CALLED.  MISSING DATA CODES (SEE MISSINGS.PRO) ARE CONVERTED TO NULL STRING ''
;		(EXCEPT FOR BYTE TYPE)
;  	ROUTINE ONLY WORKS WITH SIMPLE STRUCTURES (E.G. DATABASE OR SPREADSHEET TYPE STRUCTURES)
;
; HISTORY:
;	OCT 1,2001	WRITTEN BY:	J.E. O'REILLY, NOAA, 28 TARZWELL DRIVE, NARRAGANSETT, RI 02882
;	NOV 30,2004 JOR IF THE DATA IN THE STRUCTURE IS 0B THEN OUTPUT STRING WILL BE SET TO NULL (MISSING CODE FOR STRING)
;	JUL 5,2013,JOR,FORMATTING
;#################################################################################################
;-
;*******************************
ROUTINE_NAME  = 'STRUCT_2STRING'
;*******************************
; ===============>
; DEFAULT DELIM IS A COMMA
  IF N_ELEMENTS(DELIM) NE 1 THEN DELIM = ','
  IF STRUPCASE(DELIM) EQ 'TAB' 		THEN DELIM =  STRING(9B)
  IF STRUPCASE(DELIM) EQ 'COMMA' 	THEN DELIM =  STRING(44B)

  S = SIZE(STRUCT,/STRUCT)

; ******************************************************
; ONLY WORKS ON SIMPLE STRUCTURES (E.G. DATABASE OR SPREADSHEET TYPE STRUCTURES)
  IF S.TYPE EQ 8 AND S.N_DIMENSIONS EQ 1 THEN BEGIN

;   ===================>
;   MAKE A STRING ARRAY TO HOLD ALL OF THE DATA FROM EACH RECORD
    NRECS = N_ELEMENTS(STRUCT)
    NTAGS = N_TAGS(STRUCT)
    TYPES = LONARR(NTAGS)

    IF KEYWORD_SET(TAGNAMES) THEN RETURN,STRJOIN(TAG_NAMES(STRUCT),DELIM)



   ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFF
    FOR NTH=0L, NTAGS-1L DO BEGIN
      SZ=SIZE(STRUCT[0].(NTH),/STRUCT)
      TYPES[NTH] = SZ.TYPE
    ENDFOR;FOR NTH=0L, NTAGS-1L DO BEGIN
    ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF

    FMT = REPLICATE('',NTAGS)
    OK = WHERE(TYPES EQ 4 OR TYPES EQ 5,COUNT); FLOAT, DOUBLE
    IF COUNT GE 1 THEN FMT[OK] = '(G)'
    OK = WHERE(TYPES EQ 1,COUNT) ; BINARY
    IF COUNT GE 1 THEN FMT[OK] = '(I)'

    TXTARR = STRARR(NTAGS,NRECS)

    ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
    FOR _TAG = 0L, NTAGS-1L DO BEGIN
      TXTARR(_TAG,*) = STRTRIM(STRING(STRUCT.(_TAG),FORMAT=FMT(_TAG)),2)
;     ===> MISSING DATA ARE SET TO NULL STRING
      OK = WHERE(STRUCT.(_TAG) EQ MISSINGS(STRUCT.(_TAG)),COUNT)
       IF COUNT GE 1 THEN TXTARR(_TAG,OK) = ''
    ENDFOR;FOR _TAG = 0L, NTAGS-1L DO BEGIN
    ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF

		IF KEYWORD_SET(HEADING) THEN TXTARR = [[TAG_NAMES(STRUCT)], [TEMPORARY(TXTARR)]]

    IF KEYWORD_SET(ARR) THEN TXTARR = TRANSPOSE(TXTARR)
    TXTARR=STRJOIN(TXTARR,DELIM)
    RETURN, TXTARR
  ENDIF ELSE RETURN, ''


END; #####################  END OF ROUTINE ################################
