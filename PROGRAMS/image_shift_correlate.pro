; $ID:	IMAGE_SHIFT_CORRELATE.PRO,	2020-07-08-15,	USER-KJWH	$
;+
;	This Function returns a structure containing the Xshift and Yshift and Correlation Coefficient
;				That yields the maximum correlation between the REFERENCE AND IMAGE IMAGES
; SYNTAX:
;	IMAGE_SHIFT_CORRELATE,
;	Result  = IMAGE_SHIFT_CORRELATE(Reference, Image)
; OUTPUT:
;		Structure
; ARGUMENTS:
;		Reference
;		Image
; KEYWORDS:;
; EXAMPLE:
;	REFERENCE=READALL('D:\IDL\IMAGES\NEC_COAST.PNG') & IMAGE = READALL('F:\AVHRR\BROWSE\2002_175_0634_n16_er_s3_AVHRR_RAW__NEC_SST.PNG') & IMAGE=SHIFT(IMAGE,0,3) & S=IMAGE_SHIFT_CORRELATE(REFERENCE,IMAGE,BOX=3)
; CATEGORY:
; NOTES:
; HISTORY:
;		July 23, 2003	Written by:	J.E. O'Reilly, NOAA, 28 Tarzwell Drive, Narragansett, RI 02882
;-
; *************************************************************************

FUNCTION IMAGE_SHIFT_CORRELATE, REFERENCE, IMAGE, BOX=box,THICK=thick, ITER_MAX=iter_max, SHOW=show
  ROUTINE_NAME='IMAGE_SHIFT_CORRELATE'
  SOBEL_MIN= 10
  SOBEL_MAX=255
	IF N_ELEMENTS(ITER_MAX) NE 1 THEN ITER_MAX = 1

	IF N_ELEMENTS(BOX) NE 1 THEN _BOX = 5 ELSE _BOX = BOX
	IF N_ELEMENTS(THICK) NE 1 THEN _THICK = 5 ELSE _THICK = THICK


;	=====================> Make sure Reference and Image are both 2d images and same size
  SZ_REFERENCE 	= SIZE(REFERENCE,/STRUCT)
  SZ_IMAGE 			= SIZE(IMAGE,/STRUCT)

	STRUCT=CREATE_STRUCT('XSHIFT',0L,'YSHIFT',0L,'N',0L,'R',0.0)

  IF SZ_REFERENCE.N_DIMENSIONS 	NE 2 OR SZ_IMAGE.N_DIMENSIONS NE 2 THEN RETURN, STRUCT[0]
  IF SZ_REFERENCE.DIMENSIONS[0] NE SZ_IMAGE.DIMENSIONS[0] OR $
     SZ_REFERENCE.DIMENSIONS[1] NE SZ_IMAGE.DIMENSIONS[1] THEN RETURN, STRUCT[0]

;	===================> Reference coastline, lakes and rivers must be 1
	OK_REFERENCE = WHERE(REFERENCE EQ 1,COUNT)
	IF COUNT EQ 0 THEN RETURN,STRUCT[0]


;	LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
	FOR ITER = 1L, ITER_MAX DO BEGIN

;	===========================> Dilate Coastline and rivers and lakes
  _THICK_ = _THICK*ITER
	STRUCT=CREATE_STRUCT('XSHIFT',0L,'YSHIFT',0L,'N',0L,'R',0.0) & STRUCT=REPLICATE(STRUCT,(_BOX*2+1)^2)
	CLOUDIER,IMAGE=REFERENCE,BOX=_THICK_,CLOUD=1,MASK=MASK,/QUIET

;	==============> Gradient Image
	S=SOBEL(IMAGE)

;	===============> Find Gradients within the Dialated Coastline Mask
	OK_TARGET = WHERE(MASK EQ 1 AND S GT SOBEL_MIN AND S LT SOBEL_MAX,COUNT_TARGET)
	IF COUNT_TARGET EQ 0 THEN RETURN,STRUCT[0]

	DATA = BYTE(IMAGE)
	DATA(*) = 0B
	DATA(OK_TARGET) = S(OK_TARGET)


;	LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
;	LLLLLLLLLLLL S H I F T    LLLLLLLLLLLLLLLLLLLLLLLLLLL
; LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
	COUNTER = -1L
  FOR ROW = -1L*_BOX*ITER,_BOX*ITER DO BEGIN
		FOR COL = -1L*_BOX*ITER,_BOX*ITER DO BEGIN
	  	_REFERENCE=SHIFT(REFERENCE,COL,ROW)
	  	OK = WHERE(_REFERENCE EQ 1,COUNT)
	  	_REFERENCE[OK] = DATA[OK]
			COUNTER = COUNTER+1
			STRUCT(COUNTER).N =	COUNT_TARGET
			STRUCT(COUNTER).R =	CORRELATE(_REFERENCE, DATA)
			STRUCT(COUNTER).XSHIFT = -1*COL ; Since shifting REFERENCE, not image
			STRUCT(COUNTER).YSHIFT = -1*ROW
  	ENDFOR
  ENDFOR
  OK_FINITE=WHERE(FINITE(STRUCT.R),COUNT_FINITE)
  IF COUNT_FINITE GE 1 THEN BEGIN
  	STRUCT=STRUCT(OK_FINITE)
  	OK = WHERE(STRUCT.R EQ MAX(FINITE(STRUCT.R) * STRUCT.R),COUNT)
  	STRUCT=STRUCT[OK]
  ENDIF

; ============> IF several peak R's then pick one with least shifting
  IF COUNT GT 1 THEN BEGIN
		dist = SQRT(STRUCT.XSHIFT^2 + STRUCT.YSHIFT^2)
		srt=SORT(dist)
		STRUCT=STRUCT(srt)
		STRUCT=STRUCT[0]
  ENDIF

		IF ABS(STRUCT.XSHIFT) LT _BOX AND ABS(STRUCT.YSHIFT) LT _BOX THEN BREAK
	ENDFOR


;	*******************************
  IF KEYWORD_SET(SHOW) THEN BEGIN
    COPY = SHIFT(IMAGE,struct.xshift,struct.yshift)
    COPY(OK_REFERENCE) = 0
  	SLIDEW, COPY
  ENDIF


  RETURN, STRUCT
END; #####################  End of Routine ################################
