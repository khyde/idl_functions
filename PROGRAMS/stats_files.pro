; $ID:	STATS_FILES.PRO,	2020-06-30-17,	USER-KJWH	$
; #########################################################################; 
PRO STATS_FILES,FILES,TAGS=TAGS,MISSING=MISSING
;+
; PURPOSE:  COMPUTE STATS FOR A SET OF FILES [FRISK THE FILES]
;
; CATEGORY: STATS;
;
;
; INPUTS: 
;       FILES..... SAV FILES
;
;
; KEYWORDS:
;          MISSING..... CODE FOR MISSING DATA [DEFAULT = INF]
;          TAGS......... TAGNAMES TO EXTRACT FROM THE SAV FILE
;

; OUTPUTS: 
;        A CSV_FILE WITH THE FILE NAMES AND STATS FOR EACH FILE BY TAG
;
;; EXAMPLES:
;          STATS_FILES,FILES,TAGS = ['GRAD_X','GRAD_Y','GRAD_MAG','GRAD_DIR']

;
; MODIFICATION HISTORY:
;     SEP 15, 2016  WRITTEN BY: J.E. O'REILLY
;     SEP 16,2016,JOR ADDED LOOP ON TAGS
;                     S = STRUCT_2MISSINGS(STATS_NAN(REPLICATE(-9.0D,3),/BASIC))

;-
; #########################################################################

;****************************
ROUTINE_NAME  = 'STATS_FILES'
;****************************
IF NONE(MISSING) THEN MISSING = MISSINGS(0.0)
IF NONE(TAGS) THEN TAGS = 'MEAN'

;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF


 ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
  FOR NTH = 0,NOF(FILES)-1 DO BEGIN
    POF,NTH,FILES
    FILE = FILES[NTH]
    
    NAME = (FILE_PARSE(FILE)).NAME
    ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
    FOR TAGS_= 0,NOF(TAGS) -1 DO BEGIN
      ATAG = TAGS(TAGS_)
      PFILE,ATAG,/U & WAIT,1
    D = STRUCT_READ(FILE,TAG=ATAG)    
    IF IDLTYPE(D) EQ 'STRUCT' THEN MESSAGE,'ERROR: CORRUPTED TAG'
    IF IDLTYPE(D) NE 'STRING' THEN BEGIN
      OK = WHERE(FINITE(D) AND D NE MISSING,COUNT)
      S = STATS_NAN(DOUBLE(D[OK]),/BASIC)
    ENDIF ELSE BEGIN
      PRINT,'BAD STAT FILE: ' + NAME
      S = STRUCT_2MISSINGS(STATS_NAN(REPLICATE(-9.0D,3),/BASIC)) 
      S.N =   0L
      S.N_GOOD = 0L   
    ENDELSE;    IF IDLTYPE(D) NE 'STRING' THEN BEGIN

    S = CREATE_STRUCT('NAME',NAME,'TAG',ATAG,S)
    IF NONE(DB) THEN DB = S ELSE DB = [DB,S] 
    
  ENDFOR;FOR TAGS_= 0,NOF(TAGS) -1 DO BEGIN
  ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF   
ENDFOR;FOR NTH = 0,NOF(FILES)-1 DO BEGIN
;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF

TXT = STRJOIN(TAGS+'-')
CSV_FILE = !S.IDL_TEMP + ROUTINE_NAME + '-'+ TXT + '.CSV'
CSV_WRITE,CSV_FILE,DB

END; #####################  END OF ROUTINE ################################
