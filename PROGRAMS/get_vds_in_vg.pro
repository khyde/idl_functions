; $ID:	GET_VDS_IN_VG.PRO,	FEBRUARY 29,2012 	$
;+NAME/ONE LINE DESCRIPTION OF ROUTINE:
;    GET_VDS_IN_VG RETURNS THIS RETURNS THE NAMES OF ALL VDATAS OF A SPECIFIED CLASS WITHIN A SPECIFIED VGROUP.
;    EXAMPLE:
;    VD = GET_VDS_IN_VG(FILE,'LEVEL-3 BINNED DATA','DATASUBORDINATE')
;    
; MODIFICATION HISTORY:
;    J. GALES, FUTURETECH CORP..
;    B. A. FRANZ, SAIC GENERAL SCIENCES CORP..
;    FEBRUARY 2000.
;    
;    FEB 29,2012,JOR,[ I ASSUMED THAT B. A. FRANZ IS THE ORIGINAL AUTHOR]
;                     ADDED COMMENTS, AND DOCUMENTATION,UPPERCASE FOR EASIER READING
 ;                     RETURN AN ERROR MESSAGE INSTEAD OF NULL STRING OR -1
;-
FUNCTION GET_VDS_IN_VG, FILENAME, VG_NAME, VD_CLASS
;********************************************************
ROUTINE_NAME = 'GET_VDS_IN_VG'
;********************************************************
; 
;===> OPEN FILE
; ---------
FILEID = HDF_OPEN(FILENAME, /READ)

;===> LOOP THROUGH VGROUPS IN FILE UNTIL THE DESIRED VGROUP IS FOUND
NAME = ''
vg_ref = -1
;WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW
WHILE (NAME NE VG_NAME) DO BEGIN
	VG_REF = HDF_VG_GETID(FILEID, VG_REF)
; IF VG_REF IS NOT FOUND THEN RETURN AN ERROR MESSAGE
	IF (VG_REF EQ -1) THEN BEGIN
	ERROR = 'ERROR: VGROUP: "'+ VG_NAME+ '" IS NOT FOUND.'
	PRINT,ERROR
		HDF_CLOSE, FILEID
		RETURN, ERROR	
	ENDIF

	VG_ID = HDF_VG_ATTACH(FILEID, VG_REF, /READ)

	HDF_VG_GETINFO, VG_ID, NAME=NAME
;	PRINT,NAME
ENDWHILE;WHILE (NAME NE VG_NAME) DO BEGIN
;WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW

; GET TAGS AND REFERENCE NUMBERS IN VGROUP
; ----------------------------------------
HDF_VG_GETTRS, VG_ID, TAGS, REFS
N = N_ELEMENTS(TAGS)
HDF_VG_DETACH, VG_ID


;===> SEARCH VDATA NAMES IN VGROUP
vd_name = ''

;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FOR I=0,N-1 DO BEGIN
	IF (TAGS[I] EQ 1962) THEN BEGIN
		VDATA_ID = HDF_VD_ATTACH(FILEID, REFS[I])
		HDF_VD_GET, VDATA_ID, NAME=NAME, CLASS=CLASS
		IF (CLASS EQ VD_CLASS) THEN VD_NAME = [VD_NAME, NAME]
		HDF_VD_DETACH, VDATA_ID
	ENDIF
ENDFOR
;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
IF (N_ELEMENTS(VD_NAME) EQ 1) THEN BEGIN
  ERROR = 'ERROR: NO VDATAS FOUND' 
  PRINT,ERROR
  RETURN,ERROR
ENDIF ELSE BEGIN
 VD_NAME = VD_NAME[1:*]
ENDELSE;IF (N_ELEMENTS(VD_NAME) EQ 1) THEN BEGIN

HDF_CLOSE, FILEID

RETURN, VD_NAME
END; #####################  END OF ROUTINE ################################
