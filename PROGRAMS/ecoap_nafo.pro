; $ID:	ECOAP_NAFO.PRO,	2020-07-08-15,	USER-KJWH	$

	PRO ECOAP_NAFO

;+
; NAME:
;		ECOAP_NAFO
;
; PURPOSE:;
;		This procedure is the MAIN program for creating data and figures for the NAFO project with Michael Fogarty
;
; CATEGORY:
;		CATEGORY
;
; CALLING SEQUENCE:
;		NO KEYWORDS
;
; INPUTS:
;
; OPTIONAL INPUTS:
;
; KEYWORD PARAMETERS:
;
;	NOTES:
;
;
; MODIFICATION HISTORY:
;			Written May 22, 2011 by K.J.W.Hyde, 28 Tarzwell Drive, NMFS, NOAA 02882 (kimberly.hyde@noaa.gov)
;-
;	****************************************************************************************************
	ROUTINE_NAME = 'ECOAP_NAFO'

;	===> Initialize ERROR to a null string. If errors are encountered ERROR will be set to a message.
;			 The calling routine can check error (e.g.IF ERROR NE 0 then there was a problem and do this or that)
	ERROR = ''

	
	DIR_PROJECTS = FIX_PATH(!S.PROJECTS + 'ECOAP\NAFO\') 
	DIR_DATASETS = !S.DATASETS
	DIR_SAVE     = FIX_PATH(DIR_PROJECTS + 'DATA_BY_SUBAREA\')
	SL = DELIMITER(/PATH)
  
  DO_BOX_SUBAREA_MAP   = 0 ; Added 1/30/14 
  
  DO_MONTHLY_EXTRACTS  = 0 ; Added 11/7/13 Adapted from ECOAP_FISHERIES
	DO_MONTHLY_SUMS      = 0 ; Added 11/7/13 Adapted from ECOAP_FISHERIES
	DO_SUMMED_STATS      = 0 ; Added 11/7/13 Adapted from ECOAP_FISHERIES
	
	DO_ANNUAL_PLOTS      = 0 ; Added 11/21/13
	DO_NAFO_TIMESERIES   = 0 ; Added 11/20/2013 
	DO_FINAL_COMPOSITES  = 0 ; Added 11/22/13
	DO_BAR_COMPOSITES    = 0 ; Added 11/25/13
	DO_MAP_COMPOSITES    = 0 ; Added 11/22/13
	DO_NAFO_PAN_OC4      = 0 ; Added 11/25/13
	DO_DAILY_COMPARE     = 0 ; Added 11/25/13
	DO_MONTHLY_MAPS      = 0 ; Added 11/25/13
  
  DO_NAFO_LANDMASK     = 0 ; Added 10/18/12
  DO_NAFO_SUBAREAS     = 0
  DO_NAFO_OUTLINES     = 0 ; Added 11/22/13
  DO_NAFO_BOUNDARIES   = 0
  DO_NAFO_TS_SUBAREAS  = 1 ; Modified 1/30/14 - Changed to work with high res NAFO map and NAFO_BOXES subareas  
  DO_NAFO_COMPOSITES   = 0
  DO_POLY_PLOTS        = 0
  DO_CHL_COMPARE       = 0
  DO_PHYTO_PLOTS       = 0
  DO_BAR_PLOT          = 0
  
  
; *******************************************************
  IF DO_BOX_SUBAREA_MAP GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_BOX_SUBAREA_MAP GE 2
    
    DIR_SUBAREAS = FIX_PATH(DIR_PROJECTS+'SUBAREAS\')
    PAL_36,R,G,B
    LANDMASK = READ_LANDMASK(MAP='NAFO',/STRUCT)
    BATHY = READ_BATHY(MAP='NAFO')
    IMG    = READ_LANDMASK(MAP='NAFO')
    BOXCSV = DIR_SUBAREAS + 'NAFO_BOXES.csv'
    BOXES = READALL(BOXCSV)
    SETS = WHERE_SETS(BOXES.BOX)
    ZWIN,IMG
    MAP_NAFO
    TV,IMG
    COLOR = 5
    SUBAREA_CODES = []
    SUBAREA_NAMES = []
    FOR N=0, N_ELEMENTS(SETS)-1 DO BEGIN
      SUBS = WHERE_SETS_SUBS(SETS(N))
      BOX  = BOXES(SUBS)
      PXPY=MAP_DEG2IMAGE(IMG,BOX.LON,BOX.LAT,X=x,Y=y,AROUND=0,SUBS=subs)
      IF MIN(SUBS) LT 0 THEN CONTINUE
      POLYFILL, X, Y, COLOR=COLOR, /DEVICE
      SUBAREA_CODES = [SUBAREA_CODES,COLOR]
      SUBAREA_NAMES = [SUBAREA_NAMES,BOX[0].SUBAREA_NAME]
      COLOR = COLOR + 1
    ENDFOR
    
    IM_SUBS = TVRD()
    ZWIN
    PAL_36,R,G,B
    IM_SUBS(LANDMASK.LAND) = 2
    IM_SUBS(LANDMASK.COAST) = 1
    
    CSVFILE  = DIR_SUBAREAS + 'MASK_SUBAREA-NAFO-PXY_1024_1024-BOXES.CSV'
    SAVEFILE = DIR_SUBAREAS + 'MASK_SUBAREA-NAFO-PXY_1024_1024-BOXES.SAVE'
    
    STRUCT1=CREATE_STRUCT('SUBAREA_CODE','','SUBAREA_NAME','','NICKNAME','')
    STRUCT1=REPLICATE(STRUCT1,3)
    STRUCT1[0].SUBAREA_CODE =0  & STRUCT1[0].SUBAREA_NAME = 'OCEAN'     & STRUCT1[0].NICKNAME='OCEAN'
    STRUCT1[1].SUBAREA_CODE =1  & STRUCT1[1].SUBAREA_NAME = 'COAST'     & STRUCT1[1].NICKNAME='COAST'
    STRUCT1(2).SUBAREA_CODE =2  & STRUCT1(2).SUBAREA_NAME = 'LAND'      & STRUCT1(2).NICKNAME='LAND'
    
    STRUCT=CREATE_STRUCT('SUBAREA_CODE','','SUBAREA_NAME','','NICKNAME','')
    STRUCT=REPLICATE(STRUCT,N_ELEMENTS(SUBAREA_NAMES))
    STRUCT.SUBAREA_CODE = SUBAREA_CODES
    STRUCT.SUBAREA_NAME = STRUPCASE(SUBAREA_NAMES)
    STRUCT.NICKNAME     = STRUPCASE(SUBAREA_NAMES)
    
    CSV = STRUCT_CONCAT(STRUCT1,STRUCT)
    
    ;     ===> Write the Struct to a csv and save file
    STRUCT_2CSV,CSVFILE,CSV
    STRUCT_SD_WRITE,SAVEFILE, IMAGE=IM_SUBS, PROD='SUBAREA',  MAP='NAFO', $
      MISSING_CODE=missing_code, MISSING_NAME=missing_name, $
      SUBAREA_CODE=CSV.SUBAREA_CODE,SUBAREA_NAME=CSV.SUBAREA_NAME,$
      SCALING='LINEAR',  INTERCEPT=0.0,  SLOPE=1.0,TRANSFORMATION=TRANSFORMATION,$
      DATA_UNITS='',PERIOD=PERIOD, $
      INFILE=BOXCSV,$
      NOTES='MASK_SUBAREA', OVERWRITE=OVERWRITE, ERROR=ERROR  
    
    STOP
    
  ENDIF ; DO_BOX_SUBAREA_MAP  

; *******************************************************
  IF DO_MONTHLY_EXTRACTS GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_MONTHLY_EXTRACTS GE 2
    
    MAP = 'NAFO'
    NAFO_NAMES = 'NAFO_'+['1_2J3K','2_2J3KL','3_2J3KLNO','4_3LNO','5_3M','6_NS']
    NAFO_CODES =         ['5',     '5',      '5',        '5',     '5',   '5']
    
    SENSORS = ['SEAWIFS','MODIS']    
    SCHL  = ['CHLOR_A-PAN', 'CHLOR_A-OC4', 'MICRO-PAN',   'NANOPICO-PAN']
    MCHL  = ['CHLOR_A-PAN', 'CHLOR_A-OC3M', 'MICRO-PAN',   'NANOPICO-PAN']
    SPP   = ['PPD-VGPM2','MICROPP-MARMAP_PAN_VGPM2','NANOPICOPP-MARMAP_PAN_VGPM2','PPD-OPAL','MICROPP-MARMAP_PAN_OPAL','NANOPICOPP-MARMAP_PAN_OPAL']
    MPP   = ['PPD-VGPM2','MICROPP-MARMAP_PAN_VGPM2','NANOPICOPP-MARMAP_PAN_VGPM2','PPD-OPAL','MICROPP-MARMAP_PAN_OPAL','NANOPICOPP-MARMAP_PAN_OPAL']
    
    YEARS = YEAR_RANGE('1998','2012',/STRING)
        
    DIRS = []
    PRODS = []
    FOR S=0, N_ELEMENTS(SENSORS)-1 DO BEGIN
      CASE SENSORS(S) OF
        'SEAWIFS': BEGIN 
          CDIR  = 'OC-SEAWIFS-MLAC'
          PDIR  = 'PP-SEAWIFS_PAN-AVHRR-MLAC'
          CHL   = SCHL
          PP    = SPP
        END  
        'MODIS': BEGIN
          CDIR  = 'OC-MODIS-LAC'
          PDIR  = 'PP-MODIS_PAN-AVHRR-LAC'            
          CHL   = MCHL
          PP    = MPP
        END
      ENDCASE
      DIRS  = [DIRS,REPLICATE(CDIR,N_ELEMENTS(CHL)),REPLICATE(PDIR,N_ELEMENTS(PP))]
      PRODS = [PRODS,CHL,PP]
    ENDFOR
    FOR Y=0, N_ELEMENTS(YEARS)-1 DO BEGIN
      FOR D=0, N_ELEMENTS(DIRS)-1 DO BEGIN
        DIR_OUT = DIR_SAVE + PRODS(D) + SL & DIR_TEST,DIR_OUT
        PRINT, FIX_PATH(!S.DATASETS + DIRS(D)+'/'+MAP+'/STATS/'+PRODS(D)+'/M_'+YEARS(Y)+'*'+PRODS(D))
        FILES = FILE_SEARCH(FIX_PATH(!S.DATASETS + DIRS(D)+'/'+MAP+'/STATS/'+PRODS(D)+'/M_'+YEARS(Y)+'*'+PRODS(D)+'*MEAN.SAVE'))  
        IF FILES[0] EQ '' THEN CONTINUE
        FP = PARSE_IT(FILES)        
        SAVEFILES = []
        FOR A=0, N_ELEMENTS(NAFO_NAMES)-1 DO SAVEFILES = [SAVEFILES,DIR_OUT + 'M_'+YEARS(Y)+'-'+REPLACE(FP[0].NAME,FP[0].PERIOD, + NAFO_NAMES(A)) +'.SAVE']
        UPDATE = UPDATE_CHECK(INFILES=FILES,OUTFILES=SAVEFILES)
        IF UPDATE EQ 0 AND NOT KEYWORD_SET(OVERWRITE) THEN CONTINUE
        FOR N=0, N_ELEMENTS(FILES)-1 DO IF N EQ 0 THEN STRUCT = CREATE_STRUCT(FP(N).PERIOD,STRUCT_SD_READ(FILES(N))) ELSE STRUCT = CREATE_STRUCT(STRUCT,FP(N).PERIOD,STRUCT_SD_READ(FILES(N)))
        TAGS = TAG_NAMES(STRUCT)
    
        FOR N=0, N_ELEMENTS(NAFO_NAMES)-1 DO BEGIN
          MASK = STRUCT_SD_READ(!S.IMAGES + 'MASK_SUBAREA-NAFO-PXY_1024_1024-'+NAFO_NAMES(N)+'.SAVE',STRUCT=NSTRUCT)
          ACODE = FIX(NAFO_CODES(N))
          SAVEFILE = DIR_OUT + 'M_'+YEARS(Y)+'-'+REPLACE(FP[0].NAME,FP[0].PERIOD, + NAFO_NAMES(N))+'.SAVE'
          IF GET_MTIME(SAVEFILE) GT MAX(GET_MTIME(FILES)) AND NOT KEYWORD_SET(OVERWRITE) THEN CONTINUE
          OK = WHERE(MASK EQ ACODE,COUNT)
          IF COUNT GE 1 THEN FOR T=0, N_ELEMENTS(TAGS)-1 DO IF T EQ 0 THEN TEMP = CREATE_STRUCT(TAGS(T)+'_'+NAFO_NAMES(N),STRUCT.(T)(OK)) ELSE TEMP = CREATE_STRUCT(TEMP,TAGS(T)+'_'+NAFO_NAMES(N),STRUCT.(T)(OK))          
          PRINT, 'Writing ' + SAVEFILE
          SAVE,FILENAME=SAVEFILE,TEMP,/COMPRESS
          GONE, TEMP
        ENDFOR
        GONE, STRUCT          
      ENDFOR    
    ENDFOR
  ENDIF ; DO_MONTHLY_EXTRACTS
  
; *******************************************************
  IF DO_MONTHLY_SUMS GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_MONTHLY_SUMS GE 2
    
    MS = MAPS_SIZE('NAFO')
    
    NAMES = 'NAFO_'+['1_2J3K','2_2J3KL','3_2J3KLNO','4_3LNO','5_3M','6_NS']
    CODES =         ['5',     '5',      '5',        '5',     '5',   '5']

    PP_TARGETS = ['VGPM2','OPAL']
    FOR TAR=0, N_ELEMENTS(PP_TARGETS)-1 DO BEGIN
      PP_TARGET = PP_TARGETS(TAR)
    
      SENSORS = ['SEAWIFS'];,'MODIS']    
      SCHL  = ['CHLOR_A-PAN', 'MICRO-PAN', 'NANOPICO-PAN'] ; 'CHLOR_A-OC4',
      MCHL  = ['CHLOR_A-PAN', 'CHLOR_A-OC3M','MICRO-PAN', 'NANOPICO-PAN']
      SPP   = ['PPD-','MICROPP-MARMAP_PAN_','NANOPICOPP-MARMAP_PAN_'] + PP_TARGET 
      MPP   = ['PPD-','MICROPP-MARMAP_PAN_','NANOPICOPP-MARMAP_PAN_']
      PRODS = [SCHL,SPP]
      DIRS  = DIR_SAVE + PRODS + SL
      
      TARGETS = ['SEAWIFS-R2010-MLAC-NAFO-'+SCHL,$               
               ;  'MODIS-R2012-LAC-NAFO-'   +MCHL,$
                 'SEA_AV4-MLAC-NAFO-'      +SPP] + '-MEAN'
               ;  'MOD_AV4-LAC-NAFO-'       +MPP] + '-MEAN'
      
      
      
      YEARS = YEAR_RANGE('1998','2007',/STRING)        
      NAREA = READALL(FIX_PATH(DIR_PROJECTS + 'DATA_BY_SUBAREA\NAFO_AREAS.csv'))    
           
      FOR N=0, N_ELEMENTS(CODES)-1 DO BEGIN
        ACODE = FIX(CODES(N))
        ANAME = NAMES(N)
        FOR P=0, N_ELEMENTS(PRODS)-1 DO BEGIN
          APROD = PRODS(P)
          SAVES = FILE_SEARCH(DIRS(P) + 'M_*' + '-' + ANAME+'-' + TARGETS(P) + '.SAVE')
          IF N_ELEMENTS(SAVES) LE 1 THEN STOP        
          SAVEFILE = DIRS(P) + 'ALL-' +  ANAME +'-' + TARGETS(P) + '.SAVE'
          IF GET_MTIME(SAVEFILE) GT MAX(GET_MTIME(SAVES)) AND NOT KEYWORD_SET(OVERWRITE) THEN CONTINUE
          FOR S=0, N_ELEMENTS(SAVES)-1 DO BEGIN
            DATA = IDL_RESTORE(SAVES(S))
            IF S EQ 0 THEN OUTSTRUCT =  DATA ELSE OUTSTRUCT = STRUCT_MERGE(OUTSTRUCT,DATA)
            IF N_ELEMENTS(TAG_NAMES(OUTSTRUCT)) EQ 1 THEN STOP
          ENDFOR
          PRINT, 'Writing ' + SAVEFILE
          SAVE,FILENAME=SAVEFILE,OUTSTRUCT,/COMPRESS
          GONE, OUTSTRUCT
        ENDFOR
      ENDFOR
    
      FOR N=0, N_ELEMENTS(NAMES)-1 DO BEGIN
        ACODE = FIX(CODES(N))
        ANAME = NAMES(N)
        
        MASK = STRUCT_SD_READ(!S.IMAGES + 'MASK_SUBAREA-NAFO-PXY_1024_1024-'+ANAME+'.SAVE',STRUCT=NSTRUCT)
        OKN = WHERE(MASK EQ ACODE,COUNTN)
        
        SAVES = []
        FOR I=0, N_ELEMENTS(DIRS)-1 DO SAVES = [SAVES,FILE_SEARCH(DIRS(I) + 'ALL-' + ANAME+'-' + TARGETS(I) + '.SAVE')]
  
        DIR_CSV   = DIR_SAVE + 'STATS-CSV'  + SL + ANAME + SL & DIR_TEST,DIR_CSV
        DIR_STATS = DIR_SAVE + 'STATS-SAVE' + SL              & DIR_TEST,DIR_STATS
        
        CTDATA = IDL_RESTORE(FILE_SEARCH(DIRS[0] + 'ALL-' + ANAME+'-' + TARGETS[0] + '.SAVE'))
        CMDATA = IDL_RESTORE(FILE_SEARCH(DIRS[1] + 'ALL-' + ANAME+'-' + TARGETS[1] + '.SAVE'))
        CNDATA = IDL_RESTORE(FILE_SEARCH(DIRS(2) + 'ALL-' + ANAME+'-' + TARGETS(2) + '.SAVE'))
        PTDATA = IDL_RESTORE(FILE_SEARCH(DIRS(3) + 'ALL-' + ANAME+'-' + TARGETS(3) + '.SAVE'))
        PMDATA = IDL_RESTORE(FILE_SEARCH(DIRS(4) + 'ALL-' + ANAME+'-' + TARGETS(4) + '.SAVE'))
        PNDATA = IDL_RESTORE(FILE_SEARCH(DIRS(5) + 'ALL-' + ANAME+'-' + TARGETS(5) + '.SAVE'))
        TAGS   = TAG_NAMES(CTDATA)
        
        
        MSAVEFILE = DIR_STATS + 'MONTHLY_SUM-' + ANAME + '-CHL_PRIMARY_PRODUCTION-'+PP_TARGET+'-STATS.SAVE'
        MCSVFILE  = DIR_CSV   + 'MONTHLY_SUM-' + ANAME + '-CHL_PRIMARY_PRODUCTION-'+PP_TARGET+'-STATS.CSV'
        ASAVEFILE = DIR_STATS + 'ANNUAL_SUM-'  + ANAME + '-CHL_PRIMARY_PRODUCTION-'+PP_TARGET+'-STATS.SAVE'
        ACSVFILE  = DIR_CSV   + 'ANNUAL_SUM-'  + ANAME + '-CHL_PRIMARY_PRODUCTION-'+PP_TARGET+'-STATS.CSV'
        IF MIN(GET_MTIME([MSAVEFILE,ASAVEFILE,MCSVFILE,ACSVFILE])) GT MAX(GET_MTIME(SAVES)) AND NOT KEYWORD_SET(OVERWRITE) THEN CONTINUE
        
        PRINT, 'Calculating stats for: ' + NUM2STR(ACODE) + '-' + ANAME
        
        CONVERT_M2_2KM2 = 1000000
        STRUCT = CREATE_STRUCT('YEAR','','MONTH','','SUBAREA_NAME','','SUBAREA_CODE',0L,'N_SUBAREA_PIXELS',0L,'TOTAL_PIXEL_AREA_KM2',0.0D,'GIS_AREA_KM2',0.0D,$
          'TCHL_N_PIXELS',       0L,  'MCHL_N_PIXELS',       0L,  'NCHL_N_PIXELS',       0L,  $
          'TCHL_N_PIXELS_AREA',  0.0D,'MCHL_N_PIXELS_AREA',  0.0D,'NCHL_N_PIXELS_AREA',  0.0D,$
          'TCHL_MEAN',           0.0, 'MCHL_MEAN',           0.0, 'NCHL_MEAN',           0.0, $
          'TCHL_SPATIAL_VAR',    0.0, 'MCHL_SPATIAL_VAR',    0.0, 'NCHL_SPATIAL_VAR',    0.0, $
          
          'TPP_N_PIXELS',        0L,  'MPP_N_PIXELS',        0L,  'NPP_N_PIXELS',        0L,  $
          'TPP_N_PIXELS_AREA',   0.0D,'MPP_N_PIXELS_AREA',   0.0D,'NPP_N_PIXELS_AREA',   0.0D,$
          'TPP_SPATIAL_SUM',     0.0D,'MPP_SPATIAL_SUM',     0.0D,'NPP_SPATIAL_SUM',     0.0D,$
          'TPP_MONTHLY_SUM',     0.0D,'MPP_MONTHLY_SUM',     0.0D,'NPP_MONTHLY_SUM',     0.0D,$
          'TPP_MEAN',            0.0, 'MPP_MEAN',            0.0, 'NPP_MEAN',            0.0, $          
          'TPP_SPATIAL_VAR',     0.0, 'MPP_SPATIAL_VAR',     0.0, 'NPP_SPATIAL_VAR',     0.0, $
          'TPP_SUM_ADJ_AREA_KM2',0.0, 'MPP_SUM_ADJ_AREA_KM2',0.0, 'NPP_SUM_ADJ_AREA_KM2',0.0, $
          'TPP_MEAN_AREA_KM2',   0.0D,'MPP_MEAN_AREA_KM2',   0.0D,'NPP_MEAN_AREA_KM2',   0.0D)
          
        YEARS = YEAR_RANGE('1998','2007',/STRING)
        MONTHS = ['01','02','03','04','05','06','07','08','09','10','11','12']
        STRUCT = REPLICATE(STRUCT_2MISSINGS(STRUCT),N_ELEMENTS(YEARS)*12)
        
        YSTRUCT = CREATE_STRUCT('YEAR','','SUBAREA_NAME','','SUBAREA_CODE',0L,'N_SUBAREA_PIXELS',0L,$
          'TOTAL_PIXEL_AREA_KM2',0.0D,'GIS_AREA_KM2',0.0D,'PIXEL_GIS_RATIO',0.0,'N_PIXELS_PER_GIS_AREA',0.0,$
          'TCHL_ANNUAL_MEAN',  0.0,   'MCHL_ANNUAL_MEAN',0.0,     'NCHL_ANNUAL_MEAN',0.0,$
          'TPP_ANNUAL_MEAN',   0.0,   'MPP_ANNUAL_MEAN',0.0,      'NPP_ANNUAL_MEAN',0.0,$
          'TPP_ANNUAL_PIX_SUM',0.0D,  'MPP_ANNUAL_PIX_SUM',0.0D,  'NPP_ANNUAL_PIX_SUM',0.0D,$
          'TPP_ANNUAL_GIS',    0.0D,  'MPP_ANNUAL_GIS',    0.0D,  'NPP_ANNUAL_GIS',    0.0D,$
          'TPP_ANNUAL_GTON',   0.0,   'MPP_ANNUAL_GTON',   0.0D,  'NPP_ANNUAL_GTON',   0.0D)
        YSTRUCT = REPLICATE(STRUCT_2MISSINGS(YSTRUCT),N_ELEMENTS(YEARS))
        I = 0
        FOR Y=0, N_ELEMENTS(YEARS)-1 DO BEGIN
          FOR MTH=0, N_ELEMENTS(MONTHS)-1 DO BEGIN
            STRUCT(I).YEAR = YEARS(Y)
            STRUCT(I).MONTH = MONTHS(MTH)            
            STRUCT(I).SUBAREA_CODE = ACODE
            STRUCT(I).SUBAREA_NAME = ANAME
            STRUCT(I).N_SUBAREA_PIXELS = COUNTN
            STRUCT(I).TOTAL_PIXEL_AREA_KM2 = COUNTN * 47.863784D
            STRUCT(I).GIS_AREA_KM2 = NAREA[WHERE(NAREA.MASK_NAME EQ ANAME)].AREA_KM
              
            ATAG = 'M_' + YEARS(Y) + MONTHS(MTH) + '_' + ANAME
            CTPOS = WHERE(TAG_NAMES(CTDATA) EQ ATAG)
            CMPOS = WHERE(TAG_NAMES(CMDATA) EQ ATAG)
            CNPOS = WHERE(TAG_NAMES(CNDATA) EQ ATAG)
            PTPOS = WHERE(TAG_NAMES(PTDATA) EQ ATAG)
            PMPOS = WHERE(TAG_NAMES(PMDATA) EQ ATAG)
            PNPOS = WHERE(TAG_NAMES(PNDATA) EQ ATAG)
            
            IF CTPOS EQ -1 THEN GOTO, SKIP_FILE
            
            CT = CTDATA.(CTPOS)
            CM = CMDATA.(CMPOS)
            CN = CNDATA.(CNPOS)
            TP = PTDATA.(PTPOS)
            MP = PMDATA.(PMPOS)
            NP = PNDATA.(PNPOS)
            
            OKCT = WHERE(CT GT 0 AND CT NE MISSINGS(0.0),COUNTCT)
            OKCM = WHERE(CM GT 0 AND CM NE MISSINGS(0.0),COUNTCM)
            OKCN = WHERE(CN GT 0 AND CN NE MISSINGS(0.0),COUNTCN)
            OKPT = WHERE(TP GT 0 AND TP NE MISSINGS(0.0),COUNTPT)
            OKPM = WHERE(MP GT 0 AND MP NE MISSINGS(0.0),COUNTPM)
            OKPN = WHERE(NP GT 0 AND NP NE MISSINGS(0.0),COUNTPN)
            
            STRUCT(I).TCHL_N_PIXELS = COUNTCT
            STRUCT(I).MCHL_N_PIXELS = COUNTCM
            STRUCT(I).NCHL_N_PIXELS = COUNTCN
            STRUCT(I).TPP_N_PIXELS  = COUNTPT
            STRUCT(I).MPP_N_PIXELS  = COUNTPM
            STRUCT(I).NPP_N_PIXELS  = COUNTPN
            
            STRUCT(I).TCHL_N_PIXELS_AREA = COUNTCT * 47.863784D
            STRUCT(I).MCHL_N_PIXELS_AREA = COUNTCM * 47.863784D
            STRUCT(I).NCHL_N_PIXELS_AREA = COUNTCN * 47.863784D
            STRUCT(I).TPP_N_PIXELS_AREA  = COUNTPT * 47.863784D
            STRUCT(I).MPP_N_PIXELS_AREA  = COUNTPM * 47.863784D
            STRUCT(I).NPP_N_PIXELS_AREA  = COUNTPN * 47.863784D
            
            STRUCT(I).TCHL_MEAN = GEOMEAN(CT(OKCT))
            STRUCT(I).MCHL_MEAN = GEOMEAN(CM(OKCM))
            STRUCT(I).NCHL_MEAN = GEOMEAN(CN(OKCN))
            STRUCT(I).TPP_MEAN  = GEOMEAN(TP(OKPT))
            STRUCT(I).MPP_MEAN  = GEOMEAN(MP(OKPM))
            STRUCT(I).NPP_MEAN  = GEOMEAN(NP(OKPN))
            
            STRUCT(I).TCHL_SPATIAL_VAR = VARIANCE(CT(OKCT))
            STRUCT(I).MCHL_SPATIAL_VAR = VARIANCE(CM(OKCM))
            STRUCT(I).NCHL_SPATIAL_VAR = VARIANCE(CN(OKCN))
            STRUCT(I).TPP_SPATIAL_VAR  = VARIANCE(TP(OKPT))
            STRUCT(I).MPP_SPATIAL_VAR  = VARIANCE(MP(OKPM))
            STRUCT(I).NPP_SPATIAL_VAR  = VARIANCE(NP(OKPN))
            
            STRUCT(I).TPP_SPATIAL_SUM  = TOTAL(TP(OKPT)*1000000*47.863784D)
            STRUCT(I).MPP_SPATIAL_SUM  = TOTAL(MP(OKPM)*1000000*47.863784D)
            STRUCT(I).NPP_SPATIAL_SUM  = TOTAL(NP(OKPN)*1000000*47.863784D)
            
            STRUCT(I).TPP_MONTHLY_SUM  = STRUCT(I).TPP_SPATIAL_SUM*DAYS_MONTH(MONTHS(MTH),YEAR=YEARS(Y))
            STRUCT(I).MPP_MONTHLY_SUM  = STRUCT(I).MPP_SPATIAL_SUM*DAYS_MONTH(MONTHS(MTH),YEAR=YEARS(Y))
            STRUCT(I).NPP_MONTHLY_SUM  = STRUCT(I).NPP_SPATIAL_SUM*DAYS_MONTH(MONTHS(MTH),YEAR=YEARS(Y))
            
            I = I+1
          ENDFOR
          YSTRUCT(Y).YEAR = YEARS(Y)          
          YSTRUCT(Y).SUBAREA_CODE = ACODE
          YSTRUCT(Y).SUBAREA_NAME = ANAME
          YSTRUCT(Y).N_SUBAREA_PIXELS      = STRUCT[0].N_SUBAREA_PIXELS
          YSTRUCT(Y).TOTAL_PIXEL_AREA_KM2  = STRUCT[0].TOTAL_PIXEL_AREA_KM2
          YSTRUCT(Y).GIS_AREA_KM2          = STRUCT[0].GIS_AREA_KM2
          YSTRUCT(Y).N_PIXELS_PER_GIS_AREA = YSTRUCT(Y).N_SUBAREA_PIXELS/YSTRUCT(Y).GIS_AREA_KM2
          OKY = WHERE(STRUCT.YEAR EQ YEARS(Y))
          
          YSTRUCT(Y).TCHL_ANNUAL_MEAN    = MEAN(STRUCT(OKY).TCHL_MEAN,/NAN)
          YSTRUCT(Y).MCHL_ANNUAL_MEAN    = MEAN(STRUCT(OKY).MCHL_MEAN,/NAN)
          YSTRUCT(Y).NCHL_ANNUAL_MEAN    = MEAN(STRUCT(OKY).NCHL_MEAN,/NAN)
          
          YSTRUCT(Y).TPP_ANNUAL_MEAN    = MEAN(STRUCT(OKY).TPP_MEAN,/NAN)*365
          YSTRUCT(Y).MPP_ANNUAL_MEAN    = MEAN(STRUCT(OKY).MPP_MEAN,/NAN)*365
          YSTRUCT(Y).NPP_ANNUAL_MEAN    = MEAN(STRUCT(OKY).NPP_MEAN,/NAN)*365
          
          YSTRUCT(Y).TPP_ANNUAL_PIX_SUM = TOTAL(STRUCT(OKY).TPP_MONTHLY_SUM,/NAN)
          YSTRUCT(Y).MPP_ANNUAL_PIX_SUM = TOTAL(STRUCT(OKY).MPP_MONTHLY_SUM,/NAN)
          YSTRUCT(Y).NPP_ANNUAL_PIX_SUM = TOTAL(STRUCT(OKY).NPP_MONTHLY_SUM,/NAN)
          
          YSTRUCT(Y).PIXEL_GIS_RATIO = YSTRUCT(Y).GIS_AREA_KM2/YSTRUCT(Y).TOTAL_PIXEL_AREA_KM2
          YSTRUCT(Y).TPP_ANNUAL_GIS  = YSTRUCT(Y).TPP_ANNUAL_PIX_SUM * YSTRUCT(Y).PIXEL_GIS_RATIO
          YSTRUCT(Y).MPP_ANNUAL_GIS  = YSTRUCT(Y).MPP_ANNUAL_PIX_SUM * YSTRUCT(Y).PIXEL_GIS_RATIO
          YSTRUCT(Y).NPP_ANNUAL_GIS  = YSTRUCT(Y).NPP_ANNUAL_PIX_SUM * YSTRUCT(Y).PIXEL_GIS_RATIO
          
          YSTRUCT(Y).TPP_ANNUAL_GTON   = YSTRUCT(Y).TPP_ANNUAL_GIS * 1E-15
          YSTRUCT(Y).MPP_ANNUAL_GTON   = YSTRUCT(Y).MPP_ANNUAL_GIS * 1E-15
          YSTRUCT(Y).NPP_ANNUAL_GTON   = YSTRUCT(Y).NPP_ANNUAL_GIS * 1E-15
          
        ENDFOR
        
        SAVE, FILENAME=MSAVEFILE,STRUCT,/COMPRESS
        SAVE, FILENAME=ASAVEFILE,YSTRUCT,/COMPRESS
        STRUCT_2CSV,MCSVFILE,STRUCT
        STRUCT_2CSV,ACSVFILE,YSTRUCT
        SKIP_FILE:      
      ENDFOR
    ENDFOR
  
  ENDIF  ; DO_MONTHLY_SUMS
  
; *******************************************************
  IF DO_SUMMED_STATS GE 1 THEN BEGIN
; *******************************************************
    
    OVERWRITE = DO_SUMMED_STATS GE 2
    
    PP_TARGETS = ['VGPM2','OPAL']
    FOR TAR=0, N_ELEMENTS(PP_TARGETS)-1 DO BEGIN
      PP_TARGET = PP_TARGETS(TAR)
    
      DIR_STATS = DIR_SAVE + 'STATS-SAVE' + SL
      FILES = FILE_SEARCH(DIR_STATS + 'ANNUAL_SUM*PRIMARY_PRODUCTION-'+PP_TARGET+'-STATS.SAVE')
      SAVEFILE = DIR_STATS + 'ANNUAL-PRIMARY_PRODUCTION-'+PP_TARGET+'-STATS-SUMMARY.SAVE'
      CSVFILE  = DIR_STATS + 'ANNUAL-PRIMARY_PRODUCTION-'+PP_TARGET+'-STATS-SUMMARY.csv'
      
      STRUCT = CREATE_STRUCT('SUBAREA_NAME','','GIS_AREA_KM2',0D,$
        'INTERANNUAL_TOTAL_CHL_MEAN',0.0,'INTERANNUAL_MICRO_CHL_MEAN',0.0,'INTERANNUAL_NANO_CHL_MEAN',0.0,$
        'INTERANNUAL_TOTAL_PP_MEAN',0.0,'INTERANNUAL_MICRO_PP_MEAN',0.0,'INTERANNUAL_NANO_PP_MEAN',0.0,$
        'INTERANNUAL_TOTAL_SUMMED_PP_MEAN',0.0,'INTERANNUAL_MICRO_SUMMED_PP_MEAN',0.0,'INTERANNUAL_NANO_SUMMED_PP_MEAN',0.0,$
        'INTERANNUAL_TOTAL_PP_VAR',0.0,'INTERANNUAL_MICRO_PP_VAR',0.0,'INTERANNUAL_NANO_PP_VAR',0.0)
      STRUCT = REPLICATE(STRUCT_2MISSINGS(STRUCT),N_ELEMENTS(FILES)*3)
      
      FOR I=0, N_ELEMENTS(FILES)-1 DO BEGIN
        FP = FILE_PARSE(FILES(I))
        D = IDL_RESTORE(FILES(I))
        TAGS = TAG_NAMES(D)
        
        STRUCT(I).SUBAREA_NAME           = D[0].SUBAREA_NAME      
        STRUCT(I).GIS_AREA_KM2           = D[0].GIS_AREA_KM2
        STRUCT(I).INTERANNUAL_TOTAL_CHL_MEAN  = MEAN(D.TCHL_ANNUAL_MEAN,/NAN)
        STRUCT(I).INTERANNUAL_MICRO_CHL_MEAN  = MEAN(D.MCHL_ANNUAL_MEAN,/NAN)
        STRUCT(I).INTERANNUAL_NANO_CHL_MEAN   = MEAN(D.NCHL_ANNUAL_MEAN,/NAN)
        STRUCT(I).INTERANNUAL_TOTAL_PP_MEAN  = MEAN(D.TPP_ANNUAL_MEAN,/NAN)
        STRUCT(I).INTERANNUAL_MICRO_PP_MEAN  = MEAN(D.MPP_ANNUAL_MEAN,/NAN)
        STRUCT(I).INTERANNUAL_NANO_PP_MEAN   = MEAN(D.NPP_ANNUAL_MEAN,/NAN)
        STRUCT(I).INTERANNUAL_TOTAL_SUMMED_PP_MEAN  = MEAN(D.TPP_ANNUAL_GTON,/NAN)
        STRUCT(I).INTERANNUAL_MICRO_SUMMED_PP_MEAN  = MEAN(D.MPP_ANNUAL_GTON,/NAN)
        STRUCT(I).INTERANNUAL_NANO_SUMMED_PP_MEAN   = MEAN(D.NPP_ANNUAL_GTON,/NAN)
        STRUCT(I).INTERANNUAL_TOTAL_PP_VAR  = VARIANCE(D.TPP_ANNUAL_GTON,/NAN)
        STRUCT(I).INTERANNUAL_MICRO_PP_VAR  = VARIANCE(D.MPP_ANNUAL_GTON,/NAN)
        STRUCT(I).INTERANNUAL_NANO_PP_VAR   = VARIANCE(D.NPP_ANNUAL_GTON,/NAN)
      ENDFOR
      STRUCT = STRUCT[WHERE(STRUCT.SUBAREA_NAME NE MISSINGS(''))]
      SAVE,FILENAME=SAVEFILE,STRUCT
      STRUCT_2CSV,CSVFILE,STRUCT
    ENDFOR  
      STOP
    
  ENDIF ; DO_SUMMED_STATS
  

; ********************************************
  IF DO_ANNUAL_PLOTS GE 1 THEN BEGIN
; ********************************************
    
    DIR_PLOTS = DIR_PROJECTS + 'PLOTS' + SL
    DIR_STATS = DIR_PROJECTS + 'DATA_BY_SUBAREA' + SL + 'STATS-SAVE' + SL
    
    DATE_RANGE = DATE_2JD(['19970901','20130631'])
    SUBAREAS   = ['NAFO_1_2J3K','NAFO_2_2J3KL','NAFO_3_2J3KLNO','NAFO_4_3LNO','NAFO_5_3M','NAFO_6_NS']
    DATASETS   = ['OC-SEAWIFS-MLAC','PP-SEAWIFS_PAN-AVHRR-MLAC']    
    PERIODS    = ['ANNUAL_SUM']        
    TITLES     = ['NAFO_1_2J3K','NAFO_2_2J3KL','NAFO_3_2J3KLNO','NAFO_4_3LNO','NAFO_5_3M','NAFO_6_NS']
    CODES      = ['2J3K','2J3KL','2J3KLNO','3LNO','3M','NS']
    DATES      = ['1998-2007']
    
    
    WIDTH = 6
    
    CFILES = FILE_SEARCH(DIR_STATS+PERIODS+'-NAFO_*CHL_PRIMARY_PRODUCTION-VGPM2-STATS.SAVE')
    CHLPNG = FIX_PATH(DIR_PLOTS+'ANNUAL_CHLOROPHYLL-NAFO-TIMESERIES.PNG')
      
    AX = DATE_AXIS([19980101,20070101],/YEAR,/YY)
    DIMENSIONS=[780,1050]
    BOTTOM = [720,720,360,360,30,30]
    LEFT   = 75
    LEFT2  = 450
    SPACE  = 60
    DIF    = 300
    
    PRODS = ['CHLOR_A_PAN','MICRO_PAN','NANOPICO_PAN']
    YTITLE = [UNITS('CHLOROPHYLL')]
    CYRANGE = [0,1.2]      
    IF GET_MTIME(CHLPNG) GT MAX(GET_MTIME(CFILES)) AND NOT KEYWORD_SET(OVERWRITE) THEN GOTO, SKIP_CHLPNG
    W = WINDOW(DIMENSIONS=DIMENSIONS)
    FOR P=0, N_ELEMENTS(CFILES)-1 DO BEGIN
      IF P MOD 2 EQ 0 THEN POS = [LEFT,BOTTOM(P),LEFT+DIF,BOTTOM(P)+DIF] ELSE POS = [LEFT2,BOTTOM(P),LEFT2+DIF,BOTTOM(P)+DIF]
      CDATA = IDL_RESTORE(CFILES(P))                
      PANS = PLOT(DATE_2JD(CDATA.YEAR),CDATA.NCHL_ANNUAL_MEAN+CDATA.MCHL_ANNUAL_MEAN,XRANGE=AX.JD,XTICKVALUES=AX.TICKV,XTICKNAME=AX.TICKNAME,XMINOR=0,YMINOR=2,XTICKLEN=0.02,YTICKLEN=0.01,YRANGE=CYRANGE,POSITION=POS,$
        YTITLE=YTITLE,THICK=3,COLOR='BLACK', BUFFER=BUFFER,/CURRENT,/DEVICE)
      BOT = REPLICATE(0.0, N_ELEMENTS(CDATA))
      YY = [CDATA.MCHL_ANNUAL_MEAN,BOT]
      XX = DATE_2JD([CDATA.YEAR,REVERSE(CDATA.YEAR)])
      POLY = POLYGON(XX,YY,FILL_COLOR='RED',/FILL_BACKGROUND,TARGET=PANS,/DATA,LINESTYLE=6)
      YY = [CDATA.MCHL_ANNUAL_MEAN,REVERSE(CDATA.NCHL_ANNUAL_MEAN+CDATA.MCHL_ANNUAL_MEAN)]
      POLY = POLYGON(XX,YY,FILL_COLOR='BLUE',/FILL_BACKGROUND,TARGET=PANS,/DATA,LINESTYLE=6)   
      NAME = STRSPLIT(CDATA[0].SUBAREA_NAME,'_',/EXTRACT)
      D = TEXT(POS[0]+15,POS[1]+270,NAME(2),FONT_SIZE=14,/DEVICE)     
    ENDFOR
    S = TEXT(570,990,'Nano+Picoplankton',COLOR = 'BLUE', FONT_SIZE=14,/DEVICE) 
    M = TEXT(570,970, 'Microplankton',   COLOR = 'RED',  FONT_SIZE=14,/DEVICE) 
    W.SAVE,CHLPNG,RESOLUTION=300
    W.CLOSE
    SKIP_CHLPNG:
    
    AX = DATE_AXIS([19980101,20070101],/YEAR,/YY,STEP_SIZE=1)
    AXRANGE = DATE_2JD([19970101,20080101])
    CHLPNG = FIX_PATH(DIR_PLOTS+'ANNUAL_CHLOROPHYLL-NAFO-TIMESERIES-BAR.PNG')    
    IF GET_MTIME(CHLPNG) GT MAX(GET_MTIME(CFILES)) AND NOT KEYWORD_SET(OVERWRITE) THEN GOTO, SKIP_CHLBAR
    W = WINDOW(DIMENSIONS=DIMENSIONS)
    FOR P=0, N_ELEMENTS(CFILES)-1 DO BEGIN
      IF P MOD 2 EQ 0 THEN POS = [LEFT,BOTTOM(P),LEFT+DIF,BOTTOM(P)+DIF] ELSE POS = [LEFT2,BOTTOM(P),LEFT2+DIF,BOTTOM(P)+DIF]
      CDATA = IDL_RESTORE(CFILES(P))
      PANS = PLOT(AXRANGE,CYRANGE,XRANGE=AXRANGE,XTICKVALUES=AX.TICKV,XTICKNAME=AX.TICKNAME,XMINOR=0,YMINOR=2,XTICKLEN=0.02,YTICKLEN=0.01,YRANGE=CYRANGE,POSITION=POS,$
        YTITLE=YTITLE,THICK=3,COLOR='BLACK', BUFFER=BUFFER,/CURRENT,/DEVICE,/NODATA)
      BOT = REPLICATE(0.0, 12)
      ADATES = DATE_2JD(CDATA.YEAR)  
      NBAR = BARPLOT(ADATES,CDATA.NCHL_ANNUAL_MEAN,                       NBARS=NBARS,INDEX=0,BOTTOM_VALUES=BOT,                   FILL_COLOR='BLUE',  LINESTYLE=LINESTYLE,/OVERPLOT,YRANGE=PYRANGE,XRANGE=AXRANGE,XTICKVALUE=AX.TICKV,XTICKNAME=AX.TICKNAME,YTICKVALUE=YTICKV,YTICKNAME=YTICKNAME,YMINOR=YMINOR,BUFFER=BUFFER)
      MBAR = BARPLOT(ADATES,CDATA.NCHL_ANNUAL_MEAN+CDATA.MCHL_ANNUAL_MEAN,NBARS=NBARS,INDEX=0,BOTTOM_VALUES=CDATA.NCHL_ANNUAL_MEAN,FILL_COLOR='ORANGE',LINESTYLE=LINESTYLE,/OVERPLOT,YRANGE=PYRANGE,XRANGE=AXRANGE,XTICKVALUE=AX.TICKV,XTICKNAME=AX.TICKNAME,YTICKVALUE=YTICKV,YTICKNAME=YTICKNAME,YMINOR=YMINOR,BUFFER=BUFFER)

      NAME = STRSPLIT(CDATA[0].SUBAREA_NAME,'_',/EXTRACT)
      D = TEXT(POS[0]+15,POS[1]+270,NAME(2),FONT_SIZE=14,/DEVICE)
    ENDFOR
    S = TEXT(570,990,'Nano+Picoplankton',COLOR = 'BLUE',  FONT_SIZE=14,/DEVICE)
    M = TEXT(570,970, 'Microplankton',   COLOR = 'ORANGE',FONT_SIZE=14,/DEVICE)
    W.SAVE,CHLPNG,RESOLUTION=300
    W.CLOSE
    SKIP_CHLBAR:
  
    CFILES = FILE_SEARCH(DIR_STATS+PERIODS+'-NAFO_*CHL_PRIMARY_PRODUCTION-*-STATS.SAVE')
    PPDPNG = FIX_PATH(DIR_PLOTS+'ANNUAL_PRIMARY_PRODUCTION-NAFO-TIMESERIES.PNG')
    
    YTITLE = 'Primary Production (Gt yr!U-1!N)'
    PYRANGE = [0,0.04] 
    IF GET_MTIME(PPDPNG) GT MAX(GET_MTIME(CFILES)) AND NOT KEYWORD_SET(OVERWRITE) THEN GOTO, SKIP_PPDPNG
    DIMENSIONS = [780,1080]
    BOTTOM = [720,720,380,380,40,40] + 40
    LEFT   = 75
    LEFT2  = 450
    SPACE  = 60
    DIF    = 300
    W = WINDOW(DIMENSIONS=DIMENSIONS)    
    FOR P=0, N_ELEMENTS(SUBAREAS)-1 DO BEGIN
      IF P MOD 2 EQ 0 THEN POS = [LEFT,BOTTOM(P),LEFT+DIF,BOTTOM(P)+DIF] ELSE POS = [LEFT2,BOTTOM(P),LEFT2+DIF,BOTTOM(P)+DIF]
      VFILE = FILE_SEARCH(DIR_STATS+PERIODS+'-'+SUBAREAS(P)+'-CHL_PRIMARY_PRODUCTION-VGPM2-STATS.SAVE')
      OFILE = FILE_SEARCH(DIR_STATS+PERIODS+'-'+SUBAREAS(P)+'-CHL_PRIMARY_PRODUCTION-OPAL-STATS.SAVE')
      VDATA = IDL_RESTORE(VFILE)
      ODATA = IDL_RESTORE(OFILE)
      
      NBARS = 2
      PANS = PLOT(AXRANGE,PYRANGE,XRANGE=AXRANGE,XTICKVALUES=AX.TICKV,XTICKNAME=AX.TICKNAME,XMINOR=0,YMINOR=2,XTICKLEN=0.04,YTICKLEN=0.01,YRANGE=PYRANGE,POSITION=POS,$
        YTITLE=YTITLE,THICK=3,COLOR='BLACK', BUFFER=BUFFER,/CURRENT,/DEVICE,/NODATA)
      ADATES = DATE_2JD(VDATA.YEAR)  
      BOT = REPLICATE(0, 12)
      NBAR = BARPLOT(ADATES,VDATA.NPP_ANNUAL_GTON,                      NBARS=NBARS,INDEX=0,BOTTOM_VALUES=BOT, FILL_COLOR='MEDIUM_AQUAMARINE',LINESTYLE=LINESTYLE,/OVERPLOT,YRANGE=PYRANGE,XRANGE=AXRANGE,XTICKVALUE=AX.TICKV,XTICKNAME=AX.TICKNAME,YTICKVALUE=YTICKV,YTICKNAME=YTICKNAME,YMINOR=YMINOR,BUFFER=BUFFER)
      MBAR = BARPLOT(ADATES,VDATA.NPP_ANNUAL_GTON+VDATA.MPP_ANNUAL_GTON,NBARS=NBARS,INDEX=0,BOTTOM_VALUES=VDATA.NPP_ANNUAL_GTON,FILL_COLOR='YELLOW',           LINESTYLE=LINESTYLE,/OVERPLOT,YRANGE=PYRANGE,XRANGE=AXRANGE,XTICKVALUE=AX.TICKV,XTICKNAME=AX.TICKNAME,YTICKVALUE=YTICKV,YTICKNAME=YTICKNAME,YMINOR=YMINOR,BUFFER=BUFFER)
      
      NBAR = BARPLOT(ADATES,ODATA.NPP_ANNUAL_GTON,                      NBARS=NBARS,INDEX=1,BOTTOM_VALUES=BOT, FILL_COLOR='BLUE',             LINESTYLE=LINESTYLE,/OVERPLOT,YRANGE=PYRANGE,XRANGE=AXRANGE,XTICKVALUE=AX.TICKV,XTICKNAME=AX.TICKNAME,YTICKVALUE=YTICKV,YTICKNAME=YTICKNAME,YMINOR=YMINOR,BUFFER=BUFFER)
      MBAR = BARPLOT(ADATES,ODATA.NPP_ANNUAL_GTON+ODATA.MPP_ANNUAL_GTON,NBARS=NBARS,INDEX=1,BOTTOM_VALUES=ODATA.NPP_ANNUAL_GTON,FILL_COLOR='ORANGE',           LINESTYLE=LINESTYLE,/OVERPLOT,YRANGE=PYRANGE,XRANGE=AXRANGE,XTICKVALUE=AX.TICKV,XTICKNAME=AX.TICKNAME,YTICKVALUE=YTICKV,YTICKNAME=YTICKNAME,YMINOR=YMINOR,BUFFER=BUFFER)

      NAME = STRSPLIT(VDATA[0].SUBAREA_NAME,'_',/EXTRACT)
      D = TEXT(POS[0]+15,POS[1]+270,NAME(2),FONT_SIZE=14,/DEVICE)     
    ENDFOR
    
    X = [0,30,30,0,0] & Y = [0,0,15,15,0]
    PY = 30
    PY2 = 10
    P1 = 95
    P2 = 495
    TO = TEXT(P1+45,PY +7.5,'Nano + Picoplankton (VGPM2)',FONT_SIZE=12,/DEVICE,ALIGNMENT=0,VERTICAL_ALIGNMENT=0.5)
    TO = TEXT(P1+45,PY2+7.5,'Nano + Picoplankton (OPAL)', FONT_SIZE=12,/DEVICE,ALIGNMENT=0,VERTICAL_ALIGNMENT=0.5)
    PO = POLYGON(X,Y,POSITION=[P1,PY, P1+40,PY +15],FILL_COLOR='MEDIUM_AQUAMARINE',/FILL_BACKGROUND,/CURRENT,/DEVICE)
    PO = POLYGON(X,Y,POSITION=[P1,PY2,P1+40,PY2+15],FILL_COLOR='BLUE',/FILL_BACKGROUND,/CURRENT,/DEVICE)
    
    TO = TEXT(P2+45,PY +7.5,'Microplankton (VGPM2)',FONT_SIZE=12,/DEVICE,ALIGNMENT=0,VERTICAL_ALIGNMENT=0.5)
    TO = TEXT(P2+45,PY2+7.5,'Microplankton (OPAL)',FONT_SIZE=12,/DEVICE,ALIGNMENT=0,VERTICAL_ALIGNMENT=0.5)
    PO = POLYGON(X,Y,POSITION=[P2,PY, P2+40,PY +15],FILL_COLOR='YELLOW',/FILL_BACKGROUND,/CURRENT,/DEVICE)
    PO = POLYGON(X,Y,POSITION=[P2,PY2,P2+40,PY2+15],FILL_COLOR='ORANGE',/FILL_BACKGROUND,/CURRENT,/DEVICE)
    
    W.SAVE,PPDPNG,RESOLUTION=300
    W.CLOSE
    SKIP_PPDPNG:
  
    STOP
  ENDIF ; DO_ANNUAL_PLOTS


; *******************************************************
  IF DO_NAFO_TIMESERIES GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_NAFO_TIMESERIES GE 2
    
    BUFFER = 0
    
    DIR       = DIR_PROJECTS + 'NAFO' + SL + 'STATS' + SL
    DIR_PLOTS = DIR_PROJECTS + 'NAFO' + SL + 'PLOTS' + SL
    
    DATE_RANGE = DATE_2JD(['19970901','20130631'])
    SUBAREAS   = ['NAFO_1_2J3K','NAFO_2_2J3KL','NAFO_3_2J3KLNO','NAFO_4_3LNO','NAFO_5_3M','NAFO_6_NS']
    DATASETS   = ['OC-SEAWIFS-MLAC','OC-MODIS-LAC'];,'PP-SEAWIFS_PAN-AVHRR-MLAC','PP-MODIS_PAN-AVHRR-LAC']
    SUBPER     = 'A_ANNUAL_M_MANNUAL_MONTH'
    TS_SUB     = 'STATS'
    PERIODS    = ['M_','A_','MONTH_']
    OUTPER     = ['M','A']
    PERSTR     = [2,2,6]
    TITLES     = ['NAFO_1_2J3K','NAFO_2_2J3KL','NAFO_3_2J3KLNO','NAFO_4_3LNO','NAFO_5_3M','NAFO_6_NS']
    CODES      = ['2J3K','2J3KL','2J3KLNO','3LNO','3M','NS']
    DATES      = ['1997-2013']
    
    PY = [0,100]
    WIDTH = 6
    CFILES = []
    FOR D=0, N_ELEMENTS(DATASETS)-1 DO BEGIN
      FOR S=0, N_ELEMENTS(SUBAREAS)-1 DO CFILES = [CFILES,FILE_SEARCH(!S.DATASETS+DATASETS(D)+SL+'NAFO'+SL+'TS_SUBAREAS-'+TS_SUB+SL+SUBPER+'*MASK_SUBAREA-NAFO-PXY_1024_1024-'+SUBAREAS(S)+'*-MIN_OC_PRODS.SAVE')]
    ENDFOR
    OK = WHERE(CFILES NE '') & CFILES=CFILES[OK]
    CDATA = STRUCT_2MISSINGS(CREATE_STRUCT('SENSOR',''))
    FOR S=0, N_ELEMENTS(CFILES)-1 DO CDATA = STRUCT_CONCAT(CDATA,IDL_RESTORE(CFILES(S)))
    TEMP = STRUCT_2MISSINGS(CREATE_STRUCT('N_CHLOR_A_OC',0L,'MIN_CHLOR_A_OC',0.0,'MAX_CHLOR_A_OC',0.0,'MED_CHLOR_A_OC',0.0,'MEAN_CHLOR_A_OC',0.0,$
      'GMEAN_CHLOR_A_OC',0.0,'AMEAN_CHLOR_A_OC',0.0,'SUM_CHLOR_A_OC',0.0,'VAR_CHLOR_A_OC',0.0,'STD_CHLOR_A_OC',0.0,'GSTD_CHLOR_A_OC',0.0,'ASTD_CHLOR_A_OC',0.0,'CV_CHLOR_A_OC',0.0))
    CDATA = STRUCT_CONCAT(CDATA,TEMP)
    TEMP_TAGS = TAG_NAMES(TEMP)
    TAGS = TAG_NAMES(CDATA)
    FOR T=0, N_ELEMENTS(TEMP_TAGS)-1 DO BEGIN
      TPOS = WHERE(TAGS EQ TEMP_TAGS(T))
      SPOS = WHERE(TAGS EQ REPLACE(TEMP_TAGS(T),'OC','OC4'))
      MPOS = WHERE(TAGS EQ REPLACE(TEMP_TAGS(T),'OC','OC3M'))
      OK = WHERE(CDATA.(SPOS) NE MISSINGS(CDATA.(SPOS)),COUNT)
      IF COUNT GE 1 THEN CDATA[OK].(TPOS) = CDATA[OK].(SPOS)
      OK = WHERE(CDATA.(MPOS) NE MISSINGS(CDATA.(MPOS)),COUNT)
      IF COUNT GE 1 THEN CDATA[OK].(TPOS) = CDATA[OK].(MPOS)
    ENDFOR
    OK = WHERE(STRPOS(CDATA.FIRST_NAME_CHLOR_A_OC4,'SEAWIFS') GE 0 OR STRPOS(CDATA.FIRST_NAME_MICRO_PAN,'SEAWIFS'))
    CDATA[OK].SENSOR = 'SEAWIFS'
    OK = WHERE(STRPOS(CDATA.FIRST_NAME_CHLOR_A_OC3M,'MODIS') GE 0 OR STRPOS(CDATA.FIRST_NAME_MICRO_PAN,'MODIS') GE 0)
    CDATA[OK].SENSOR = 'MODIS'
    OK = WHERE(CDATA.PERIOD NE MISSINGS(CDATA.PERIOD))
    CDATA = CDATA[OK]
    CDATA = CDATA[WHERE(PERIOD_2JD(CDATA.PERIOD) GE DATE_RANGE[0] AND PERIOD_2JD(CDATA.PERIOD) LE DATE_RANGE[1])]
    
    FOR N=2, N_ELEMENTS(CODES)-1 DO BEGIN
      PNGFILE = FIX_PATH(!S.PROJECTS + 'ECOAP/NAFO/PLOTS/CHLOROPHYLL-NAFO-TIMESERIES-'+CODES(N)+'.PNG')
      IF GET_MTIME(PNGFILE) GT MAX(GET_MTIME(CFILES)) AND NOT KEYWORD_SET(OVERWRITE) THEN CONTINUE
      W = WINDOW(DIMENSIONS=[1400,1000])
      D = TEXT(0.5,0.96,DATES[0]+'!C'+CODES(N),FONT_SIZE=14,ALIGNMENT=0.5)
      
      AXMON = DATE_AXIS([20200101,20201231],/MONTH,/MID,/FYEAR)
      AXA = DATE_AXIS([19970101,20130101],/YEAR,/YY)
      AXM = DATE_AXIS([19970101,20131231],/MONTH,STEP=4,MAX_LABELS=70)
      MYRANGE = LIST([0,1.5],[0,0.5],[0,1.0])
      AYRANGE = LIST([0,0.8],[0,0.4],[0,0.6])
      OYRANGE = LIST([0,0.8],[0,0.4],[0,0.6])
      
      TOP    = [0.95, 0.63, 0.31]
      LEFT   = 0.05
      LEFT2  = 0.55
      RIGHT  = 0.95
      RIGHT2 = 0.45
      PLDIF  = 0.12
      SPACE  = 0.05
      
      PRODS = ['CHLOR_A_PAN','MICRO_PAN','NANOPICO_PAN']
      YTITLE = [UNITS('CHLOROPHYLL'),'Microplankton','Nano+picoplankton']
      FOR P=0, N_ELEMENTS(PRODS)-1 DO BEGIN
        POS = WHERE(TAGS EQ 'GMEAN_'+PRODS(P))
        
        MPOS = [LEFT, TOP(P)-PLDIF,        RIGHT, TOP(P)]
        APOS = [LEFT, TOP(P)-PLDIF*2-SPACE,RIGHT2,TOP(P)-PLDIF-SPACE]
        OPOS = [LEFT2,TOP(P)-PLDIF*2-SPACE,RIGHT, TOP(P)-PLDIF-SPACE]
        
        OKS = WHERE(CDATA.SENSOR EQ 'SEAWIFS' AND CDATA.PERIOD_CODE EQ 'M' AND CDATA.SUBAREA_NAME EQ CODES(N))
        OKM = WHERE(CDATA.SENSOR EQ 'MODIS'   AND CDATA.PERIOD_CODE EQ 'M' AND CDATA.SUBAREA_NAME EQ CODES(N))
        PANS = PLOT(PERIOD_2JD(CDATA(OKS).PERIOD),CDATA(OKS).(POS),XRANGE=AXM.JD,XTICKVALUES=AXM.TICKV,XTICKNAME=AXM.TICKNAME,XMINOR=3,YMINOR=2,XTICKLEN=0.04,YTICKLEN=0.01,YRANGE=MYRANGE(P),POSITION=MPOS,$
          YTITLE=YTITLE(P),SYMBOL='CIRCLE',SYM_FILLED=1,THICK=1.5,COLOR='RED', BUFFER=BUFFER,/CURRENT)
        PANM = PLOT(PERIOD_2JD(CDATA(OKM).PERIOD),CDATA(OKM).(POS),XRANGE=AXM.JD,YRANGE=MYRANGE(P),YMINOR=2,YTICKLEN=0.01,SYMBOL='CIRCLE',SYM_FILLED=0,THICK=1,  COLOR='BLUE',BUFFER=BUFFER,/CURRENT,/OVERPLOT)
        
        STXT = TEXT(0.07,0.93,'SeaWiFS',FONT_SIZE=12,COLOR='RED')
        MTXT = TEXT(0.07,0.91,'MODIS',  FONT_SIZE=12,COLOR='BLUE')
        
        OKS = WHERE(CDATA.SENSOR EQ 'SEAWIFS' AND CDATA.PERIOD_CODE EQ 'A' AND CDATA.SUBAREA_NAME EQ CODES(N))
        OKM = WHERE(CDATA.SENSOR EQ 'MODIS'   AND CDATA.PERIOD_CODE EQ 'A' AND CDATA.SUBAREA_NAME EQ CODES(N))
        BARS = BARPLOT(PERIOD_2JD(CDATA(OKS).PERIOD),CDATA(OKS).(POS),INDEX=0,NBARS=2,XRANGE=AXA.JD,FILL_COLOR='RED', YRANGE=AYRANGE(P),XMINOR=0,YTITLE=YTITLE(P),POSITION=APOS,/CURRENT,XTICKVALUES=AXA.TICKV,XTICKNAME=AXA.TICKNAME,XTICKLEN=0.04,YTICKLEN=0.02,YMINOR=3)
        BARM = BARPLOT(PERIOD_2JD(CDATA(OKM).PERIOD),CDATA(OKM).(POS),INDEX=1,NBARS=2,XRANGE=AXA.JD,FILL_COLOR='BLUE',YRANGE=AYRANGE(P),XMINOR=0,YTITLE=YTITLE(P),POSITION=APOS,/CURRENT,XTICKVALUES=AXA.TICKV,XTICKNAME=AXA.TICKNAME,XTICKLEN=0.04,YTICKLEN=0.02,YMINOR=3)
        
        OKS = WHERE(CDATA.SENSOR EQ 'SEAWIFS' AND CDATA.PERIOD_CODE EQ 'MONTH' AND CDATA.SUBAREA_NAME EQ CODES(N) AND CDATA.(POS) NE MISSINGS(0.0)) & SDATES = JD_ADD(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(CDATA(OKS).PERIOD))),14,/DAY) & SRTS = SORT(SDATES)
        OKM = WHERE(CDATA.SENSOR EQ 'MODIS'   AND CDATA.PERIOD_CODE EQ 'MONTH' AND CDATA.SUBAREA_NAME EQ CODES(N) AND CDATA.(POS) NE MISSINGS(0.0)) & MDATES = JD_ADD(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(CDATA(OKM).PERIOD))),14,/DAY) & SRTM = SORT(MDATES)
        BARS = BARPLOT(SDATES(SRTS),CDATA(OKS(SRTS)).(POS),INDEX=0,NBARS=2,XRANGE=AXMON.JD,FILL_COLOR='RED', YRANGE=OYRANGE(P),XMINOR=0,YTITLE=YTITLE(P),POSITION=OPOS,/CURRENT,XTICKVALUES=AXMON.TICKV,XTICKNAME=AXMON.TICKNAME,XTICKLEN=0.04,YTICKLEN=0.02,YMINOR=3)
        BARM = BARPLOT(MDATES(SRTM),CDATA(OKM(SRTM)).(POS),INDEX=1,NBARS=2,XRANGE=AXMON.JD,FILL_COLOR='BLUE',YRANGE=OYRANGE(P),XMINOR=0,YTITLE=YTITLE(P),POSITION=OPOS,/CURRENT,XTICKVALUES=AXMON.TICKV,XTICKNAME=AXMON.TICKNAME,XTICKLEN=0.04,YTICKLEN=0.02,YMINOR=3)
      ENDFOR
      W.SAVE,PNGFILE,RESOLUTION=300
      W.CLOSE
    ENDFOR
    
    DATE_RANGE = DATE_2JD(['19970901','20130631'])
    SUBAREAS   = ['NAFO_1_2J3K','NAFO_2_2J3KL','NAFO_3_2J3KLNO','NAFO_4_3LNO','NAFO_5_3M','NAFO_6_NS']
    DATASETS   = ['PP-SEAWIFS_PAN-AVHRR-MLAC','PP-MODIS_PAN-AVHRR-LAC']
    SUBPER     = ['A_ANNUAL_M_MANNUAL_MONTH']
    PERIODS    = ['M_','A_','MONTH_']
    OUTPER     = ['M','A']
    PERSTR     = [2,2,6]
    TITLES     = ['NAFO_1_2J3K','NAFO_2_2J3KL','NAFO_3_2J3KLNO','NAFO_4_3LNO','NAFO_5_3M','NAFO_6_NS']
    CODES      = ['2J3K','2J3KL','2J3KLNO','3LNO','3M','NS']
    DATES      = ['1997-2013']
    
    PY = [0,100]
    WIDTH = 6
    CFILES = []
    FOR D=0, N_ELEMENTS(DATASETS)-1 DO BEGIN
      FOR S=0, N_ELEMENTS(SUBAREAS)-1 DO CFILES = [CFILES,FILE_SEARCH(!S.DATASETS+DATASETS(D)+SL+'NAFO'+SL+'TS_SUBAREAS-'+TS_SUB+SL+SUBPER+'*MASK_SUBAREA-NAFO-PXY_1024_1024-'+SUBAREAS(S)+'*-FULL_PP_PRODS.SAVE')]
    ENDFOR
    OK = WHERE(CFILES NE '') & CFILES=CFILES[OK]
    CDATA = STRUCT_2MISSINGS(CREATE_STRUCT('SENSOR',''))
    FOR S=0, N_ELEMENTS(CFILES)-1 DO CDATA = STRUCT_CONCAT(CDATA,IDL_RESTORE(CFILES(S)))
    OK = WHERE(STRPOS(CDATA.FIRST_NAME_PPD_OPAL,'SEA_') GE 0)
    CDATA[OK].SENSOR = 'SEAWIFS'
    OK = WHERE(STRPOS(CDATA.FIRST_NAME_PPD_OPAL,'MOD_') GE 0)
    CDATA[OK].SENSOR = 'MODIS'
    OK = WHERE(CDATA.PERIOD NE MISSINGS(CDATA.PERIOD))
    CDATA = CDATA[OK]
    CDATA = CDATA[WHERE(PERIOD_2JD(CDATA.PERIOD) GE DATE_RANGE[0] AND PERIOD_2JD(CDATA.PERIOD) LE DATE_RANGE[1])]
    TAGS = TAG_NAMES(CDATA)
    ALGS = ['VGPM2','OPAL']
    FOR A=0, N_ELEMENTS(ALGS)-1 DO BEGIN
      ALG = ALGS(A)
      FOR N=0, N_ELEMENTS(CODES)-1 DO BEGIN
        PNGFILE = FIX_PATH(!S.PROJECTS + 'ECOAP/NAFO/PLOTS/'+ALG+'-NAFO-TIMESERIES-'+CODES(N)+'.PNG')
        UPDATE = UPDATE_CHECK(INFILES=CFILES,OUTFILES=PNGFIL)
        IF UPDATE EQ 0 AND NOT KEYWORD_SET(OVERWRITE) THEN CONTINUE
        W = WINDOW(DIMENSIONS=[1400,1000])
        D = TEXT(0.5,0.96,DATES[0]+'!C'+CODES(N),FONT_SIZE=14,ALIGNMENT=0.5)
        
        AXMON = DATE_AXIS([20200101,20201231],/MONTH,/MID,/FYEAR)
        AXA = DATE_AXIS([19970101,20130101],/YEAR,/YY)
        AXM = DATE_AXIS([19970101,20131231],/MONTH,STEP=4,MAX_LABELS=70)
        MYRANGE = LIST([0,0.6],[0,0.2],[0,0.5])
        AYRANGE = LIST([0,0.5],[0,0.2],[0,0.4])
        OYRANGE = LIST([0,0.5],[0,0.2],[0,0.4])
        
        TOP    = [0.95, 0.63, 0.31]
        LEFT   = 0.05
        LEFT2  = 0.55
        RIGHT  = 0.95
        RIGHT2 = 0.45
        PLDIF  = 0.12
        SPACE  = 0.05
        
        PRODS = ['PPD','MICROPP_MARMAP_PAN','NANOPICOPP_MARMAP_PAN']+'_'+ALG
        YTITLE = [ALG + '-' + UNITS('PPD'),'Micro '+UNITS('PPD',/NO_NAME),'Nano+pico '+UNITS('PPD',/NO_NAME)]
        FOR P=0, N_ELEMENTS(PRODS)-1 DO BEGIN
          POS = WHERE(TAGS EQ 'GMEAN_'+PRODS(P))
          
          MPOS = [LEFT, TOP(P)-PLDIF,        RIGHT, TOP(P)]
          APOS = [LEFT, TOP(P)-PLDIF*2-SPACE,RIGHT2,TOP(P)-PLDIF-SPACE]
          OPOS = [LEFT2,TOP(P)-PLDIF*2-SPACE,RIGHT, TOP(P)-PLDIF-SPACE]
          
          OKS = WHERE(CDATA.SENSOR EQ 'SEAWIFS' AND CDATA.PERIOD_CODE EQ 'M' AND CDATA.SUBAREA_NAME EQ CODES(N))
          OKM = WHERE(CDATA.SENSOR EQ 'MODIS'   AND CDATA.PERIOD_CODE EQ 'M' AND CDATA.SUBAREA_NAME EQ CODES(N))
          PANS = PLOT(PERIOD_2JD(CDATA(OKS).PERIOD),CDATA(OKS).(POS),XRANGE=AXM.JD,XTICKVALUES=AXM.TICKV,XTICKNAME=AXM.TICKNAME,XMINOR=3,YMINOR=2,XTICKLEN=0.04,YTICKLEN=0.01,YRANGE=MYRANGE(P),POSITION=MPOS,$
            YTITLE=YTITLE(P),SYMBOL='CIRCLE',SYM_FILLED=1,THICK=1.5,COLOR='RED', BUFFER=BUFFER,/CURRENT)
          PANM = PLOT(PERIOD_2JD(CDATA(OKM).PERIOD),CDATA(OKM).(POS),XRANGE=AXM.JD,YRANGE=MYRANGE(P),YMINOR=2,YTICKLEN=0.01,SYMBOL='CIRCLE',SYM_FILLED=0,THICK=1,  COLOR='BLUE',BUFFER=BUFFER,/CURRENT,/OVERPLOT)
          
          STXT = TEXT(0.07,0.93,'SeaWiFS',FONT_SIZE=12,COLOR='RED')
          MTXT = TEXT(0.07,0.91,'MODIS',  FONT_SIZE=12,COLOR='BLUE')
          
          OKS = WHERE(CDATA.SENSOR EQ 'SEAWIFS' AND CDATA.PERIOD_CODE EQ 'A' AND CDATA.SUBAREA_NAME EQ CODES(N))
          OKM = WHERE(CDATA.SENSOR EQ 'MODIS'   AND CDATA.PERIOD_CODE EQ 'A' AND CDATA.SUBAREA_NAME EQ CODES(N))
          BARS = BARPLOT(PERIOD_2JD(CDATA(OKS).PERIOD),CDATA(OKS).(POS),INDEX=0,NBARS=2,XRANGE=AXA.JD,FILL_COLOR='RED', YRANGE=AYRANGE(P),XMINOR=0,YTITLE=YTITLE(P),POSITION=APOS,/CURRENT,XTICKVALUES=AXA.TICKV,XTICKNAME=AXA.TICKNAME,XTICKLEN=0.04,YTICKLEN=0.02,YMINOR=3)
          BARM = BARPLOT(PERIOD_2JD(CDATA(OKM).PERIOD),CDATA(OKM).(POS),INDEX=1,NBARS=2,XRANGE=AXA.JD,FILL_COLOR='BLUE',YRANGE=AYRANGE(P),XMINOR=0,YTITLE=YTITLE(P),POSITION=APOS,/CURRENT,XTICKVALUES=AXA.TICKV,XTICKNAME=AXA.TICKNAME,XTICKLEN=0.04,YTICKLEN=0.02,YMINOR=3)
          
          OKS = WHERE(CDATA.SENSOR EQ 'SEAWIFS' AND CDATA.PERIOD_CODE EQ 'MONTH' AND CDATA.SUBAREA_NAME EQ CODES(N) AND CDATA.(POS) NE MISSINGS(0.0)) & SDATES = JD_ADD(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(CDATA(OKS).PERIOD))),14,/DAY) & SRTS = SORT(SDATES)
          OKM = WHERE(CDATA.SENSOR EQ 'MODIS'   AND CDATA.PERIOD_CODE EQ 'MONTH' AND CDATA.SUBAREA_NAME EQ CODES(N) AND CDATA.(POS) NE MISSINGS(0.0)) & MDATES = JD_ADD(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(CDATA(OKM).PERIOD))),14,/DAY) & SRTM = SORT(MDATES)
          BARS = BARPLOT(SDATES(SRTS),CDATA(OKS(SRTS)).(POS),INDEX=0,NBARS=2,XRANGE=AXMON.JD,FILL_COLOR='RED', YRANGE=OYRANGE(P),XMINOR=0,YTITLE=YTITLE(P),POSITION=OPOS,/CURRENT,XTICKVALUES=AXMON.TICKV,XTICKNAME=AXMON.TICKNAME,XTICKLEN=0.04,YTICKLEN=0.02,YMINOR=3)
          BARM = BARPLOT(MDATES(SRTM),CDATA(OKM(SRTM)).(POS),INDEX=1,NBARS=2,XRANGE=AXMON.JD,FILL_COLOR='BLUE',YRANGE=OYRANGE(P),XMINOR=0,YTITLE=YTITLE(P),POSITION=OPOS,/CURRENT,XTICKVALUES=AXMON.TICKV,XTICKNAME=AXMON.TICKNAME,XTICKLEN=0.04,YTICKLEN=0.02,YMINOR=3)
        ENDFOR
        W.SAVE,PNGFILE,RESOLUTION=300
        W.CLOSE
      ENDFOR
    ENDFOR
    STOP
    
    
    
  ENDIF ; DO_NAFO_TIMESERIES

  
; *******************************************************
  IF DO_FINAL_COMPOSITES GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_FINAL_COMPOSITES GE 2
    
    DIR_PLOTS = DIR_PROJECTS + 'PLOTS' + SL
    DIR_STATS = DIR_PROJECTS + 'DATA_BY_SUBAREA' + SL + 'STATS-SAVE' + SL
    
    SUBAREAS   = ['NAFO_1_2J3K','NAFO_2_2J3KL','NAFO_3_2J3KLNO','NAFO_4_3LNO','NAFO_5_3M','NAFO_6_NS']
    TITLES     = ['2J3K','2J3KL','2J3KLNO','3LNO','3M','NS']
    
    BUFFER = 0
    
    MAP_IN = 'NAFO'
    PDIR = !S.DATASETS + 'PP-SEAWIFS_PAN-AVHRR-MLAC\NAFO\'
    CDIR = !S.DATASETS + 'OC-SEAWIFS-MLAC\NAFO\'
    
    LAND = READ_LANDMASK(MAP=MAP_IN,PX=1024,PY=1024,/STRUCT)
    LL = MAPS_2LONLAT(MAP_IN,PX=1024,PY=1024)
    IMG = BYTARR(1024,1024) & IMG(*) = 251
    IMG(LAND.LAND)  = 251
    IMG(LAND.OCEAN) = 254
    
    
    CFILE   = FILE_SEARCH(FIX_PATH(CDIR + 'STATS\CHLOR_A-PAN\ANNUAL*NAFO*MEAN.SAVE'))
    MCFILE  = FILE_SEARCH(FIX_PATH(CDIR + 'STATS\MICRO-PAN\ANNUAL*NAFO*MEAN.SAVE'))
    NCFILE  = FILE_SEARCH(FIX_PATH(CDIR + 'STATS\NANOPICO-PAN\ANNUAL*NAFO*MEAN.SAVE'))
    MCPFILE = FILE_SEARCH(FIX_PATH(CDIR + 'STATS\MICRO_PERCENTAGE-PAN\ANNUAL*NAFO*MEAN.SAVE'))
    NCPFILE = FILE_SEARCH(FIX_PATH(CDIR + 'STATS\NANOPICO_PERCENTAGE-PAN\ANNUAL*NAFO*MEAN.SAVE'))
    
    VFILE   = FILE_SEARCH(FIX_PATH(PDIR + 'STATS\PPD-VGPM2\ANNUAL*NAFO*MEAN.SAVE'))
    VMFILE  = FILE_SEARCH(FIX_PATH(PDIR + 'STATS\MICROPP-MARMAP_PAN_VGPM2\ANNUAL*NAFO*MEAN.SAVE'))
    VNFILE  = FILE_SEARCH(FIX_PATH(PDIR + 'STATS\NANOPICOPP-MARMAP_PAN_VGPM2\ANNUAL*NAFO*MEAN.SAVE'))
    VMPFILE = FILE_SEARCH(FIX_PATH(PDIR + 'STATS\MICROPP_PERCVGPM2_PAN_VGPM2\ANNUAL*NAFO*MEAN.SAVE'))
    VNPFILE = FILE_SEARCH(FIX_PATH(PDIR + 'STATS\NANOPICOPP_PERCENTAGE-MARMAP_PAN_VGPM2\ANNUAL*NAFO*MEAN.SAVE'))
    
    VFILE   = FILE_SEARCH(FIX_PATH(PDIR + 'STATS\PPD-OPAL\ANNUAL*NAFO*MEAN.SAVE'))
    VMFILE  = FILE_SEARCH(FIX_PATH(PDIR + 'STATS\MICROPP-MARMAP_PAN_OPAL\ANNUAL*NAFO*MEAN.SAVE'))
    VNFILE  = FILE_SEARCH(FIX_PATH(PDIR + 'STATS\NANOPICOPP-MARMAP_PAN_OPAL\ANNUAL*NAFO*MEAN.SAVE'))
    VMPFILE = FILE_SEARCH(FIX_PATH(PDIR + 'STATS\MICROPP_PERCENTAGE-MARMAP_PAN_OPAL\ANNUAL*NAFO*MEAN.SAVE'))
    VNPFILE = FILE_SEARCH(FIX_PATH(PDIR + 'STATS\NANOPICOPP_PERCENTAGE-MARMAP_PAN_OPAL\ANNUAL*NAFO*MEAN.SAVE'))
    
    FOR SUB=0, N_ELEMENTS(SUBAREAS)-1 DO BEGIN
      MASK = STRUCT_SD_READ(!S.IMAGES + 'MASK_SUBAREA-NAFO-PXY_1024_1024-'+SUBAREAS(SUB)+'.SAVE',STRUCT=NSTRUCT)
      CODE = 5
      NAME = SUBAREAS(SUB)
      
      TITLE = TITLES(SUB)
      PNGFILE = FIX_PATH(DIR_PLOTS + NAME + '-PHYTO_COMPOSITE.PNG')
      
      MVFILE = DIR_STATS + 'MONTHLY_SUM-' + NAME + '-CHL_PRIMARY_PRODUCTION-VGPM2-STATS.SAVE'
      AVFILE = DIR_STATS + 'ANNUAL_SUM-'  + NAME + '-CHL_PRIMARY_PRODUCTION-VGPM2-STATS.SAVE'
      MOFILE = DIR_STATS + 'MONTHLY_SUM-' + NAME + '-CHL_PRIMARY_PRODUCTION-OPAL-STATS.SAVE'
      AOFILE = DIR_STATS + 'ANNUAL_SUM-'  + NAME + '-CHL_PRIMARY_PRODUCTION-OPAL-STATS.SAVE'
      FILES  = [MVFILE,AVFILE,MOFILE,AOFILE]
      IF GET_MTIME(PNGFILE) GT MAX(GET_MTIME(FILES)) AND NOT KEYWORD_SET(OVERWRITE) THEN CONTINUE
      MVDATA = IDL_RESTORE(MVFILE)
      AVDATA = IDL_RESTORE(AVFILE)
      MODATA = IDL_RESTORE(MOFILE)
      AODATA = IDL_RESTORE(AOFILE)
      
      OUTLINE_FILES = !S.IMAGES + 'MASK_SUBAREA-NAFO-PXY_1024_1024-'+NAME+'-OUTLINE.PNG'
      OUTLINE_COLORS = 0
      OUTLINE_THICK = 2
      
      LANDMASK_FILE = !S.IMAGES + 'MASK_LAND-NAFO-PXY_1024_1024.PNG'
      LAND_COLOR = 251
      CSCALE = 'LOW'
      VSCALE = 'LOW'
      CPSCALE = '100'
      VPSCALE = '100'
      CGROUPS = ['MICRO','NANOPICO']
      CCOLORS = ['YELLOW','MEDIUM_AQUAMARINE']
      PGROUPS = ['MICRO','NANOPICO']
      PCOLORS = ['YELLOW','MEDIUM_AQUAMARINE']
      
      DATA = STRUCT_SD_READ(CFILE,  STRUCT=CHL)
      DATA = STRUCT_SD_READ(MCFILE, STRUCT=CMICRO)
      DATA = STRUCT_SD_READ(NCFILE, STRUCT=CNANO)
      DATA = STRUCT_SD_READ(MCPFILE,STRUCT=CMPER)
      DATA = STRUCT_SD_READ(NCPFILE,STRUCT=CNPER)
      DATA = STRUCT_SD_READ(VFILE,  STRUCT=VGPM)
      DATA = STRUCT_SD_READ(VMFILE, STRUCT=VMICRO)
      DATA = STRUCT_SD_READ(VNFILE, STRUCT=VNANO)
      DATA = STRUCT_SD_READ(VMPFILE,STRUCT=VMPER)
      DATA = STRUCT_SD_READ(VNPFILE,STRUCT=VNPER)
      DATA = STRUCT_SD_READ(OFILE,  STRUCT=OPAL)
      DATA = STRUCT_SD_READ(OMFILE, STRUCT=OMICRO)
      DATA = STRUCT_SD_READ(ONFILE, STRUCT=ONANO)
      DATA = STRUCT_SD_READ(OMPFILE,STRUCT=OMPER)
      DATA = STRUCT_SD_READ(ONPFILE,STRUCT=ONPER)
      GONE, DATA
      
      W = WINDOW(DIMENSIONS=[800,1040],BUFFER=BUFFER)
      T    = TEXT(400,1020,'NAFO ' + TITLE,ALIGNMENT=0.5,/DEVICE,FONT_SIZE=14,FONT_STYLE='BOLD')
      TT   = TEXT([150,550],[1000,1000],['Chlorophyll','Primary Production'],ALIGNMENT=0.5,/DEVICE,FONT_SIZE=14)
      TS   = TEXT([70, 220,470,620],[685,685,685,685],['Micro','Nano+Pico','Micro','Nano+Pico'],FONT_SIZE=12,ALIGNMENT=0.5,/DEVICE)
      
      CIM  = STRUCT_SD_2IMAGE_NG(CHL, IMG_POSITION=[5,  705,295,995],USE_PROD='CHLOR_A',SPECIAL_SCALE=CSCALE,/ADD_OUTLINE,/ADD_LAND,/ADD_COAST,LAND_COLOR=LAND_COLOR,OUTLINE_FILE=OUTLINE_FILES,OUTLINE_COLOR=OUTLINE_COLORS,OUTLINE_THICK=OUTLINE_THICK,/CURRENT,MARGIN=MARGIN,/DEVICE,BUFFER=BUFFER)
      VIM  = STRUCT_SD_2IMAGE_NG(VGPM,IMG_POSITION=[405,705,695,995],USE_PROD='PPD',    SPECIAL_SCALE=VSCALE,/ADD_OUTLINE,/ADD_LAND,/ADD_COAST,LAND_COLOR=LAND_COLOR,OUTLINE_FILE=OUTLINE_FILES,OUTLINE_COLOR=OUTLINE_COLORS,OUTLINE_THICK=OUTLINE_THICK,/CURRENT,MARGIN=MARGIN,/DEVICE,BUFFER=BUFFER)
      
      CIM  = STRUCT_SD_2IMAGE_NG(CMICRO,IMG_POSITION=[5,  540,145,680],USE_PROD='CHLOR_A',SPECIAL_SCALE=CSCALE,/ADD_OUTLINE,/ADD_LAND,/ADD_COAST,LAND_COLOR=LAND_COLOR,OUTLINE_FILE=OUTLINE_FILES,OUTLINE_COLOR=OUTLINE_COLORS,OUTLINE_THICK=OUTLINE_THICK,/CURRENT,MARGIN=MARGIN,/DEVICE,BUFFER=BUFFER)
      CIM  = STRUCT_SD_2IMAGE_NG(CNANO, IMG_POSITION=[155,540,295,680],USE_PROD='CHLOR_A',SPECIAL_SCALE=CSCALE,/ADD_OUTLINE,/ADD_LAND,/ADD_COAST,LAND_COLOR=LAND_COLOR,OUTLINE_FILE=OUTLINE_FILES,OUTLINE_COLOR=OUTLINE_COLORS,OUTLINE_THICK=OUTLINE_THICK,/CURRENT,MARGIN=MARGIN,/DEVICE,BUFFER=BUFFER)
      CIM  = STRUCT_SD_2IMAGE_NG(CMPER, IMG_POSITION=[5,  390,145,530],USE_PROD='PERCENT',SPECIAL_SCALE=CPSCALE,/ADD_OUTLINE,/ADD_LAND,/ADD_COAST,LAND_COLOR=LAND_COLOR,OUTLINE_FILE=OUTLINE_FILES,OUTLINE_COLOR=OUTLINE_COLORS,OUTLINE_THICK=OUTLINE_THICK,/CURRENT,MARGIN=MARGIN,/DEVICE,BUFFER=BUFFER)
      CIM  = STRUCT_SD_2IMAGE_NG(CNPER, IMG_POSITION=[155,390,295,530],USE_PROD='PERCENT',SPECIAL_SCALE=CPSCALE,/ADD_OUTLINE,/ADD_LAND,/ADD_COAST,LAND_COLOR=LAND_COLOR,OUTLINE_FILE=OUTLINE_FILES,OUTLINE_COLOR=OUTLINE_COLORS,OUTLINE_THICK=OUTLINE_THICK,/CURRENT,MARGIN=MARGIN,/DEVICE,BUFFER=BUFFER)
      
      VIM  = STRUCT_SD_2IMAGE_NG(VMICRO,IMG_POSITION=[405,540,545,680],USE_PROD='PPD',    SPECIAL_SCALE=VSCALE,/ADD_OUTLINE,/ADD_LAND,/ADD_COAST,LAND_COLOR=LAND_COLOR,OUTLINE_FILE=OUTLINE_FILES,OUTLINE_COLOR=OUTLINE_COLORS,OUTLINE_THICK=OUTLINE_THICK,/CURRENT,MARGIN=MARGIN,/DEVICE,BUFFER=BUFFER)
      VIM  = STRUCT_SD_2IMAGE_NG(VNANO, IMG_POSITION=[555,540,695,680],USE_PROD='PPD',    SPECIAL_SCALE=VSCALE,/ADD_OUTLINE,/ADD_LAND,/ADD_COAST,LAND_COLOR=LAND_COLOR,OUTLINE_FILE=OUTLINE_FILES,OUTLINE_COLOR=OUTLINE_COLORS,OUTLINE_THICK=OUTLINE_THICK,/CURRENT,MARGIN=MARGIN,/DEVICE,BUFFER=BUFFER)
      VIM  = STRUCT_SD_2IMAGE_NG(VMPER, IMG_POSITION=[405,390,545,530],USE_PROD='PERCENT',SPECIAL_SCALE=VPSCALE,/ADD_OUTLINE,/ADD_LAND,/ADD_COAST,LAND_COLOR=LAND_COLOR,OUTLINE_FILE=OUTLINE_FILES,OUTLINE_COLOR=OUTLINE_COLORS,OUTLINE_THICK=OUTLINE_THICK,/CURRENT,MARGIN=MARGIN,/DEVICE,BUFFER=BUFFER)
      VIM  = STRUCT_SD_2IMAGE_NG(VNPER, IMG_POSITION=[555,390,695,530],USE_PROD='PERCENT',SPECIAL_SCALE=VPSCALE,/ADD_OUTLINE,/ADD_LAND,/ADD_COAST,LAND_COLOR=LAND_COLOR,OUTLINE_FILE=OUTLINE_FILES,OUTLINE_COLOR=OUTLINE_COLORS,OUTLINE_THICK=OUTLINE_THICK,/CURRENT,MARGIN=MARGIN,/DEVICE,BUFFER=BUFFER)
      
      BAR = COLOR_BAR_SCALE_NG(PROD='CHLOR_A',SPECIAL_SCALE=CSCALE, PX=305,PY=985,CHARSIZE=10,BACKGROUND=252,XDIM=20,YDIM=260,PAL='PAL_SW3',VERTICAL=1,RIGHT=1,FONT='HELVETICA',/CURRENT,TITLE=UNITS('CHLOROPHYLL'),BUFFER=BUFFER)
      BAR = COLOR_BAR_SCALE_NG(PROD='PPD',    SPECIAL_SCALE=VSCALE, PX=705,PY=985,CHARSIZE=10,BACKGROUND=252,XDIM=20,YDIM=260,PAL='PAL_SW3',VERTICAL=1,RIGHT=1,FONT='HELVETICA',/CURRENT,TITLE=UNITS('PRIMARY_PRODUCTION'),BUFFER=BUFFER)
      BAR = COLOR_BAR_SCALE_NG(PROD='CHLOR_A',SPECIAL_SCALE=CSCALE, PX=305,PY=675,CHARSIZE=10,BACKGROUND=252,XDIM=20,YDIM=130,PAL='PAL_SW3',VERTICAL=1,RIGHT=1,FONT='HELVETICA',/CURRENT,TITLE=UNITS('CHLOROPHYLL'),BUFFER=BUFFER)
      BAR = COLOR_BAR_SCALE_NG(PROD='PERCENT',SPECIAL_SCALE=CPSCALE,PX=305,PY=525,CHARSIZE=10,BACKGROUND=252,XDIM=20,YDIM=130,PAL='PAL_SW3',VERTICAL=1,RIGHT=1,FONT='HELVETICA',/CURRENT,TITLE=UNITS('PERCENT'),BUFFER=BUFFER)
      BAR = COLOR_BAR_SCALE_NG(PROD='PPD',    SPECIAL_SCALE=CSCALE, PX=705,PY=675,CHARSIZE=10,BACKGROUND=252,XDIM=20,YDIM=130,PAL='PAL_SW3',VERTICAL=1,RIGHT=1,FONT='HELVETICA',/CURRENT,TITLE=UNITS('PRIMARY_PRODUCTION'),BUFFER=BUFFER)
      BAR = COLOR_BAR_SCALE_NG(PROD='PERCENT',SPECIAL_SCALE=VPSCALE,PX=705,PY=525,CHARSIZE=10,BACKGROUND=252,XDIM=20,YDIM=130,PAL='PAL_SW3',VERTICAL=1,RIGHT=1,FONT='HELVETICA',/CURRENT,TITLE=UNITS('PERCENT'),BUFFER=BUFFER)
      
      
      ;     ***** CHLOROPHYLL BAR PLOTS *****
      NBARS = 1
      MX = DATE_AXIS([20200101,20201231],/MONTH,/MID,/FYEAR,STEP_SIZE=1) & MXRANGE = DATE_2JD([20191215,20210115])
      MCHL = REPLICATE(0.0,12) & NCHL = MCHL
      
      BOT = REPLICATE(0, 12)
      MSETS = WHERE_SETS(MVDATA.MONTH)
      FOR MTH=0, N_ELEMENTS(MSETS)-1 DO BEGIN
        SUBS = WHERE_SETS_SUBS(MSETS(MTH))
        SET  = MVDATA(SUBS)
        MCHL(MTH) = MEAN(SET.MCHL_MEAN,/NAN)
        NCHL(MTH) = MEAN(SET.NCHL_MEAN,/NAN)
      ENDFOR
      IF MSETS NE [] THEN MDATES = JD_ADD(DATE_2JD('2020'+MSETS.VALUE),15,/DAY)
      
      MAX_CHL = MAX(MCHL+NCHL,/NAN)
      MCHL(WHERE(FINITE(MCHL) EQ 0)) = 0.0
      NCHL(WHERE(FINITE(NCHL) EQ 0)) = 0.0
      POSITION = [65,225,345,365]
      P = PLOT(MXRANGE,[0,MAX_CHL],YTITLE='CHL ' + UNITS('CHLOROPHYLL',/NO_NAME),TITLE='Monthly',XTICKVALUE=MX.TICKV,FONT_SIZE=11,POSITION=POSITION,XRANGE=MXRANGE,$
        XMINOR=0,YMINOR=2,XSTYLE=1,XTICKNAME=MX.TICKNAME,/NODATA,BUFFER=BUFFER,MARGIN=MARGIN,LAYOUT=LAYOUT,/CURRENT,/DEVICE)
      BYRANGE = P.YRANGE
      YTICKNAME = P.YTICKNAME
      YTICKV  = P.YTICKVALUE
      YMINOR = P.YMINOR
      
      NBAR = BARPLOT(MDATES,NCHL,     NBARS=NBARS,INDEX=0,BOTTOM_VALUES=BOT, FILL_COLOR='MEDIUM_AQUAMARINE',LINESTYLE=LINESTYLE,/OVERPLOT,YRANGE=BYRANGE,XRANGE=MXRANGE,XTICKVALUE=MX.TICKV,XTICKNAME=MX.TICKNAME,YTICKVALUE=YTICKV,YTICKNAME=YTICKNAME,YMINOR=YMINOR,BUFFER=BUFFER)
      MBAR = BARPLOT(MDATES,NCHL+MCHL,NBARS=NBARS,INDEX=0,BOTTOM_VALUES=NCHL,FILL_COLOR='YELLOW',           LINESTYLE=LINESTYLE,/OVERPLOT,YRANGE=BYRANGE,XRANGE=MXRANGE,XTICKVALUE=MX.TICKV,XTICKNAME=MX.TICKNAME,YTICKVALUE=YTICKV,YTICKNAME=YTICKNAME,YMINOR=YMINOR,BUFFER=BUFFER)
      
      NBARS = 1
      AX = DATE_AXIS([19980101,20070101],/YEAR,/YY,STEP_SIZE=1)
      AXRANGE = DATE_2JD([19970101,20080101])
      MCHL = AVDATA.MCHL_ANNUAL_MEAN
      NCHL = AVDATA.NCHL_ANNUAL_MEAN
      ADATES = DATE_2JD(AVDATA.YEAR)
      BOT = REPLICATE(0.0, N_ELEMENTS(MCHL))
      MAX_CHL = MAX(MCHL+NCHL,/NAN)
      
      POSITION = [65,45,345,185]
      P = PLOT(AXRANGE,[0,MAX_CHL],YTITLE='CHL ' + UNITS('CHLOROPHYLL',/NO_NAME),TITLE='Annual',XTICKVALUE=AX.TICKV,FONT_SIZE=11,POSITION=POSITION,XRANGE=AXRANGE,$
        XMINOR=0,YMINOR=2,XSTYLE=1,XTICKNAME=AX.TICKNAME,/NODATA,BUFFER=BUFFER,MARGIN=MARGIN,LAYOUT=LAYOUT,/CURRENT,/DEVICE)
      BYRANGE = P.YRANGE
      YTICKNAME = P.YTICKNAME
      YTICKV  = P.YTICKVALUE
      YMINOR = P.YMINOR
      
      IF NCHL NE [] THEN NBAR = BARPLOT(ADATES,NCHL,     NBARS=NBARS,INDEX=0,BOTTOM_VALUES=BOT, FILL_COLOR='MEDIUM_AQUAMARINE',LINESTYLE=LINESTYLE,/OVERPLOT,YRANGE=BYRANGE,XRANGE=AXRANGE,XTICKVALUE=AX.TICKV,XTICKNAME=AX.TICKNAME,YTICKVALUE=YTICKV,YTICKNAME=YTICKNAME,YMINOR=YMINOR,BUFFER=BUFFER)
      IF MCHL NE [] THEN MBAR = BARPLOT(ADATES,NCHL+MCHL,NBARS=NBARS,INDEX=0,BOTTOM_VALUES=NCHL,FILL_COLOR='YELLOW',           LINESTYLE=LINESTYLE,/OVERPLOT,YRANGE=BYRANGE,XRANGE=AXRANGE,XTICKVALUE=AX.TICKV,XTICKNAME=AX.TICKNAME,YTICKVALUE=YTICKV,YTICKNAME=YTICKNAME,YMINOR=YMINOR,BUFFER=BUFFER)
      
      ;     ***** PRODUCTIVITY BAR PLOTS *****
      NBARS = 2
      MX = DATE_AXIS([20200101,20201231],/MONTH,/MID,/FYEAR,STEP_SIZE=1) & MXRANGE = DATE_2JD([20191215,20210115])
      MVPP = REPLICATE(0.0,12) & NVPP = MVPP
      MOPP = REPLICATE(0.0,12) & NOPP = MOPP
      
      BOT = REPLICATE(0, 12)
      MSETS = WHERE_SETS(MVDATA.MONTH)
      FOR MTH=0, N_ELEMENTS(MSETS)-1 DO BEGIN
        SUBS = WHERE_SETS_SUBS(MSETS(MTH))
        SET  = MVDATA(SUBS)
        MVPP(MTH) = MEAN(SET.MPP_MEAN,/NAN)
        NVPP(MTH) = MEAN(SET.NPP_MEAN,/NAN)
      ENDFOR
      MVPP(WHERE(FINITE(MVPP) EQ 0)) = 0.0
      NVPP(WHERE(FINITE(NVPP) EQ 0)) = 0.0
      MVDATES = JD_ADD(DATE_2JD('2020'+MSETS.VALUE),15,/DAY)
      MAX_PP = MAX([MVPP+NVPP,MOPP+NOPP],/NAN)
      
      MSETS = WHERE_SETS(MODATA.MONTH)
      FOR MTH=0, N_ELEMENTS(MSETS)-1 DO BEGIN
        SUBS = WHERE_SETS_SUBS(MSETS(MTH))
        SET  = MODATA(SUBS)
        MOPP(MTH) = MEAN(SET.MPP_MEAN,/NAN)
        NOPP(MTH) = MEAN(SET.NPP_MEAN,/NAN)
      ENDFOR
      MOPP(WHERE(FINITE(MOPP) EQ 0)) = 0.0
      NOPP(WHERE(FINITE(NOPP) EQ 0)) = 0.0
      MODATES = JD_ADD(DATE_2JD('2020'+MSETS.VALUE),15,/DAY)
      MAX_PP = MAX(MVPP+NVPP,/NAN)
      
      POSITION = [460,225,740,365]
      P = PLOT(MXRANGE,[0,MAX_PP],YTITLE='PP ' + UNITS('PPD',/NO_NAME),TITLE='Monthly',XTICKVALUE=MX.TICKV,FONT_SIZE=11,POSITION=POSITION,XRANGE=MXRANGE,$
        XMINOR=0,YMINOR=2,XSTYLE=1,XTICKNAME=MX.TICKNAME,/NODATA,BUFFER=BUFFER,MARGIN=MARGIN,LAYOUT=LAYOUT,/CURRENT,/DEVICE)
      BYRANGE = P.YRANGE
      YTICKNAME = P.YTICKNAME
      YTICKV  = P.YTICKVALUE
      YMINOR = P.YMINOR
      
      NVBAR = BARPLOT(MDATES,NVPP,     NBARS=NBARS,INDEX=0,BOTTOM_VALUES=BOT, FILL_COLOR='MEDIUM_AQUAMARINE',LINESTYLE=LINESTYLE,/OVERPLOT,YRANGE=BYRANGE,XRANGE=MXRANGE,XTICKVALUE=MX.TICKV,XTICKNAME=MX.TICKNAME,YTICKVALUE=YTICKV,YTICKNAME=YTICKNAME,YMINOR=YMINOR,BUFFER=BUFFER)
      MVBAR = BARPLOT(MDATES,NVPP+MVPP,NBARS=NBARS,INDEX=0,BOTTOM_VALUES=NVPP,FILL_COLOR='YELLOW',           LINESTYLE=LINESTYLE,/OVERPLOT,YRANGE=BYRANGE,XRANGE=MXRANGE,XTICKVALUE=MX.TICKV,XTICKNAME=MX.TICKNAME,YTICKVALUE=YTICKV,YTICKNAME=YTICKNAME,YMINOR=YMINOR,BUFFER=BUFFER)
      NOBAR = BARPLOT(MDATES,NOPP,     NBARS=NBARS,INDEX=1,BOTTOM_VALUES=BOT, FILL_COLOR='BLUE',             LINESTYLE=LINESTYLE,/OVERPLOT,YRANGE=BYRANGE,XRANGE=MXRANGE,XTICKVALUE=MX.TICKV,XTICKNAME=MX.TICKNAME,YTICKVALUE=YTICKV,YTICKNAME=YTICKNAME,YMINOR=YMINOR,BUFFER=BUFFER)
      MOBAR = BARPLOT(MDATES,NOPP+MOPP,NBARS=NBARS,INDEX=1,BOTTOM_VALUES=NOPP,FILL_COLOR='ORANGE',           LINESTYLE=LINESTYLE,/OVERPLOT,YRANGE=BYRANGE,XRANGE=MXRANGE,XTICKVALUE=MX.TICKV,XTICKNAME=MX.TICKNAME,YTICKVALUE=YTICKV,YTICKNAME=YTICKNAME,YMINOR=YMINOR,BUFFER=BUFFER)
      
      NBARS = 2
      AX = DATE_AXIS([19980101,20070101],/YEAR,/YY,STEP_SIZE=1)
      AXRANGE = DATE_2JD([19970101,20080101])
      MVPP = AVDATA.MPP_ANNUAL_GTON
      NVPP = AVDATA.NPP_ANNUAL_GTON
      MOPP = AODATA.MPP_ANNUAL_GTON
      NOPP = AODATA.NPP_ANNUAL_GTON
      ADATES = DATE_2JD(AODATA.YEAR)
      BOT = REPLICATE(0.0, N_ELEMENTS(MVPP))
      MAX_PP = MAX([MVPP+NVPP,MOPP+NOPP],/NAN)
      
      POSITION = [460,45,740,185]
      P = PLOT(AXRANGE,[0,MAX_PP],YTITLE='PP (Gt yr!U-1!N)',TITLE='Annual',XTICKVALUE=AX.TICKV,FONT_SIZE=11,POSITION=POSITION,XRANGE=AXRANGE,$
        XMINOR=0,YMINOR=2,XSTYLE=1,XTICKNAME=AX.TICKNAME,/NODATA,BUFFER=BUFFER,MARGIN=MARGIN,LAYOUT=LAYOUT,/CURRENT,/DEVICE)
      BYRANGE = P.YRANGE
      YTICKNAME = P.YTICKNAME
      YTICKV  = P.YTICKVALUE
      YMINOR = P.YMINOR
      
      NVBAR = BARPLOT(ADATES,NVPP,     NBARS=NBARS,INDEX=0,BOTTOM_VALUES=BOT, FILL_COLOR='MEDIUM_AQUAMARINE',LINESTYLE=LINESTYLE,/OVERPLOT,YRANGE=BYRANGE,XRANGE=AXRANGE,XTICKVALUE=AX.TICKV,XTICKNAME=AX.TICKNAME,YTICKVALUE=YTICKV,YTICKNAME=YTICKNAME,YMINOR=YMINOR,BUFFER=BUFFER)
      MVBAR = BARPLOT(ADATES,NVPP+MVPP,NBARS=NBARS,INDEX=0,BOTTOM_VALUES=NVPP,FILL_COLOR='YELLOW',           LINESTYLE=LINESTYLE,/OVERPLOT,YRANGE=BYRANGE,XRANGE=AXRANGE,XTICKVALUE=AX.TICKV,XTICKNAME=AX.TICKNAME,YTICKVALUE=YTICKV,YTICKNAME=YTICKNAME,YMINOR=YMINOR,BUFFER=BUFFER)
      NOBAR = BARPLOT(ADATES,NOPP,     NBARS=NBARS,INDEX=1,BOTTOM_VALUES=BOT, FILL_COLOR='BLUE',             LINESTYLE=LINESTYLE,/OVERPLOT,YRANGE=BYRANGE,XRANGE=AXRANGE,XTICKVALUE=AX.TICKV,XTICKNAME=AX.TICKNAME,YTICKVALUE=YTICKV,YTICKNAME=YTICKNAME,YMINOR=YMINOR,BUFFER=BUFFER)
      MOBAR = BARPLOT(ADATES,NOPP+MOPP,NBARS=NBARS,INDEX=1,BOTTOM_VALUES=NOPP,FILL_COLOR='ORANGE',           LINESTYLE=LINESTYLE,/OVERPLOT,YRANGE=BYRANGE,XRANGE=AXRANGE,XTICKVALUE=AX.TICKV,XTICKNAME=AX.TICKNAME,YTICKVALUE=YTICKV,YTICKNAME=YTICKNAME,YMINOR=YMINOR,BUFFER=BUFFER)
      
      X = [0,30,30,0,0] & Y = [0,0,15,15,0]
      PY = 8
      P1 = 60
      P2 = 460
      TO = TEXT(P1+45,PY+7.5,'Nano + Picoplankton (VGPM2 | OPAL)',FONT_SIZE=12,/DEVICE,ALIGNMENT=0,VERTICAL_ALIGNMENT=0.5)
      PO = POLYGON(X,Y,POSITION=[P1,   PY,P1+20,PY+15],FILL_COLOR='MEDIUM_AQUAMARINE',/FILL_BACKGROUND,/CURRENT,/DEVICE)
      PO = POLYGON(X,Y,POSITION=[P1+20,PY,P1+40,PY+15],FILL_COLOR='BLUE',/FILL_BACKGROUND,/CURRENT,/DEVICE)
      
      TO = TEXT(P2+45,PY+7.5,'Microplankton (VGPM2 | OPAL)',FONT_SIZE=12,/DEVICE,ALIGNMENT=0,VERTICAL_ALIGNMENT=0.5)
      PO = POLYGON(X,Y,POSITION=[P2,   PY,P2+20,PY+15],FILL_COLOR='YELLOW',/FILL_BACKGROUND,/CURRENT,/DEVICE)
      PO = POLYGON(X,Y,POSITION=[P2+20,PY,P2+40,PY+15],FILL_COLOR='ORANGE',/FILL_BACKGROUND,/CURRENT,/DEVICE)
      
      W.SAVE, PNGFILE, RESOLUTION=300
      W.CLOSE
      
    ENDFOR
    STOP
  ENDIF ; DO_FINAL_COMPOSITES
  
; *******************************************************
  IF DO_BAR_COMPOSITES GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_BAR_COMPOSITES GE 2
    
    DIR_PLOTS = DIR_PROJECTS + 'PLOTS' + SL
    DIR_STATS = DIR_PROJECTS + 'DATA_BY_SUBAREA' + SL + 'STATS-SAVE' + SL
    
    SUBAREAS   = ['NAFO_1_2J3K','NAFO_2_2J3KL','NAFO_3_2J3KLNO','NAFO_4_3LNO','NAFO_5_3M','NAFO_6_NS']        
    TITLES     = ['2J3K','2J3KL','2J3KLNO','3LNO','3M','NS']
    
    BUFFER = 0
    
    MAP_IN = 'NAFO'
    PDIR = !S.DATASETS + 'PP-SEAWIFS_PAN-AVHRR-MLAC\NAFO\'
    CDIR = !S.DATASETS + 'OC-SEAWIFS-MLAC\NAFO\'
       
      
    FOR SUB=0, N_ELEMENTS(SUBAREAS)-1 DO BEGIN
      
      CODE = 5
      NAME = SUBAREAS(SUB)
        
      TITLE = TITLES(SUB)
      PNGFILE = FIX_PATH(DIR_PLOTS + NAME + '-ANNUAL_MONTHLY_COMPOSITE.PNG')
        
      MVFILE = DIR_STATS + 'MONTHLY_SUM-' + NAME + '-CHL_PRIMARY_PRODUCTION-VGPM2-STATS.SAVE'
      AVFILE = DIR_STATS + 'ANNUAL_SUM-'  + NAME + '-CHL_PRIMARY_PRODUCTION-VGPM2-STATS.SAVE'
      MOFILE = DIR_STATS + 'MONTHLY_SUM-' + NAME + '-CHL_PRIMARY_PRODUCTION-OPAL-STATS.SAVE'
      AOFILE = DIR_STATS + 'ANNUAL_SUM-'  + NAME + '-CHL_PRIMARY_PRODUCTION-OPAL-STATS.SAVE'
      FILES  = [MVFILE,AVFILE,MOFILE,AOFILE]
      IF GET_MTIME(PNGFILE) GT MAX(GET_MTIME(FILES)) AND NOT KEYWORD_SET(OVERWRITE) THEN CONTINUE
      MVDATA = IDL_RESTORE(MVFILE) 
      AVDATA = IDL_RESTORE(AVFILE)
      MODATA = IDL_RESTORE(MOFILE)
      AODATA = IDL_RESTORE(AOFILE)
                             
      CGROUPS = ['MICRO','NANOPICO']
      CCOLORS = ['YELLOW','MEDIUM_AQUAMARINE']
      PGROUPS = ['MICRO','NANOPICO']
      PCOLORS = ['YELLOW','MEDIUM_AQUAMARINE']
        
        
      W = WINDOW(DIMENSIONS=[800,450],BUFFER=BUFFER)
      T    = TEXT(400,430,'NAFO ' + TITLE,ALIGNMENT=0.5,/DEVICE,FONT_SIZE=14,FONT_STYLE='BOLD')
      
      ;     ***** CHLOROPHYLL BAR PLOTS *****
      NBARS = 1
      MX = DATE_AXIS([20200101,20201231],/MONTH,/MID,/FYEAR,STEP_SIZE=1) & MXRANGE = DATE_2JD([20191215,20210115])
      MCHL = REPLICATE(0.0,12) & NCHL = MCHL
      
      BOT = REPLICATE(0, 12)
      MSETS = WHERE_SETS(MVDATA.MONTH)
      FOR MTH=0, N_ELEMENTS(MSETS)-1 DO BEGIN
        SUBS = WHERE_SETS_SUBS(MSETS(MTH))
        SET  = MVDATA(SUBS)
        MCHL(MTH) = MEAN(SET.MCHL_MEAN,/NAN)
        NCHL(MTH) = MEAN(SET.NCHL_MEAN,/NAN)
      ENDFOR
      IF MSETS NE [] THEN MDATES = JD_ADD(DATE_2JD('2020'+MSETS.VALUE),15,/DAY)
      
      MAX_CHL = MAX(MCHL+NCHL,/NAN)
      MCHL(WHERE(FINITE(MCHL) EQ 0)) = 0.0
      NCHL(WHERE(FINITE(NCHL) EQ 0)) = 0.0
      POSITION = [65,265,345,405]
      P = PLOT(MXRANGE,[0,MAX_CHL],YTITLE='CHL ' + UNITS('CHLOROPHYLL',/NO_NAME),TITLE='Monthly',XTICKVALUE=MX.TICKV,FONT_SIZE=11,POSITION=POSITION,XRANGE=MXRANGE,$
        XMINOR=0,YMINOR=2,XSTYLE=1,XTICKNAME=MX.TICKNAME,/NODATA,BUFFER=BUFFER,MARGIN=MARGIN,LAYOUT=LAYOUT,/CURRENT,/DEVICE)
      BYRANGE = P.YRANGE
      YTICKNAME = P.YTICKNAME
      YTICKV  = P.YTICKVALUE
      YMINOR = P.YMINOR
      
      NBAR = BARPLOT(MDATES,NCHL,     NBARS=NBARS,INDEX=0,BOTTOM_VALUES=BOT, FILL_COLOR='MEDIUM_AQUAMARINE',LINESTYLE=LINESTYLE,/OVERPLOT,YRANGE=BYRANGE,XRANGE=MXRANGE,XTICKVALUE=MX.TICKV,XTICKNAME=MX.TICKNAME,YTICKVALUE=YTICKV,YTICKNAME=YTICKNAME,YMINOR=YMINOR,BUFFER=BUFFER)
      MBAR = BARPLOT(MDATES,NCHL+MCHL,NBARS=NBARS,INDEX=0,BOTTOM_VALUES=NCHL,FILL_COLOR='YELLOW',           LINESTYLE=LINESTYLE,/OVERPLOT,YRANGE=BYRANGE,XRANGE=MXRANGE,XTICKVALUE=MX.TICKV,XTICKNAME=MX.TICKNAME,YTICKVALUE=YTICKV,YTICKNAME=YTICKNAME,YMINOR=YMINOR,BUFFER=BUFFER)
      
      NBARS = 1
      AX = DATE_AXIS([19980101,20070101],/YEAR,/YY,STEP_SIZE=1)
      AXRANGE = DATE_2JD([19970101,20080101])
      MCHL = AVDATA.MCHL_ANNUAL_MEAN 
      NCHL = AVDATA.NCHL_ANNUAL_MEAN 
      ADATES = DATE_2JD(AVDATA.YEAR)
      BOT = REPLICATE(0.0, N_ELEMENTS(MCHL))
      MAX_CHL = MAX(MCHL+NCHL,/NAN)
      
      POSITION = [65,75,345,215]
      P = PLOT(AXRANGE,[0,MAX_CHL],YTITLE='CHL ' + UNITS('CHLOROPHYLL',/NO_NAME),TITLE='Annual',XTICKVALUE=AX.TICKV,FONT_SIZE=11,POSITION=POSITION,XRANGE=AXRANGE,$
        XMINOR=0,YMINOR=2,XSTYLE=1,XTICKNAME=AX.TICKNAME,/NODATA,BUFFER=BUFFER,MARGIN=MARGIN,LAYOUT=LAYOUT,/CURRENT,/DEVICE)
      BYRANGE = P.YRANGE
      YTICKNAME = P.YTICKNAME
      YTICKV  = P.YTICKVALUE
      YMINOR = P.YMINOR
      
      IF NCHL NE [] THEN NBAR = BARPLOT(ADATES,NCHL,     NBARS=NBARS,INDEX=0,BOTTOM_VALUES=BOT, FILL_COLOR='MEDIUM_AQUAMARINE',LINESTYLE=LINESTYLE,/OVERPLOT,YRANGE=BYRANGE,XRANGE=AXRANGE,XTICKVALUE=AX.TICKV,XTICKNAME=AX.TICKNAME,YTICKVALUE=YTICKV,YTICKNAME=YTICKNAME,YMINOR=YMINOR,BUFFER=BUFFER)
      IF MCHL NE [] THEN MBAR = BARPLOT(ADATES,NCHL+MCHL,NBARS=NBARS,INDEX=0,BOTTOM_VALUES=NCHL,FILL_COLOR='YELLOW',           LINESTYLE=LINESTYLE,/OVERPLOT,YRANGE=BYRANGE,XRANGE=AXRANGE,XTICKVALUE=AX.TICKV,XTICKNAME=AX.TICKNAME,YTICKVALUE=YTICKV,YTICKNAME=YTICKNAME,YMINOR=YMINOR,BUFFER=BUFFER)
      
      ;     ***** PRODUCTIVITY BAR PLOTS *****
      NBARS = 2
      MX = DATE_AXIS([20200101,20201231],/MONTH,/MID,/FYEAR,STEP_SIZE=1) & MXRANGE = DATE_2JD([20191215,20210115])
      MVPP = REPLICATE(0.0,12) & NVPP = MVPP
      MOPP = REPLICATE(0.0,12) & NOPP = MOPP
      
      BOT = REPLICATE(0, 12)
      MSETS = WHERE_SETS(MVDATA.MONTH)
      FOR MTH=0, N_ELEMENTS(MSETS)-1 DO BEGIN
        SUBS = WHERE_SETS_SUBS(MSETS(MTH))
        SET  = MVDATA(SUBS)
        MVPP(MTH) = MEAN(SET.MPP_MEAN,/NAN)
        NVPP(MTH) = MEAN(SET.NPP_MEAN,/NAN)
      ENDFOR
      MVPP(WHERE(FINITE(MVPP) EQ 0)) = 0.0
      NVPP(WHERE(FINITE(NVPP) EQ 0)) = 0.0
      MVDATES = JD_ADD(DATE_2JD('2020'+MSETS.VALUE),15,/DAY)
      MAX_PP = MAX([MVPP+NVPP,MOPP+NOPP],/NAN)
            
      MSETS = WHERE_SETS(MODATA.MONTH)
      FOR MTH=0, N_ELEMENTS(MSETS)-1 DO BEGIN
        SUBS = WHERE_SETS_SUBS(MSETS(MTH))
        SET  = MODATA(SUBS)
        MOPP(MTH) = MEAN(SET.MPP_MEAN,/NAN)
        NOPP(MTH) = MEAN(SET.NPP_MEAN,/NAN)
      ENDFOR
      MOPP(WHERE(FINITE(MOPP) EQ 0)) = 0.0
      NOPP(WHERE(FINITE(NOPP) EQ 0)) = 0.0
      MODATES = JD_ADD(DATE_2JD('2020'+MSETS.VALUE),15,/DAY)
      MAX_PP = MAX(MVPP+NVPP,/NAN)
        
      POSITION = [460,265,740,405]
      P = PLOT(MXRANGE,[0,MAX_PP],YTITLE='PP ' + UNITS('PPD',/NO_NAME),TITLE='Monthly',XTICKVALUE=MX.TICKV,FONT_SIZE=11,POSITION=POSITION,XRANGE=MXRANGE,$
        XMINOR=0,YMINOR=2,XSTYLE=1,XTICKNAME=MX.TICKNAME,/NODATA,BUFFER=BUFFER,MARGIN=MARGIN,LAYOUT=LAYOUT,/CURRENT,/DEVICE)
      BYRANGE = P.YRANGE
      YTICKNAME = P.YTICKNAME
      YTICKV  = P.YTICKVALUE
      YMINOR = P.YMINOR
      
      NVBAR = BARPLOT(MDATES,NVPP,     NBARS=NBARS,INDEX=0,BOTTOM_VALUES=BOT, FILL_COLOR='MEDIUM_AQUAMARINE',LINESTYLE=LINESTYLE,/OVERPLOT,YRANGE=BYRANGE,XRANGE=MXRANGE,XTICKVALUE=MX.TICKV,XTICKNAME=MX.TICKNAME,YTICKVALUE=YTICKV,YTICKNAME=YTICKNAME,YMINOR=YMINOR,BUFFER=BUFFER)
      MVBAR = BARPLOT(MDATES,NVPP+MVPP,NBARS=NBARS,INDEX=0,BOTTOM_VALUES=NVPP,FILL_COLOR='YELLOW',           LINESTYLE=LINESTYLE,/OVERPLOT,YRANGE=BYRANGE,XRANGE=MXRANGE,XTICKVALUE=MX.TICKV,XTICKNAME=MX.TICKNAME,YTICKVALUE=YTICKV,YTICKNAME=YTICKNAME,YMINOR=YMINOR,BUFFER=BUFFER)
      NOBAR = BARPLOT(MDATES,NOPP,     NBARS=NBARS,INDEX=1,BOTTOM_VALUES=BOT, FILL_COLOR='BLUE',             LINESTYLE=LINESTYLE,/OVERPLOT,YRANGE=BYRANGE,XRANGE=MXRANGE,XTICKVALUE=MX.TICKV,XTICKNAME=MX.TICKNAME,YTICKVALUE=YTICKV,YTICKNAME=YTICKNAME,YMINOR=YMINOR,BUFFER=BUFFER)
      MOBAR = BARPLOT(MDATES,NOPP+MOPP,NBARS=NBARS,INDEX=1,BOTTOM_VALUES=NOPP,FILL_COLOR='ORANGE',           LINESTYLE=LINESTYLE,/OVERPLOT,YRANGE=BYRANGE,XRANGE=MXRANGE,XTICKVALUE=MX.TICKV,XTICKNAME=MX.TICKNAME,YTICKVALUE=YTICKV,YTICKNAME=YTICKNAME,YMINOR=YMINOR,BUFFER=BUFFER)
      
      NBARS = 2
      AX = DATE_AXIS([19980101,20070101],/YEAR,/YY,STEP_SIZE=1)
      AXRANGE = DATE_2JD([19970101,20080101])
      MVPP = AVDATA.MPP_ANNUAL_GTON
      NVPP = AVDATA.NPP_ANNUAL_GTON 
      MOPP = AODATA.MPP_ANNUAL_GTON
      NOPP = AODATA.NPP_ANNUAL_GTON
      ADATES = DATE_2JD(AODATA.YEAR) 
      BOT = REPLICATE(0.0, N_ELEMENTS(MVPP))
      MAX_PP = MAX([MVPP+NVPP,MOPP+NOPP],/NAN)
        
      POSITION = [460,75,740,215]
      P = PLOT(AXRANGE,[0,MAX_PP],YTITLE='PP (Gt yr!U-1!N)',TITLE='Annual',XTICKVALUE=AX.TICKV,FONT_SIZE=11,POSITION=POSITION,XRANGE=AXRANGE,$
        XMINOR=0,YMINOR=2,XSTYLE=1,XTICKNAME=AX.TICKNAME,/NODATA,BUFFER=BUFFER,MARGIN=MARGIN,LAYOUT=LAYOUT,/CURRENT,/DEVICE)
      BYRANGE = P.YRANGE
      YTICKNAME = P.YTICKNAME
      YTICKV  = P.YTICKVALUE
      YMINOR = P.YMINOR
      
      NVBAR = BARPLOT(ADATES,NVPP,     NBARS=NBARS,INDEX=0,BOTTOM_VALUES=BOT, FILL_COLOR='MEDIUM_AQUAMARINE',LINESTYLE=LINESTYLE,/OVERPLOT,YRANGE=BYRANGE,XRANGE=AXRANGE,XTICKVALUE=AX.TICKV,XTICKNAME=AX.TICKNAME,YTICKVALUE=YTICKV,YTICKNAME=YTICKNAME,YMINOR=YMINOR,BUFFER=BUFFER)
      MVBAR = BARPLOT(ADATES,NVPP+MVPP,NBARS=NBARS,INDEX=0,BOTTOM_VALUES=NVPP,FILL_COLOR='YELLOW',           LINESTYLE=LINESTYLE,/OVERPLOT,YRANGE=BYRANGE,XRANGE=AXRANGE,XTICKVALUE=AX.TICKV,XTICKNAME=AX.TICKNAME,YTICKVALUE=YTICKV,YTICKNAME=YTICKNAME,YMINOR=YMINOR,BUFFER=BUFFER)
      NOBAR = BARPLOT(ADATES,NOPP,     NBARS=NBARS,INDEX=1,BOTTOM_VALUES=BOT, FILL_COLOR='BLUE',             LINESTYLE=LINESTYLE,/OVERPLOT,YRANGE=BYRANGE,XRANGE=AXRANGE,XTICKVALUE=AX.TICKV,XTICKNAME=AX.TICKNAME,YTICKVALUE=YTICKV,YTICKNAME=YTICKNAME,YMINOR=YMINOR,BUFFER=BUFFER)
      MOBAR = BARPLOT(ADATES,NOPP+MOPP,NBARS=NBARS,INDEX=1,BOTTOM_VALUES=NOPP,FILL_COLOR='ORANGE',           LINESTYLE=LINESTYLE,/OVERPLOT,YRANGE=BYRANGE,XRANGE=AXRANGE,XTICKVALUE=AX.TICKV,XTICKNAME=AX.TICKNAME,YTICKVALUE=YTICKV,YTICKNAME=YTICKNAME,YMINOR=YMINOR,BUFFER=BUFFER)
              
      X = [0,30,30,0,0] & Y = [0,0,15,15,0]
      PY = 30
      PY2 = 10
      P1 = 95
      P2 = 495
      TO = TEXT(P1+45,PY +7.5,'Nano + Picoplankton (VGPM2)',FONT_SIZE=12,/DEVICE,ALIGNMENT=0,VERTICAL_ALIGNMENT=0.5)
      TO = TEXT(P1+45,PY2+7.5,'Nano + Picoplankton (OPAL)', FONT_SIZE=12,/DEVICE,ALIGNMENT=0,VERTICAL_ALIGNMENT=0.5)
      PO = POLYGON(X,Y,POSITION=[P1,PY, P1+40,PY +15],FILL_COLOR='MEDIUM_AQUAMARINE',/FILL_BACKGROUND,/CURRENT,/DEVICE)
      PO = POLYGON(X,Y,POSITION=[P1,PY2,P1+40,PY2+15],FILL_COLOR='BLUE',/FILL_BACKGROUND,/CURRENT,/DEVICE)
      
      TO = TEXT(P2+45,PY +7.5,'Microplankton (VGPM2)',FONT_SIZE=12,/DEVICE,ALIGNMENT=0,VERTICAL_ALIGNMENT=0.5)
      TO = TEXT(P2+45,PY2+7.5,'Microplankton (OPAL)',FONT_SIZE=12,/DEVICE,ALIGNMENT=0,VERTICAL_ALIGNMENT=0.5)
      PO = POLYGON(X,Y,POSITION=[P2,PY, P2+40,PY +15],FILL_COLOR='YELLOW',/FILL_BACKGROUND,/CURRENT,/DEVICE)
      PO = POLYGON(X,Y,POSITION=[P2,PY2,P2+40,PY2+15],FILL_COLOR='ORANGE',/FILL_BACKGROUND,/CURRENT,/DEVICE)
              
      W.SAVE, PNGFILE, RESOLUTION=300
      W.CLOSE
      
    ENDFOR
    STOP
  ENDIF ; DO_BAR_COMPOSITES  
  
; *******************************************************
  IF DO_MAP_COMPOSITES GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_MAP_COMPOSITES GE 2
    
    DIR_PLOTS = DIR_PROJECTS + 'PLOTS' + SL
    DIR_STATS = DIR_PROJECTS + 'DATA_BY_SUBAREA' + SL + 'STATS-SAVE' + SL
    
    SUBAREAS   = ['NAFO_1_2J3K','NAFO_2_2J3KL','NAFO_3_2J3KLNO','NAFO_4_3LNO','NAFO_5_3M','NAFO_6_NS']
    TITLES     = ['2J3K','2J3KL','2J3KLNO','3LNO','3M','NS']
    
    BUFFER = 0    
    MAP_IN = 'NAFO'
    PDIR = !S.DATASETS + 'PP-SEAWIFS_PAN-AVHRR-MLAC\NAFO\'
    CDIR = !S.DATASETS + 'OC-SEAWIFS-MLAC\NAFO\'
    
    LAND = READ_LANDMASK(MAP=MAP_IN,PX=1024,PY=1024,/STRUCT)
    LL = MAPS_2LONLAT(MAP_IN,PX=1024,PY=1024)
    IMG = BYTARR(1024,1024) & IMG(*) = 251
    IMG(LAND.LAND)  = 251
    IMG(LAND.OCEAN) = 254
        
    CFILE   = FILE_SEARCH(FIX_PATH(CDIR + 'STATS\CHLOR_A-PAN\ANNUAL*NAFO*MEAN.SAVE'))
    MCFILE  = FILE_SEARCH(FIX_PATH(CDIR + 'STATS\MICRO-PAN\ANNUAL*NAFO*MEAN.SAVE'))
    NCFILE  = FILE_SEARCH(FIX_PATH(CDIR + 'STATS\NANOPICO-PAN\ANNUAL*NAFO*MEAN.SAVE'))
    MCPFILE = FILE_SEARCH(FIX_PATH(CDIR + 'STATS\MICRO_PERCENTAGE-PAN\ANNUAL*NAFO*MEAN.SAVE'))
    NCPFILE = FILE_SEARCH(FIX_PATH(CDIR + 'STATS\NANOPICO_PERCENTAGE-PAN\ANNUAL*NAFO*MEAN.SAVE'))
    
    VFILE   = FILE_SEARCH(FIX_PATH(PDIR + 'STATS\PPD-VGPM2\ANNUAL*NAFO*MEAN.SAVE'))
    VMFILE  = FILE_SEARCH(FIX_PATH(PDIR + 'STATS\MICROPP-MARMAP_PAN_VGPM2\ANNUAL*NAFO*MEAN.SAVE'))
    VNFILE  = FILE_SEARCH(FIX_PATH(PDIR + 'STATS\NANOPICOPP-MARMAP_PAN_VGPM2\ANNUAL*NAFO*MEAN.SAVE'))
    VMPFILE = FILE_SEARCH(FIX_PATH(PDIR + 'STATS\MICROPP_PERCENTAGE-MARMAP_PAN_VGPM2\ANNUAL*NAFO*MEAN.SAVE'))
    VNPFILE = FILE_SEARCH(FIX_PATH(PDIR + 'STATS\NANOPICOPP_PERCENTAGE-MARMAP_PAN_VGPM2\ANNUAL*NAFO*MEAN.SAVE'))
    
    OFILE   = FILE_SEARCH(FIX_PATH(PDIR + 'STATS\PPD-OPAL\ANNUAL*NAFO*MEAN.SAVE'))
    OMFILE  = FILE_SEARCH(FIX_PATH(PDIR + 'STATS\MICROPP-MARMAP_PAN_OPAL\ANNUAL*NAFO*MEAN.SAVE'))
    ONFILE  = FILE_SEARCH(FIX_PATH(PDIR + 'STATS\NANOPICOPP-MARMAP_PAN_OPAL\ANNUAL*NAFO*MEAN.SAVE'))
    OMPFILE = FILE_SEARCH(FIX_PATH(PDIR + 'STATS\MICROPP_PERCENTAGE-MARMAP_PAN_OPAL\ANNUAL*NAFO*MEAN.SAVE'))
    ONPFILE = FILE_SEARCH(FIX_PATH(PDIR + 'STATS\NANOPICOPP_PERCENTAGE-MARMAP_PAN_OPAL\ANNUAL*NAFO*MEAN.SAVE'))
    
    FILES = [CFILE,MCFILE,NCFILE,MCPFILE,NCPFILE,$
             VFILE,VMFILE,VNFILE,VMPFILE,VNPFILE,$
             OFILE,OMFILE,ONFILE,OMPFILE,ONPFILE]
        
    PNGFILE = FIX_PATH(DIR_PLOTS + 'CHL_PP_MAP_COMPOSITE.PNG')
    IF GET_MTIME(PNGFILE) GT MAX(GET_MTIME(FILES)) AND NOT KEYWORD_SET(OVERWRITE) THEN GOTO, SKIP_MAP_COMPOSITE
      
 ;   OUTLINE_FILES = !S.IMAGES + 'MASK_SUBAREA-NAFO-PXY_1024_1024-'+SUBAREAS+'-OUTLINE.PNG'
    OUTLINE_COLORS = 0
    OUTLINE_THICK = 2
    
    LANDMASK_FILE = !S.IMAGES + 'MASK_LAND-NAFO-PXY_1024_1024.PNG'
    LAND_COLOR = 251
    CSCALE = 'LOW'
    VSCALE = 'LOW'
    CPSCALE = '100'
    VPSCALE = '100'
    CGROUPS = ['MICRO','NANOPICO']
    CCOLORS = ['YELLOW','MEDIUM_AQUAMARINE']
    PGROUPS = ['MICRO','NANOPICO']
    PCOLORS = ['YELLOW','MEDIUM_AQUAMARINE']
    
    DATA = STRUCT_SD_READ(CFILE,  STRUCT=CHL)
    DATA = STRUCT_SD_READ(MCFILE, STRUCT=CMICRO)
    DATA = STRUCT_SD_READ(NCFILE, STRUCT=CNANO)
    DATA = STRUCT_SD_READ(MCPFILE,STRUCT=CMPER)
    DATA = STRUCT_SD_READ(NCPFILE,STRUCT=CNPER)
    DATA = STRUCT_SD_READ(VFILE,  STRUCT=VGPM)
    DATA = STRUCT_SD_READ(VMFILE, STRUCT=VMICRO)
    DATA = STRUCT_SD_READ(VNFILE, STRUCT=VNANO)
    DATA = STRUCT_SD_READ(VMPFILE,STRUCT=VMPER)
    DATA = STRUCT_SD_READ(VNPFILE,STRUCT=VNPER)
    DATA = STRUCT_SD_READ(OFILE,  STRUCT=OPAL)
    DATA = STRUCT_SD_READ(OMFILE, STRUCT=OMICRO)
    DATA = STRUCT_SD_READ(ONFILE, STRUCT=ONANO)
    DATA = STRUCT_SD_READ(OMPFILE,STRUCT=OMPER)
    DATA = STRUCT_SD_READ(ONPFILE,STRUCT=ONPER)
    GONE, DATA
    
    W = WINDOW(DIMENSIONS=[1100,960],BUFFER=BUFFER)
    
    CIM  = STRUCT_SD_2IMAGE_NG(CMICRO,IMG_POSITION=[15, 280,185,450],USE_PROD='CHLOR_A',SPECIAL_SCALE=CSCALE,/ADD_OUTLINE,/ADD_LAND,/ADD_COAST,LAND_COLOR=LAND_COLOR,OUTLINE_FILE=OUTLINE_FILES,OUTLINE_COLOR=OUTLINE_COLORS,OUTLINE_THICK=OUTLINE_THICK,/CURRENT,MARGIN=MARGIN,/DEVICE,BUFFER=BUFFER)
    CIM  = STRUCT_SD_2IMAGE_NG(CNANO, IMG_POSITION=[195,280,365,450],USE_PROD='CHLOR_A',SPECIAL_SCALE=CSCALE,/ADD_OUTLINE,/ADD_LAND,/ADD_COAST,LAND_COLOR=LAND_COLOR,OUTLINE_FILE=OUTLINE_FILES,OUTLINE_COLOR=OUTLINE_COLORS,OUTLINE_THICK=OUTLINE_THICK,/CURRENT,MARGIN=MARGIN,/DEVICE,BUFFER=BUFFER)
    CIM  = STRUCT_SD_2IMAGE_NG(CMPER, IMG_POSITION=[15, 55,185,225],USE_PROD='PERCENT',SPECIAL_SCALE=CPSCALE,/ADD_OUTLINE,/ADD_LAND,/ADD_COAST,LAND_COLOR=LAND_COLOR,OUTLINE_FILE=OUTLINE_FILES,OUTLINE_COLOR=OUTLINE_COLORS,OUTLINE_THICK=OUTLINE_THICK,/CURRENT,MARGIN=MARGIN,/DEVICE,BUFFER=BUFFER)
    CIM  = STRUCT_SD_2IMAGE_NG(CNPER, IMG_POSITION=[195,55,365,225],USE_PROD='PERCENT',SPECIAL_SCALE=CPSCALE,/ADD_OUTLINE,/ADD_LAND,/ADD_COAST,LAND_COLOR=LAND_COLOR,OUTLINE_FILE=OUTLINE_FILES,OUTLINE_COLOR=OUTLINE_COLORS,OUTLINE_THICK=OUTLINE_THICK,/CURRENT,MARGIN=MARGIN,/DEVICE,BUFFER=BUFFER)    
    BAR = COLOR_BAR_SCALE_NG(PROD='CHLOR_A',SPECIAL_SCALE=CSCALE, PX=77,PY=265,CHARSIZE=10,BACKGROUND=252,XDIM=225,YDIM=10,PAL='PAL_SW3',VERTICAL=0,BOTTOM=1,FONT='HELVETICA',/CURRENT,TITLE=UNITS('CHLOR_A'),BUFFER=BUFFER)
    BAR = COLOR_BAR_SCALE_NG(PROD='PERCENT',SPECIAL_SCALE=CPSCALE,PX=77,PY=40, CHARSIZE=10,BACKGROUND=252,XDIM=225,YDIM=10,PAL='PAL_SW3',VERTICAL=0,BOTTOM=1,FONT='HELVETICA',/CURRENT,TITLE=UNITS('PERCENT'),BUFFER=BUFFER)
    
    VIM  = STRUCT_SD_2IMAGE_NG(VMICRO,IMG_POSITION=[375,280,545,450],USE_PROD='PPD',    SPECIAL_SCALE=VSCALE,/ADD_OUTLINE,/ADD_LAND,/ADD_COAST,LAND_COLOR=LAND_COLOR,OUTLINE_FILE=OUTLINE_FILES,OUTLINE_COLOR=OUTLINE_COLORS,OUTLINE_THICK=OUTLINE_THICK,/CURRENT,MARGIN=MARGIN,/DEVICE,BUFFER=BUFFER)
    VIM  = STRUCT_SD_2IMAGE_NG(VNANO, IMG_POSITION=[555,280,725,450],USE_PROD='PPD',    SPECIAL_SCALE=VSCALE,/ADD_OUTLINE,/ADD_LAND,/ADD_COAST,LAND_COLOR=LAND_COLOR,OUTLINE_FILE=OUTLINE_FILES,OUTLINE_COLOR=OUTLINE_COLORS,OUTLINE_THICK=OUTLINE_THICK,/CURRENT,MARGIN=MARGIN,/DEVICE,BUFFER=BUFFER)
    VIM  = STRUCT_SD_2IMAGE_NG(VMPER, IMG_POSITION=[375,55, 545,225],USE_PROD='PERCENT',SPECIAL_SCALE=VPSCALE,/ADD_OUTLINE,/ADD_LAND,/ADD_COAST,LAND_COLOR=LAND_COLOR,OUTLINE_FILE=OUTLINE_FILES,OUTLINE_COLOR=OUTLINE_COLORS,OUTLINE_THICK=OUTLINE_THICK,/CURRENT,MARGIN=MARGIN,/DEVICE,BUFFER=BUFFER)
    VIM  = STRUCT_SD_2IMAGE_NG(VNPER, IMG_POSITION=[555,55, 725,225],USE_PROD='PERCENT',SPECIAL_SCALE=VPSCALE,/ADD_OUTLINE,/ADD_LAND,/ADD_COAST,LAND_COLOR=LAND_COLOR,OUTLINE_FILE=OUTLINE_FILES,OUTLINE_COLOR=OUTLINE_COLORS,OUTLINE_THICK=OUTLINE_THICK,/CURRENT,MARGIN=MARGIN,/DEVICE,BUFFER=BUFFER)
    BAR = COLOR_BAR_SCALE_NG(PROD='PPD',    SPECIAL_SCALE=VSCALE, PX=437,PY=265,CHARSIZE=10,BACKGROUND=252,XDIM=225,YDIM=10,PAL='PAL_SW3',VERTICAL=0,BOTTOM=1,FONT='HELVETICA',/CURRENT,TITLE='VGPM2 ' + UNITS('PPD'),BUFFER=BUFFER)
    BAR = COLOR_BAR_SCALE_NG(PROD='PERCENT',SPECIAL_SCALE=VPSCALE,PX=437,PY=40, CHARSIZE=10,BACKGROUND=252,XDIM=225,YDIM=10,PAL='PAL_SW3',VERTICAL=0,BOTTOM=1,FONT='HELVETICA',/CURRENT,TITLE='VGPM2 ' + UNITS('PERCENT'),BUFFER=BUFFER)

    OIM  = STRUCT_SD_2IMAGE_NG(OMICRO,IMG_POSITION=[735,280,905, 450],USE_PROD='PPD',    SPECIAL_SCALE=VSCALE,/ADD_OUTLINE,/ADD_LAND,/ADD_COAST,LAND_COLOR=LAND_COLOR,OUTLINE_FILE=OUTLINE_FILES,OUTLINE_COLOR=OUTLINE_COLORS,OUTLINE_THICK=OUTLINE_THICK,/CURRENT,MARGIN=MARGIN,/DEVICE,BUFFER=BUFFER)
    OIM  = STRUCT_SD_2IMAGE_NG(ONANO, IMG_POSITION=[915,280,1085,450],USE_PROD='PPD',    SPECIAL_SCALE=VSCALE,/ADD_OUTLINE,/ADD_LAND,/ADD_COAST,LAND_COLOR=LAND_COLOR,OUTLINE_FILE=OUTLINE_FILES,OUTLINE_COLOR=OUTLINE_COLORS,OUTLINE_THICK=OUTLINE_THICK,/CURRENT,MARGIN=MARGIN,/DEVICE,BUFFER=BUFFER)
    OIM  = STRUCT_SD_2IMAGE_NG(OMPER, IMG_POSITION=[735,55, 905, 225],USE_PROD='PERCENT',SPECIAL_SCALE=VPSCALE,/ADD_OUTLINE,/ADD_LAND,/ADD_COAST,LAND_COLOR=LAND_COLOR,OUTLINE_FILE=OUTLINE_FILES,OUTLINE_COLOR=OUTLINE_COLORS,OUTLINE_THICK=OUTLINE_THICK,/CURRENT,MARGIN=MARGIN,/DEVICE,BUFFER=BUFFER)
    OIM  = STRUCT_SD_2IMAGE_NG(ONPER, IMG_POSITION=[915,55, 1085,225],USE_PROD='PERCENT',SPECIAL_SCALE=VPSCALE,/ADD_OUTLINE,/ADD_LAND,/ADD_COAST,LAND_COLOR=LAND_COLOR,OUTLINE_FILE=OUTLINE_FILES,OUTLINE_COLOR=OUTLINE_COLORS,OUTLINE_THICK=OUTLINE_THICK,/CURRENT,MARGIN=MARGIN,/DEVICE,BUFFER=BUFFER)
    BAR = COLOR_BAR_SCALE_NG(PROD='PPD',    SPECIAL_SCALE=VSCALE, PX=797,PY=265,CHARSIZE=10,BACKGROUND=252,XDIM=225,YDIM=10,PAL='PAL_SW3',VERTICAL=0,BOTTOM=1,FONT='HELVETICA',/CURRENT,TITLE='OPAL ' + UNITS('PPD'),BUFFER=BUFFER)
    BAR = COLOR_BAR_SCALE_NG(PROD='PERCENT',SPECIAL_SCALE=VPSCALE,PX=797,PY=40, CHARSIZE=10,BACKGROUND=252,XDIM=225,YDIM=10,PAL='PAL_SW3',VERTICAL=0,BOTTOM=1,FONT='HELVETICA',/CURRENT,TITLE='OPAL ' + UNITS('PERCENT'),BUFFER=BUFFER)
    
    TS   = TEXT([100,280,460,640,820,1000],[460,460,460,460,460,460],['Micro','Nano+Pico','Micro','Nano+Pico','Micro','Nano+Pico'],FONT_SIZE=12,ALIGNMENT=0.5,/DEVICE)
    
    BAR = COLOR_BAR_SCALE_NG(PROD='CHLOR_A',SPECIAL_SCALE=CSCALE, PX=77, PY=530,CHARSIZE=12,BACKGROUND=252,XDIM=225,YDIM=15,PAL='PAL_SW3',VERTICAL=0,BOTTOM=1,FONT='HELVETICA',/CURRENT,TITLE=UNITS('CHLOR_A'),BUFFER=BUFFER)
    BAR = COLOR_BAR_SCALE_NG(PROD='PPD',    SPECIAL_SCALE=VSCALE, PX=437,PY=530,CHARSIZE=12,BACKGROUND=252,XDIM=225,YDIM=15,PAL='PAL_SW3',VERTICAL=0,BOTTOM=1,FONT='HELVETICA',/CURRENT,TITLE='VGPM2 ' + UNITS('PPD'),BUFFER=BUFFER)
    BAR = COLOR_BAR_SCALE_NG(PROD='PPD',    SPECIAL_SCALE=VSCALE, PX=797,PY=530,CHARSIZE=12,BACKGROUND=252,XDIM=225,YDIM=15,PAL='PAL_SW3',VERTICAL=0,BOTTOM=1,FONT='HELVETICA',/CURRENT,TITLE='OPAL '  + UNITS('PPD'),BUFFER=BUFFER)

    CIM  = STRUCT_SD_2IMAGE_NG(CHL, IMG_POSITION=[15, 550,365, 900],USE_PROD='CHLOR_A',SPECIAL_SCALE=CSCALE,/ADD_OUTLINE,/ADD_LAND,/ADD_COAST,LAND_COLOR=LAND_COLOR,OUTLINE_FILE=OUTLINE_FILES,OUTLINE_COLOR=OUTLINE_COLORS,OUTLINE_THICK=OUTLINE_THICK,/CURRENT,MARGIN=MARGIN,/DEVICE,BUFFER=BUFFER)
    VIM  = STRUCT_SD_2IMAGE_NG(VGPM,IMG_POSITION=[375,550,725, 900],USE_PROD='PPD',    SPECIAL_SCALE=VSCALE,/ADD_OUTLINE,/ADD_LAND,/ADD_COAST,LAND_COLOR=LAND_COLOR,OUTLINE_FILE=OUTLINE_FILES,OUTLINE_COLOR=OUTLINE_COLORS,OUTLINE_THICK=OUTLINE_THICK,/CURRENT,MARGIN=MARGIN,/DEVICE,BUFFER=BUFFER)
    OIM  = STRUCT_SD_2IMAGE_NG(OPAL,IMG_POSITION=[735,550,1085,900],USE_PROD='PPD',    SPECIAL_SCALE=VSCALE,/ADD_OUTLINE,/ADD_LAND,/ADD_COAST,LAND_COLOR=LAND_COLOR,OUTLINE_FILE=OUTLINE_FILES,OUTLINE_COLOR=OUTLINE_COLORS,OUTLINE_THICK=OUTLINE_THICK,/CURRENT,MARGIN=MARGIN,/DEVICE,BUFFER=BUFFER)
    
    T    = TEXT(550,940,'NAFO ',ALIGNMENT=0.5,/DEVICE,FONT_SIZE=14,FONT_STYLE='BOLD')
    TT   = TEXT([190,550,910],[910,910,910],['Chlorophyll','Primary Production - VGPM2','Primary Production - OPAL'],ALIGNMENT=0.5,/DEVICE,FONT_SIZE=14)
    
    W.SAVE, PNGFILE, RESOLUTION=300
    W.CLOSE
      
    SKIP_MAP_COMPOSITE:
    STOP
  ENDIF ; DO_MAP_COMPOSITES
  

; *******************************************************
  IF DO_NAFO_PAN_OC4 GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_NAFO_PAN_OC4 GE 2
    
    BUFFER = 0
    
    DIR       = DIR_PROJECTS + 'NAFO' + SL + 'STATS' + SL
    DIR_PLOTS = DIR_PROJECTS + 'NAFO' + SL + 'PLOTS' + SL
    
    DATE_RANGE = DATE_2JD(['19970901','20101231'])
    SUBAREAS   = ['NAFO_1_2J3K','NAFO_2_2J3KL','NAFO_3_2J3KLNO','NAFO_4_3LNO','NAFO_5_3M','NAFO_6_NS']
    DATASETS   = ['OC-SEAWIFS-MLAC','PP-SEAWIFS_PAN-AVHRR-MLAC','PP-SEAWIFS-AVHRR-MLAC']
    SUBPER     = ['A_ANNUAL_M_MANNUAL_MONTH']
    PERIODS    = ['M_','A_','MONTH_']
    OUTPER     = ['M','A']
    PERSTR     = [2,2,6]
    TITLES     = ['NAFO_1_2J3K','NAFO_2_2J3KL','NAFO_3_2J3KLNO','NAFO_4_3LNO','NAFO_5_3M','NAFO_6_NS']
    CODES      = ['2J3K','2J3KL','2J3KLNO','3LNO','3M','NS']
    DATES      = ['1997-2010']
    
    PY = [0,100]
    WIDTH = 6
    CFILES = []
    FOR S=0, N_ELEMENTS(SUBAREAS)-1 DO CFILES = [CFILES,FILE_SEARCH(!S.DATASETS+DATASETS[0]+SL+'NAFO'+SL+'TS_SUBAREAS'+SL+SUBPER+'*MASK_SUBAREA-NAFO-PXY_1024_1024-'+SUBAREAS(S)+'*-MULTI_PRODS.SAVE')]    
    OK = WHERE(CFILES NE '') & CFILES=CFILES[OK]
    CDATA = IDL_RESTORE(CFILES[0])
    FOR S=1, N_ELEMENTS(CFILES)-1 DO CDATA = STRUCT_CONCAT(CDATA,IDL_RESTORE(CFILES(S)))
    OK = WHERE(CDATA.PERIOD NE MISSINGS(CDATA.PERIOD)) & CDATA = CDATA[OK]
    CDATA = CDATA[WHERE(PERIOD_2JD(CDATA.PERIOD) GE DATE_RANGE[0] AND PERIOD_2JD(CDATA.PERIOD) LE DATE_RANGE[1])]
    
    PFILES = []
    FOR S=0, N_ELEMENTS(SUBAREAS)-1 DO PFILES = [PFILES,FILE_SEARCH(!S.DATASETS+DATASETS[1]+SL+'NAFO'+SL+'TS_SUBAREAS'+SL+SUBPER+'*MASK_SUBAREA-NAFO-PXY_1024_1024-'+SUBAREAS(S)+'*-MULTI_PRODS.SAVE')]
    OK = WHERE(PFILES NE '') & PFILES=PFILES[OK]
    PDATA = IDL_RESTORE(PFILES[0])
    FOR S=1, N_ELEMENTS(PFILES)-1 DO PDATA = STRUCT_CONCAT(PDATA,IDL_RESTORE(PFILES(S)))
    OK = WHERE(PDATA.PERIOD NE MISSINGS(PDATA.PERIOD)) & PDATA = PDATA[OK]
    PDATA = PDATA[WHERE(PERIOD_2JD(PDATA.PERIOD) GE DATE_RANGE[0] AND PERIOD_2JD(PDATA.PERIOD) LE DATE_RANGE[1])]
    
    OFILES = []
    FOR S=0, N_ELEMENTS(SUBAREAS)-1 DO OFILES = [OFILES,FILE_SEARCH(!S.DATASETS+DATASETS(2)+SL+'NAFO'+SL+'TS_SUBAREAS'+SL+SUBPER+'*MASK_SUBAREA-NAFO-PXY_1024_1024-'+SUBAREAS(S)+'*-MULTI_PRODS.SAVE')]
    OK = WHERE(OFILES NE '') & OFILES=OFILES[OK]
    ODATA = IDL_RESTORE(OFILES[0])
    FOR S=1, N_ELEMENTS(OFILES)-1 DO ODATA = STRUCT_CONCAT(ODATA,IDL_RESTORE(OFILES(S)))
    OK = WHERE(ODATA.PERIOD NE MISSINGS(ODATA.PERIOD)) & ODATA = ODATA[OK]
    ODATA = ODATA[WHERE(PERIOD_2JD(ODATA.PERIOD) GE DATE_RANGE[0] AND PERIOD_2JD(ODATA.PERIOD) LE DATE_RANGE[1])]
    
    FOR N=0, N_ELEMENTS(CODES)-1 DO BEGIN
      PNGFILE = FIX_PATH(!S.PROJECTS + 'ECOAP/NAFO/PLOTS/CHL_ALG_COMPARE-NAFO-TIMESERIES-'+CODES(N)+'.PNG')
      IF GET_MTIME(PNGFILE) GT MAX(GET_MTIME([CFILES,PFILES,OFILES])) AND NOT KEYWORD_SET(OVERWRITE) THEN CONTINUE
      W = WINDOW(DIMENSIONS=[1400,1000])
      D = TEXT(0.5,0.96,DATES[0]+'!C'+CODES(N),FONT_SIZE=14,ALIGNMENT=0.5)
      
      AXMON = DATE_AXIS([20200101,20201231],/MONTH,/MID,/FYEAR)
      AXA = DATE_AXIS([19970101,20110101],/YEAR,/YY)
      AXM = DATE_AXIS([19970101,20111231],/MONTH,STEP=4,MAX_LABELS=70)
      MYRANGE = LIST([0,2.0],[0,1.2],[0,1.2])
      AYRANGE = LIST([0,1.4],[0,1.0],[0,1.0])
      OYRANGE = LIST([0,1.4],[0,1.0],[0,1.0])
      
      TOP    = [0.95, 0.63, 0.31]
      LEFT   = 0.05
      LEFT2  = 0.55
      RIGHT  = 0.95
      RIGHT2 = 0.45
      PLDIF  = 0.12
      SPACE  = 0.05
      
      CTITLE = UNITS('CHL')
      PTITLE = 'VGPM2 ' + UNITS('PPD',/NO_NAME)
      OTITLE = 'OPAL '  + UNITS('PPD',/NO_NAME)
        
      MPOS = [LEFT, TOP[0]-PLDIF,        RIGHT, TOP[0]]
      APOS = [LEFT, TOP[0]-PLDIF*2-SPACE,RIGHT2,TOP[0]-PLDIF-SPACE]
      OPOS = [LEFT2,TOP[0]-PLDIF*2-SPACE,RIGHT, TOP[0]-PLDIF-SPACE]
      
      OKS = WHERE(CDATA.PERIOD_CODE EQ 'M' AND CDATA.SUBAREA_NAME EQ CODES(N))        
      PANM = PLOT(PERIOD_2JD(CDATA(OKS).PERIOD),CDATA(OKS).GMEAN_CHLOR_A_PAN,XRANGE=AXM.JD,XTICKVALUES=AXM.TICKV,XTICKNAME=AXM.TICKNAME,XMINOR=3,YMINOR=2,XTICKLEN=0.04,YTICKLEN=0.01,YRANGE=MYRANGE[0],POSITION=MPOS,$
        YTITLE=CTITLE,SYMBOL='CIRCLE',SYM_FILLED=1,THICK=1.5,COLOR='RED', BUFFER=BUFFER,/CURRENT)
      OC4M = PLOT(PERIOD_2JD(CDATA(OKS).PERIOD),CDATA(OKS).GMEAN_CHLOR_A_OC4,XRANGE=AXM.JD,YRANGE=MYRANGE[0],YMINOR=2,YTICKLEN=0.01,SYMBOL='CIRCLE',SYM_FILLED=0,THICK=1,  COLOR='BLUE',BUFFER=BUFFER,/CURRENT,/OVERPLOT)
      
      OKS = WHERE(CDATA.PERIOD_CODE EQ 'A' AND CDATA.SUBAREA_NAME EQ CODES(N))
      BARS = BARPLOT(PERIOD_2JD(CDATA(OKS).PERIOD),CDATA(OKS).GMEAN_CHLOR_A_PAN,INDEX=0,NBARS=2,XRANGE=AXA.JD,FILL_COLOR='RED', YRANGE=AYRANGE[0],XMINOR=0,YTITLE=CTITLE,POSITION=APOS,/CURRENT,XTICKVALUES=AXA.TICKV,XTICKNAME=AXA.TICKNAME,XTICKLEN=0.04,YTICKLEN=0.02,YMINOR=3)
      BARM = BARPLOT(PERIOD_2JD(CDATA(OKS).PERIOD),CDATA(OKS).GMEAN_CHLOR_A_OC4,INDEX=1,NBARS=2,XRANGE=AXA.JD,FILL_COLOR='BLUE',YRANGE=AYRANGE[0],XMINOR=0,YTITLE=CTITLE,POSITION=APOS,/CURRENT,XTICKVALUES=AXA.TICKV,XTICKNAME=AXA.TICKNAME,XTICKLEN=0.04,YTICKLEN=0.02,YMINOR=3)
        
      OKS = WHERE(CDATA.PERIOD_CODE EQ 'MONTH' AND CDATA.SUBAREA_NAME EQ CODES(N) AND CDATA.GMEAN_CHLOR_A_PAN NE MISSINGS(0.0)) & SDATES = JD_ADD(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(CDATA(OKS).PERIOD))),14,/DAY) & SRTS = SORT(SDATES)        
      BARS = BARPLOT(SDATES(SRTS),CDATA(OKS(SRTS)).GMEAN_CHLOR_A_PAN,INDEX=0,NBARS=2,XRANGE=AXMON.JD,FILL_COLOR='RED', YRANGE=OYRANGE[0],XMINOR=0,YTITLE=CTITLE,POSITION=OPOS,/CURRENT,XTICKVALUES=AXMON.TICKV,XTICKNAME=AXMON.TICKNAME,XTICKLEN=0.04,YTICKLEN=0.02,YMINOR=3)
      BARM = BARPLOT(SDATES(SRTS),CDATA(OKS(SRTS)).GMEAN_CHLOR_A_OC4,INDEX=1,NBARS=2,XRANGE=AXMON.JD,FILL_COLOR='BLUE',YRANGE=OYRANGE[0],XMINOR=0,YTITLE=CTITLE,POSITION=OPOS,/CURRENT,XTICKVALUES=AXMON.TICKV,XTICKNAME=AXMON.TICKNAME,XTICKLEN=0.04,YTICKLEN=0.02,YMINOR=3)
      
      MPOS = [LEFT, TOP[1]-PLDIF,        RIGHT, TOP[1]]
      APOS = [LEFT, TOP[1]-PLDIF*2-SPACE,RIGHT2,TOP[1]-PLDIF-SPACE]
      OPOS = [LEFT2,TOP[1]-PLDIF*2-SPACE,RIGHT, TOP[1]-PLDIF-SPACE]
      
      OKP = WHERE(PDATA.PERIOD_CODE EQ 'M' AND PDATA.SUBAREA_NAME EQ CODES(N))
      OKO = WHERE(ODATA.PERIOD_CODE EQ 'M' AND ODATA.SUBAREA_NAME EQ CODES(N))
      PANM = PLOT(PERIOD_2JD(PDATA(OKP).PERIOD),PDATA(OKP).GMEAN_PPD_VGPM2,XRANGE=AXM.JD,XTICKVALUES=AXM.TICKV,XTICKNAME=AXM.TICKNAME,XMINOR=3,YMINOR=2,XTICKLEN=0.04,YTICKLEN=0.01,YRANGE=MYRANGE[1],POSITION=MPOS,$
        YTITLE=PTITLE,SYMBOL='CIRCLE',SYM_FILLED=1,THICK=1.5,COLOR='RED', BUFFER=BUFFER,/CURRENT)
      OC4M = PLOT(PERIOD_2JD(ODATA(OKO).PERIOD),ODATA(OKO).GMEAN_PPD_VGPM2,XRANGE=AXM.JD,YRANGE=MYRANGE[1],YMINOR=2,YTICKLEN=0.01,SYMBOL='CIRCLE',SYM_FILLED=0,THICK=1,  COLOR='BLUE',BUFFER=BUFFER,/CURRENT,/OVERPLOT)

      OKP = WHERE(PDATA.PERIOD_CODE EQ 'A' AND PDATA.SUBAREA_NAME EQ CODES(N))
      OKO = WHERE(ODATA.PERIOD_CODE EQ 'A' AND ODATA.SUBAREA_NAME EQ CODES(N))
      BARP = BARPLOT(PERIOD_2JD(PDATA(OKP).PERIOD),PDATA(OKP).GMEAN_PPD_VGPM2,INDEX=0,NBARS=2,XRANGE=AXA.JD,FILL_COLOR='RED', YRANGE=AYRANGE[1],XMINOR=0,YTITLE=PTITLE,POSITION=APOS,/CURRENT,XTICKVALUES=AXA.TICKV,XTICKNAME=AXA.TICKNAME,XTICKLEN=0.04,YTICKLEN=0.02,YMINOR=3)
      BARO = BARPLOT(PERIOD_2JD(ODATA(OKO).PERIOD),ODATA(OKO).GMEAN_PPD_VGPM2,INDEX=1,NBARS=2,XRANGE=AXA.JD,FILL_COLOR='BLUE',YRANGE=AYRANGE[1],XMINOR=0,YTITLE=PTITLE,POSITION=APOS,/CURRENT,XTICKVALUES=AXA.TICKV,XTICKNAME=AXA.TICKNAME,XTICKLEN=0.04,YTICKLEN=0.02,YMINOR=3)

      OKP = WHERE(PDATA.PERIOD_CODE EQ 'MONTH' AND PDATA.SUBAREA_NAME EQ CODES(N) AND PDATA.GMEAN_PPD_VGPM2 NE MISSINGS(0.0)) & PDATES = JD_ADD(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(PDATA(OKP).PERIOD))),14,/DAY) & SRTP = SORT(PDATES)
      OKO = WHERE(ODATA.PERIOD_CODE EQ 'MONTH' AND ODATA.SUBAREA_NAME EQ CODES(N) AND ODATA.GMEAN_PPD_VGPM2 NE MISSINGS(0.0)) & ODATES = JD_ADD(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(ODATA(OKO).PERIOD))),14,/DAY) & SRTO = SORT(ODATES)
      BARP = BARPLOT(PDATES(SRTP),PDATA(OKP(SRTP)).GMEAN_PPD_VGPM2,INDEX=0,NBARS=2,XRANGE=AXMON.JD,FILL_COLOR='RED', YRANGE=OYRANGE[1],XMINOR=0,YTITLE=PTITLE,POSITION=OPOS,/CURRENT,XTICKVALUES=AXMON.TICKV,XTICKNAME=AXMON.TICKNAME,XTICKLEN=0.04,YTICKLEN=0.02,YMINOR=3)
      BARO = BARPLOT(ODATES(SRTO),ODATA(OKO(SRTO)).GMEAN_PPD_VGPM2,INDEX=1,NBARS=2,XRANGE=AXMON.JD,FILL_COLOR='BLUE',YRANGE=OYRANGE[1],XMINOR=0,YTITLE=PTITLE,POSITION=OPOS,/CURRENT,XTICKVALUES=AXMON.TICKV,XTICKNAME=AXMON.TICKNAME,XTICKLEN=0.04,YTICKLEN=0.02,YMINOR=3)


      MPOS = [LEFT, TOP(2)-PLDIF,        RIGHT, TOP(2)]
      APOS = [LEFT, TOP(2)-PLDIF*2-SPACE,RIGHT2,TOP(2)-PLDIF-SPACE]
      OPOS = [LEFT2,TOP(2)-PLDIF*2-SPACE,RIGHT, TOP(2)-PLDIF-SPACE]
      
      OKP = WHERE(PDATA.PERIOD_CODE EQ 'M' AND PDATA.SUBAREA_NAME EQ CODES(N))
      OKO = WHERE(ODATA.PERIOD_CODE EQ 'M' AND ODATA.SUBAREA_NAME EQ CODES(N))
      PANM = PLOT(PERIOD_2JD(PDATA(OKP).PERIOD),PDATA(OKP).GMEAN_PPD_OPAL,XRANGE=AXM.JD,XTICKVALUES=AXM.TICKV,XTICKNAME=AXM.TICKNAME,XMINOR=3,YMINOR=2,XTICKLEN=0.04,YTICKLEN=0.01,YRANGE=MYRANGE(2),POSITION=MPOS,$
        YTITLE=OTITLE,SYMBOL='CIRCLE',SYM_FILLED=1,THICK=1.5,COLOR='RED', BUFFER=BUFFER,/CURRENT)
      OC4M = PLOT(PERIOD_2JD(ODATA(OKO).PERIOD),ODATA(OKO).GMEAN_PPD_OPAL,XRANGE=AXM.JD,YRANGE=MYRANGE(2),YMINOR=2,YTICKLEN=0.01,SYMBOL='CIRCLE',SYM_FILLED=0,THICK=1,  COLOR='BLUE',BUFFER=BUFFER,/CURRENT,/OVERPLOT)

      OKP = WHERE(PDATA.PERIOD_CODE EQ 'A' AND PDATA.SUBAREA_NAME EQ CODES(N))
      OKO = WHERE(ODATA.PERIOD_CODE EQ 'A' AND ODATA.SUBAREA_NAME EQ CODES(N))
      BARP = BARPLOT(PERIOD_2JD(PDATA(OKP).PERIOD),PDATA(OKP).GMEAN_PPD_OPAL,INDEX=0,NBARS=2,XRANGE=AXA.JD,FILL_COLOR='RED', YRANGE=AYRANGE(2),XMINOR=0,YTITLE=OTITLE,POSITION=APOS,/CURRENT,XTICKVALUES=AXA.TICKV,XTICKNAME=AXA.TICKNAME,XTICKLEN=0.04,YTICKLEN=0.02,YMINOR=3)
      BARO = BARPLOT(PERIOD_2JD(ODATA(OKO).PERIOD),ODATA(OKO).GMEAN_PPD_OPAL,INDEX=1,NBARS=2,XRANGE=AXA.JD,FILL_COLOR='BLUE',YRANGE=AYRANGE(2),XMINOR=0,YTITLE=OTITLE,POSITION=APOS,/CURRENT,XTICKVALUES=AXA.TICKV,XTICKNAME=AXA.TICKNAME,XTICKLEN=0.04,YTICKLEN=0.02,YMINOR=3)
      
      OKP = WHERE(PDATA.PERIOD_CODE EQ 'MONTH' AND PDATA.SUBAREA_NAME EQ CODES(N) AND PDATA.GMEAN_PPD_OPAL NE MISSINGS(0.0)) & PDATES = JD_ADD(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(PDATA(OKP).PERIOD))),14,/DAY) & SRTP = SORT(PDATES)
      OKO = WHERE(ODATA.PERIOD_CODE EQ 'MONTH' AND ODATA.SUBAREA_NAME EQ CODES(N) AND ODATA.GMEAN_PPD_OPAL NE MISSINGS(0.0)) & ODATES = JD_ADD(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(ODATA(OKO).PERIOD))),14,/DAY) & SRTO = SORT(ODATES)
      BARP = BARPLOT(PDATES(SRTP),PDATA(OKP(SRTP)).GMEAN_PPD_OPAL,INDEX=0,NBARS=2,XRANGE=AXMON.JD,FILL_COLOR='RED', YRANGE=OYRANGE(2),XMINOR=0,YTITLE=OTITLE,POSITION=OPOS,/CURRENT,XTICKVALUES=AXMON.TICKV,XTICKNAME=AXMON.TICKNAME,XTICKLEN=0.04,YTICKLEN=0.02,YMINOR=3)
      BARO = BARPLOT(ODATES(SRTO),ODATA(OKO(SRTO)).GMEAN_PPD_OPAL,INDEX=1,NBARS=2,XRANGE=AXMON.JD,FILL_COLOR='BLUE',YRANGE=OYRANGE(2),XMINOR=0,YTITLE=OTITLE,POSITION=OPOS,/CURRENT,XTICKVALUES=AXMON.TICKV,XTICKNAME=AXMON.TICKNAME,XTICKLEN=0.04,YTICKLEN=0.02,YMINOR=3)
  
      STXT = TEXT(0.07,TOP[0]-0.02,'PAN',FONT_SIZE=12,COLOR='RED')
      MTXT = TEXT(0.07,TOP[0]-0.04,'OC4',FONT_SIZE=12,COLOR='BLUE')
      STXT = TEXT(0.07,TOP[1]-0.02,'PAN',FONT_SIZE=12,COLOR='RED')
      MTXT = TEXT(0.07,TOP[1]-0.04,'OC4',FONT_SIZE=12,COLOR='BLUE')
      STXT = TEXT(0.07,TOP(2)-0.02,'PAN',FONT_SIZE=12,COLOR='RED')
      MTXT = TEXT(0.07,TOP(2)-0.04,'OC4',FONT_SIZE=12,COLOR='BLUE')
      
      W.SAVE,PNGFILE,RESOLUTION=300
      W.CLOSE
    ENDFOR   
    STOP
  ENDIF ; DO_NAFO_PAN_OC4
  
; *******************************************************
  IF DO_DAILY_COMPARE GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_DAILY_COMPARE GE 2
    
    BUFFER = 0
    
    DIR       = DIR_PROJECTS + 'NAFO' + SL + 'STATS' + SL
    DIR_PLOTS = DIR_PROJECTS + 'NAFO' + SL + 'PLOTS' + SL
    
    DATE_RANGE = DATE_2JD(['19970101','20131231'])
    DATASETS   = ['OC-SEAWIFS-MLAC','OC-MODIS-LAC']
    SUBAREAS   = ['NAFO_1_2J3K','NAFO_2_2J3KL','NAFO_3_2J3KLNO','NAFO_4_3LNO','NAFO_5_3M','NAFO_6_NS']
    CODES      = ['2J3K','2J3KL','2J3KLNO','3LNO','3M','NS']
    TS_SUB     = 'STATS'
    SUBPER     = 'A_ANNUAL_M_MANNUAL_MONTH'
    PERIODS    = 'M'    
    DATES      = '1997-2013'
    
    PY = [0,100]
    WIDTH = 6
    
    
    PY = [0,100]
    WIDTH = 6
    CFILES = []
    FOR D=0, N_ELEMENTS(DATASETS)-1 DO BEGIN
      FOR S=0, N_ELEMENTS(SUBAREAS)-1 DO CFILES = [CFILES,FILE_SEARCH(!S.DATASETS+DATASETS(D)+SL+'NAFO'+SL+'TS_SUBAREAS-'+TS_SUB+SL+SUBPER+'*MASK_SUBAREA-NAFO-PXY_1024_1024-'+SUBAREAS(S)+'*-MULTI_PRODS.SAVE')]
    ENDFOR
    OK = WHERE(CFILES NE '') & CFILES=CFILES[OK]   
    CDATA = STRUCT_2MISSINGS(CREATE_STRUCT('SENSOR',''))
    FOR S=0, N_ELEMENTS(CFILES)-1 DO CDATA = STRUCT_CONCAT(CDATA,IDL_RESTORE(CFILES(S)))
    TEMP = STRUCT_2MISSINGS(CREATE_STRUCT('N_CHLOR_A_OC',0L,'MIN_CHLOR_A_OC',0.0,'MAX_CHLOR_A_OC',0.0,'MED_CHLOR_A_OC',0.0,'MEAN_CHLOR_A_OC',0.0,$
      'GMEAN_CHLOR_A_OC',0.0,'AMEAN_CHLOR_A_OC',0.0,'SUM_CHLOR_A_OC',0.0,'VAR_CHLOR_A_OC',0.0,'STD_CHLOR_A_OC',0.0,'GSTD_CHLOR_A_OC',0.0,'ASTD_CHLOR_A_OC',0.0,'CV_CHLOR_A_OC',0.0))     
    CDATA = STRUCT_CONCAT(CDATA,TEMP)
    TEMP_TAGS = TAG_NAMES(TEMP)
    TAGS = TAG_NAMES(CDATA)
    FOR T=0, N_ELEMENTS(TEMP_TAGS)-1 DO BEGIN
      TPOS = WHERE(TAGS EQ TEMP_TAGS(T))
      SPOS = WHERE(TAGS EQ REPLACE(TEMP_TAGS(T),'OC','OC4'))
      MPOS = WHERE(TAGS EQ REPLACE(TEMP_TAGS(T),'OC','OC3M'))
      OK = WHERE(CDATA.(SPOS) NE MISSINGS(CDATA.(SPOS)),COUNT)
      IF COUNT GE 1 THEN CDATA[OK].(TPOS) = CDATA[OK].(SPOS)
      OK = WHERE(CDATA.(MPOS) NE MISSINGS(CDATA.(MPOS)),COUNT)
      IF COUNT GE 1 THEN CDATA[OK].(TPOS) = CDATA[OK].(MPOS) 
    ENDFOR  
    OK = WHERE(STRPOS(CDATA.FIRST_NAME_CHLOR_A_OC4,'SEAWIFS') GE 0 OR STRPOS(CDATA.FIRST_NAME_CHLOR_A_PAN,'SEAWIFS'))
    CDATA[OK].SENSOR = 'SEAWIFS'
    OK = WHERE(STRPOS(CDATA.FIRST_NAME_CHLOR_A_OC3M,'MODIS') GE 0 OR STRPOS(CDATA.FIRST_NAME_CHLOR_A_PAN,'MODIS') GE 0)
    CDATA[OK].SENSOR = 'MODIS'
    OK = WHERE(CDATA.PERIOD NE MISSINGS(CDATA.PERIOD))
    CDATA = CDATA[OK]  
    CDATA = CDATA[WHERE(PERIOD_2JD(CDATA.PERIOD) GE DATE_RANGE[0] AND PERIOD_2JD(CDATA.PERIOD) LE DATE_RANGE[1])]
        
    FOR N=0, N_ELEMENTS(CODES)-1 DO BEGIN      
      PNGFILE = FIX_PATH(!S.PROJECTS + 'ECOAP/NAFO/PLOTS/'+PERIODS+'-'+TS_SUB+'-NAFO-TIMESERIES-'+CODES(N)+'.PNG')
      IF GET_MTIME(PNGFILE) GT MAX(GET_MTIME(CFILES)) AND NOT KEYWORD_SET(OVERWRITE) THEN CONTINUE
      W = WINDOW(DIMENSIONS=[1400,1000])
      D = TEXT(0.5,0.96,DATES[0]+'!C'+CODES(N),FONT_SIZE=14,ALIGNMENT=0.5)
      
      AXMON = DATE_AXIS([20200101,20201231],/MONTH,/MID,/FYEAR)      
      AXA = DATE_AXIS([19970101,20130101],/YEAR,/YY)
      AXM = DATE_AXIS([19970101,20131231],/MONTH,STEP=4,MAX_LABELS=70)      
      MYRANGE = LIST([0,3.0],[0,3.0],[0,60],[0,0.3])
      
      TOP    = [0.95, 0.725, 0.5,.275]
      LEFT   = 0.05
      RIGHT  = 0.95
      PLDIF  = 0.17
      SPACE  = 0.05 
      
      PRODS = ['CHLOR_A_OC','CHLOR_A_PAN','PAR','A_CDOM_443_MAN_MLR']
      YTITLE = UNITS(['CHLOR_A','CHLOR_A','PAR','A_CDOM_443'])
      FOR P=0, N_ELEMENTS(PRODS)-1 DO BEGIN
        IF PRODS(P) EQ 'PAR' THEN POS = WHERE(TAGS EQ 'MEAN_'+PRODS(P)) ELSE POS = WHERE(TAGS EQ 'GMEAN_'+PRODS(P))        
        MPOS = [LEFT, TOP(P)-PLDIF,RIGHT, TOP(P)]
        
        OKS = WHERE(CDATA.SENSOR EQ 'SEAWIFS' AND CDATA.PERIOD_CODE EQ PERIODS AND CDATA.SUBAREA_NAME EQ CODES(N))
        OKM = WHERE(CDATA.SENSOR EQ 'MODIS'   AND CDATA.PERIOD_CODE EQ PERIODS AND CDATA.SUBAREA_NAME EQ CODES(N))
        PANS = PLOT(PERIOD_2JD(CDATA(OKS).PERIOD),CDATA(OKS).(POS),XRANGE=AXM.JD,XTICKVALUES=AXM.TICKV,XTICKNAME=AXM.TICKNAME,XMINOR=3,YMINOR=2,XTICKLEN=0.04,YTICKLEN=0.01,YRANGE=MYRANGE(P),POSITION=MPOS,$
                    YTITLE=YTITLE(P),THICK=4,COLOR='RED', BUFFER=BUFFER,/CURRENT)
        PANM = PLOT(PERIOD_2JD(CDATA(OKM).PERIOD),CDATA(OKM).(POS),XRANGE=AXM.JD,YRANGE=MYRANGE(P),YMINOR=2,YTICKLEN=0.01,THICK=2,  COLOR='BLUE',BUFFER=BUFFER,/CURRENT,/OVERPLOT)
        
        STXT = TEXT(0.07,0.93,'SeaWiFS',FONT_SIZE=12,COLOR='RED')
        MTXT = TEXT(0.07,0.91,'MODIS',  FONT_SIZE=12,COLOR='BLUE')
                      
      ENDFOR  
    W.SAVE,PNGFILE,RESOLUTION=300
    W.CLOSE
    ENDFOR    
    STOP        
  ENDIF ; DO_DAILY_COMPARE  

; ********************************************
  IF DO_MONTHLY_MAPS GE 1 THEN BEGIN
; ********************************************
    OVERWRITE = DO_MONTHLY_MAPS GE 2
    
    DATASETS = ['OC-SEAWIFS-MLAC','OC-MODIS-LAC']
    MAXYEAR  = ['2010','2012']
    IMG_DIM  = 100
    SPACE    = 10
    TOP      = 30
    BOT      = 100
    EDGE     = 20    
    FOR D=0, N_ELEMENTS(DATASETS)-1 DO BEGIN
      YEARS = YEAR_RANGE('2004',MAXYEAR(D))
      NROWS = N_ELEMENTS(YEARS)
      XDIM  = (IMG_DIM*12)+(SPACE*11)+(EDGE*2)
      YDIM  = (IMG_DIM*NROWS) + (SPACE*(NROWS-1)) + TOP + BOT
      PRODS = ['CHLOR_A_OC','CHLOR_A_PAN','PAR','A_CDOM_443_MAN_MLR']
      YTITLE = UNITS(['CHLOR_A','CHLOR_A','PAR','A_CDOM_443'])
      FOR P=0, N_ELEMENTS(PRODS)-1 DO BEGIN
        W = WINDOW([XDIM,YDIM])
        
        
      ENDFOR
      
    ENDFOR
    
  ENDIF ;DO_MONTHLY_MAPS 
; ********************************************
  IF DO_NAFO_LANDMASK GE 1 THEN BEGIN
; ********************************************
  
    MAPS   = ['NAFO']
    DO_MAP = [1]
    PX     = ['1024']
    PY     = ['1024']
    PX_OUT = LIST([1024])
    PY_OUT = LIST([1024])
    PAL_36,R,G,B
    FOR NTH =0L, N_ELEMENTS(MAPS)-1 DO BEGIN
      IF DO_MAP[NTH] EQ 0 THEN CONTINUE
      TO_BE_EDITED = !S.IMAGES+'MASK_LAND-'+MAPS[NTH]+'-PXY_'+PX[NTH]+'_'+PY[NTH]+'-TO_BE_EDITED.PNG'
      EDIT_COAST   = !S.IMAGES+'MASK_LAND-'+MAPS[NTH]+'-PXY_'+PX[NTH]+'_'+PY[NTH]+'-FIXED_COAST-TO_BE_EDITED.PNG'
      EDITED       = !S.IMAGES+'MASK_LAND-'+MAPS[NTH]+'-PXY_'+PX[NTH]+'_'+PY[NTH]+'-EDITED.PNG'
      FINAL        = !S.IMAGES+'MASK_LAND-'+MAPS[NTH]+'-PXY_'+PX[NTH]+'_'+PY[NTH]+'.PNG'
      IF FILE_TEST(EDITED) EQ 1 AND FILE_TEST(FINAL) EQ 0 THEN BEGIN
        R[0]=R(255) & G[0]=G(255) & B[0]=B(255)
        R[1]=R(247) & G[1]=G(247) & B[1]=B(247)
        R(2)=R(252) & G(2)=G(252) & B(2)=B(252)
        R(3)=R(253) & G(3)=G(253) & B(3)=B(253)
        R(4)=R(254) & G(4)=G(254) & B(4)=B(254)
      
        IMG = READALL(EDITED)
        OK_LAND  = WHERE(IMG EQ 34)
        OK_COAST = WHERE(IMG EQ 22)
        OK_OCEAN = WHERE(IMG EQ 0)
      
        IMG(OK_LAND)  = 2
        IMG(OK_COAST) = 1
        
        WRITE_PNG,FINAL,IMG,R,G,B  
        _PX_OUT = PX_OUT[NTH]
        _PY_OUT = PY_OUT[NTH]
        FOR P=0, N_ELEMENTS(_PX_OUT)-1 DO BEGIN  
          IMGR = MAP_REMAP(IMG,MAP_IN=MAPS[NTH],MAP_OUT=MAPS[NTH],PX_OUT=_PX_OUT(P),PY_OUT=_PY_OUT(P))
          WRITE_PNG,!S.IMAGES+'MASK_LAND-'+MAPS[NTH]+'-PXY_'+NUM2STR(_PX_OUT(P))+'_'+NUM2STR(_PY_OUT(P))+'.PNG',IMGR,R,G,B
        ENDFOR  
        CONTINUE      
      ENDIF
  
      M = MAPS_SIZE(MAPS[NTH])
      ZWIN,[M.PX,M.PY]
      CALL_PROCEDURE, 'MAP_'+ MAPS[NTH]
      MAP_CONTINENTS,HIRES=1,COLOR=34,COAST=1,/FILL_CONTINENTS
      LAND = TVRD()
      ZWIN
          
      ZWIN,[M.PX,M.PY]
      CALL_PROCEDURE, 'MAP_'+ MAPS[NTH]
      MAP_CONTINENTS,HIRES=1,COLOR=1,COAST=1
      COAST = TVRD()
      ZWIN
      
      OK = WHERE(COAST EQ 1)
      IMG = LAND
      IMG[OK] = 22
      WRITE_PNG,TO_BE_EDITED,IMG,R,G,B
          
      OCEAN = WHERE(IMG EQ 0,COUNT_OCEAN)    
      FOR I = 0L, COUNT_OCEAN-1 DO BEGIN
        BOX = BOX_AROUND(IMG,OCEAN(I),SUBS=SUBS,AROUND=1)        
        OK = WHERE(BOX EQ 34,COUNT) ; FIND LAND PIXELS NEXT TO OCEAN PIXELS
        IF COUNT GE 1 THEN IMG(SUBS[OK]) = 22
      ENDFOR  
      WRITE_PNG,EDIT_COAST,IMG,R,G,B
    ENDFOR  
  ENDIF
  
    
; *******************************************************
  IF DO_NAFO_SUBAREAS GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_NAFO_SUBAREAS GE 2
    
    PAL_36,R,G,B
    
    DIR_IMAGES         = !S.IMAGES
    MAPS               = ['NAFO','LMES']
    DO_MAP             = [1, 0]
    PX_OUT             = ['1024','600']
    PY_OUT             = ['1024','600']
    LME_NAME           = ['','NEWFOUNDLAND_LABRADOR_SHELF']
    LME_CODE           = [0,9]
    
    ECOREGION_FILE     = FIX_PATH(DIR_PROJECTS + 'POLYGONS\') + 'NAFO_Polygons.csv'
    DATA               = READALL(ECOREGION_FILE)
    ECOREGIONS         = WHERE_SETS(DATA.POLYGON_ID)                                  
    ECOREGION_TYPES    = ['NAFO_1','NAFO_2','NAFO_3','NAFO_4','NAFO_5','NAFO_6']   
    ECOREGION_OUTNAMES = ['2J3K','2J3KL','2J3KLNO','3LNO','3M','NS']     
     
    COLORS = [5,6,7,8,9,10]
    DISCOLORS = [1,5,9,12,18,22]
        
    FOR MTH = 0, N_ELEMENTS(MAPS)-1 DO BEGIN
      IF DO_MAP(MTH) EQ 0 THEN CONTINUE
      AMAP = MAPS(MTH)
      IF AMAP EQ 'LMES' THEN MAP_NAME = 'LME_' + LME_NAME(MTH) +'-PXY_' + PX_OUT(MTH) + '_' + PY_OUT(MTH) ELSE MAP_NAME = AMAP +'-PXY_' + PX_OUT(MTH) + '_' + PY_OUT(MTH)
      LANDMASK_FILE      = DIR_IMAGES + 'MASK_LAND-'+MAP_NAME + '.PNG'
      LANDMASK           = READ_LANDMASK(LANDMASK_FILE,/STRUCT)
        
    
      FOR NTH = 0L, N_ELEMENTS(ECOREGIONS)-1 DO BEGIN      
        ECO_SUBS = WHERE_SETS_SUBS(ECOREGIONS[NTH])
        ECODATA  = DATA(ECO_SUBS)
        ECOREGION_TYPE     = ECOREGION_TYPES[NTH]
        ECOREGION_OUTNAME  = ECOREGION_OUTNAMES[NTH] 
        ECOREGION_NAMES    = ECODATA[0].POLYGON_ID
        NICKNAMES          = ECOREGION_TYPE + '_' + ECODATA[UNIQ(ECODATA.PART)].PART          
        EDITFILE = DIR_IMAGES + 'MASK_SUBAREA-'+MAP_NAME+'-'+ECOREGION_TYPE+'_'+ECOREGION_OUTNAME+'-TO_BE_EDITED.PNG' 
        MASKFILE = DIR_IMAGES + 'MASK_SUBAREA-'+MAP_NAME+'-'+ECOREGION_TYPE+'_'+ECOREGION_OUTNAME+'.PNG'
        DISFILE  = DIR_IMAGES + 'MASK_SUBAREA-'+MAP_NAME+'-'+ECOREGION_TYPE+'_'+ECOREGION_OUTNAME+'-DISPLAY.PNG' 
        CSVFILE  = DIR_IMAGES + 'MASK_SUBAREA-'+MAP_NAME+'-'+ECOREGION_TYPE+'_'+ECOREGION_OUTNAME+'.CSV'
        SAVEFILE = DIR_IMAGES + 'MASK_SUBAREA-'+MAP_NAME+'-'+ECOREGION_TYPE+'_'+ECOREGION_OUTNAME+'.SAVE'            
        
        IF FILE_TEST(SAVEFILE) EQ 1 AND NOT KEYWORD_SET(OVERWRITE) THEN CONTINUE
                 
        IMG                = READ_LANDMASK(LANDMASK_FILE)
        OTHER_IMAGE        = IMG          
        ZWIN, IMG      
        IF AMAP EQ 'LMES' THEN MAP_LMES,LME_NAME=LME_NAME(MTH) ELSE CALL_PROCEDURE,'MAP_'+AMAP
        IF FILE_TEST(MASKFILE) EQ 1 AND OVERWRITE EQ 0 THEN BEGIN 
          Q = QUERY_PNG(MASKFILE,S)
          IF S.CHANNELS EQ 4 THEN BEGIN
            PAL_36,RR,GG,BB
            IM_SUBS = READ_PNG(MASKFILE)
            IM_SUBS = IM_SUBS(0:2,*,*)
            IM_SUBS = COLOR_QUAN(IM_SUBS,1,RR,GG,BB)
            OK  = WHERE(IM_SUBS NE 2,COMPLEMENT=COMPLEMENT) ; NOTE: This value may change depending on the file.          
          ENDIF ELSE BEGIN  
            IM_SUBS = READ_PNG(MASKFILE,R,G,B)
            OK = WHERE(IM_SUBS LT MIN(COLORS))          
          ENDELSE
          IM_SUBS[OK] = 0  
          SET = WHERE_SETS(IM_SUBS) & SET = SET[WHERE(SET.VALUE GT 0)]
          CODE = 5
          IMG(LANDMASK.OCEAN) = 36          
          FOR _SET = 0L, N_ELEMENTS(SET)-1 DO BEGIN          
            SUBS = WHERE_SETS_SUBS(SET(_SET))
            IM_SUBS(SUBS) = CODE+_SET
            IMG(SUBS) = DISCOLORS[NTH]
          ENDFOR  
        ENDIF ELSE BEGIN      
          POLYS = WHERE_SETS(ECODATA.PART)
          ECOREGION_NAMES = POLYS.VALUE
          ;COLORS = INDGEN(N_ELEMENTS(POLYS))+5
          FOR PTH =0, N_ELEMENTS(POLYS)-1 DO BEGIN
            SUBS = WHERE_SETS_SUBS(POLYS(PTH))
            POLYSET = ECODATA(SUBS)            
            LON  = FLOAT([POLYSET.LONGITUDE,POLYSET[0].LONGITUDE])      
            LAT  = FLOAT([POLYSET.LATITUDE, POLYSET[0].LATITUDE])
            IM   = MAP_DEG2IMAGE(IMG,LON,LAT, X=x, Y=y,AROUND=0) & POLYFILL, X, Y, COLOR=COLORS(PTH), /DEVICE
          ENDFOR                  
        IM_SUBS = TVRD()
        ENDELSE      
        IM=MAP_ADD_BATHY(OTHER_IMAGE,BATHS=[1000],COLOR=[12],MAP=AMAP,LME_NAME=LME_NAME) & TV,IM & IM_BATH=TVRD()  
        ZWIN
       
        OK_IMAGE = WHERE(IMG NE 0) & IM_SUBS(OK_IMAGE) = IMG(OK_IMAGE) & MASK = IM_SUBS            
        OK = WHERE(IM_SUBS NE 0)   & IMG[OK] = IM_SUBS[OK]
        OK = WHERE(IM_BATH  EQ 12 OR IM_BATH  EQ 22) & IMG[OK]   = 34  & IM_SUBS[OK] = 34     
        IMG(LANDMASK.LAND)  = 32
        IMG(LANDMASK.COAST) = 0
        OK = WHERE(MASK NE 0) & IM_SUBS[OK] = MASK[OK]  
        IM_SUBS(LANDMASK.LAND) = LANDMASK.LAND_CODE
        IM_SUBS(LANDMASK.COAST) = LANDMASK.COAST_CODE
        
    
        IF FILE_TEST(MASKFILE) EQ 0 OR OVERWRITE EQ 1 THEN WRITE_PNG, EDITFILE, IM_SUBS, R,G,B 
        WRITE_PNG, DISFILE, IMG, R,G,B
        
        STRUCT1=CREATE_STRUCT('SUBAREA_CODE','','SUBAREA_NAME','','NICKNAME','')
        STRUCT1=REPLICATE(STRUCT1,3)
        STRUCT1[0].SUBAREA_CODE ='0'  & STRUCT1[0].SUBAREA_NAME = 'OCEAN'     & STRUCT1[0].NICKNAME='OCEAN'
        STRUCT1[1].SUBAREA_CODE ='1'  & STRUCT1[1].SUBAREA_NAME = 'COAST'     & STRUCT1[1].NICKNAME='COAST'
        STRUCT1(2).SUBAREA_CODE ='2'  & STRUCT1(2).SUBAREA_NAME = 'LAND'      & STRUCT1(2).NICKNAME='LAND'
    
        STRUCT=CREATE_STRUCT('SUBAREA_CODE','','SUBAREA_NAME','','NICKNAME','')
        STRUCT=REPLICATE(STRUCT,N_ELEMENTS(NICKNAMES))
        STRUCT.SUBAREA_CODE = NUM2STR(INDGEN(N_ELEMENTS(NICKNAMES))+5)
        STRUCT.SUBAREA_NAME = STRUPCASE(ECOREGION_NAMES)
        STRUCT.NICKNAME     = STRUPCASE(NICKNAMES)
    
        CSV = STRUCT_CONCAT(STRUCT1,STRUCT)
    
    ;     ===> Write the Struct to a csv
        STRUCT_2CSV,CSVFILE,CSV
        OK=WHERE(CSV.SUBAREA_CODE NE MISSINGS(CSV.SUBAREA_CODE))
        SUBAREA_CODE= CSV[OK].SUBAREA_CODE
        SUBAREA_NAME= CSV[OK].SUBAREA_NAME
          
        IF FILE_TEST(MASKFILE) EQ 0 THEN CONTINUE 
        STRUCT_SD_WRITE,SAVEFILE, IMAGE=IM_SUBS, PROD='SUBAREA',  MAP=MAP,SUBAREA_CODE=SUBAREA_CODE,SUBAREA_NAME=subarea_name,$
          SCALING='',NOTES='MASK_SUBAREA',SLOPE=[],INTERCEPT=[],INFILE=ECOREGION_FILE, OVERWRITE=OVERWRITE, ERROR=ERROR
      ENDFOR   
    ENDFOR  

  ENDIF   ; DO_NAFO_SUBAREAS
 
 
; ********************************************
  IF DO_NAFO_OUTLINES GE 1 THEN BEGIN
; ********************************************
    PAL_SW3,R,G,B
    
    MAP_OUT = 'NAFO'
    PX = 1024
    PY = 1024
      
    LAND = READ_LANDMASK(MAP=MAP_OUT,PX=PX,PY=PY,/STRUCT)
    DIR_OUT = FIX_PATH(!S.PROJECTS + 'ECOAP\NAFO\POLYGONS\OUTLINES\') & DIR_TEST,DIR_OUT
    
    REGION = ['NAFO_1_2J3K','NAFO_2_2J3KL','NAFO_3_2J3KLNO','NAFO_4_3LNO','NAFO_5_3M','NAFO_6_NS']
    FOR N=0, N_ELEMENTS(REGION)-1 DO BEGIN
      AREGION = REGION(N)
      FILE    = !S.IMAGES + 'MASK_SUBAREA-NAFO-PXY_1024_1024-'+AREGION+'.SAVE'
      MASK    = STRUCT_SD_READ(FILE, STRUCT=STRUCT)        
      OK      = WHERE(STRUCT.SUBAREA_NAME NE 'OCEAN' AND STRUCT.SUBAREA_NAME NE 'COAST' AND STRUCT.SUBAREA_NAME NE 'LAND')
      CODES   = STRUCT.SUBAREA_CODE[OK]
      AREA    = MASK & AREA(*,*) = 254 & IMG = AREA
      FOR NTH = 0L, N_ELEMENTS(CODES)-1 DO BEGIN
        OK_SUBAREA = WHERE(MASK EQ CODES[NTH],COUNT_SUBAREA)
        AREA(OK_SUBAREA) = CODES[NTH]
      ENDFOR
      AREA(LAND.LAND) = 254
      AREA(LAND.COAST) = 254
      OUTLINE = IMAGE_OUTLINE(AREA)
      OUTLINE=REFORM(OUTLINE,PX,PY)
      OK_OUTLINE = WHERE(OUTLINE EQ 1)
      OK_OTHER   = WHERE(OUTLINE EQ 0)
      OUTLINE(OK_OUTLINE) = 250
      IMG(OK_OUTLINE) = 0
      IMG(LAND.LAND) = 252
      IMG(LAND.COAST) = 0
      IF N EQ 0 THEN COMBO = IMG ELSE COMBO(OK_OUTLINE) = 0
      IF N EQ 0 THEN LINE_COMBO = OUTLINE ELSE LINE_COMBO(OK_OUTLINE) = 250
      WRITE_PNG, !S.IMAGES + 'MASK_SUBAREA-'+MAP_OUT+'-PXY_'+NUM2STR(PX)+'_'+NUM2STR(PY)+'-'+AREGION+'-OUTLINE.PNG',OUTLINE,R,G,B
      WRITE_PNG, !S.IMAGES + 'MASK_SUBAREA-'+MAP_OUT+'-PXY_'+NUM2STR(PX)+'_'+NUM2STR(PY)+'-'+AREGION+'-OUTLINE_LAND.PNG',IMG,R,G,B
    ENDFOR      
      
  ENDIF ; DO_NAFO_OUTLINES
 
; ********************************************
  IF DO_NAFO_BOUNDARIES GE 1 THEN BEGIN
; ********************************************
    PAL_SW3_REVERSE,R,G,B
  
    MAPS               = ['NAFO','LMES']
    DO_MAP             = [1, 0]
    PX_OUT             = ['1024','600']
    PY_OUT             = ['1024','600']
    LME_NAME           = ['','NEWFOUNDLAND_LABRADOR_SHELF']
    LME_CODE           = [0,9]
    
    DIR_OUT = FIX_PATH(DIR_PROJECTS)
    
    ECOREGION_FILE     = FIX_PATH(DIR_PROJECTS + 'POLYGONS\') + 'NAFO_Polygons.csv'
    DATA               = READALL(ECOREGION_FILE)
    ECOREGIONS         = WHERE_SETS(DATA.POLYGON_ID)                                  
    
    SUBAREA_NAMES = 'NAFO_'+['1_2J3K','2_2J3KL','3_2J3KLNO','4_3LNO','5_3M']   
    SUBAREA_CODE =          ['5',     '5',      '5',        '5',     '5']     
     
    COLORS = [5,6,7,8,9,10]
    DISCOLORS = [1,5,9,12,18,22]
        
    FOR MTH = 0, N_ELEMENTS(MAPS)-1 DO BEGIN
      IF DO_MAP(MTH) EQ 0 THEN CONTINUE
      IF MAPS(MTH) EQ 'LMES' THEN AMAP = 'LME_' + LME_NAME(MTH) ELSE AMAP = MAPS(MTH)
      MAP_NAME = AMAP +'-PXY_' + PX_OUT(MTH) + '_' + PY_OUT(MTH)
      LANDMASK_FILE      = !S.IMAGES + 'MASK_LAND-'+MAP_NAME + '.PNG'
      LAND               = READ_LANDMASK(LANDMASK_FILE,/STRUCT)
      LL=MAPS_2LONLAT(AMAP,PX=FIX(PX_OUT(MTH)),PY=FIX(PY_OUT(MTH)))    
    
      FOR NTH = 0L, N_ELEMENTS(SUBAREA_NAMES)-1 DO BEGIN
        MASK_FILE = !S.IMAGES + 'MASK_SUBAREA-'+MAP_NAME+'-'+SUBAREA_NAMES[NTH]+'.SAVE'
        MASK = STRUCT_SD_READ(MASK_FILE,STRUCT=STRUCT)
        BLANK = MASK & BLANK(*,*) = 254
        OK_SUBAREA = WHERE(MASK EQ SUBAREA_CODE[NTH],COUNT_SUBAREA)
        BLANK(OK_SUBAREA) = 1
  
        LL_STRUCT=STRUCT_2MISSINGS(CREATE_STRUCT('LAT',0.0,'LON',0.0,'SUBAREA_NAME','','SUBAREA_CODE',0L))
        LL_STRUCT=REPLICATE(LL_STRUCT,COUNT_SUBAREA)
        LL_STRUCT.LAT=LL.LAT(OK_SUBAREA)
        LL_STRUCT.LON=LL.LON(OK_SUBAREA)
        LL_STRUCT.(2)=SUBAREA_NAMES[NTH]
        LL_STRUCT.(3)=SUBAREA_CODE[NTH]
        CSVFILE = DIR_OUT + 'MASK_SUBAREA-'+MAP_NAME+'-'+SUBAREA_NAMES[NTH] + '-SUBAREA.CSV'
        STRUCT_2CSV,CSVFILE,LL_STRUCT
  
        OUTLINE = IMAGE_OUTLINE(BLANK)
        OUTLINE=REFORM(OUTLINE,FIX(PX_OUT(MTH)),FIX(PY_OUT(MTH)))
        OK_GOOD=WHERE(OUTLINE NE 0,COUNT_GOOD)
        LL_STRUCT=STRUCT_2MISSINGS(CREATE_STRUCT('LAT',0.0,'LON',0.0,'SUBAREA_NAME','','SUBAREA_CODE',0L))
        LL_STRUCT=REPLICATE(LL_STRUCT,COUNT_GOOD)
        LL_STRUCT.LAT=LL.LAT(OK_GOOD)
        LL_STRUCT.LON=LL.LON(OK_GOOD)
        LL_STRUCT.(2)=SUBAREA_NAMES[NTH]
        LL_STRUCT.(3)=SUBAREA_CODE[NTH]
        CSVFILE = DIR_OUT + 'MASK_SUBAREA-'+MAP_NAME+'-'+SUBAREA_NAMES[NTH] + '-OUTLINE.CSV'
        STRUCT_2CSV,CSVFILE,LL_STRUCT
        BLANK(LAND.LAND) = 252
        BLANK(LAND.COAST) = 0
        OK = WHERE(OUTLINE GT 0)
        BLANK[OK] = 255
        WRITE_PNG,DIR_OUT + 'MASK_SUBAREA-'+MAP_NAME+'-'+SUBAREA_NAMES[NTH] + '.PNG',BLANK,R,G,B
      ENDFOR
    ENDFOR  
 STOP
  ENDIF ; DO_NAFO_BOUNDARIES
 
 
; *******************************************************
  IF DO_NAFO_TS_SUBAREAS GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_NAFO_TS_SUBAREAS GE 2
    
    PERIODS       = ['W','MM','M','MONTH','A','ANNUAL']        
    MAP = 'NAFO'
 
    DIR_SUBAREA   = !S.IMAGES
    SUBAREAS      = 'BOXES';['NAFO_1_2J3K','NAFO_2_2J3KL','NAFO_3_2J3KLNO','NAFO_4_3LNO','NAFO_5_3M','NAFO_6_NS']
    SUBAREA_FILES = !S.SUBAREAS + 'MASK_SUBAREA-NAFO-PXY_1024_1024-'+SUBAREAS+'.SAVE'
    
    PRODS         = ['CHLOR_A-OC4',    'CHLOR_A-PAN',    'SST',        'PPD-VGPM2',       'PPD-OPAL']
    DATASETS      = ['OC-SEAWIFS-MLAC','OC-SEAWIFS-MLAC','SST-AVHRR-4','PP-SEAWIFS-AVHRR','PP-SEAWIFS=AVHRR']
    DIR_OUT  = FIX_PATH(DIR_PROJECTS + 'SUBAREAS\')
    DIR_TEST,DIR_OUT
    FOR SUB = 0L, N_ELEMENTS(SUBAREA_FILES)-1 DO BEGIN
      SUBAREA_FILE = SUBAREA_FILES(SUB)
      SUBAREA = STRUCT_SD_READ(SUBAREA_FILE,STRUCT=STRUCT)
      SUBAREA_CODE = FIX(STRUCT.SUBAREA_CODE(WHERE(STRUCT.SUBAREA_CODE GE 5)))
     
      SAVEFILES = []
      FOR PTH = 0L, N_ELEMENTS(PRODS)-1 DO BEGIN
        APROD    = PRODS(PTH)
        DATASET  = DATASETS(PTH)      
        FOR PER = 0, N_ELEMENTS(PERIODS)-1 DO BEGIN
          IF PERIODS(PER) EQ 'D' THEN DIR_DATA  = FIX_PATH(DIR_DATASETS + DATASET + SL + MAP + '\SAVE\' +APROD + SL) $
                                 ELSE DIR_DATA  = FIX_PATH(DIR_DATASETS + DATASET + SL + MAP + '\STATS\'+APROD + SL)
          IF PERIODS(PER) EQ 'D' THEN SAVEFILES = [SAVEFILES,FILE_SEARCH(DIR_DATA+PERIODS(PER)+'_*'+APROD+'*.SAVE')] $
                                 ELSE SAVEFILES = [SAVEFILES,FILE_SEARCH(DIR_DATA+PERIODS(PER)+'_*'+APROD+'*-MEAN.SAVE')] 
        ENDFOR          
      ENDFOR
      SAVEFILES = SAVEFILES[WHERE(SAVEFILES NE '')] & IF SAVEFILES[0] EQ '' THEN CONTINUE
      TS_SUBAREAS, SAVEFILES,SUBAREA_FILE=SUBAREA_FILE, SUBAREA_CODES=SUBAREA_CODE,DIR_OUT=DIR_OUT,/CSV,OVERWRITE=overwrite      
    ENDFOR
  ENDIF ; DO_NAFO_TS_SUBAREAS



; *******************************************************
  IF DO_NAFO_COMPOSITES GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_NAFO_COMPOSITES GE 2
    
    BUFFER = 0
    
    DIR       = DIR_PROJECTS + 'NAFO' + SL + 'STATS' + SL    
    DIR_PLOTS = DIR_PROJECTS + 'NAFO' + SL + 'PLOTS' + SL
    
    
    ADATA = STRUCT_SD_READ(DIR + 'ANNUAL_1998_2010-SEAWIFS-R2010-MLAC-NAFO-CHLOR_A-PAN-MEAN.SAVE',STRUCT=ASTRUCT)
    AIMG  = STRUCT_SD_2IMAGE_NG(ASTRUCT ,/ADD_LAND,/ADD_COAST,SPECIAL_SCALE='MEDIUM',/ADD_COLORBAR,BUFFER=BUFFER,COLORBAR_TITLE='Mean Daily '+ UNITS('CHLOROPHYLL'))
    AIMG.SAVE ,DIR_PLOTS + 'ANNUAL_1998_2010-SEAWIFS-R2010-MLAC-NAFO-CHLOR_A-PAN-MEAN.PNG' ,RESOLUTION=300,BIT_DEPTH=2 & AIMG.CLOSE
    
    
    CFILE  = FILE_SEARCH(DIR + 'MM_*CHLOR_A-OC*MEAN*SAVE')  & CPNG  = REPLACE(CFILE ,[DIR,'.SAVE'],[DIR_PLOTS,'.PNG'])
    CSFILE = FILE_SEARCH(DIR + 'MM_*CHLOR_A-OC*SPAN*SAVE')  & CSPNG = REPLACE(CSFILE,[DIR,'.SAVE'],[DIR_PLOTS,'.PNG'])
    PFILE  = FILE_SEARCH(DIR + 'MM_*PPD-VGPM2*MEAN*SAVE')   & PPNG  = REPLACE(PFILE ,[DIR,'.SAVE'],[DIR_PLOTS,'.PNG'])
    PSFILE = FILE_SEARCH(DIR + 'MM_*PPD-VGPM2*SPAN*SAVE')   & PSPNG = REPLACE(PSFILE,[DIR,'.SAVE'],[DIR_PLOTS,'.PNG']) 
    TFILE  = FILE_SEARCH(DIR + 'MM_*SST*MEAN.SAVE')         & TPNG  = REPLACE(TFILE ,[DIR,'.SAVE'],[DIR_PLOTS,'.PNG'])
    TSFILE = FILE_SEARCH(DIR + 'MM_*SST*SPAN.SAVE')         & TSPNG = REPLACE(TSFILE,[DIR,'.SAVE'],[DIR_PLOTS,'.PNG'])
    
    CDATA   = STRUCT_SD_READ(CFILE, STRUCT=CSTRUCT, SUBS=CSUBS)
    CSDATA  = STRUCT_SD_READ(CSFILE,STRUCT=CSSTRUCT,SUBS=CSSUBS)
    PDATA   = STRUCT_SD_READ(PFILE, STRUCT=PSTRUCT, SUBS=PSUBS)
    PSDATA  = STRUCT_SD_READ(PSFILE,STRUCT=PSSTRUCT,SUBS=PSSUBS)
    TDATA   = STRUCT_SD_READ(TFILE, STRUCT=TSTRUCT, SUBS=TSUBS)
    TSDATA  = STRUCT_SD_READ(TSFILE,STRUCT=TSSTRUCT,SUBS=TSSUBS)
   
   
    CIMAGE  = STRUCT_SD_2IMAGE_NG(CSTRUCT ,/ADD_LAND,/ADD_COAST,/ADD_BATHY,BATHS=1000,SPECIAL_SCALE='MEDIUM',/ADD_COLORBAR,BUFFER=BUFFER,COLORBAR_TITLE='Mean Daily '+ UNITS('CHLOROPHYLL'))  
    CSIMAGE = STRUCT_SD_2IMAGE_NG(CSSTRUCT,/ADD_LAND,/ADD_COAST,/ADD_BATHY,BATHS=1000,SPECIAL_SCALE='100'    ,/ADD_COLORBAR,BUFFER=BUFFER,COLORBAR_TITLE=UNITS('CHLOROPHYLL',/NO_UNIT)+' Span (ratio)')  
    PIMAGE  = STRUCT_SD_2IMAGE_NG(PSTRUCT ,/ADD_LAND,/ADD_COAST,/ADD_BATHY,BATHS=1000,SPECIAL_SCALE='MID'   ,/ADD_COLORBAR,BUFFER=BUFFER,COLORBAR_TITLE='Mean Daily !C'+ UNITS('PRIMARY_PRODUCTION'))
    PPIMAGE = STRUCT_SD_2IMAGE_NG(PSSTRUCT,/ADD_LAND,/ADD_COAST,/ADD_BATHY,BATHS=1000,SPECIAL_SCALE='100'    ,/ADD_COLORBAR,BUFFER=BUFFER,COLORBAR_TITLE='Primary Production Span (ratio)')
    TIMAGE  = STRUCT_SD_2IMAGE_NG(TSTRUCT ,/ADD_LAND,/ADD_COAST,/ADD_BATHY,BATHS=1000,SPECIAL_SCALE='LOW'   ,/ADD_COLORBAR,BUFFER=BUFFER,COLORBAR_TITLE='Mean Daily '+ UNITS('SST'))
    TPIMAGE = STRUCT_SD_2IMAGE_NG(TSSTRUCT,/ADD_LAND,/ADD_COAST,/ADD_BATHY,BATHS=1000,SPECIAL_SCALE='30'    ,/ADD_COLORBAR,BUFFER=BUFFER,COLORBAR_TITLE='Temperature Span ' + UNITS('SST',/NO_NAME))
    
    CIMAGE.SAVE ,CPNG ,RESOLUTION=200,BIT_DEPTH=2 & CIMAGE.CLOSE
    CSIMAGE.SAVE,CSPNG,RESOLUTION=200,BIT_DEPTH=2 & CSIMAGE.CLOSE
    PIMAGE.SAVE ,PPNG ,RESOLUTION=200,BIT_DEPTH=2 & PIMAGE.CLOSE
    PPIMAGE.SAVE,PSPNG,RESOLUTION=200,BIT_DEPTH=2 & PPIMAGE.CLOSE
    TIMAGE.SAVE ,TPNG ,RESOLUTION=200,BIT_DEPTH=2 & TIMAGE.CLOSE
    TPIMAGE.SAVE,TSPNG,RESOLUTION=200,BIT_DEPTH=2 & TPIMAGE.CLOSE
    
    W   = WINDOW(DIMENSIONS=[1024,1536],LAYOUT=[2,3,0],MARGIN=0,/BUFFER)
    CI  = IMAGE(READALL(CPNG), LAYOUT=[2,3,1],/CURRENT,MARGIN=0)
    CSI = IMAGE(READALL(CSPNG),LAYOUT=[2,3,2],/CURRENT,MARGIN=0)   
    PI  = IMAGE(READALL(PPNG), LAYOUT=[2,3,3],/CURRENT,MARGIN=0)
    PSI = IMAGE(READALL(PSPNG),LAYOUT=[2,3,4],/CURRENT,MARGIN=0)   
    TI  = IMAGE(READALL(TPNG), LAYOUT=[2,3,3],/CURRENT,MARGIN=0)
    TSI = IMAGE(READALL(TSPNG),LAYOUT=[2,3,4],/CURRENT,MARGIN=0)
    W.SAVE, DIR_PLOTS + 'CHLOR_A-PP-SST-MEAN-SPAN.PNG',RESOLUTION=300,BIT_DEPTH=2 & W.CLOSE
    
    W   = WINDOW(DIMENSIONS=[512,1024],LAYOUT=[1,2,0],MARGIN=0,/BUFFER)
    CI  = IMAGE(READALL(CPNG), LAYOUT=[1,2,1],/CURRENT,MARGIN=0)
    CSI = IMAGE(READALL(CSPNG),LAYOUT=[1,2,2],/CURRENT,MARGIN=0)   
    W.SAVE, DIR_PLOTS + 'CHLOR_A-MEAN-SPAN.PNG',RESOLUTION=300,BIT_DEPTH=2 & W.CLOSE
    W   = WINDOW(DIMENSIONS=[512,1024],LAYOUT=[1,2,0],MARGIN=0,/BUFFER)
    PI  = IMAGE(READALL(PPNG), LAYOUT=[1,2,1],/CURRENT,MARGIN=0)
    PSI = IMAGE(READALL(PSPNG),LAYOUT=[1,2,2],/CURRENT,MARGIN=0)   
    W.SAVE, DIR_PLOTS + 'PP-MEAN-SPAN.PNG',RESOLUTION=300,BIT_DEPTH=2 & W.CLOSE
    W   = WINDOW(DIMENSIONS=[512,1024],LAYOUT=[1,2,0],MARGIN=0,/BUFFER)
    TI  = IMAGE(READALL(TPNG), LAYOUT=[1,2,1],/CURRENT,MARGIN=0)
    TSI = IMAGE(READALL(TSPNG),LAYOUT=[1,2,2],/CURRENT,MARGIN=0)   
    W.SAVE, DIR_PLOTS + 'PP-MEAN-SPAN.PNG',RESOLUTION=300,BIT_DEPTH=2 & W.CLOSE
 
  ENDIF ; DO_NAFO_COMPOSITES


; *******************************************************
  IF DO_POLY_PLOTS GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_POLY_PLOTS GE 2
    
    SL = DELIMITER(/PATH)
    
    DATE_RANGE = DATE_2JD(['19980101','20071231'])
    SUBAREAS   = ['NAFO_1_2J3K','NAFO_2_2J3KL','NAFO_3_2J3KLNO','NAFO_4_3LNO','NAFO_5_3M','NAFO_6_NS']
    TITLES   = ['NAFO_1_2J3K','NAFO_2_2J3KL','NAFO_3_2J3KLNO','NAFO_4_3LNO','NAFO_5_3M','NAFO_6_NS']
    CODES    = ['2J3K','2J3KL','2J3KLNO','3LNO','3M'];'NS'
    PDATASET = ['PP-SEAWIFS_PAN-AVHRR-MLAC']
    CDATASET = ['OC-SEAWIFS-MLAC']
    SUBPER   = ['A_ANNUAL_M_MANNUAL_MONTH','D']
    DO_PER   = [0,0,0,REPLICATE(1,10)]
    PERIODS  = ['D_2005','MONTH','A_','M_'+NUM2STR(INDGEN(10)+1998)]
    OUTPER   = ['D_2005','MONTH','A','M_'+NUM2STR(INDGEN(10)+1998)]
    PERSTR   = [6,5,2,REPLICATE(6,N_ELEMENTS(PERIODS)-3)]    
    DATES    = ['Daily (2005)','Climatology (1998-2007)','Annual Mean (1998-2007)',NUM2STR(INDGEN(10)+1998)]
        
    PY = [0,100]        
    WIDTH = 6
    
    PFILES = [] & CFILES = []
    FOR N=0, N_ELEMENTS(SUBPER)-1 DO BEGIN
      FOR S=0, N_ELEMENTS(SUBAREAS)-1 DO PFILES = [PFILES,FILE_SEARCH(!S.DATASETS+PDATASET+SL+'NAFO'+SL+'TS_SUBAREAS'+SL+SUBPER(N)+'*MASK_SUBAREA-NAFO-PXY_1024_1024-'+SUBAREAS(S)+'*-MULTI_PRODS.SAVE')]
      FOR S=0, N_ELEMENTS(SUBAREAS)-1 DO CFILES = [CFILES,FILE_SEARCH(!S.DATASETS+CDATASET+SL+'NAFO'+SL+'TS_SUBAREAS'+SL+SUBPER(N)+'*MASK_SUBAREA-NAFO-PXY_1024_1024-'+SUBAREAS(S)+'*-MULTI_PRODS.SAVE')]
    ENDFOR      
    CFILES = CFILES[WHERE(CFILES NE '')]
    PFILES = PFILES[WHERE(PFILES NE '')]
    
    PDATA = IDL_RESTORE(PFILES[0])
    CDATA = IDL_RESTORE(CFILES[0])      
    FOR S=1, N_ELEMENTS(PFILES)-1 DO PDATA = STRUCT_CONCAT(PDATA,IDL_RESTORE(PFILES(S)))
    FOR S=1, N_ELEMENTS(CFILES)-1 DO CDATA = STRUCT_CONCAT(CDATA,IDL_RESTORE(CFILES(S)))
    COMBO = STRUCT_JOIN(CDATA, PDATA, TAGNAMES=['PERIOD','PERIOD_CODE','MASK','SUBAREA_CODE','SUBAREA_NAME','N_SUBAREA'])    
    TAGS = TAG_NAMES(COMBO)
    CPOSC = WHERE(TAGS EQ 'MEAN_TCHL_A_PAN')
    DPOSC = WHERE(TAGS EQ 'MEAN_DIATOM_PAN')
    PPOSV = WHERE(TAGS EQ 'MEAN_PPD_VGPM2')
    PPOSO = WHERE(TAGS EQ 'MEAN_PPD_OPAL') 
    DPOSV = WHERE(TAGS EQ 'MEAN_MICROPP_MARMAP_PAN_VGPM2')
    DPOSO = WHERE(TAGS EQ 'MEAN_MICROPP_MARMAP_PAN_OPAL')
    
    FOR PTH =0, N_ELEMENTS(PERIODS)-1 DO BEGIN  
      IF DO_PER(PTH) EQ 0 THEN CONTINUE
      PNGFILE = FIX_PATH(!S.PROJECTS + 'ECOAP/NAFO/PLOTS/' + OUTPER(PTH)+'-NAFO-SIZE_CLASS_PERCENTAGES-WITH_PHYTO.PNG')
      IF GET_MTIME(PNGFILE) GT MAX(GET_MTIME([PFILES,CFILES])) AND NOT KEYWORD_SET(OVERWRITE) THEN CONTINUE
      MDATA = COMBO[WHERE(STRMID(COMBO.PERIOD,0,PERSTR(PTH)) EQ PERIODS(PTH))]
      IF PERIODS(PTH) EQ 'A_' THEN MDATA = MDATA[WHERE(PERIOD_2JD(MDATA.PERIOD) GE DATE_RANGE[0] AND PERIOD_2JD(MDATA.PERIOD) LE DATE_RANGE[1])]
      AX = DATE_AXIS([20200101,20201231],/MONTH,/MID,/FYEAR)
      XRANGE = DATE_2JD([20200101,20201231])
      
      IF PERIODS(PTH) EQ 'A_' THEN BEGIN
        AX = DATE_AXIS([19980101,20070101],/YEAR,/YY)
        XRANGE = DATE_2JD([19980101,20070107])
      ENDIF
      
      W = WINDOW(DIMENSIONS=[1600,1040])
      D = TEXT(0.5,0.98,DATES(PTH),FONT_SIZE=14,ALIGNMENT=0.5)
      COUNTER = 1
      YPOS  = [0.95,0.77,0.59,0.41,0.23]
      YDIF  = 0.14
      XDIF  = 0.17  
      XPOS0 = 0.04
      XPOS1 = 0.285 
      XPOS2 = 0.53
      XPOS3 = 0.775
      FOR N=0, N_ELEMENTS(CODES)-1 DO BEGIN
        LAYOUT = [3,5,1+N]        
        ADATA = MDATA[WHERE(MDATA.SUBAREA_NAME EQ CODES(N) AND MDATA.(WHERE(TAGS EQ 'FIRST_NAME_CHLOR_A_PAN')) NE '')] & ADATA = ADATA[SORT(DATE_2DOY(PERIOD_2DATE(ADATA.PERIOD)))]
        VDATA = MDATA[WHERE(MDATA.SUBAREA_NAME EQ CODES(N) AND MDATA.(WHERE(TAGS EQ 'FIRST_NAME_PPD_VGPM2')) NE '')]   & VDATA = VDATA[SORT(DATE_2DOY(PERIOD_2DATE(VDATA.PERIOD)))]
        ODATA = MDATA[WHERE(MDATA.SUBAREA_NAME EQ CODES(N) AND MDATA.(WHERE(TAGS EQ 'FIRST_NAME_PPD_OPAL')) NE '')]    & ODATA = ODATA[SORT(DATE_2DOY(PERIOD_2DATE(ODATA.PERIOD)))]
        
        DGROUPS = ['DIATOM', 'DINOFLAGELLATE','BROWN_ALGAE','GREEN_ALGAE','CRYPTOPHYTE','PICO']
        DCOLORS = ['CRIMSON','BLUE',   'ORANGE','MEDIUM_AQUAMARINE','YELLOW',    'AQUA']
        LGD     = ['Diatoms','Dinoflagellates','Brown Algae','Green Algae','Cryptophytes','Picoplankton']  
        CGROUPS = ['MICRO','NANO','PICO']
        CCOLORS = ['YELLOW','MEDIUM_BLUE','ORANGE_RED']
        PGROUPS = ['MICRO','NANOPICO']
        PCOLORS = ['YELLOW','MEDIUM_AQUAMARINE']
        MARGIN  = [0.15,0.15,0.15,0.2]
        IF PERIODS(PTH) EQ 'A_' THEN CYRANGE = [0.2,1.0] ELSE CYRANGE = [0,1.4] 
        IF PERIODS(PTH) EQ 'A_' THEN PYRANGE = [0.0,0.8] ELSE PYRANGE = [0,1.2]
        
        IF N_ELEMENTS(ADATA) LE 1 THEN GOTO, SKIP_CHL
        XDATES = JD_ADD(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(ADATA.PERIOD))),14,/DAY)
        IF PERIODS(PTH) EQ 'A_' THEN XDATES = PERIOD_2JD(ADATA.PERIOD)
        
        BOTTOM = 0
        PER1 = REPLICATE(0,N_ELEMENTS(XDATES))    
        TOT = ADATA.MEAN_DIATOM_PAN+ADATA.MEAN_DINOFLAGELLATE_PAN+ADATA.MEAN_BROWN_ALGAE_PAN+ADATA.MEAN_GREEN_ALGAE_PAN+ADATA.MEAN_CRYPTOPHYTE_PAN+ADATA.MEAN_PICO_PAN
        DIATOM = ADATA.(DPOSC)
        FOR NTH = 0L, N_ELEMENTS(DGROUPS)-1 DO BEGIN
          GROUP = DGROUPS[NTH]
          POS = WHERE(TAGS EQ 'MEAN_' + GROUP + '_PAN')
          PER = ADATA.(POS)     
          OK = WHERE(PER EQ MISSINGS(PER),COUNT) & IF COUNT GE 1 THEN PER[OK] = 0.0
          PER = PER/TOT*100
          IF NTH EQ 0 THEN BEGIN              
            IF N EQ 0 THEN TITLE = 'Chlorophyll !8a!N!X!C'+TITLES(N) ELSE TITLE = TITLES(N)
            POSITION = [XPOS0,YPOS(N)-YDIF,XPOS0+XDIF,YPOS(N)]
            P = PLOT(XDATES,REPLICATE(0,N_ELEMENTS(ADATA)),YTITLE='Composition (%)',XTICKVALUE=AX.TICKV,FONT_SIZE=11,TITLE=TITLE,POSITION=POSITION,$
              XMINOR=0,YRANGE=[0,100],AXIS_STYLE=1,XSTYLE=1,XTICKNAME=AX.TICKNAME,/NODATA,BUFFER=BUFFER,MARGIN=MARGIN,LAYOUT=LAYOUT,/CURRENT)
            BOT = REPLICATE(0.0, N_ELEMENTS(ADATA))
            YY = [PER,BOT]
            XX = [XDATES,REVERSE(XDATES)]
            POLY = POLYGON(XX,YY,FILL_COLOR=DCOLORS[NTH],/FILL_BACKGROUND,TARGET=P,/DATA,LINESTYLE=6)
          ENDIF
          PER1 = PER + PER1
          YY = [PER1,REVERSE(BOTTOM)]
          XX = [XDATES,REVERSE(XDATES)]
          IF NTH GE 1 THEN POLY = POLYGON(XX,YY,FILL_COLOR=DCOLORS[NTH],/FILL_BACKGROUND,TARGET=P,/DATA,LINESTYLE=6)
          BOTTOM = PER1
        ENDFOR  
        P2 = PLOT(XDATES,TOT,COLOR='GREY',/CURRENT,AXIS_STYLE=0,XTICKVALUE=AX.TICKV,XRANGE=P.XRANGE,YRANGE=CYRANGE,MARGIN=MARGIN,THICK=3,LINESTYLE=0,LAYOUT=LAYOUT,POSITION=POSITION)  
        PD = PLOT(XDATES,DIATOM,COLOR='GREY',/CURRENT,AXIS_STYLE=0,XTICKVALUE=AX.TICKV,XRANGE=P.XRANGE,YRANGE=CYRANGE,MARGIN=MARGIN,THICK=3,LINESTYLE=2,LAYOUT=LAYOUT,POSITION=POSITION)    
        A1 = AXIS('Y',TARGET=P2,LOCATION=[MAX(P.XRANGE),0,0],TEXTPOS=1,MINOR=2,TICKFONT_SIZE=11,TEXT_COLOR='BLACK',TICKDIR=1,TITLE=UNITS('CHLOR_A',/NO_NAME),TICKLEN=0.05,YRANGE=CYRANGE) ;AXIS,YAXIS=1,YRANGE=[0,300],/SAVE, YTITLE=YTITLE2,CHARSIZE=CHARSIZE,COLOR=0
        A2 = AXIS('X',TARGET=P,LOCATION=[MIN(P.XRANGE),100,0],MAJOR=0,MINOR=0,COLOR='BLACK')
        
        BOTTOM = 0
        PER1 = REPLICATE(0,N_ELEMENTS(XDATES))    
        TOT = ADATA.MEAN_MICRO_PAN+ADATA.MEAN_NANO_PAN+ADATA.MEAN_PICO_PAN 
        FOR NTH = 0L, N_ELEMENTS(CGROUPS)-1 DO BEGIN
          GROUP = CGROUPS[NTH]
          POS = WHERE(TAGS EQ 'MEAN_' + GROUP + '_PAN')
          PER = ADATA.(POS)      
          OK = WHERE(PER EQ MISSINGS(PER),COUNT) & IF COUNT GE 1 THEN PER[OK] = 0.0
          PER = PER/TOT*100
          IF NTH EQ 0 THEN BEGIN              
            IF N EQ 0 THEN TITLE = 'Chlorophyll !8a!N!X!C'+TITLES(N) ELSE TITLE = TITLES(N)
            POSITION = [XPOS1,YPOS(N)-YDIF,XPOS1+XDIF,YPOS(N)]
            P = PLOT(XDATES,REPLICATE(0,N_ELEMENTS(ADATA)),YTITLE='Composition (%)',XTICKVALUE=AX.TICKV,FONT_SIZE=11,TITLE=TITLE,POSITION=POSITION,$
              XMINOR=0,YRANGE=[0,100],AXIS_STYLE=1,XSTYLE=1,XTICKNAME=AX.TICKNAME,/NODATA,BUFFER=BUFFER,MARGIN=MARGIN,LAYOUT=LAYOUT,/CURRENT)
            BOT = REPLICATE(0, N_ELEMENTS(ADATA))
            YY = [PER,BOT]
            XX = [XDATES,REVERSE(XDATES)]
            POLY = POLYGON(XX,YY,FILL_COLOR=CCOLORS[NTH],/FILL_BACKGROUND,TARGET=P,/DATA,LINESTYLE=6)
          ENDIF
          PER1 = PER + PER1
          YY = [PER1,REVERSE(BOTTOM)]
          XX = [XDATES,REVERSE(XDATES)]
          IF NTH GE 1 THEN POLY = POLYGON(XX,YY,FILL_COLOR=CCOLORS[NTH],/FILL_BACKGROUND,TARGET=P,/DATA,LINESTYLE=6)
          BOTTOM = PER1
        ENDFOR  
        P2 = PLOT(XDATES,TOT,COLOR='GREY',/CURRENT,AXIS_STYLE=0,XTICKVALUE=AX.TICKV,XRANGE=P.XRANGE,YRANGE=CYRANGE,MARGIN=MARGIN,THICK=3,LINESTYLE=0,LAYOUT=LAYOUT,POSITION=POSITION)      
        PD = PLOT(XDATES,DIATOM,COLOR='GREY',/CURRENT,AXIS_STYLE=0,XTICKVALUE=AX.TICKV,XRANGE=P.XRANGE,YRANGE=CYRANGE,MARGIN=MARGIN,THICK=3,LINESTYLE=2,LAYOUT=LAYOUT,POSITION=POSITION)
        A1 = AXIS('Y',TARGET=P2,LOCATION=[MAX(P.XRANGE),0,0],TEXTPOS=1,MINOR=2,TICKFONT_SIZE=11,TEXT_COLOR='BLACK',TICKDIR=1,TITLE=UNITS('CHLOR_A',/NO_NAME),TICKLEN=0.05,YRANGE=CYRANGE) ;AXIS,YAXIS=1,YRANGE=[0,300],/SAVE, YTITLE=YTITLE2,CHARSIZE=CHARSIZE,COLOR=0
        A2 = AXIS('X',TARGET=P,LOCATION=[MIN(P.XRANGE),100,0],MAJOR=0,MINOR=0,COLOR='BLACK')
        SKIP_CHL:
        
        IF N_ELEMENTS(VDATA) LE 1 THEN GOTO, SKIP_VGPM
        XDATES = JD_ADD(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(VDATA.PERIOD))),14,/DAY)        
        IF PERIODS(PTH) EQ 'A_' THEN XDATES = PERIOD_2JD(VDATA.PERIOD)
        BOTTOM = 0
        COUNTER = COUNTER + 1  
        LAYOUT = [3,5,3+N]
        TOT = VDATA.(PPOSV)   
        DIATOM = VDATA.(DPOSV)
        PER1 = REPLICATE(0,N_ELEMENTS(XDATES))    
        FOR NTH = 0L, N_ELEMENTS(PGROUPS)-1 DO BEGIN
          GROUP = PGROUPS[NTH]
          POS = WHERE(TAGS EQ 'MEAN_PPD_' + GROUP + '_PERCENTAGE_MARMAP_PAN_VGPM2')
          PER = VDATA.(POS)      
          OK = WHERE(PER EQ MISSINGS(PER),COUNT) & IF COUNT GE 1 THEN PER[OK] = 0.0
          IF NTH EQ 0 THEN BEGIN                     
            IF N EQ 0 THEN TITLE = 'Primary Production (VGPM-Eppley)!C'+TITLES(N) ELSE TITLE = TITLES(N)
            POSITION = [XPOS2,YPOS(N)-YDIF,XPOS2+XDIF,YPOS(N)]
            P = PLOT(XDATES,REPLICATE(0,N_ELEMENTS(VDATA)),YTITLE='Composition (%)',XTICKVALUE=AX.TICKV,FONT_SIZE=11,TITLE=TITLE,POSITION=POSITION,$
              XMINOR=0,YRANGE=[0,100],AXIS_STYLE=1,XSTYLE=1,XTICKNAME=AX.TICKNAME,/NODATA,BUFFER=BUFFER,MARGIN=MARGIN,LAYOUT=LAYOUT,/CURRENT)
            BOT = REPLICATE(0, N_ELEMENTS(VDATA))
            YY = [PER,BOT]
            XX = [XDATES,REVERSE(XDATES)]
            POLY = POLYGON(XX,YY,FILL_COLOR=PCOLORS[NTH],/FILL_BACKGROUND,TARGET=P,/DATA,LINESTYLE=6)
          ENDIF
          PER1 = PER + PER1
          YY = [PER1,REVERSE(BOTTOM)]
          XX = [XDATES,REVERSE(XDATES)]
          IF NTH GE 1 THEN POLY = POLYGON(XX,YY,FILL_COLOR=PCOLORS[NTH],/FILL_BACKGROUND,TARGET=P,/DATA,LINESTYLE=6)
          BOTTOM = PER1
        ENDFOR  
        P2 = PLOT(XDATES,TOT,COLOR='GREY',/CURRENT,AXIS_STYLE=0,XTICKVALUE=AX.TICKV,XRANGE=P.XRANGE,MARGIN=MARGIN,THICK=3,LINESTYLE=0,LAYOUT=LAYOUT,POSITION=POSITION,YRANGE=PYRANGE)      
        PD = PLOT(XDATES,DIATOM,COLOR='GREY',/CURRENT,AXIS_STYLE=0,XTICKVALUE=AX.TICKV,XRANGE=P.XRANGE,YRANGE=PYRANGE,MARGIN=MARGIN,THICK=3,LINESTYLE=2,LAYOUT=LAYOUT,POSITION=POSITION)
        A1 = AXIS('Y',TARGET=P2,LOCATION=[MAX(P.XRANGE),0,0],TEXTPOS=1,MINOR=2,TICKFONT_SIZE=11,TEXT_COLOR='BLACK',TICKDIR=1,TITLE=UNITS('PPD',/NO_NAME),TICKLEN=0.05,YRANGE=PYRANGE) ;AXIS,YAXIS=1,YRANGE=[0,300],/SAVE, YTITLE=YTITLE2,CHARSIZE=CHARSIZE,COLOR=0
        A2 = AXIS('X',TARGET=P,LOCATION=[MIN(P.XRANGE),100,0],MAJOR=0,MINOR=0,COLOR='BLACK')
        SKIP_VGPM:
        
        IF N_ELEMENTS(ODATA) LE 1 THEN GOTO, SKIP_OPAL 
        COUNTER = COUNTER + 1  
        LAYOUT = [3,5,4+N]
        XDATES = JD_ADD(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(ODATA.PERIOD))),14,/DAY)
        IF PERIODS(PTH) EQ 'A_' THEN XDATES = PERIOD_2JD(ODATA.PERIOD)
        BOTTOM = 0
        TOT = ODATA.(PPOSO)   
        DIATOM = ODATA.(DPOSO)
        PER1 = REPLICATE(0,N_ELEMENTS(XDATES))    
        FOR NTH = 0L, N_ELEMENTS(PGROUPS)-1 DO BEGIN
          GROUP = PGROUPS[NTH]
          POS = WHERE(TAGS EQ 'MEAN_PPD_' + GROUP + '_PERCENTAGE_MARMAP_PAN_VGPM2')
          PER = ODATA.(POS)      
          OK = WHERE(PER EQ MISSINGS(PER),COUNT) & IF COUNT GE 1 THEN PER[OK] = 0.0
          IF NTH EQ 0 THEN BEGIN             
            IF N EQ 0 THEN TITLE = 'Primary Production (OPAL)!C'+TITLES(N) ELSE TITLE = TITLES(N)
            POSITION = [XPOS3,YPOS(N)-YDIF,XPOS3+XDIF,YPOS(N)]
            P = PLOT(XDATES,REPLICATE(0,N_ELEMENTS(ODATA)),YTITLE='Composition (%)',XTICKVALUE=AX.TICKV,FONT_SIZE=11,TITLE=TITLE,POSITION=POSITION,$
              XMINOR=0,YRANGE=[0,100],AXIS_STYLE=1,XSTYLE=1,XTICKNAME=AX.TICKNAME,/NODATA,BUFFER=BUFFER,MARGIN=MARGIN,LAYOUT=LAYOUT,/CURRENT)
            BOT = REPLICATE(0, N_ELEMENTS(ODATA))
            YY = [PER,BOT]
            XX = [XDATES,REVERSE(XDATES)]
            POLY = POLYGON(XX,YY,FILL_COLOR=PCOLORS[NTH],/FILL_BACKGROUND,TARGET=P,/DATA,LINESTYLE=6)
          ENDIF
          PER1 = PER + PER1
          YY = [PER1,REVERSE(BOTTOM)]
          XX = [XDATES,REVERSE(XDATES)]
          IF NTH GE 1 THEN POLY = POLYGON(XX,YY,FILL_COLOR=PCOLORS[NTH],/FILL_BACKGROUND,TARGET=P,/DATA,LINESTYLE=6)
          BOTTOM = PER1
        ENDFOR   
        P2 = PLOT(XDATES,TOT,COLOR='GREY',/CURRENT,AXIS_STYLE=0,XTICKVALUE=AX.TICKV,XRANGE=P.XRANGE,MARGIN=MARGIN,THICK=3,LINESTYLE=0,LAYOUT=LAYOUT,POSITION=POSITION,YRANGE=PYRANGE)      
        PD = PLOT(XDATES,DIATOM,COLOR='GREY',/CURRENT,AXIS_STYLE=0,XTICKVALUE=AX.TICKV,XRANGE=P.XRANGE,YRANGE=PYRANGE,MARGIN=MARGIN,THICK=3,LINESTYLE=2,LAYOUT=LAYOUT,POSITION=POSITION)
        A1 = AXIS('Y',TARGET=P2,LOCATION=[MAX(P.XRANGE),0,0],TEXTPOS=1,MINOR=2,TICKFONT_SIZE=11,TEXT_COLOR='BLACK',TICKDIR=1,TITLE=UNITS('PPD',/NO_NAME),TICKLEN=0.05,YRANGE=PYRANGE) ;AXIS,YAXIS=1,YRANGE=[0,300],/SAVE, YTITLE=YTITLE2,CHARSIZE=CHARSIZE,COLOR=0
        A2 = AXIS('X',TARGET=P,LOCATION=[MIN(P.XRANGE),100,0],MAJOR=0,MINOR=0,COLOR='BLACK')        
        SKIP_OPAL:     
      ENDFOR
      
      
      XPOS = [0.035,0.090,0.17,0.033,0.1,0.19]
      YPOS = 0.06 & YPOS2 = 0.04
      FOR SY=0, 2 DO S = SYMBOL(XPOS(SY),YPOS,'SQUARE',SYM_SIZE=1.5,SYM_COLOR='WHITE',SYM_FILL_COLOR=DCOLORS(SY),/SYM_FILLED,LABEL_STRING=LGD(SY),LABEL_FONT_SIZE=12,LABEL_POSITION='R',/NORMAL)            
      FOR SY=3, N_ELEMENTS(LGD)-1 DO S = SYMBOL(XPOS(SY),YPOS2,'SQUARE',SYM_SIZE=1.5,SYM_COLOR='WHITE',SYM_FILL_COLOR=DCOLORS(SY),/SYM_FILLED,LABEL_STRING=LGD(SY),LABEL_FONT_SIZE=12,LABEL_POSITION='R',/NORMAL)
         
      LGD = ['Microplankton','Nanoplankton','Picoplankton']  
      LGCOLORS = ['YELLOW','MEDIUM_BLUE','ORANGE_RED']      
      XPOS = [0.3,0.39,0.345]
      FOR SY=0, N_ELEMENTS(LGD)-2 DO S = SYMBOL(XPOS(SY),YPOS,'SQUARE',SYM_SIZE=1.5,SYM_COLOR='WHITE',SYM_FILL_COLOR=LGCOLORS(SY),/SYM_FILLED,LABEL_STRING=LGD(SY),LABEL_FONT_SIZE=12,LABEL_POSITION='R',/NORMAL)
      S = SYMBOL(XPOS(2),YPOS2,'SQUARE',SYM_SIZE=1.5,SYM_COLOR='WHITE',SYM_FILL_COLOR=LGCOLORS(2),/SYM_FILLED,LABEL_STRING=LGD(2),LABEL_FONT_SIZE=12,LABEL_POSITION='R',/NORMAL)
      
      LGD = ['Microplankton','Nano+Picoplankton']  
      LGCOLORS = ['YELLOW','MEDIUM_AQUAMARINE']      
      XPOS = [0.535,0.615]
      FOR SY=0, N_ELEMENTS(LGD)-1 DO S = SYMBOL(XPOS(SY),YPOS,'SQUARE',SYM_SIZE=1.5,SYM_COLOR='WHITE',SYM_FILL_COLOR=LGCOLORS(SY),/SYM_FILLED,LABEL_STRING=LGD(SY),LABEL_FONT_SIZE=12,LABEL_POSITION='R',/NORMAL)
      XPOS = [0.78,0.860]
      FOR SY=0,N_ELEMENTS(LGD)-1 DO S = SYMBOL(XPOS(SY),YPOS,'SQUARE',SYM_SIZE=1.5,SYM_COLOR='WHITE',SYM_FILL_COLOR=LGCOLORS(SY),/SYM_FILLED,LABEL_STRING=LGD(SY),LABEL_FONT_SIZE=12,LABEL_POSITION='R',/NORMAL)
      
        
;      LGD = ['Microplankton','Nanoplankton','Picoplankton','Nano+Picoplankton']  
;      LGCOLORS = ['YELLOW','MEDIUM_BLUE','ORANGE_RED','MEDIUM_AQUAMARINE']      
;      XPOS = [0.31,0.41,0.51,0.61]
;      YPOS = 0.03
;      FOR SY=0, N_ELEMENTS(LGD)-1 DO S = SYMBOL(XPOS(SY),YPOS,'SQUARE',SYM_SIZE=1.5,SYM_COLOR='WHITE',SYM_FILL_COLOR=LGCOLORS(SY),/SYM_FILLED,LABEL_STRING=LGD(SY),LABEL_FONT_SIZE=12,LABEL_POSITION='R',/NORMAL)
      
      W.SAVE, PNGFILE, RESOLUTION=300, BIT_DEPTH=2      
      W.CLOSE 
    ENDFOR
STOP
      
    
  ENDIF ; DO_POLY_PLOTS

; *******************************************************
  IF DO_CHL_COMPARE GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_CHL_COMPARE GE 2
    
    SL = DELIMITER(/PATH)
    DIR = FIX_PATH(!S.DATASETS + 'OC-SEAWIFS-MLAC\NAFO\STATS\')
    BIR = FIX_PATH(!S.DATASETS + 'OC-SEAWIFS-MLAC\NAFO\BROWSE\')
    AIR = FIX_PATH(!S.DATASETS + 'OC-SEAWIFS-MLAC\NAFO\ANOMS\')
    CIR = FIX_PATH(!S.DATASETS + 'OC-SEAWIFS-MLAC\NAFO\COMPOSITE\')
    MATH = 'MEAN'
    PERIODS = ['MONTH','A']
    PRODS = ['CHLOR_A-PAN','CHLOR_A-OC4']
    
    FILES = []
    FOR P=0, N_ELEMENTS(PERIODS)-1 DO BEGIN    
      FOR N=0, N_ELEMENTS(PRODS)-1 DO FILES = [FILES,FILE_SEARCH(DIR + PRODS(N) + SL + PERIODS(P) + '*' + PRODS(N) + '*' + MATH + '.SAVE')]
    ENDFOR  
    FILES = FILES[WHERE(FILES NE '')]
    STRUCT_SD_2PNG_NG,FILES,/ADD_LAND,/ADD_COLORBAR,/ADDDATE,/ADD_COAST,DIR_OUT=BIR,BUFFER=1,RESOLUTION=400
    
    FP = PARSE_IT(FILES,/ALL)
    B = WHERE_SETS(FP.PERIOD)
    FOR N=0, N_ELEMENTS(B)-1 DO BEGIN
      SUBS = WHERE_SETS_SUBS(B(N))
      SET  = FILES(SUBS)
      FN   = FP(SUBS)
      CPOS = WHERE(FN.PROD EQ 'CHLOR_A')
      TPOS = WHERE(FN.PROD EQ 'TCHL_A')
      IF CPOS EQ -1 OR TPOS EQ -1 THEN CONTINUE
      R = MAKE_ANOM_SAVES(DIR_OUT=AIR,FILEA=FN(CPOS).FULLNAME,FILEB=FN(TPOS).FULLNAME,ANOM='DIF')
      F = FILE_SEARCH(AIR + FN[0].PERIOD + '*DIF.SAVE')
      STRUCT_SD_2PNG_NG,F,/ADD_LAND,/ADD_COLORBAR,/ADDDATE,/ADD_COAST,DIR_OUT=BIR,BUFFER=1,SPECIAL_SCALE='2',RESOLUTION=200
    ENDFOR  
    
    PNGS = FILE_SEARCH(BIR + '*.PNG')
    FP = PARSE_IT(PNGS,/ALL)
    B = WHERE_SETS(FP.PERIOD)
    FOR N=0, N_ELEMENTS(B)-1 DO BEGIN
      SUBS = WHERE_SETS_SUBS(B(N))
      SET  = PNGS(SUBS)
      FN   = FP(SUBS)
      PNGFILE = CIR + FN[0].PERIOD + 'CHLOR_A-COMPARE_COMPOSITE.PNG'
      IF GET_MTIME(PNGFILE) GT MAX(GET_MTIME(SET)) AND NOT KEYWORD_SET(OVERWRITE) THEN CONTINUE 
      CPOS = WHERE(FN.PROD EQ 'CHLOR_A')
      TPOS = WHERE(FN.PROD EQ 'TCHL_A')
      RPOS = WHERE(FN.MATH EQ 'DIF')
      IF MIN([CPOS,TPOS,RPOS]) EQ -1 THEN CONTINUE
      
      FILES = [FN(CPOS).FULLNAME,FN(TPOS).FULLNAME,FN(RPOS).FULLNAME]
      W   = WINDOW(DIMENSIONS=[768,256],LAYOUT=[3,1,0],MARGIN=0,BUFFER=0)
      CI  = IMAGE(READALL(FILES[0]), LAYOUT=[3,1,1],/CURRENT,MARGIN=0)
      TI  = IMAGE(READALL(FILES[1]), LAYOUT=[3,1,2],/CURRENT,MARGIN=0)   
      RI  = IMAGE(READALL(FILES(2)), LAYOUT=[3,1,3],/CURRENT,MARGIN=0)      
      W.SAVE, PNGFILE,RESOLUTION=300,BIT_DEPTH=2
      W.CLOSE
    ENDFOR  
      
    
    
  ENDIF ; DO_CHL_COMPARE  

; *******************************************************
  IF DO_PHYTO_PLOTS GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_PHYTO_PLOTS GE 2
    
    SL = DELIMITER(/PATH)
    
    DATE_RANGE = DATE_2JD(['19970901','20071231'])
    SUBAREAS   = ['NAFO_1_2J3K','NAFO_2_2J3KL','NAFO_3_2J3KLNO','NAFO_4_3LNO','NAFO_5_3M'];,'NAFO_6_NS']
    CDATASET = ['OC-SEAWIFS-MLAC']
    SUBPER   = ['A_ANNUAL_M_MANNUAL_MONTH']
    PERIODS  = ['MONTH','M_'+NUM2STR(INDGEN(10)+1998),'A_']
    OUTPER   = ['MONTH','M_'+NUM2STR(INDGEN(10)+1998),'A']
    PERSTR   = [5,REPLICATE(6,N_ELEMENTS(PERIODS)-2),2]
    TITLES   = ['NAFO_1_2J3K','NAFO_2_2J3KL','NAFO_3_2J3KLNO','NAFO_4_3LNO','NAFO_5_3M'];,'NAFO_6_NS']
    CODES    = ['2J3K','2J3KL','2J3KLNO','3LNO','3M'];'NS'
    DATES    = ['Climatology (1998-2007)',NUM2STR(INDGEN(10)+1998),'Annual Mean (1998-2007)']
        
    PY = [0,100]        
    WIDTH = 6
    CFILES = []
    FOR S=0, N_ELEMENTS(SUBAREAS)-1 DO CFILES = [CFILES,FILE_SEARCH(!S.DATASETS+CDATASET+SL+'NAFO'+SL+'TS_SUBAREAS'+SL+SUBPER+'*MASK_SUBAREA-NAFO-PXY_1024_1024-'+SUBAREAS(S)+'*-MULTI_PRODS.SAVE')]
    
    CDATA = IDL_RESTORE(CFILES[0])          
    FOR S=1, N_ELEMENTS(CFILES)-1 DO CDATA = STRUCT_CONCAT(CDATA,IDL_RESTORE(CFILES(S)))
    CDATA = CDATA[WHERE(PERIOD_2JD(CDATA.PERIOD) GE DATE_RANGE[0] AND PERIOD_2JD(CDATA.PERIOD) LE DATE_RANGE[1])]
    TAGS = TAG_NAMES(CDATA)
    POSC = WHERE(TAGS EQ 'MEAN_CHLOR_A_PAN')
    POSM = WHERE(TAGS EQ 'MEAN_MICRO_PERCENTAGE_PAN')
    POSN = WHERE(TAGS EQ 'MEAN_NANO_PERCENTAGE_PAN')
    
    FOR PTH =0, N_ELEMENTS(PERIODS)-1 DO BEGIN  
      PNGFILE = FIX_PATH(!S.PROJECTS + 'ECOAP/NAFO/PLOTS/' + OUTPER(PTH)+'-NAFO-SIZE_CLASS_PERCENTAGES_WITH_BARPLOTS.PNG')
      IF GET_MTIME(PNGFILE) GT MAX(GET_MTIME(CFILES)) AND NOT KEYWORD_SET(OVERWRITE) THEN CONTINUE
      MDATA = CDATA[WHERE(STRMID(CDATA.PERIOD,0,PERSTR(PTH)) EQ PERIODS(PTH))]
      AX = DATE_AXIS([20200101,20201231],/MONTH,/MID,/FYEAR)
      XRANGE = DATE_2JD([20200101,20201231])
      
      IF PERIODS(PTH) EQ 'A_' THEN BEGIN
        AX = DATE_AXIS([19980101,20070101],/YEAR,/YY)
        XRANGE = DATE_2JD([19980101,20070107])
      ENDIF
      
      W = WINDOW(DIMENSIONS=[1000,1300])
      D = TEXT(0.5,0.97,DATES(PTH),FONT_SIZE=14,ALIGNMENT=0.5)
      COUNTER = 1
      YPOS = [0.93,0.75,0.57,0.39,0.21]
      YDIF = 0.14
      XDIF = 0.39  
      XPOS1 = 0.06
      XPOS2 = 0.57 
      FOR N=0, N_ELEMENTS(CODES)-1 DO BEGIN                
        ADATA = MDATA[WHERE(MDATA.SUBAREA_NAME EQ CODES(N) AND MDATA.(WHERE(TAGS EQ 'FIRST_NAME_CHLOR_A_PAN')) NE '')] & ADATA = ADATA[SORT(DATE_2DOY(PERIOD_2DATE(ADATA.PERIOD)))]        
        XDATES = JD_ADD(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(ADATA.PERIOD))),14,/DAY)
        IF PERIODS(PTH) EQ 'A_' THEN XDATES = PERIOD_2JD(ADATA.PERIOD)         
        CGROUPS = ['DIATOM', 'DINOFLAGELLATE','BROWN',      'GREEN',       'CRYPTOPHYTE','PICO']
        BGROUPS = ['DIATOM', 'DINOFLAGELLATE','BROWN_ALGAE','GREEN_ALGAE', 'CRYPTOPHYTE','PICO']
        CCOLORS = ['CRIMSON','AQUA',          'ORANGE',     'BLUE',        'YELLOW',     'MEDIUM_AQUAMARINE']
        LGD     = ['Diatoms','Dinoflagellates','Brown Algae','Green Algae','Cryptophytes','Picoplankton']         
        MARGIN  = [0.15,0.15,0.15,0.2]
        CYRANGE = [0,2.0]        
        BOTTOM = 0
        PER1 = REPLICATE(0,N_ELEMENTS(XDATES))    
        TOT = ADATA.(POSC)
        MICRO = ADATA.(POSM)
        NANO = ADATA.(POSN) + ADATA.(POSM) 
        FOR NTH = 0L, N_ELEMENTS(CGROUPS)-1 DO BEGIN
          GROUP = CGROUPS[NTH]
          POS = WHERE(TAGS EQ 'MEAN_' + GROUP + '_PERCENTAGE_PAN')
          PER = ADATA.(POS)      
          OK = WHERE(PER EQ MISSINGS(PER),COUNT) & IF COUNT GE 1 THEN PER[OK] = 0.0
          IF NTH EQ 0 THEN BEGIN              
            IF N EQ 0 THEN TITLE = 'Percent Phytoplankton Composition!C'+TITLES(N) ELSE TITLE = TITLES(N)
            POSITION = [XPOS1,YPOS(N)-YDIF,XPOS1+XDIF,YPOS(N)]
            P = PLOT(XDATES,REPLICATE(0,N_ELEMENTS(ADATA)),YTITLE='Composition (%)',XTICKVALUE=AX.TICKV,FONT_SIZE=11,TITLE=TITLE,POSITION=POSITION,$
              XMINOR=0,YRANGE=[0,100],AXIS_STYLE=1,XSTYLE=1,XTICKNAME=AX.TICKNAME,/NODATA,BUFFER=BUFFER,MARGIN=MARGIN,LAYOUT=LAYOUT,/CURRENT)
            BOT = REPLICATE(0, N_ELEMENTS(ADATA))
            YY = [PER,BOT]
            XX = [XDATES,REVERSE(XDATES)]
            POLY = POLYGON(XX,YY,FILL_COLOR=CCOLORS[NTH],/FILL_BACKGROUND,TARGET=P,/DATA,LINESTYLE=6)
          ENDIF
          PER1 = PER + PER1
          YY = [PER1,REVERSE(BOTTOM)]
          XX = [XDATES,REVERSE(XDATES)]
          IF NTH GE 1 THEN POLY = POLYGON(XX,YY,FILL_COLOR=CCOLORS[NTH],/FILL_BACKGROUND,TARGET=P,/DATA,LINESTYLE=6)
          BOTTOM = PER1
        ENDFOR  
        PM = PLOT(XDATES,MICRO,COLOR='BLACK',/CURRENT,/OVERPLOT,THICK=3,LINESTYLE=0,AXIS_STYLE=1)
        PN = PLOT(XDATES,NANO, COLOR='BLACK',/CURRENT,/OVERPLOT,THICK=3,LINESTYLE=0,AXIS_STYLE=1)
        
        P2 = PLOT(XDATES,TOT,COLOR='GREY',/CURRENT,AXIS_STYLE=0,XTICKVALUE=AX.TICKV,XRANGE=P.XRANGE,YRANGE=CYRANGE,MARGIN=MARGIN,THICK=3,LINESTYLE=2,LAYOUT=LAYOUT,POSITION=POSITION)      
        A1 = AXIS('Y',TARGET=P2,LOCATION=[MAX(P.XRANGE),0,0],TEXTPOS=1,MINOR=2,TICKFONT_SIZE=11,TEXT_COLOR='BLACK',TICKDIR=1,TITLE=UNITS('CHLOR_A',/NO_NAME),TICKLEN=0.05,YRANGE=CYRANGE) ;AXIS,YAXIS=1,YRANGE=[0,300],/SAVE, YTITLE=YTITLE2,CHARSIZE=CHARSIZE,COLOR=0
        A2 = AXIS('X',TARGET=P,LOCATION=[MIN(P.XRANGE),100,0],MAJOR=0,MINOR=0,COLOR='BLACK')               
        
        BOTTOM = 0
        PER1 = REPLICATE(0,N_ELEMENTS(XDATES))    
        TOT = ADATA.(POSC)
        MICRO = ADATA.(POSM)
        NANO = ADATA.(POSN) + ADATA.(POSM) 
        FOR NTH = 0L, N_ELEMENTS(BGROUPS)-1 DO BEGIN
          GROUP = BGROUPS[NTH]
          POS = WHERE(TAGS EQ 'MEAN_' + GROUP + '_PAN')
          PER = ADATA.(POS)      
          OK = WHERE(PER EQ MISSINGS(PER),COUNT) & IF COUNT GE 1 THEN PER[OK] = 0.0
          IF NTH EQ 0 THEN BEGIN              
            IF N EQ 0 THEN TITLE = 'Phytoplankton Chlorophyll !8a!N!X!C'+TITLES(N) ELSE TITLE = TITLES(N)
            POSITION = [XPOS2,YPOS(N)-YDIF,XPOS2+XDIF,YPOS(N)]
            P = PLOT(XDATES,REPLICATE(0,N_ELEMENTS(ADATA)),YTITLE=UNITS('CHLOROPHYLL'),XTICKVALUE=AX.TICKV,FONT_SIZE=11,TITLE=TITLE,POSITION=POSITION,$
              XMINOR=0,YMINOR=2,YRANGE=CYRANGE,XSTYLE=1,XTICKNAME=AX.TICKNAME,/NODATA,BUFFER=BUFFER,MARGIN=MARGIN,LAYOUT=LAYOUT,/CURRENT)
            BOT = REPLICATE(0, N_ELEMENTS(ADATA))
            BAR = BARPLOT(XDATES,PER,BOTTOM_VALUES=BOT,FILL_COLOR=CCOLORS[NTH],LINESTYLE=6,/OVERPLOT)            
          ENDIF          
          PER1 = PER + PER1          
          IF NTH GE 1 THEN BAR = BARPLOT(XDATES,PER1,BOTTOM_VALUES=BOTTOM,FILL_COLOR=CCOLORS[NTH],LINESTYLE=6,/OVERPLOT)
          BOTTOM = PER1
        ENDFOR  
      ENDFOR  
      
      
      XPOS = [.17,.26,.39,.51,.62,.74]
      YPOS = 0.028
      FOR SY=0, N_ELEMENTS(XPOS)-1 DO S = SYMBOL(XPOS(SY),YPOS,'SQUARE',SYM_SIZE=1.5,SYM_COLOR='WHITE',SYM_FILL_COLOR=CCOLORS(SY),/SYM_FILLED,LABEL_STRING=LGD(SY),LABEL_FONT_SIZE=12,LABEL_POSITION='R',/NORMAL)      
;      YPOS = 0.015
;      FOR SY=3, N_ELEMENTS(LGD)-1 DO S = SYMBOL(XPOS(SY),YPOS,'SQUARE',SYM_SIZE=1.5,SYM_COLOR='WHITE',SYM_FILL_COLOR=CCOLORS(SY),/SYM_FILLED,LABEL_STRING=LGD(SY),LABEL_FONT_SIZE=12,LABEL_POSITION='R',/NORMAL)      
      W.SAVE, PNGFILE, RESOLUTION=300, BIT_DEPTH=2      
      W.CLOSE 
    ENDFOR
STOP
      
    
  ENDIF ; DO_PHYTO_PLOTS
  
; *******************************************************
  IF DO_BAR_PLOT GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_BAR_PLOT GE 2
    
    SL = DELIMITER(/PATH)
    
    DATE_RANGE = DATE_2JD(['19970901','20071231'])
    SUBAREAS   = ['NAFO_1_2J3K','NAFO_2_2J3KL','NAFO_3_2J3KLNO','NAFO_4_3LNO','NAFO_5_3M'];,'NAFO_6_NS']
    CDATASET = ['OC-SEAWIFS-MLAC']
    SUBPER   = ['A_ANNUAL_M_MANNUAL_MONTH']
    PERIODS  = ['MONTH','M_'+NUM2STR(INDGEN(10)+1998),'A_']
    OUTPER   = ['MONTH','M_'+NUM2STR(INDGEN(10)+1998),'A']
    PERSTR   = [5,REPLICATE(6,N_ELEMENTS(PERIODS)-2),2]
    TITLES   = ['NAFO_1_2J3K','NAFO_2_2J3KL','NAFO_3_2J3KLNO','NAFO_4_3LNO','NAFO_5_3M'];,'NAFO_6_NS']
    CODES    = ['2J3K','2J3KL','2J3KLNO','3LNO','3M'];'NS'
    DATES    = ['Climatology (1998-2007)',NUM2STR(INDGEN(10)+1998),'Annual Mean (1998-2007)']
    BGROUPS = ['DIATOM', 'DINOFLAGELLATE','BROWN_ALGAE','GREEN_ALGAE', 'CRYPTOPHYTE','PICO']
    BGROUPS = ['DIATOM', 'DINOFLAGELLATE','BROWN','GREEN', 'CRYPTOPHYTE','PICO']+'_PERCENTAGE'
    BGROUPS = ['MICRO','NANO','PICO']+'_PERCENTAGE'
    CCOLORS = ['CRIMSON','AQUA',          'ORANGE',     'BLUE',        'YELLOW',     'MEDIUM_AQUAMARINE']
    CCOLORS = ['BLUE',        'ORANGE',     'AQUA']
        
    PY = [0,100]     
    CYRANGE = [0,100]   
    WIDTH = 6
    CFILES = []
    FOR S=0, N_ELEMENTS(SUBAREAS)-1 DO CFILES = [CFILES,FILE_SEARCH(!S.DATASETS+CDATASET+SL+'NAFO'+SL+'TS_SUBAREAS'+SL+SUBPER+'*MASK_SUBAREA-NAFO-PXY_*-'+SUBAREAS(S)+'*-MULTI_PRODS.SAVE')]
    
    CDATA = IDL_RESTORE(CFILES[0])          
    FOR S=1, N_ELEMENTS(CFILES)-1 DO CDATA = STRUCT_CONCAT(CDATA,IDL_RESTORE(CFILES(S)))
    CDATA = CDATA[WHERE(CDATA.PERIOD_CODE EQ 'A')]
    CDATA = CDATA[WHERE(PERIOD_2JD(CDATA.PERIOD) GE DATE_RANGE[0] AND PERIOD_2JD(CDATA.PERIOD) LE DATE_RANGE[1])]
    TAGS = TAG_NAMES(CDATA)
    POSC = WHERE(TAGS EQ 'MEAN_CHLOR_A_PAN')
    POSM = WHERE(TAGS EQ 'MEAN_MICRO_PERCENTAGE_PAN')
    POSN = WHERE(TAGS EQ 'MEAN_NANO_PERCENTAGE_PAN')
    
    W = WINDOW(DIMENSIONS=[600,400])
    AX = DATE_AXIS([19980101,20070101],/YEAR,/YY)
    XRANGE = DATE_2JD([19980101,20070107])
    FOR CTH=0, N_ELEMENTS(CODES)-1 DO BEGIN
      ADATA = CDATA[WHERE(CDATA.SUBAREA_NAME EQ CODES(CTH) AND CDATA.(WHERE(TAGS EQ 'FIRST_NAME_CHLOR_A_PAN')) NE '')] 
      ADATA = ADATA[SORT(DATE_2DOY(PERIOD_2DATE(ADATA.PERIOD)))]        
      XDATES = PERIOD_2JD(ADATA.PERIOD)    
      
      NBARS = 5      
      BOTTOM = 0
      PER1 = REPLICATE(0,N_ELEMENTS(XDATES))    
      TOT = ADATA.(POSC)
      MICRO = ADATA.(POSM)
      NANO = ADATA.(POSN) + ADATA.(POSM) 
      FOR NTH = 0L, N_ELEMENTS(BGROUPS)-1 DO BEGIN
        GROUP = BGROUPS[NTH]
        POS = WHERE(TAGS EQ 'MEAN_' + GROUP + '_PAN')
        PER = ADATA.(POS)      
        OK = WHERE(PER EQ MISSINGS(PER),COUNT) & IF COUNT GE 1 THEN PER[OK] = 0.0
        IF NTH EQ 0 THEN BEGIN              
         ; IF CTH EQ 0 THEN TITLE = 'Phytoplankton Chlorophyll !8a!N!X!C'+TITLES(N) ELSE TITLE = TITLES(N)
         ; POSITION = [XPOS2,YPOS(N)-YDIF,XPOS2+XDIF,YPOS(N)]
         IF CTH EQ 0 THEN $
          P = PLOT(XDATES,REPLICATE(0,N_ELEMENTS(ADATA)),YTITLE='Chlorophyll Percent Composition',XTICKVALUE=AX.TICKV,FONT_SIZE=11,TITLE=TITLE,POSITION=POSITION,$
            XMINOR=0,YMINOR=2,YRANGE=CYRANGE,XSTYLE=1,XTICKNAME=AX.TICKNAME,/NODATA,BUFFER=BUFFER,MARGIN=MARGIN,LAYOUT=LAYOUT,/CURRENT)
          BOT = REPLICATE(0, N_ELEMENTS(ADATA))
          BAR = BARPLOT(XDATES,PER,NBARS=NBARS,INDEX=CTH,BOTTOM_VALUES=BOT,FILL_COLOR=CCOLORS[NTH],LINESTYLE=LINESTYLE,/OVERPLOT)            
        ENDIF          
        PER1 = PER + PER1          
        IF NTH GE 1 THEN BAR = BARPLOT(XDATES,PER1,NBARS=NBARS,INDEX=CTH,BOTTOM_VALUES=BOTTOM,FILL_COLOR=CCOLORS[NTH],LINESTYLE=LINESTYLE,/OVERPLOT)
        BOTTOM = PER1
      ENDFOR  
        
    ENDFOR
    BAR.SAVE, FIX_PATH(!S.PROJECTS+'ECOAP/NAFO/PLOTS/NAFO-SIZE_PERCENT_COMPOSITION-BARPLOT.PNG')
  ;  BAR.SAVE, FIX_PATH(!S.PROJECTS+'ECOAP/NAFO/PLOTS/NAFO-PHYTO_PERCENT_COMPOSITION-BARPLOT.PNG')
    BAR.CLOSE
  stop  
  ENDIF ; DO_BAR_PLOT  
  

END; #####################  End of Routine ################################



