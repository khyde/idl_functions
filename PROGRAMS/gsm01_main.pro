PRO gsm01_main, rrs_in, iop3, conv_flag, BELOW = below, UNCONSTRAINED = unconstrained, SILENT = silent
;***************************************************************************************************************************
; GSM01 IOP inversion Model - 3/20/2002
;
; REFERENCE :
;	Maritorena S., D.A. Siegel & A. Peterson. 2002. Optimization of a Semi-Analytical Ocean Color Model
;		for Global Scale Applications. Applied Optics. 41(15): 2705-2714.
;	Garver, S.A., and D.A. Siegel, 1997. Inherent optical property inversion of ocean color spectra
;		and its biogeochemical interpretation: I. Time series from the Sargasso Sea. J. Geophys. Res., 102, 18,607-18,625.
;
; The gsm01_main program returns an array with [Chl a], acdm(443 nm), bbp(443 nm) generated by
;	the inversion of the UCSB model. Note : acdm = ay + ad (i.e. detrital particulate + yellow substance).
;	A convergence flag is also returned.
;
; WARNING :
;	The model coefficients result form a global optimization based on large Case-1, non-polar data set. The model is thus designed
;	for global scale application with Case-1, non-polar waters. It is not supposed to be accurate in other kinds of situations.
;
; INPUT :
;	An array of Rrs data at the first 5 or 6 SeaWiFS wavelengths (Rrs1, Rrs2, ...., Rrs6).
;	The default stting is for Rrs = Lu(0+)/Ed(0+) if you use Rrs = Lu(0-)/Ed(0-), you need to use the BELOW keyword
;
; OUTPUT :
;	A 3 components array with [Chl a], acdm(443 nm),  bbp(443 nm) stored in the iop3 variable
;	and a convergence flag stored in the conv_flag variable (the convergence flag is equal to 1 if the fitting routine
;	converged and to 0 if not).
;
; KEYWORDS :
;	BELOW : The default configuration assumes the input Rrs data are Rrs(0+) (i.e. Lu(0+)/Ed(0+)).
;	If the input data are Rrs(0-) (i.e. Lu(0-)/Ed(0-)), the /BELOW keyword is required.
;       UNCONSTRAINED : allows the retrievals to have any values (e.g. can be negative).
;                      Default is for setting all retrievals from a particular spectrum to -999 if one of the below conditions is not met
;                      0.01 < Chl <  64.0
;                      0.0001 < acdm(443) < 2.0
;                      0.0001 < bbp(443) < 0.1
;	SILENT : Use this keyword if you don't want the model retrievals to be printed on the monitor.
;
; EXAMPLE :
;	IDL> gsm01_main, [0.00964288, 0.00733122, 0.00566863, 0.00352856, 0.00176867, 6.54E-05], ret3, cf
;		[Chl] :   0.1416      acdm(443) :  0.006945      bbp(443) :  0.001263      Conv. : 1
;
;	IDL> print, ret3
;	     0.14158958    0.0069446410    0.0012632506
;
; ROUTINES required :
;	GSM01_MAIN.
;	CURVEFIT_SM.
;	UCSB_MODEL.
;
; Please contact Stephane Maritorena (stephane@icess.ucsb.edu) for any problem or question.
;
;***************************************************************************************************************************
common share_gsm01_mod, wave, aw, admstar, aphstar_lin, aphstar_exp, bbw, bbpstar, grd1, grd2
;Constants definitions
;*********************
lambda = [412.0, 443.0, 490.0, 510.0, 555.0, 670.0]			; SeaWiFS wavelengths
aw_pf97 = [0.004562, 0.00707, 0.015, 0.0325, 0.0596, 0.439]		; aw Pope & Fry, 1997
bbw_sb81 = [0.00333, 0.00239, 0.00155, 0.0013, 0.000925, 0.0004]	; bbw Smith & Baker, 1981
lin_aphstar = [0.00665, 0.05582, 0.02055, 0.01910, 0.01015, 0.01424]	;Linear factor aph* (aph* = lin*Chl^exp)
adm_s = 0.02061								;slope of the CDM ( i.e. ay + ad) absorption
bbp_s = 1.03373								;exponent of particulate backscattering
grd1 = 0.0949 & grd2 = 0.0794						;constants in eq. 2 Gordon et al., 1988
guess = [0.002, 0.01, 0.0029]						; 1st guesses for chl, acdm, bbp respectively
niter = 10				; maximum number of iterations in the fitting routine
delta_chisq = 0.1			; sets the minumum chisq update crtireria in the fitting routine (typically 0.1)
rrs = rrs_in
; Set things for the required number of bands
;********************************************
nwave = n_elements(rrs) & npar = n_elements(guess) & aphstar_exp = fltarr(nwave)
wave = lambda(0:nwave-1)
aw = aw_pf97(0:nwave-1)
bbw = bbw_sb81(0:nwave-1)
aphstar_lin = lin_aphstar(0:nwave-1)

; Make index arrays and calculate bbpstar and admstar for future use
;*******************************************************************
wave_int = findgen(nwave) + 1.0
admstar = exp( - adm_s * (wave - 443.0))
bbpstar = (443.0/wave) ^ bbp_s
iop3 = guess
sig = dblarr(npar)
weights = dblarr(nwave) + 1.0

;Converts to below the surface Rrs data (required to use the Gordon et al., 1988 formulation) unless BELOW keyword was supplied
;***************
if not keyword_set(below) then rrs = rrs / 0.5238		; assumes flat surface, low sza (0.5238 = 0.54 * 0.97)

; call the fitting routine
;*************************
ml = curvefit_sm(wave_int, rrs, weights, iop3, sig, conv_flag, function_name = 'gsm01_model', itmax = niter, tol = delta_chisq)
iop3[1] = iop3[1] * 0.754188	; correction for bias in acdm(443). See Applied Optics paper
if not keyword_set(unconstrained) then begin
    if iop3[0] lt 0.01 or iop3[0] gt 64.0 or $
      iop3[1] lt 0.0001 or iop3[1] gt 2.0 or $
      iop3[2] lt 0.0001 or iop3[2] gt 0.1 then iop3 = replicate(-999., 3)
endif
if not keyword_set(silent) then print, strjoin(['Chl', 'acdm(443)', 'bbp(443)', 'Conv.',string(format = '(f9.4)', iop3[0]), string(format = '(f12.6)', iop3[1]), string(format = '(f12.6)', iop3[2]), strtrim(fix(conv_flag), 2) ], '  ')
end