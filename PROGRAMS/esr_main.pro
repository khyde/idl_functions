; $ID:	ESR_MAIN.PRO,	2021-04-15-17,	USER-KJWH	$

	PRO ESR_MAIN

;+
; NAME:
;		ESR_MAIN
;
; PURPOSE:;
;		This procedure is the MAIN program to generate figures for Ecosystem Status Reports and Book project
;
; CATEGORY:
;		CATEGORY
;
; CALLING SEQUENCE:
;		NO KEYWORDS
;
; INPUTS:
;
; OPTIONAL INPUTS:
;
; KEYWORD PARAMETERS:
;
;	NOTES:
;
;
; MODIFICATION HISTORY:
;			Written May 12, 2011 by K.J.W.Hyde, 28 Tarzwell Drive, NMFS, NOAA 02882 (kimberly.hyde@noaa.gov)
;-
;	****************************************************************************************************
	ROUTINE_NAME = 'ESR_MAIN'

;	===> Initialize ERROR to a null string. If errors are encountered ERROR will be set to a message.
;			 The calling routine can check error (e.g.IF ERROR NE 0 then there was a problem and do this or that)
	ERROR = ''

	
	SL = DELIMITER(/PATH)
	DIR_PROJECTS = !S.PROJECTS + 'ECOAP' + SL + 'DOC' + SL + 'EcosystemStatusReport-2017' + SL
	DIR_DATASETS = !S.DATASETS
	
  DO_MAKE_OUTLINE  = 0
  DO_FRONT_MAPS    = 0 ; Added 2/3/15 - To make mean frontal maps for new Habitat ESR section
  DO_ZOOPLANKTON   = 0
  DO_CPR_2013      = 0
  DO_SABA_EOF      = 0  
  DO_INTERPSERIES  = 0
  DO_INTERPSERIES_2015  = 0
  DO_PHYTO_SEASONS = 0
  DO_SUBAREAS_OUTPUT = 0
  DO_ESR2017_PLOTS = 1
  DO_ESR2015_PLOTS = 0
  DO_ESR2013_PLOTS = 0
  DO_ANNUAL_IMAGES = 0
  DO_ANOMS         = 0 
  DO_SST_ANOMS     = 0 
  DO_SEASONALS     = 0
  DO_BLOOMS        = 0
    

  DIR_ESR_PLOTS     = DIR_PROJECTS + 'PLOTS' + SL
  DIR_ESR_DATA      = DIR_PROJECTS + 'DATA' + SL
  DIR_TEST, [DIR_ESR_PLOTS,DIR_ESR_DATA]

  ECOREGIONS_MASK   = !S.IMAGES + 'MASK_SUBAREA-NEC-PXY_1024_1024-ECOREGIONS_FULL_NO_ESTUARIES.SAVE'
  LME_MASK          = !S.IMAGES + 'MASK_SUBAREA-NEC-PXY_1024_1024-ESUARIES_SHELF_LME.SAVE'


; ********************************************
  IF DO_MAKE_OUTLINE GE 1 THEN BEGIN
; ********************************************
    PAL_SW3,R,G,B
    
    MAP_IN = 'NEC'
    PX_IN  = '1024'
    PY_IN  = '1024'
    MAPS_OUT = ['NEC']
    PXS = [1024]
    PYS = [1024]
    
    FOR M=0, N_ELEMENTS(MAPS_OUT)-1 DO BEGIN
      MAP_OUT = MAPS_OUT(M)
      PX = PXS(M)
      PY = PYS(M)
      
      LAND = READ_LANDMASK(MAP=MAP_OUT,PX=PX,PY=PY,/STRUCT)
      DIR_OUT = !S.IMAGES
      
      REGION = ['ECOREGIONS_FULL_NO_ESTUARIES','ESTUARY_SHELF_LME']
      OUTLINE_CODES = LIST(['5','6','7','8'],['32'])  
      FOR N=0, N_ELEMENTS(REGION)-1 DO BEGIN
        AREGION = REGION(N)
        FILE    = !S.IMAGES + 'MASK_SUBAREA-'+MAP_IN+'-PXY_'+PX_IN+'_'+PY_IN+'-'+AREGION+'.SAVE'
        MASK    = STRUCT_SD_READ(FILE, STRUCT=STRUCT)
        MASK    = MAPS_REMAP(MASK,MAP_IN=MAP_IN,MAP_OUT=MAP_OUT,PX_OUT=PX,PY_OUT=PY)        
        CODES   = OUTLINE_CODES(N)
        AREA    = MASK & AREA(*,*) = 254 & IMG = AREA
        FOR NTH = 0L, N_ELEMENTS(CODES)-1 DO BEGIN
          OK_SUBAREA = WHERE(MASK EQ CODES[NTH],COUNT_SUBAREA)
          AREA(OK_SUBAREA) = CODES[NTH]
        ENDFOR
        AREA(LAND.LAND) = 254
        AREA(LAND.COAST) = 254
        OUTLINE = IMAGE_OUTLINE(AREA)
        OUTLINE=REFORM(OUTLINE,PX,PY)
        OK_OUTLINE = WHERE(OUTLINE EQ 1)
        OK_OTHER   = WHERE(OUTLINE EQ 0)
        OUTLINE(OK_OUTLINE) = 250
        IMG(OK_OUTLINE) = 0
        IMG(LAND.LAND) = 252
        IMG(LAND.COAST) = 0        
        WRITE_PNG, !S.OUTLINES + 'MASK_SUBAREA-'+MAP_OUT+'-PXY_'+NUM2STR(PX)+'_'+NUM2STR(PY)+'-'+AREGION+'-OUTLINE_LAND.PNG',IMG,R,G,B
        WRITE_PNG, !S.OUTLINES + 'MASK_SUBAREA-'+MAP_OUT+'-PXY_'+NUM2STR(PX)+'_'+NUM2STR(PY)+'-'+AREGION+'-OUTLINE.PNG',OUTLINE,R,G,B        
      ENDFOR
      
    ENDFOR
    
  ENDIF ; DO_MAKE_OUTLINE


; *******************************************************
  IF DO_FRONT_MAPS GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_FRONT_MAPS GE 2

    BUFFER = 1
    VERBOSE = 1

    
    MAP_IN  = ['NEC','NEC']
    MAP_OUT = ['NEC_ECO','NEC_ECO']
    
    SDIR   = DIR_ESR_DATA + 'FRONTS-AT-SST' + SL 
    CDIR   = DIR_ESR_DATA + 'FRONTS-SEAWIFS-CHLOR_A' + SL 
    PDIR   = DIR_ESR_DATA + 'FRONTS-PLOTS' + SL & DIR_TEST,PDIR
    
    SFILES = FLS(SDIR + ['ANNUAL','MONTH'] + '*GRAD_MAG*-MEAN.SAVE')
    CFILES = FLS(CDIR + ['ANNUAL','MONTH'] + '*GRAD_MAG*-MEAN.SAVE')
    
    SRANGE = '2000_2008'
    CRANGE = '1998_2008'
    
    STRUCT_SD_2PNG_NG,[SFILES,CFILES],DIR_OUT=PDIR,PAL='PAL_BR',/ADD_LAND,/ADD_COAST,/ADD_COLORBAR
    
    W = WINDOW(DIMENSIONS=[2048,1024])
    AFILE = FLS(SDIR + 'ANNUAL*.SAVE')
    ADATA = STRUCT_SD_READ(AFILE,STRUCT=STRUCT)
    OK = WHERE(STRUCT.IMAGE LT 0.015)
    STRUCT.IMAGE[OK] = 0.015
    IM = STRUCT_SD_2IMAGE_NG(STRUCT,PAL='PAL_BR',/ADD_LAND,/ADD_COAST,/ADD_COLORBAR,SPECIAL_SCALE='THRESHOLD',IMG_POSITION=[0,0,0.5,1.0],/NORMAL,/CURRENT)
    T1 = TEXT(0.25,0.4,'Shelf Slope!CFront',/NORMAL,FONT_COLOR='WHITE',FONT_STYLE='BOLD',FONT_SIZE=14,ALIGNMENT=0.5,TARGET=IM)
    A1 = ARROW([0.23,0.15],[0.41,0.38],/NORMAL,ARROW_STYLE=1,COLOR='WHITE',LINE_THICK=6,HEAD_INDENT=0.8,TARGET=IM)
    A2 = ARROW([0.28,0.31],[0.43,0.51],/NORMAL,ARROW_STYLE=1,COLOR='WHITE',LINE_THICK=6,HEAD_INDENT=0.8,TARGET=IM)
    T2 = TEXT(0.3,0.75,'Georges Bank!CTidal Mixing Fronts',/NORMAL,FONT_COLOR='WHITE',FONT_STYLE='BOLD',FONT_SIZE=14,ALIGNMENT=0.5,TARGET=IM)
    A3 =ARROW([0.3,0.32],[0.75,0.69],/NORMAL,ARROW_STYLE=1,COLOR='WHITE',LINE_THICK=6,HEAD_INDENT=0.8,TARGET=IM) 
    T3 = TEXT(0.21,0.11,'Gulf Stream',/NORMAL,FONT_COLOR='WHITE',FONT_STYLE='BOLD',FONT_SIZE=14,ALIGNMENT=0.5,TARGET=IM)
    A4 = ARROW([0.18,0.14],[0.12,0.17],/NORMAL,ARROW_STYLE=1,COLOR='WHITE',LINE_THICK=6,HEAD_INDENT=0.8,TARGET=IM)
    A5 = ARROW([0.24,0.26],[0.13,0.28],/NORMAL,ARROW_STYLE=1,COLOR='WHITE',LINE_THICK=6,HEAD_INDENT=0.8,TARGET=IM)
 ;   IM.SAVE,PDIR+'ANNUAL_2000_2008-AT-NEC-SST-4UM-GRAD_MAG-MEAN-ANNOTATED.PNG'
 ;   IM.CLOSE
    
    AFILE = FLS(CDIR + 'ANNUAL*.SAVE')
    ADATA = STRUCT_SD_READ(AFILE,STRUCT=STRUCT)
    OK = WHERE(STRUCT.IMAGE LT 1.001)
    STRUCT.IMAGE[OK] = 1.0
    IM = STRUCT_SD_2IMAGE_NG(STRUCT,PAL='PAL_BR',/ADD_LAND,/ADD_COAST,SPECIAL_SCALE='',IMG_POSITION=[0.5,0,1.0,1.0],/NORMAL,/CURRENT)
    T1 = TEXT(0.75,0.38,'Shelf Slope!CFront',/NORMAL,FONT_COLOR='WHITE',FONT_STYLE='BOLD',FONT_SIZE=14,ALIGNMENT=0.5,TARGET=IM)
    A1 = ARROW([0.628,0.733],[0.333,0.39],/NORMAL,ARROW_STYLE=2,COLOR='WHITE',LINE_THICK=6,HEAD_INDENT=0.8,TARGET=IM)
    A2 = ARROW([0.77,0.821],[0.42,0.514],/NORMAL,ARROW_STYLE=1,COLOR='WHITE',LINE_THICK=6,HEAD_INDENT=0.8,TARGET=IM)
    T2 = TEXT(0.8,0.75,'Georges Bank!CTidal Mixing Fronts',/NORMAL,FONT_COLOR='WHITE',FONT_STYLE='BOLD',FONT_SIZE=14,ALIGNMENT=0.5,TARGET=IM)
    A3 =ARROW([0.8,0.82],[0.75,0.69],/NORMAL,ARROW_STYLE=1,COLOR='WHITE',LINE_THICK=6,HEAD_INDENT=0.8,TARGET=IM)
    T3 = TEXT(0.65,0.06,'Gulf Stream',/NORMAL,FONT_COLOR='WHITE',FONT_STYLE='BOLD',FONT_SIZE=14,ALIGNMENT=0.5,TARGET=IM)
    A4 = ARROW([0.62,0.59],[0.07,0.12],/NORMAL,ARROW_STYLE=1,COLOR='WHITE',LINE_THICK=6,HEAD_INDENT=0.8,TARGET=IM)
   ; A5 = ARROW([0.84,0.86],[0.13,0.28],/NORMAL,ARROW_STYLE=1,COLOR='WHITE',LINE_THICK=6,HEAD_INDENT=0.8,TARGET=IM)

    
    BAR2 = COLOR_BAR_SCALE_NG(PROD='GRAD_MAG_RATIO',SPECIAL_SCALE='',PX=1034,PY=940,XDIM=600,YDIM=20,PAL='PAL_BR',/CURRENT,/NORMAL)
   ; IM.SAVE,PDIR+'ANNUAL_1998_2008-SEAWIFS-MLAC-NEC-CHLOR_A-OC4-GRAD_MAG_RATIO-MEAN-EDITED.PNG'
   ; IM.CLOSE
   
    STOP
    W.SAVE,PDIR+'ANNUAL-SST_CHLOR_A-GRAD_MAG.PNG'
    W.CLOSE
  ENDIF  ; DO_FRONT_MAPS

; *******************************************************
  IF DO_ZOOPLANKTON GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_ZOOPLANKTON GE 2
    
    PNGFILE = DIR_ESR_PLOTS + 'GEL_ZOOPLANKTON.png'
    IF FILE_TEST(PNGFILE) EQ 1 AND NOT KEYWORD_SET(OVERWRITE) THEN GOTO, SKIP_GZOO_PLOT
    BUFFER = 0
    MINDATE = '19750101'
    MAXDATE = '20150101'    
    VRANGE=[0.1,6]
    AX = DATE_AXIS([MINDATE,MAXDATE], /YEAR, STEP_SIZE=5)    
    CHARSIZE = 2.5
    SYMSIZE  = 1.5
    MARGIN = [0.15,0.06,0.05,0.08]
    
    NDATA = READALL(DIR_ESR_DATA + 'anom2_out_GBGoM_anoms.csv')
    SDATA = READALL(DIR_ESR_DATA + 'anom2_out_SNEMAB_anoms.csv')    
    YTITLE = 'Gelatinous Zooplankton Abundance Anomaly!C(*100 m!E-3!N)'
    NLABEL = 'Georges Bank / Gulf of Maine'
    SLABEL = 'Middle Atlantic Bight'
    SIPH   = 'Siphonophores'
    SALP   = 'Salps'
    
    W = WINDOW(WINDOW_TITLE='GEL_ZOO',DIMENSIONS=[850,1100],LAYOUT=[1,2,0],BUFFER=BUFFER)
    PN = PLOT(AX.JD,[0,0],XRANGE=AX.JD,YRANGE=[-120,80],XSTYLE=1,YSTYLE=1,YTITLE=YTITLE,FONT_SIZE=14,XMAJOR=AX.TICKS,YMAJOR=6,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XTICKLEN=0.0,/CURRENT,LAYOUT=[1,2,1],MARGIN=MARGIN)
      PN1 = PLOT(DATE_2JD(NDATA.YEAR),FLOAT(NDATA.SIPHONOPHORES),COLOR='BLUE',      SYMBOL='CIRCLE',/SYM_FILLED,SYM_SIZE=SYMSIZE,LINESTYLE=0,/CURRENT,/OVERPLOT,YRANGE=[-120,80],NAME=SIPH)    
      PN2 = PLOT(DATE_2JD(NDATA.YEAR),FLOAT(NDATA.SALPS),        COLOR='CRIMSON',SYMBOL='CIRCLE',/SYM_FILLED,SYM_SIZE=SYMSIZE,LINESTYLE=2,/CURRENT,/OVERPLOT,YRANGE=[-120,80],NAME=SALP)
      LN  = LEGEND(TARGET=[PN1,PN2],POSITION=[0.97,0.57],/AUTO_TEXT_COLOR,SHADOW=0,SAMPLE_WIDTH=0.1,TEXT_COLOR='BLACK',FONT_SIZE=12,THICK=0,VERTICAL_SPACING=0.005,LINESTYLE=6)
      TN  = TEXT(0.95,0.97,NLABEL,ALIGNMENT=1,FONT_SIZE=16)
    PS = PLOT(AX.JD,[0,0],XRANGE=AX.JD,YRANGE=[-30,40],XSTYLE=1,YSTYLE=1,YTITLE=YTITLE,FONT_SIZE=14,XMAJOR=AX.TICKS,YMAJOR=6,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XTICKLEN=0.0,/CURRENT,LAYOUT=[1,2,2],MARGIN=MARGIN)
      PS1 = PLOT(DATE_2JD(SDATA.YEAR),FLOAT(SDATA.SIPHONOPHORES),COLOR='BLUE',      SYMBOL='CIRCLE',/SYM_FILLED,SYM_SIZE=SYMSIZE,LINESTYLE=0,/CURRENT,/OVERPLOT,YRANGE=[-30,40],NAME=SIPH)
      PS2 = PLOT(DATE_2JD(SDATA.YEAR),FLOAT(SDATA.SALPS),        COLOR='CRIMSON',SYMBOL='CIRCLE',/SYM_FILLED,SYM_SIZE=SYMSIZE,LINESTYLE=2,/CURRENT,/OVERPLOT,YRANGE=[-30,40],NAME=SALP)
      LN  = LEGEND(TARGET=[PS1,PS2],POSITION=[0.97,0.07],/AUTO_TEXT_COLOR,SHADOW=0,SAMPLE_WIDTH=0.1,TEXT_COLOR='BLACK',FONT_SIZE=12,THICK=0,VERTICAL_SPACING=0.005,LINESTYLE=6)
      TN  = TEXT(0.95,0.47,SLABEL,ALIGNMENT=1,FONT_SIZE=16)
    W.SAVE,PNGFILE,RESOLUTION=300
    W.CLOSE
    SKIP_GZOO_PLOT:
STOP
  ENDIF ; DO_ZOOPLANKTON

  
; *******************************************************
  IF DO_CPR_2013 GE 1 THEN BEGIN
; *******************************************************
  OVERWRITE = DO_CPR_2013 GE 2
  
  BUFFER = 0  
  RESOLUTION=200
  
  FILE = DIR_ESR_DATA + 'CPR_PLOT_DATA.csv'
  CDATA = READALL(FILE)
    
  YRANGE = [-2,2]  
  MINDATE = '19750101'
  MAXDATE = '20150101'    
  AX = DATE_AXIS([MINDATE,MAXDATE], /YEAR, STEP_SIZE=5)
  CHARSIZE = 2.5
  SYMSIZE  = 1.5
  MARGIN = [0.15,0.06,0.05,0.08]
  
  
  PNGFILE = DIR_ESR_PLOTS + 'CPR_PHYTOPLANKTON-DPI_'+NUM2STR(RESOLUTION)+'.png'
  IF FILE_TEST(PNGFILE) EQ 1 AND NOT KEYWORD_SET(OVERWRITE) THEN GOTO, SKIP_PCPR_PLOT
    
  YTITLE = 'Ratio to Total Phytoplankton!CStandardized Anomaly' 
  DIA = 'Diatom Ratio'
  DIN = 'Dinoflagellate Ratio'
  GLABEL = 'Gulf of Maine'
  MLABEL = 'Mid-Atlantic Bight'
    
  W = WINDOW(WINDOW_TITLE='CPR',DIMENSIONS=[850,1100],LAYOUT=[1,2,0],BUFFER=BUFFER)
  PN = PLOT(AX.JD,[0,0],XRANGE=AX.JD,YRANGE=YRANGE,YTITLE=YTITLE,FONT_SIZE=14,XMAJOR=AX.TICKS,YMINOR=3,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,YTICKLEN=0.03,XTICKLEN=0.03,XMINOR=4,/CURRENT,LAYOUT=[1,2,1],MARGIN=MARGIN)
  PDG = PLOT(DATE_2JD(CDATA.YEAR),FLOAT(CDATA.GOM_DIATOM_RATIO),COLOR='BLUE',   SYMBOL='CIRCLE',/SYM_FILLED,SYM_SIZE=SYMSIZE,LINESTYLE=0,/CURRENT,/OVERPLOT,YRANGE=YRANGE,NAME=DIA)
  PFG = PLOT(DATE_2JD(CDATA.YEAR),FLOAT(CDATA.GOM_DINO_RATIO),  COLOR='CRIMSON',SYMBOL='CIRCLE',/SYM_FILLED,SYM_SIZE=SYMSIZE,LINESTYLE=0,/CURRENT,/OVERPLOT,YRANGE=YRANGE,NAME=DIN)  
  LN  = LEGEND(TARGET=[PDG,PFG],POSITION=[0.45,0.95],/AUTO_TEXT_COLOR,SHADOW=0,SAMPLE_WIDTH=0.1,TEXT_COLOR='BLACK',FONT_SIZE=12,THICK=0,VERTICAL_SPACING=0.005,LINESTYLE=6)
  TN  = TEXT(0.95,0.97,GLABEL,ALIGNMENT=1,FONT_SIZE=16)
  
  PS = PLOT(AX.JD,[0,0],XRANGE=AX.JD,YRANGE=YRANGE,XSTYLE=1,YSTYLE=1,YTITLE=YTITLE,FONT_SIZE=14,XMAJOR=AX.TICKS,YMINOR=3,YTICKLEN=0.03,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XTICKLEN=0.03,XMINOR=4,/CURRENT,LAYOUT=[1,2,2],MARGIN=MARGIN)
  PDM = PLOT(DATE_2JD(CDATA.YEAR),FLOAT(CDATA.MAB_DIATOM_RATIO),COLOR='BLUE',   SYMBOL='CIRCLE',/SYM_FILLED,SYM_SIZE=SYMSIZE,LINESTYLE=0,/CURRENT,/OVERPLOT,YRANGE=YRANGE,NAME=DIA)
  PFM = PLOT(DATE_2JD(CDATA.YEAR),FLOAT(CDATA.MAB_DINO_RATIO),  COLOR='CRIMSON',SYMBOL='CIRCLE',/SYM_FILLED,SYM_SIZE=SYMSIZE,LINESTYLE=0,/CURRENT,/OVERPLOT,YRANGE=YRANGE,NAME=DIN)
  LN  = LEGEND(TARGET=[PDM,PFG],POSITION=[0.45,0.45],/AUTO_TEXT_COLOR,SHADOW=0,SAMPLE_WIDTH=0.1,TEXT_COLOR='BLACK',FONT_SIZE=12,THICK=0,VERTICAL_SPACING=0.005,LINESTYLE=6)
  TN  = TEXT(0.95,0.47,MLABEL,ALIGNMENT=1,FONT_SIZE=16)
  W.SAVE,PNGFILE,RESOLUTION=RESOLUTION
  W.CLOSE    
  SKIP_PCPR_PLOT:
  
  PNGFILE = DIR_ESR_PLOTS + 'CPR_COLOR_INDEX-DPI_'+NUM2STR(RESOLUTION)+'.png'
  IF FILE_TEST(PNGFILE) EQ 1 AND NOT KEYWORD_SET(OVERWRITE) THEN GOTO, SKIP_CPR_CI_PLOT
  YTITLE = 'Color Index!CStandardized Anomaly'  
  GLABEL = 'Gulf of Maine'
  MLABEL = 'Mid-Atlantic Bight'
  
  W = WINDOW(WINDOW_TITLE='CPR',DIMENSIONS=[850,550],LAYOUT=[1,2,0],BUFFER=BUFFER)
  PN = PLOT(AX.JD,[0,0],XRANGE=AX.JD,YRANGE=YRANGE,YTITLE=YTITLE,FONT_SIZE=14,XMAJOR=AX.TICKS,YMINOR=3,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,YTICKLEN=0.03,XTICKLEN=0.03,XMINOR=4,/CURRENT,LAYOUT=[1,1,1],MARGIN=MARGIN)
  PDG = PLOT(DATE_2JD(CDATA.YEAR),FLOAT(CDATA.GOM_COLOR),COLOR='BLUE',   SYMBOL='CIRCLE',/SYM_FILLED,SYM_SIZE=SYMSIZE,LINESTYLE=0,/CURRENT,/OVERPLOT,YRANGE=YRANGE,NAME=GLABEL)
  PFG = PLOT(DATE_2JD(CDATA.YEAR),FLOAT(CDATA.MAB_COLOR),COLOR='CRIMSON',SYMBOL='CIRCLE',/SYM_FILLED,SYM_SIZE=SYMSIZE,LINESTYLE=0,/CURRENT,/OVERPLOT,YRANGE=YRANGE,NAME=MLABEL)
  LN  = LEGEND(TARGET=[PDG,PFG],POSITION=[0.4,0.9],/AUTO_TEXT_COLOR,SHADOW=0,SAMPLE_WIDTH=0.2,TEXT_COLOR='BLACK',FONT_SIZE=12,THICK=0,VERTICAL_SPACING=0.01,HORIZONTAL_SPACING=0.03,LINESTYLE=6)  
  
  W.SAVE,PNGFILE,RESOLUTION=RESOLUTION
  W.CLOSE
  SKIP_CPR_CI_PLOT:
  
  PNGFILE = DIR_ESR_PLOTS + 'CPR_ZOOPLANKTON-DPI_'+NUM2STR(RESOLUTION)+'.png'
  IF FILE_TEST(PNGFILE) EQ 1 AND NOT KEYWORD_SET(OVERWRITE) THEN GOTO, SKIP_CPR_ZOO_PLOT
  YTITLE = 'Total Zooplankton!CStandardized Anomaly'
  GLABEL = 'Gulf of Maine'
  MLABEL = 'Mid-Atlantic Bight'
  
  W = WINDOW(WINDOW_TITLE='CPR',DIMENSIONS=[850,550],LAYOUT=[1,2,0],BUFFER=BUFFER)
  PN = PLOT(AX.JD,[0,0],XRANGE=AX.JD,YRANGE=YRANGE,YTITLE=YTITLE,FONT_SIZE=14,XMAJOR=AX.TICKS,YMINOR=3,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,YTICKLEN=0.03,XTICKLEN=0.03,XMINOR=4,/CURRENT,LAYOUT=[1,1,1],MARGIN=MARGIN)
  PDG = PLOT(DATE_2JD(CDATA.YEAR),FLOAT(CDATA.GOM_MESOZOOPLANKTON),COLOR='BLUE',   SYMBOL='CIRCLE',/SYM_FILLED,SYM_SIZE=SYMSIZE,LINESTYLE=0,/CURRENT,/OVERPLOT,YRANGE=YRANGE,NAME=GLABEL)
  PFG = PLOT(DATE_2JD(CDATA.YEAR),FLOAT(CDATA.MAB_MESOZOOPLANKTON),COLOR='CRIMSON',SYMBOL='CIRCLE',/SYM_FILLED,SYM_SIZE=SYMSIZE,LINESTYLE=0,/CURRENT,/OVERPLOT,YRANGE=YRANGE,NAME=MLABEL)
  LN  = LEGEND(TARGET=[PDG,PFG],POSITION=[0.4,0.9],/AUTO_TEXT_COLOR,SHADOW=0,SAMPLE_WIDTH=0.2,TEXT_COLOR='BLACK',FONT_SIZE=12,THICK=0,VERTICAL_SPACING=0.01,HORIZONTAL_SPACING=0.03,LINESTYLE=6)
  
  W.SAVE,PNGFILE,RESOLUTION=RESOLUTION
  W.CLOSE
  SKIP_CPR_ZOO_PLOT:
    
  STOP
  
  ENDIF ; DO_CPR_2013

; *******************************************************
  IF DO_SABA_EOF GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_SABA_EOF GE 2
    
    PAL_ANOM_RGB
    FILE = FIX_PATH(!S.PROJECTS + 'ECOAP\EOF\' + 'Spring_NES_EOF1.hdf')
    EU   = FIX_PATH(!S.PROJECTS + 'ECOAP\EOF\' + 'EU_overlay.hdf')
    MAP_OUT = 'NEC_ECO'
    OUTLINE_FILE = !S.IMAGES + 'MASK_SUBAREA-'+MAP_OUT+'-PXY_1024_1024-ECOREGIONS_FULL_NO_ESTUARIES.PNG'
        
    MASK = STRUCT_SD_READ(!S.IMAGES + 'MASK_SUBAREA-NEC-PXY_1024_1024-ECOREGIONS_FULL_NO_ESTUARIES.SAVE',STRUCT=STRUCT,MAP_OUT=MAP_OUT)
    MASK_SUBS = WHERE(MASK EQ 36 AND MASK NE MISSINGS(MASK))
    ADD_MASK = 1
    
    SD = READ_HDF_2STRUCT(FILE) & PC = SD.SD.PC_1
    OK_MISS = WHERE(PC.IMAGE EQ 0)
    IMG = (PC.IMAGE*PC.SLOPE[0])+PC.INTERCEPT[0]
    IMG(OK_MISS) = MISSINGS(0.0)     
    BIMG = SD_SCALES(ROTATE(IMG,7),PROD='NUM',SPECIAL_SCALE='-100_100',/DATA2BIN) 
    LAT = SD.SD.LATITUDE.IMAGE
    LON = SD.SD.LONGITUDE.IMAGE
    IMG = MAPS_REMAP(IMG,MAP_IN='LONLAT',MAP_OUT='NEC_ECO',CONTROL_LONS=LON,CONTROL_LATS=LAT,PX_OUT=1024,PY_OUT=1024)
    STRUCT=STRUCT_SD_MAKE(IMG, FILE_NAME=REPLACE(FILE,'hdf','SAVE'), MAP='NEC_ECO',PROD='NUM', AMATH='', ASTAT='', GLOBAL=SD.GLOBAL,$
      SCALE_FACTOR=1.0,MISSING_CODE=MISSINGS(IMG), SCALING='LINEAR', INTERCEPT=0.0,  SLOPE=1.0, DATA_UNITS='',INFILE=FILE, NOTES=NOTES,ERROR=ERROR, HELP=HELP, _EXTRA=_extra)
    IM  = STRUCT_SD_2IMAGE_NG(STRUCT,ADD_MASK=ADD_MASK,MASK_SUBS=MASK_SUBS,MASK_COLOR=255,/ADD_OUTLINE,OUTLINE_THICK=3,OUTLINE_FILE=OUTLINE_FILE,OUTLINE_COLOR=0,/ADD_LAND,/ADD_COAST,MARGIN=0,USE_PROD='NUM',SPECIAL_SCALE='-60_240',/ADD_COLORBAR,BUFFER=BUFFER,MAP_OUT='NEC_ECO',PAL='PAL_SW3',MISS_COLOR=255,OCEAN_COLOR=255,COLORBAR_TITLE='Spatial Amplitude')
    IM.SAVE, DIR_ESR_PLOTS+'EOF_RAINBOW.png',RESOLUTION=96 & IM.CLOSE
        
    W = WINDOW(DIMENSIONS=[1024,512])
    STRUCT=STRUCT_SD_MAKE(IMG, FILE_NAME=REPLACE(FILE,'hdf','SAVE'), MAP='NEC_ECO',PROD='NUM', AMATH='', ASTAT='', GLOBAL=SD.GLOBAL,$
      SCALE_FACTOR=1.0,MISSING_CODE=MISSINGS(IMG), SCALING='LINEAR', INTERCEPT=0.0,  SLOPE=1.0, DATA_UNITS='',INFILE=FILE, NOTES=NOTES,ERROR=ERROR, HELP=HELP, _EXTRA=_extra)
    
    
    IME  = STRUCT_SD_2IMAGE_NG(STRUCT,LAYOUT=[2,1,2],/CURRENT,ADD_MASK=ADD_MASK,MASK_SUBS=MASK_SUBS,MASK_COLOR=255,/ADD_OUTLINE,OUTLINE_THICK=3,OUTLINE_FILE=OUTLINE_FILE,OUTLINE_COLOR=0,/ADD_LAND,/ADD_COAST,MARGIN=0,USE_PROD='NUM',SPECIAL_SCALE='-60_240',BUFFER=BUFFER,MAP_OUT='NEC_ECO',PAL='PAL_SW3',MISS_COLOR=255,OCEAN_COLOR=255)
    BAR = COLOR_BAR_SCALE_NG(PROD='NUM',SPECIAL_SCALE='-60_240',PX=532, PY=448,CHARSIZE=11,BACKGROUND=BACKGROUND,XDIM=256,YDIM=20,PAL='PAL_SW3',  TITLE='Spatial Amplitude')
    
    MASK = STRUCT_SD_READ(!S.IMAGES + 'MASK_SUBAREA-NEC-PXY_1024_1024-ESTUARY_SHELF_LME.SAVE')        
    MASK = MAPS_REMAP(MASK,MAP_IN='NEC',MAP_OUT='NEC_ECO')    
    MASK_SUBS = WHERE(MASK EQ 36 AND MASK NE MISSINGS(0.0))
        
    DIR_OC = DIR_DATASETS + 'OC-SEA_AQU-LAC'    + SL + 'NEC' + SL + 'STATS' + SL + 'CHLOR_A-PAN' + SL 
    MINFILE = FILE_SEARCH(DIR_OC  + 'A_2012*CHLOR_A-PAN*MIN*.SAVE')    
    MAXFILE = FILE_SEARCH(DIR_OC  + 'A_2012*CHLOR_A-PAN*MAX*.SAVE')
    MINDATA = STRUCT_SD_READ(MINFILE,STRUCT=MINSTRUCT)
    MAXDATA = STRUCT_SD_READ(MAXFILE,STRUCT=MAXSTRUCT)
    OK      = WHERE(MINDATA LE 64.0 AND MAXDATA LE 64.0)
    DIF     = MINDATA & DIF(*) = MISSINGS(0.0)
    DIF[OK] = MAXDATA[OK]-MINDATA[OK] 
    DIF     = MAPS_REMAP(DIF,MAP_IN='NEC',MAP_OUT='NEC_ECO')
    STRUCT=STRUCT_SD_MAKE(DIF, FILE_NAME=REPLACE(MAXFILE,['NEC','MAX'],['NEC_ECO','SPAN']), MAP='NEC_ECO',PROD='DIF', AMATH='', ASTAT='', GLOBAL=SD.GLOBAL,$
      SCALE_FACTOR=1.0,MISSING_CODE=MISSINGS(IMG), SCALING='LINEAR', INTERCEPT=0.0,  SLOPE=1.0, DATA_UNITS='',INFILE=FILE, NOTES=NOTES,ERROR=ERROR, HELP=HELP, _EXTRA=_extra)
    IMC   = STRUCT_SD_2IMAGE_NG(STRUCT,LAYOUT=[2,1,1],/CURRENT,ADD_MASK=ADD_MASK,MASK_SUBS=MASK_SUBS,MASK_COLOR=255,/ADD_OUTLINE,OUTLINE_THICK=3,OUTLINE_FILE=OUTLINE_FILE,OUTLINE_COLOR=0,/ADD_LAND,/ADD_COAST,MARGIN=0,USE_PROD='LNUM',SPECIAL_SCALE='0.1_40',/ADD_COLORBAR,BUFFER=BUFFER,MAP_OUT='NEC_ECO',PAL='PAL_SW3',MISS_COLOR=255,OCEAN_COLOR=255,COLORBAR_TITLE='')                   
    BAR = COLOR_BAR_SCALE_NG(PROD='LNUM',SPECIAL_SCALE='0.1_40',PX=20, PY=448,CHARSIZE=11,BACKGROUND=BACKGROUND,XDIM=256,YDIM=20,PAL='PAL_SW3',  TITLE='2012 Chlorophyll Span')
    W.SAVE, DIR_ESR_PLOTS+'SPAN_EOF_COMBO_300DPI.png',RESOLUTION=300 & W.CLOSE
STOP
  ENDIF


; *******************************************************
  IF DO_INTERPSERIES_2015 GE 1 THEN BEGIN
; *******************************************************    
    OVERWRITE = DO_INTERPSERIES_2015 GE 2
    BUFFER = 1
    RESOLUTION=120
    MINDATE = '20200101000000'
    MAXDATE = '20210101000000'
    PAL = 'PAL_BR'    
    AX = DATE_AXIS([MINDATE,MAXDATE], /FYEAR)    
    X2TICKNAME = REPLICATE(' ',N_ELEMENTS(AX.TICKNAME))    
    YTICKNAMES=[' ',' ',' ']
    CHARSIZE = 11
    MARGIN = [0.03,0.0,0.11,0.0]    
    CTITLES = [UNITS('CHLOROPHYLL'),UNITS('PRIMARY_PRODUCTION')]
    DATE_RANGE = ['19980101','20141231']
    YEARS = YEAR_RANGE(STRMID(DATE_RANGE[0],0,4),STRMID(DATE_RANGE[1],0,4))
    
    SUBAREA_MAPS   = LIST('ECOREGIONS_FULL_NO_ESTUARIES','ESTUARY_SHELF_LME')
    SUBAREA_CODES  = LIST(['7','5','6','8'],'32')
    SUBAREA_TITLES = LIST(['Mid-Atlantic Bight','Georges Bank','Gulf of Maine','Scotian Shelf'],'Northeast Shelf LME')
        
    YRANGE  = LIST([0,3],[0,3],[0,0.5],[0,80])
    
    PROD_TAGS = ['CHLOR_A_PAN','PPD_VGPM2']
    PRODS     = ['CHLOR_A','PPD']
    UPROD     = ['CHLOR_A','PPD']
    SPECIAL_SCALES = ['VERY_NARROW','MID']
    
    FILE  = FILE_SEARCH(DIR_ESR_DATA + 'D-SEAWIFS_OC_MODIS_OC_SEAWIFS_PP_PAT_MODIS_PP_PAT-ECOREGIONS_FULL_NO_ESTUARIES_ESTUARY_SHELF_LME-*.SAVE')
    FILE  = FILE[WHERE(GET_MTIME(FILE) EQ MAX(GET_MTIME(FILE)))]
    COMBO  = IDL_RESTORE(FILE)
    CTAGS = TAG_NAMES(COMBO)  

    FOR R =0L, N_ELEMENTS(PRODS)-2 DO BEGIN
      APROD = VALIDS('PRODS',PRODS(R))
      CPROD = PROD_TAGS(R)+'_MEAN'
      
      FOR N=0L, N_ELEMENTS(SUBAREA_MAPS)-1 DO BEGIN
        CODES   = SUBAREA_CODES(N)
        TITLES  = SUBAREA_TITLES(N)        
        CDATA   = COMBO[WHERE(STRMID(COMBO.PERIOD,0,2) EQ 'D_')]  
       
        IF N_ELEMENTS(CODES) GT 1 THEN N_PLOTS = N_ELEMENTS(YEARS)*N_ELEMENTS(CODES) + ((N_ELEMENTS(CODES)-1)*2) + 5  ELSE N_PLOTS = N_ELEMENTS(YEARS) + 6        
        IF N_ELEMENTS(CODES) GT 1 THEN DIMENSIONS = [750,1200] ELSE DIMENSIONS = [800,340]
        PNGFILE=DIR_ESR_PLOTS + 'INTERPOLATED_TIMESERIES-'+APROD+'-'+SUBAREA_MAPS(N)+'-DPI_'+NUM2STR(RESOLUTION)+'.PNG'
        W = WINDOW(DIMENSIONS=DIMENSIONS,LAYOUT=[1,N_PLOTS,1],BUFFER=BUFFER)                              
        COUNTER = 3
        FOR CTH = 0L, N_ELEMENTS(CODES)-1 DO BEGIN
          OK  = WHERE(CDATA.SUBAREA_CODE EQ CODES(CTH) AND CDATA.YEAR GE MIN(YEARS) AND CDATA.YEAR LE MAX(YEARS))
          T   = CDATA[OK]
          YSET = WHERE_SETS(T.YEAR)
          FOR YTH = 0L, N_ELEMENTS(YSET)-1 DO BEGIN
            SUBS = WHERE_SETS_SUBS(YSET(YTH))
            YRSET = T(SUBS)
            DATE = YDOY_2DATE('2020',DATE_2DOY(PERIOD_2DATE(T.PERIOD)))
            DATA = YRSET.(WHERE(CTAGS EQ CPROD)) 
            DEPTH = REPLICATE(0.5,N_ELEMENTS(DATA))
            LAYOUT=[1,N_PLOTS,COUNTER]            
            OK = WHERE(DATA NE MISSINGS(0.0)) 
            XTICKNAME = AX.TICKNAME
            IF YTH EQ N_ELEMENTS(YSET)-1 THEN NOXDATES = 0 ELSE NOXDATES = 1
            IF YTH EQ 0 THEN TITLE = TITLES(CTH) ELSE TITLE = ' '
            VRANGE = SD_SCALES([1,250],PROD=APROD,SPECIAL_SCALE=SPECIAL_SCALES(R),/BIN2DATA)
            TIME_DEPTH_GRID_NG,DATE[OK],DEPTH[OK],DATA[OK],LOG=TDLOG,DEPTH_INTERVAL=0.5,MDATE=[MINDATE,MAXDATE],MDEPTH=[1,0],VRANGE=VRANGE,YRANGE=[0,25],CUTOFF=[1,0],YMAJOR=0,YMINOR=0,XMAJOR=AX.TICKS,XMINOR=0,XTICKVALUES=AX.TICKV,XTICKNAME=XTICKNAME,PAL=PAL,$
              /NODEPTH,/ADD_YEAR_TITLE,DIMENSIONS=[365,10],NOXDATES=NOXDATES,AX_INTERVAL='MONTH',AY_GRID='YEAR',/FYEAR,YTITLE=STRMID(YSET(YTH).VALUE,2)+' ',ORIENTATION=0,TITLE=TITLE,MARGIN=MARGIN,FONT_SIZE=CHARSIZE,/INTERPOLATE,PROD=UPROD(R), SPECIAL_SCALE=SPECIAL_SCALES(R),LAYOUT=LAYOUT,TARGET=TARGET

;            IF CTH EQ N_ELEMENTS(SCODES)-1 AND YTH EQ N_ELEMENTS(YSET)-1 THEN $
;            BAR=COLOR_BAR_SCALE(PROD=APROD,SPECIAL_SCALE=SPECIAL_SCALE,POSITION=[0.92, 0.095, 0.945, 0.998],CHARSIZE=2.25,/VERTICAL)
            COUNTER = COUNTER+1
          ENDFOR ; FOR YTH = 0L, N_ELEMENTS(YSET)-1 DO BEGIN   
          COUNTER = COUNTER+2   

        ENDFOR ; FOR CTH = 0L, N_ELEMENTS(SCODES)-1 DO BEGIN   
        IF N_ELEMENTS(CODES) GT 1 THEN BAR = COLOR_BAR_SCALE_NG(PROD=UPROD(R),SPECIAL_SCALE=SPECIAL_SCALES(R),PX=650,PY=DIMENSIONS[1]-50,CHARSIZE=CHARSIZE,BACKGROUND=BACKGROUND,XDIM=30,YDIM=1100,PAL=PAL,TITLE=CTITLES(R),/VERTICAL,/RIGHT) $
                                  ELSE BAR = COLOR_BAR_SCALE_NG(PROD=UPROD(R),SPECIAL_SCALE=SPECIAL_SCALES(R),PX=700,PY=300, CHARSIZE=CHARSIZE,BACKGROUND=BACKGROUND,XDIM=30,YDIM=220,PAL=PAL,TITLE=CTITLES(R),/VERTICAL,/RIGHT) 
        W.SAVE, PNGFILE,RESOLUTION=RESOLUTION,BIT_DEPTH=2 
        W.CLOSE
      ENDFOR ; FOR N=1L, N_ELEMENTS(SUBAREA_MAPS)-1 DO BEGIN            
    ENDFOR ; FOR R =0L, N_ELEMENTS(PRODS)-1 DO BEGIN              
  ENDIF ; DO_INTERPSERIES_2015
  
  ; *******************************************************
  IF DO_INTERPSERIES GE 1 THEN BEGIN
    ; *******************************************************
    OVERWRITE = DO_INTERPSERIES GE 2
    BUFFER = 0
    RESOLUTION=120
    MINDATE = '20200101000000'
    MAXDATE = '20210101000000'
    PAL = 'PAL_SW3'
    AX = DATE_AXIS([MINDATE,MAXDATE], /FYEAR)
    X2TICKNAME = REPLICATE(' ',N_ELEMENTS(AX.TICKNAME))
    YTICKNAMES=[' ',' ',' ']
    CHARSIZE = 11
    MARGIN = [0.03,0.0,0.11,0.0]
    CTITLES = [UNITS('CHLOROPHYLL'),UNITS('PRIMARY_PRODUCTION')]
    DATE_RANGE = ['19980101','20121231']
    YEARS = YEAR_RANGE(STRMID(DATE_RANGE[0],0,4),STRMID(DATE_RANGE[1],0,4))

    SUBAREA_MAPS   = LIST('ECOREGIONS_FULL_NO_ESTUARIES','ESTUARY_SHELF_LME')
    SUBAREA_CODES  = LIST(['7','5','6','8'],'32')
    SUBAREA_TITLES = LIST(['Mid-Atlantic Bight','Georges Bank','Gulf of Maine','Scotian Shelf'],'Northeast Shelf LME')

    YRANGE  = LIST([0,3],[0,3],[0,0.5],[0,80])

    PROD_TAGS = ['CHLOR_A_PAN','PPD_VGPM2']
    PRODS     = ['CHLOR_A','PPD']
    UPROD     = ['LNUM','PPD']
    SPECIAL_SCALES = ['0.1_4','MID']
    FILE_MATH = ['INTERP','']
    FOR R =0L, N_ELEMENTS(PRODS)-2 DO BEGIN
      APROD = VALIDS('PRODS',PRODS(R))
      IF PROD_TAGS(R) EQ 'CHLOR_A_PAN' THEN BEGIN & CPROD = 'MEAN_CHLOR_A_PAN'    & CNAME = 'FIRST_NAME_CHLOR_A_PAN'   & ENDIF $
      ELSE BEGIN & CPROD = 'MEAN_'+PROD_TAGS(R)  & CNAME = 'FIRST_NAME_'+PROD_TAGS(R) & ENDELSE
      DIR_C = FIX_PATH(!S.DATASETS + 'OC-SEA_AQU-LAC\NEC\TS_SUBAREAS\')
      IF PRODS(R) EQ 'PPD' THEN DIR_C = FIX_PATH(!S.DATASETS + 'PP-SA_PAN-PAT-LAC\NEC\TS_SUBAREAS\')

      FOR N=0L, N_ELEMENTS(SUBAREA_MAPS)-1 DO BEGIN
        CODES   = SUBAREA_CODES(N)
        TITLES  = SUBAREA_TITLES(N)
        COMBO   = IDL_RESTORE(FILE_SEARCH(DIR_C + 'D-*' + SUBAREA_MAPS(N) + '*.SAVE')) & CTAGS = TAG_NAMES(COMBO)
        CDATA   = COMBO[WHERE(STRMID(COMBO.PERIOD,0,2) EQ 'D_' AND COMBO.FILE_MATH EQ FILE_MATH(R) AND COMBO.(WHERE(CTAGS EQ CNAME)) NE '')]
        FP = PARSE_IT(CDATA.(WHERE(CTAGS EQ CNAME)))

        IF N_ELEMENTS(CODES) GT 1 THEN N_PLOTS = N_ELEMENTS(YEARS)*N_ELEMENTS(CODES) + ((N_ELEMENTS(CODES)-1)*2) + 5  ELSE N_PLOTS = N_ELEMENTS(YEARS) + 6
        IF N_ELEMENTS(CODES) GT 1 THEN DIMENSIONS = [800,1100] ELSE DIMENSIONS = [800,340]
        PNGFILE=DIR_ESR_PLOTS + 'INTERPOLATED_TIMESERIES-'+APROD+'-'+SUBAREA_MAPS(N)+'-DPI_'+NUM2STR(RESOLUTION)+'.PNG'
        W = WINDOW(DIMENSIONS=DIMENSIONS,LAYOUT=[1,N_PLOTS,1],BUFFER=BUFFER)
        COUNTER = 3
        FOR CTH = 0L, N_ELEMENTS(CODES)-1 DO BEGIN
          OK  = WHERE(CDATA.SUBAREA_CODE EQ CODES(CTH) AND FP.YEAR_START GE '1998' AND FP.YEAR_START LE '2012')
          T   = CDATA[OK]
          TFP = FP[OK]
          YSET = WHERE_SETS(TFP.YEAR_START)
          FOR YTH = 0L, N_ELEMENTS(YSET)-1 DO BEGIN
            SUBS = WHERE_SETS_SUBS(YSET(YTH))
            YRSET = T(SUBS)
            YFP = TFP(SUBS)
            DATE = YDOY_2DATE('2020',DATE_2DOY(YFP.DATE_START))
            DATA = YRSET.(WHERE(CTAGS EQ CPROD))
            DEPTH = REPLICATE(0.5,N_ELEMENTS(DATA))
            LAYOUT=[1,N_PLOTS,COUNTER]
            OK = WHERE(DATA NE MISSINGS(0.0))
            XTICKNAME = AX.TICKNAME
            IF YTH EQ N_ELEMENTS(YSET)-1 THEN NOXDATES = 0 ELSE NOXDATES = 1
            IF YTH EQ 0 THEN TITLE = TITLES(CTH) ELSE TITLE = ' '
            VRANGE = SD_SCALES([1,250],PROD=APROD,SPECIAL_SCALE=SPECIAL_SCALES(R),/BIN2DATA)
            TIME_DEPTH_GRID_NG,DATE[OK],DEPTH[OK],DATA[OK],LOG=TDLOG,DEPTH_INTERVAL=0.5,MDATE=[MINDATE,MAXDATE],MDEPTH=[1,0],VRANGE=VRANGE,YRANGE=[0,25],CUTOFF=[1,0],YMAJOR=0,YMINOR=0,XMAJOR=AX.TICKS,XMINOR=0,XTICKVALUES=AX.TICKV,XTICKNAME=XTICKNAME,PAL=PAL,$
              /NODEPTH,/ADD_YEAR_TITLE,DIMENSIONS=[365,10],NOXDATES=NOXDATES,AX_INTERVAL='MONTH',AY_GRID='YEAR',/FYEAR,YTITLE=STRMID(YSET(YTH).VALUE,2)+' ',ORIENTATION=0,TITLE=TITLE,MARGIN=MARGIN,FONT_SIZE=CHARSIZE,/INTERPOLATE,PROD=UPROD(R), SPECIAL_SCALE=SPECIAL_SCALES(R),LAYOUT=LAYOUT,TARGET=TARGET

            ;            IF CTH EQ N_ELEMENTS(SCODES)-1 AND YTH EQ N_ELEMENTS(YSET)-1 THEN $
            ;            BAR=COLOR_BAR_SCALE(PROD=APROD,SPECIAL_SCALE=SPECIAL_SCALE,POSITION=[0.92, 0.095, 0.945, 0.998],CHARSIZE=2.25,/VERTICAL)
            COUNTER = COUNTER+1
          ENDFOR ; FOR YTH = 0L, N_ELEMENTS(YSET)-1 DO BEGIN
          COUNTER = COUNTER+2

        ENDFOR ; FOR CTH = 0L, N_ELEMENTS(SCODES)-1 DO BEGIN
        IF N_ELEMENTS(CODES) GT 1 THEN BAR = COLOR_BAR_SCALE_NG(PROD=UPROD(R),SPECIAL_SCALE=SPECIAL_SCALES(R),PX=675,PY=1050,CHARSIZE=CHARSIZE,BACKGROUND=BACKGROUND,XDIM=30,YDIM=1000,PAL='PAL_SW3',TITLE=CTITLES(R),/VERTICAL,/RIGHT) $
        ELSE BAR = COLOR_BAR_SCALE_NG(PROD=UPROD(R),SPECIAL_SCALE=SPECIAL_SCALES(R),PX=700,PY=300, CHARSIZE=CHARSIZE,BACKGROUND=BACKGROUND,XDIM=30,YDIM=220,PAL='PAL_SW3',TITLE=CTITLES(R),/VERTICAL,/RIGHT)
        W.SAVE, PNGFILE,RESOLUTION=RESOLUTION,BIT_DEPTH=2 & W.CLOSE
      ENDFOR ; FOR N=1L, N_ELEMENTS(SUBAREA_MAPS)-1 DO BEGIN
    ENDFOR ; FOR R =0L, N_ELEMENTS(PRODS)-1 DO BEGIN
  ENDIF ; DO_INTERPSERIES


; *******************************************************
  IF DO_PHYTO_SEASONS GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_PHYTO_SEASONS GE 2
    BUFFER = 1
    RESOLUTION = 120
    MAP_OUT = 'NEC_ECO'
    
    OUTLINE_FILE = !S.IMAGES + 'MASK_SUBAREA-'+MAP_OUT+'-PXY_1024_1024-ECOREGIONS_FULL_NO_ESTUARIES.PNG'
    CODES  = ['7',   '5',   '6',  '8']
    
    MASK = STRUCT_SD_READ(!S.IMAGES + 'MASK_SUBAREA-NEC-PXY_1024_1024-ECOREGIONS_FULL_NO_ESTUARIES.SAVE',STRUCT=STRUCT,MAP_OUT=MAP_OUT)
    MASK_SUBS = WHERE(MASK EQ 36 AND MASK NE MISSINGS(MASK))
    ADD_MASK = 1
    IF ADD_MASK EQ 1 THEN FILEEXTRA = '-OFFSHORE_MASK' ELSE FILEEXTRA = ''
    
    PNGFILE = DIR_ESR_PLOTS + 'SEASONAL-'+MAP_OUT+'-CHL_MICRO_NANO_COMPOSITE'+FILEEXTRA+'DPI_' + NUM2STR(RESOLUTION) + '.PNG'
    
    SPECIAL_SCALE = '.1_10'
        
    CHLSTATS = FIX_PATH(!S.DATASETS + 'OC-SEAWIFS-MLAC/NEC/STATS/CHLOR_A-PAN/')
    MICSTATS = FIX_PATH(!S.DATASETS + 'OC-SEAWIFS-MLAC/NEC/STATS/MICRO-PAN/')
    NANSTATS = FIX_PATH(!S.DATASETS + 'OC-SEAWIFS-MLAC/NEC/STATS/NANOPICO-PAN/')
    
    DIRS = [CHLSTATS,MICSTATS,NANSTATS]
    TXT=VALID_CRITERIA('CHLOR_A',MAP=MAP_OUT,CRITERIA_OPER=OPER,CRITERIA_RANGE=RANGE,ERROR=ERROR)
        
    PERIOD_CODE_IN  = 'MONTH'
    PERIOD_CODE_OUT = 'MM'
    STAT_TYPES       = ['MEAN','NUM']
    MONTHS = LIST(['12','01','02'],['03','04','05'],['06','07','08'],['09','10','11'])
    LAYOUT = [4,4,0]
    W = WINDOW(DIMENSIONS=[808,1170],BUFFER=BUFFER)
    XPOS = [10,276,542]
    YPOS = [1130,864,598,332]
    DIF  = 256
    TXT = TEXT(138,1135,'Total Chlorophyll',            ALIGNMENT=0.5,/DEVICE,FONT_SIZE=16)
    TXT = TEXT(404,1135,'Microplankton',    ALIGNMENT=0.5,/DEVICE,FONT_SIZE=16)
    TXT = TEXT(670,1135,'Nano+Picoplankton',ALIGNMENT=0.5,/DEVICE,FONT_SIZE=16)
    TXT = TEXT(20, YPOS[0]-20, 'Winter (DJF)', FONT_SIZE=12,FONT_STYLE='BOLD',/DEVICE)
    TXT = TEXT(20, YPOS[1]-20, 'Spring (MAM)', FONT_SIZE=12,FONT_STYLE='BOLD',/DEVICE)
    TXT = TEXT(20, YPOS(2)-20, 'Summer (JJA)', FONT_SIZE=12,FONT_STYLE='BOLD',/DEVICE)
    TXT = TEXT(20, YPOS(3)-20, 'Fall (SON)',   FONT_SIZE=12,FONT_STYLE='BOLD',/DEVICE)
    BAR = COLOR_BAR_SCALE_NG(PROD='CHLOR_A',SPECIAL_SCALE=SPECIAL_SCALE,PX=202, PY=50,CHARSIZE=14,BACKGROUND=252,XDIM=404,YDIM=20,PAL=PAL,VERTICAL=0,RIGHT=0,BOTTOM=1,FONT='HELVETICA',/CURRENT,TITLE=UNITS('CHLOROPHYLL'),/DEVICE)

    FOR NTH=0, N_ELEMENTS(DIRS)-1 DO BEGIN
      FILES = FILE_SEARCH(DIRS[NTH]+'MONTH_'+'*MEAN.SAVE')
      FP = PARSE_IT(FILES,/ALL)    
      FOR N=0, N_ELEMENTS(MONTHS)-1 DO BEGIN
        MONS = MONTHS(N)
        OK = WHERE_MATCH(FP.MONTH_START,MONS)
        AFILES = FILES[OK] 
        FOR F=0,N_ELEMENTS(AFILES)-1L DO BEGIN
          IF F EQ 0 THEN START=1 ELSE START=0
          IF F EQ N_ELEMENTS(AFILES)-1L THEN CALC=1 ELSE CALC=0          
          DATA=STRUCT_SD_READ(AFILES(F),ERROR=ERROR,MAP_OUT=MAP_OUT,STRUCT=STRUCT)
          S = STATS_ARRAYS(DATA,RANGE=RANGE,OPER=OPER,CRITERIA_TXT=TXT,MISSING=MISSING,TRANSFORM='ALOG',START=START,CALC=CALC,STRUCT=1,DO_STATS=STAT_TYPE,NAME=NAME)            
          GONE, DATA          
        ENDFOR
        IMG = S.MEAN
        GONE,S
        OK = WHERE(IMG NE MISSINGS(IMG), COUNT)
        IMG[OK]=EXP(IMG[OK])
        STRUCT = STRUCT_SD_MAKE(IMG,FILE_NAME=REPLACE(AFILES[0],'NEC','NEC_ECO'),PROD=FP[0].PROD,ALG=FP[0].ALG,ASTAT='MEAN',MISSING_CODE=MISSINGS(0.0),SCALING='LINEAR',TRANSFORMATION='',INTERCEPT=0.0,SLOPE=1.0,DATA_UNITS=UNITS(FP[0].PROD),STAT_TRANSFORM='ALOG')
        
        POS = [XPOS[NTH],YPOS(N)-DIF,XPOS[NTH]+DIF,YPOS(N)]
        IMC = STRUCT_SD_2IMAGE_NG(STRUCT,IMG_POSITION=POS,USE_PROD='CHLOR_A',/CURRENT,ADD_MASK=ADD_MASK,MASK_SUBS=MASK_SUBS,MASK_COLOR=255,/ADD_LAND,/ADD_COAST,/ADD_OUTLINE,OUTLINE_THICK=3,OUTLINE_FILE=OUTLINE_FILE,OUTLINE_COLOR=0,SPECIAL_SCALE=SPECIAL_SCALE,BUFFER=BUFFER,PAL=PAL,/DEVICE)
          
      ENDFOR
    ENDFOR
    W.SAVE, PNGFILE, RESOLUTION=RESOLUTION
    W.CLOSE
    STOP
  ENDIF ; DO_PHYTO_SEASONS



; ****************************
  IF DO_SUBAREAS_OUTPUT GE 1 THEN BEGIN
; ****************************
    OVERWRITE = DO_SUBAREAS_OUTPUT GT 1

    MASKS = ['ECOREGIONS_FULL_NO_ESTUARIES','ESTUARY_SHELF_LME']
    SUBAREA_CODES = LIST([5,6,7,8],[32])
    PERIOD = ['D','A_ANNUAL_M_MANNUAL_MONTH']
    MAP = 'NEC'

    CHL_ONLY = ['CHLOR_A-OC','CHLOR_A-PAN']
    PP_ONLY  = ['PPD-VGPM2']
    OC_PRODS = ['CHLOR_A-OC','CHLOR_A-PAN','MICRO-PAN','MICRO_PERCENTAGE-PAN','NANOPICO-PAN','NANOPICO_PERCENTAGE-PAN'] ;'NANO-PAN','NANO_PERCENTAGE_PAN','PICO-PAN','PICO_PERCENTAGE-PAN',
    PP_PRODS = ['PPD-VGPM2','PPD-OPAL','MICROPP-MM_PAN_VGPM2','MICROPP-MM_PAN_OPAL','MICROPP_PER-MM_PAN_VGPM2','MICROPP_PER-MM_PAN_OPAL','NANOPICOPP-MM_PAN_VGPM2','NANOPICOPP-MM_PAN_OPAL','NANOPICOPP_PER-MM_PAN_VGPM2','NANOPICOPP_PER-MM_PAN_OPAL']
    STATS_ONLY_PRODS = ['FUCO-PAN','DIATOM-PAN','DIATOM_PERCENTAGE-PAN','MICRO-PAN','MICRO_PERCENTAGE-PAN']

    PRODS    = LIST([CHL_ONLY],           [CHL_ONLY],          [PP_ONLY],                [PP_ONLY],               ['SST'],        ['SST'])
    MATHS    = LIST(['GEOMETRIC'],        ['GEOMETRIC'],       ['GEOMETRIC'],            ['GEOMETRIC'],           ['ARITHMETIC'], ['ARITHMETIC'])
    DATASETS =      ['OC-SEAWIFS-MLAC',   'OC-MODIS-LAC',       'PP-SEAWIFS_PAN-PAT-MLAC','PP-MODIS_PAN-PAT-LAC',  'SST-AVHRR-4',  'SST-MUR-1KM']
    STARGETS =      ['MIN_OC_PRODS',      'MIN_OC_PRODS',       'MIN_PP_PRODS',           'MIN_PP_PRODS',         'SST',          'SST']
    DSUB     =      ['INTERP',            'INTERP',             'SAVE',                   'SAVE',                 'INTERP',       'SAVE'] 
    LABELS   =      ['SEAWIFS_OC',        'MODIS_OC',           'SEAWIFS_PP_PAT',         'MODIS_PP_PAT',          'AVHRR',        'MUR']
    DO_DATA  =      [ 1,                   1,                   1,                        1,                       0,               0]
    DCOUNTS  =      [ 0,                   1,                   2,                        3,                       4,               5]
    DATES    = LIST([ 19980101,20071231], [20080101,20151231], [19980101,20071231],       [20080101,20141231],     [19980101,20151231],[20020101,20151231])
    INTERP   = []

    LABEL_DATE = DATE_STAMP()
    DOY_RANGE = [0,366]
    STRUCT    = STRUCT_2MISSINGS(CREATE_STRUCT('SENSOR','','PERIOD','','PERIOD_CODE','','YEAR',0,'JD',0.0,'SUBAREA_NAME','','SUBAREA_CODE','','N_SUBAREA',0.0,'N',0L,'MATH','','MEAN',0.0,'BOXCAR',0.0,'LOWESS',0.0))
    COUNTER = 0
    OUTSTRUCT = []
    PSTRUCT = []
    
    OK = WHERE(DO_DATA EQ 1,COUNT) 
    LABEL = STRJOIN(LABELS[OK],'_')
    FOR P=0, N_ELEMENTS(PERIOD)-1 DO BEGIN
      IF PERIOD(P) EQ 'D' THEN DIRSUB = DSUB ELSE DIRSUB = REPLICATE('STATS',N_ELEMENTS(DO_DATA))
      PERIOD_CODES = STRSPLIT(PERIOD(P),'_',/EXTRACT)
      SFILES = []
      FOR M=0, N_ELEMENTS(MASKS)-1 DO BEGIN
        MASK = 'MASK_SUBAREA-NEC-PXY_1024_1024-'+MASKS(M)
        FOR D=0, N_ELEMENTS(DATASETS)-1 DO IF DO_DATA(D) NE 0 THEN SFILES = [SFILES,FILE_SEARCH(!S.DATASETS + DATASETS(D) + SL + MAP + SL + 'TS_SUBAREAS-' + DIRSUB(D) + SL + PERIOD(P) + '-' + MASK + '-*' + STARGETS(D) + '*.SAVE')]
      ENDFOR      
      SAVEFILE = DIR_ESR_DATA + PERIOD(P) + '-'+LABEL+'-' + STRJOIN(MASKS,'_') + '-'+LABEL_DATE+'.SAVE'
      IF FILE_MAKE(SFILES,SAVEFILE,OVERWRITE=OVERWRITE) EQ 0 THEN CONTINUE
      FOR M=0, N_ELEMENTS(MASKS)-1 DO BEGIN
        MASK = 'MASK_SUBAREA-NEC-PXY_1024_1024-'+MASKS(M)
        CODES = SUBAREA_CODES(M)
        FOR D=0L, N_ELEMENTS(DATASETS)-1 DO BEGIN
          IF DO_DATA(D) EQ 0 THEN CONTINUE
          DCOUNT=DCOUNTS(D)
          DPRODS = PRODS(D)
          DATE_RANGE = DATES(D)
          MATH = MATHS(D)
          SFILE = FILE_SEARCH(!S.DATASETS + DATASETS(D) + SL + MAP + SL + 'TS_SUBAREAS-' + DIRSUB(D) + SL + PERIOD(P) + '-' + MASK + '-*' + STARGETS(D) + '*.SAVE')
          ALLDATA = IDL_RESTORE(SFILE)
          TAGS = TAG_NAMES(ALLDATA)
          OK = WHERE(STRPOS(TAGS,'OC') GE 0)
          ALLDATA = STRUCT_RENAME(ALLDATA,TAGS[OK],REPLACE(TAGS[OK],['OC4','OC3M'],['OC','OC']))
          TAGS = TAG_NAMES(ALLDATA)
    
          FOR PER=0, N_ELEMENTS(PERIOD_CODES)-1 DO BEGIN
            FOR S=0L, N_ELEMENTS(CODES)-1 DO BEGIN
              OK = WHERE(ALLDATA.SUBAREA_CODE EQ CODES(S) AND ALLDATA.PERIOD_CODE EQ PERIOD_CODES(PER),COUNT)      
              DATA = ALLDATA[OK]
              IF PERIOD_CODES(PER) EQ 'D' OR PERIOD_CODES(PER) EQ 'M' OR PERIOD_CODES(PER) EQ 'A' THEN BEGIN
                OK_DATES = DATE_SELECT(DATA.PERIOD,DATE_RANGE[0],DATE_RANGE[1],SUBS=SUBS) & GONE, OK_DATES
                DATA = DATA(SUBS) & GONE, SUBS
              ENDIF  
              DP   = DATE_PARSE(PERIOD_2DATE(DATA.PERIOD))  
              JD_RANGE  = DATE_2JD(DATE_GEN([MIN(DP.DATE),MAX(DP.DATE)]))
              FOR PR = 0L, N_ELEMENTS(DPRODS)-1 DO BEGIN
                PROD = VALIDS('PRODS',DPRODS(PR))
                ALG  = VALIDS('ALGS',DPRODS(PR))
                IF WHERE(DPRODS(PR) EQ STATS_ONLY_PRODS) LT 0 THEN STAT_ONLY = 0 ELSE STAT_ONLY = 1
                IF ALG EQ '' THEN TARGET = '_'+PROD ELSE TARGET = '_'+PROD+'_'+ALG
                IF ALG EQ '' THEN ALG = '_' ELSE ALG = '_'+ALG+'_'
                PROD_TAGS = PROD+ALG+['N','MATH','MEAN','BOXCAR','LOWESS']
      
                PROD_STRUCT = REPLICATE(STRUCT,N_ELEMENTS(DATA))
                PROD_STRUCT.SENSOR         = FIRST(STRSPLIT(LABELS(D),'_',/EXTRACT))
                PROD_STRUCT.PERIOD         = DATA.PERIOD
                PROD_STRUCT.PERIOD_CODE    = DATA.PERIOD_CODE
                PROD_STRUCT.JD             = DP.JD
                PROD_STRUCT.YEAR           = DP.YEAR
                PROD_STRUCT.MATH           = MATH[0]
                PROD_STRUCT.SUBAREA_NAME   = DATA.SUBAREA_NAME
                PROD_STRUCT.SUBAREA_CODE   = STRTRIM(DATA.SUBAREA_CODE,2)
                PROD_STRUCT.N_SUBAREA      = DATA.N_SUBAREA
      
               
                OK = WHERE_MATCH(PROD_STRUCT.PERIOD+'-'+PROD_STRUCT.SUBAREA_NAME,DATA.PERIOD+'-'+DATA.SUBAREA_NAME,COUNT,VALID=VALID)
                PROD_STRUCT[OK].N           = DATA(VALID).(WHERE(TAGS EQ 'N'+TARGET))
                PROD_STRUCT[OK].MEAN        = DATA(VALID).(WHERE(TAGS EQ 'MEAN'+TARGET))
               
                OK = WHERE(PROD_STRUCT.N LT 10,COUNT)
                IF COUNT GE 1 THEN BEGIN
                  PROD_STRUCT[OK].MEAN = MISSINGS(0.0)
                  PROD_STRUCT[OK].N    = 0
                ENDIF
                
                IF PERIOD_CODES(PER) EQ 'M' OR PERIOD_CODES(PER) EQ 'MONTH' THEN BEGIN
                  OK = WHERE(PROD_STRUCT.MEAN NE MISSINGS(0.0))
                  PROD_STRUCT[OK].BOXCAR       = SMOOTH(PROD_STRUCT[OK].MEAN,8,/EDGE_TRUNCATE)
                  PROD_STRUCT[OK].LOWESS       = LOWESS(PROD_STRUCT[OK].JD,PROD_STRUCT[OK].MEAN,FRACTION=0,WIDTH=5, DEG=1)
                ENDIF
                
                PROD_STRUCT = STRUCT_RENAME(PROD_STRUCT,['N','MATH','MEAN','BOXCAR','LOWESS'],PROD_TAGS)
                IF PR EQ 0 THEN PRODSTRUCT = PROD_STRUCT ELSE PRODSTRUCT = STRUCT_JOIN(PRODSTRUCT,PROD_STRUCT,TAGNAMES=['SENSOR','PERIOD','PERIOD_CODE','YEAR','JD','SUBAREA_NAME','SUBAREA_CODE','N_SUBAREA'])
              ENDFOR
              IF S EQ 0 THEN SUBSTRUCT = PRODSTRUCT ELSE SUBSTRUCT = STRUCT_CONCAT(SUBSTRUCT,PRODSTRUCT)
            ENDFOR
            IF PER EQ 0 THEN PERSTRUCT = SUBSTRUCT ELSE PERSTRUCT = STRUCT_CONCAT(PERSTRUCT,SUBSTRUCT)
          ENDFOR  
          CASE DCOUNT OF
            0: OUTSTRUCT = PERSTRUCT
            1: IF OUTSTRUCT NE [] THEN OUTSTRUCT = STRUCT_CONCAT(OUTSTRUCT,PERSTRUCT) ELSE OUTSTRUCT = PERSTRUCT
            2: PPSTRUCT   = PERSTRUCT
            3: BEGIN
              IF PPSTRUCT NE [] THEN PPSTRUCT   = STRUCT_CONCAT(PPSTRUCT,PERSTRUCT) ELSE PPSTRUCT = PERSTRUCT
              OUTSTRUCT = STRUCT_JOIN(OUTSTRUCT,PPSTRUCT,  TAGNAMES=['SUBAREA_NAME','SUBAREA_CODE','N_SUBAREA','PERIOD','PERIOD_CODE','YEAR','JD','SENSOR'])
            END
            4: OUTSTRUCT = STRUCT_JOIN(OUTSTRUCT,PERSTRUCT,TAGNAMES=['SUBAREA_NAME','SUBAREA_CODE','N_SUBAREA','PERIOD','PERIOD_CODE','YEAR','JD'])
            5: BEGIN
              SSTAGS    = TAG_NAMES(PERSTRUCT)
              OK        = WHERE(STRMID(SSTAGS,0,3) EQ 'SST',COUNT)
              IF COUNT GE 1 THEN PERSTRUCT = STRUCT_RENAME(PERSTRUCT,SSTAGS[OK],REPLACE(SSTAGS[OK],'SST','SST_MUR'))
              OUTSTRUCT = STRUCT_JOIN(OUTSTRUCT,PERSTRUCT,TAGNAMES=['SUBAREA_NAME','SUBAREA_CODE','N_SUBAREA','PERIOD','PERIOD_CODE','YEAR','JD'])
            END
          ENDCASE
          COUNTER = COUNTER+1
        ENDFOR
    
        TAGS = TAG_NAMES(OUTSTRUCT)
        MTAGS = TAGS[WHERE(STRPOS(TAGS,'MEAN') GE 0)]
        FOR S=0L, N_ELEMENTS(CODES)-1 DO BEGIN
          OK = WHERE(OUTSTRUCT.SUBAREA_CODE EQ CODES(S) AND OUTSTRUCT.PERIOD_CODE EQ 'A',COUNT_A)
          IF COUNT_A GT 0 THEN BEGIN
            FOR T=0, N_ELEMENTS(MTAGS)-1 DO BEGIN
              POS = WHERE(TAGS EQ MTAGS(T))
              TAR = STRMID(TAGS(POS),0,STRLEN(TAGS(POS))-5)
              BOS = WHERE(TAGS EQ TAR[0]+'_BOXCAR')
              LOS = WHERE(TAGS EQ TAR[0]+'_LOWESS')
              OUTSTRUCT[OK].(BOS)       = SMOOTH(FLOAT(OUTSTRUCT[OK].(POS)),8,/EDGE_TRUNCATE)
              OUTSTRUCT[OK].(LOS)       = LOWESS(FLOAT(OUTSTRUCT[OK].JD),FLOAT(OUTSTRUCT[OK].(POS)),FRACTION=0,WIDTH=5, DEG=1)
            ENDFOR
          ENDIF
        ENDFOR  
        IF M EQ 0 THEN SAVESTRUCT = OUTSTRUCT ELSE SAVESTRUCT = STRUCT_CONCAT(SAVESTRUCT,OUTSTRUCT)
      ENDFOR ; DO MASKS
      SAVE, FILENAME=SAVEFILE,SAVESTRUCT
      SAVE_2CSV,SAVEFILE
    ENDFOR  
  ENDIF ; DO_SUBAREAS_OUTPUT


; *******************************************************
  IF DO_ESR2017_PLOTS GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_ESR2017_PLOTS GE 2

    BUFFER = 1
    
    DATERANGE = ['1998','2016']
    MAP_IN  = 'L3B2'
    MAP_OUT = 'NEC'
    CPROD = 'CHLOR_A'
    PPROD = 'PPD-VGPM2'
    CALGS = ['PAN','OCI']  
    FILES = []
    SERVERS  = [!S.SEADAS,!S.MODIS,!S.DATASETS]
    DATASETS = ['SEAWIFS','MODISA','SA_MERGE']
    
    FOR A=0, N_ELEMENTS(CALGS)-1 DO BEGIN
      FOR D=0, N_ELEMENTS(DATASETS)-1 DO BEGIN
        IF CALGS(A) EQ 'PAN' THEN ALGADD = '_PAN' ELSE ALGADD = '' 
        IF DATASETS(D) EQ 'SA_MERGE' THEN CONTINUE
        FILES = [FILES,FLS(SERVERS(D) +'OC-'+DATASETS(D)+'-1KM'+SL+MAP_IN+SL+'STATS'+SL+CPROD+'-'+CALGS(A)+SL+['A_*','M_*']+CPROD+'-'+CALGS(A)+'-STATS.SAV',DATERANGE=DATERANGE),FLS(SERVERS(D) +'OC-'+DATASETS(D)+'-1KM'+SL+MAP_IN+SL+'STATS'+SL+CPROD+SL+['ANNUAL*','MONTH*']+CPROD+'-STATS.SAV')] 
        FILES = [FILES,FLS(SERVERS(D) +'OC-'+DATASETS(D)+'-1KM'+SL+MAP_IN+SL+'ANOMS'+SL+CPROD+'-'+CALGS(A)+SL+['A*ANNUAL*']+CPROD+'-'+CALGS(A)+'-RATIO.SAV',DATERANGE=DATERANGE)]
        FILES = [FILES,FLS(!S.PP  +'PP-'+DATASETS(D)+ALGADD+'-1KM'+SL+MAP_IN+SL+'STATS'+SL+PPROD+SL+['A_*','M_*']+PPROD+'-STATS.SAV',DATERANGE=DATERANGE),FLS(SERVERS(D) +'OC-'+DATASETS(D)+'-1KM'+SL+MAP_IN+SL+'STATS'+SL+PPROD+SL+['ANNUAL*','MONTH*']+PPROD+'-STATS.SAV')]
        FILES = [FILES,FLS(!S.PP  +'PP-'+DATASETS(D)+ALGADD+'-1KM'+SL+MAP_IN+SL+'ANOMS'+SL+PPROD+SL+['A*ANNUAL*']+PPROD+'-RATIO.SAV',DATERANGE=DATERANGE)]
      ENDFOR  
      FILES = FILES[WHERE(FILES NE '')]
      ECOS_SAV = DIR_ESR_DATA + 'CHL_PP_DATA_NES_ECOREGIONS.SAV'
      ECOS = []
      
      SUBAREA = 'NES_ECOREGIONS'
      NAMES    = ['NES','SS','GOM','GB','MAB'] + '_full'
      SUBAREAFILES = FLS(!S.IDL_SHAPEFILES + 'NES_ECOREGIONS' + SL + [NAMES] + '.shp')
      SUBTITLES = ['Northeast Shelf LME','Scotian Shelf','Gulf of Maine','Georges Bank','Mid-Atlantic Bight']
      READ_SHPFILE, SUBAREAFILES, MAPP=MAP_OUT, COLOR=COLOR, FILL=1, THICK=THICK, VERBOSE=VERBOSE, GET_RANGE=GET_RANGE, TAGNAME=TAGNAME, VALUE=VALUE, RANGE_LON=RANGE_LON, RANGE_LAT=RANGE_LAT, $
        STRUCT=STRUCT, NORMAL=NORMAL, DO_ALL=DO_ALL, AUTO=AUTO, LONS=LONS, LATS=LATS, AROUND=AROUND, PSYM=PSYM, SYMSIZE=SYMSIZE, _EXTRA=_EXTRA, OVERWRITE=OVERWRITE
      SHPS=STRUCT
      OUTLINE = []
      FOR F=0, N_ELEMENTS(NAMES)-1 DO BEGIN
        POS = WHERE(TAG_NAMES(SHPS) EQ STRUPCASE(NAMES(F)),/NULL)
        POS2 = WHERE(TAG_NAMES(SHPS.(POS)) EQ STRUPCASE(NAMES(F))+'_OUTLINE',/NULL)
        OUTLINE = [OUTLINE,SHPS.(POS).(POS2)]
      ENDFOR
        
      SUBAREAS_EXTRACT, FILES, SHP_FILES=SUBAREAFILES,SAVEFILE=ECOS_SAV,INIT=INIT,VERBOSE=VERBOSE    
      IF FILE_MAKE(ECOS_SAV,ECOS_CSV) EQ 1 THEN SAVE_2CSV,ECOS_SAV
      
      ECODATA = IDL_RESTORE(ECOS_SAV)
      RESOLUTION=300
      L = READ_LANDMASK(MAP_OUT,/STRUCT)
      MS = MAPS_SIZE(MAP_OUT,PX=MPX,PY=MPY)
      LCOLOR = 252
      CCOLOR = 0
  
      COLORS = ['DARK_GRAY','BLUE','CYAN','RED','SPRING_GREEN']
      YEARS = ['1998','2016']
      SAX = DATE_AXIS([19970101,20170101],/YEAR,/YY_YEAR)
      SAS = DATE_AXIS([19980101,20160101],/YEAR,/YY_YEAR,STEP=2)
      AAX = DATE_AXIS([20200101,20201231],/MONTH,/FYEAR,/MID)
      PAL = 'PAL_BR'
      
      CPRODA = 'CHLOR_A-'+CALGS(A) & CPROD = 'CHLOR_A_0.1_10.0' & CRANGE = [0.4,1.4]
      PPRODA = 'PPD-VGPM2'         & PPROD = 'PPD_0.2_4.0'      & PRANGE = [0.2,1.0]
      CTITLE = UNITS('CHLOROPHYLL',       /NO_UNIT)+', '+UNITS('CHLOR_A',/NO_NAME,/NO_PAREN) & CTITLE = REPLACE(CTITLE,['(',')'],['','']) ; CTITLE = UNITS('CHLOROPHYLL')
      PTITLE = UNITS('PRIMARY_PRODUCTION',/NO_UNIT)+', '+UNITS('PPD',    /NO_NAME,/NO_PAREN) & PTITLE = REPLACE(PTITLE,['(',')'],['','']) ; PTITLE = UNITS('PRIMARY_PRODUCTION')
      
      FOR N=0, N_ELEMENTS(DATASETS)-1 DO BEGIN
        DATASET = DATASETS(N)
        IF DATASET EQ 'SA_MERGE' THEN BEGIN
          CHLD = !S.DATASETS + 'OC-SA-1KM' + SL + MAP_IN + SL
          PPDD = !S.PP      + 'PP-SA-1KM' + SL + MAP_IN + SL
          SDATA = ECODATA[WHERE(ECODATA.SENSOR EQ 'SEAWIFS' OR ECODATA.SENSOR EQ 'SEAWIFS'+ALGADD,/NULL)] & STMP = DATE_SELECT(SDATA.PERIOD,['1998','2007'],SUBS=SUBS1)
          MDATA = ECODATA[WHERE(ECODATA.SENSOR EQ 'MODISA'  OR ECODATA.SENSOR EQ 'MODISA' +ALGADD,/NULL)] & MTMP = DATE_SELECT(MDATA.PERIOD,['2008','2016'],SUBS=SUBS2)
          ECOS = [SDATA(SUBS1),MDATA(SUBS2)]
        ENDIF ELSE BEGIN
          CHLD = SERVERS(N) + 'OC-'+DATASET+'-1KM' + SL + MAP_IN + SL
          PPDD = !S.PP     + 'PP-'+DATASET+ALGADD+'-1KM' + SL + MAP_IN + SL   
          ECOS = ECODATA[WHERE(ECODATA.SENSOR EQ DATASET OR ECODATA.SENSOR EQ DATASET+ALGADD,/NULL)]
          IF DATASET EQ 'SA' THEN ECOS = ECODATA[WHERE(ECODATA.SENSOR EQ 'SA' OR ECODATA.SENSOR EQ 'SA_PAN',/NULL)]
        ENDELSE
      
        CSTAT =  FLS(CHLD[0] + 'STATS' + SL + CPRODA + SL + 'ANNUAL_*-STATS.SAV') & APERIOD = (PARSE_IT(CSTAT)).PERIOD
        PSTAT =  FLS(PPDD[0] + 'STATS' + SL + PPRODA + SL + 'ANNUAL_*-STATS.SAV')
        PNGFILE = DIR_ESR_PLOTS + APERIOD + '-' + DATASET + '-' + MAP_OUT+ '-CHL_PPD-STATS-COMPOSITE_WITH_LINE_PLOT-DPI_'+NUM2STR(RESOLUTION)+'.PNG'
        IF FILE_MAKE([CSTAT,PSTAT,ECOS_SAV],PNGFILE,OVERWRITE=OVERWRITE) EQ 0 THEN CONTINUE
      
        IF FILE_MAKE(CSTAT,REPLACE(CSTAT,MAP_IN,MAP_OUT)) EQ 1 THEN CHL = STRUCT_READ(CSTAT,MAP_OUT=MAP_OUT) $
                                                               ELSE CHL = STRUCT_READ(REPLACE(CSTAT,MAP_IN,MAP_OUT))
        IF FILE_MAKE(PSTAT,REPLACE(PSTAT,MAP_IN,MAP_OUT)) EQ 1 THEN PPD = STRUCT_READ(PSTAT,MAP_OUT=MAP_OUT) $
                                                               ELSE PPD = STRUCT_READ(REPLACE(PSTAT,MAP_IN,MAP_OUT))                                                          
      
        BCHL = PRODS_2BYTE(CHL,PROD=CPROD) & BCHL(L.LAND) = LCOLOR & BCHL(L.COAST) = CCOLOR & BCHL(OUTLINE) = CCOLOR
        BPPD = PRODS_2BYTE(PPD,PROD=PPROD) & BPPD(L.LAND) = LCOLOR & BPPD(L.COAST) = CCOLOR & BPPD(OUTLINE) = CCOLOR
    
        DIMS = [1024,1034]
        W = WINDOW(DIMENSIONS=DIMS,BUFFER=BUFFER)
        TXC = TEXT(512,995,STRJOIN(YEARS,'-'),/DEVICE,FONT_SIZE=20,ALIGNMENT=0.5)
    
        MAR  = 25
        CPOS = [    MAR,512+MAR,512 -MAR,1012-MAR] & CBPOS = [    MAR*2,512,512 -MAR*2,512+MAR]
        PPOS = [512+MAR,512+MAR,1024-MAR,1012-MAR] & PBPOS = [512+MAR*2,512,1024-MAR*2,512+MAR]
        IMC = IMAGE(BCHL,RGB_TABLE=CPAL_READ(PAL),MARGIN=0,POSITION=CPOS,/DEVICE,BUFFER=BUFFER,/CURRENT)
        IMP = IMAGE(BPPD,RGB_TABLE=CPAL_READ(PAL),MARGIN=0,POSITION=PPOS,/DEVICE,BUFFER=BUFFER,/CURRENT)
        PRODS_COLORBAR, CPROD, IMG=IMC, LOG=1, ORIENTATION=0, TITLE=CTITLE, FONT_SIZE=14, POSITION=CBPOS, TEXTPOS=0, /DEVICE, PAL=PAL
        PRODS_COLORBAR, PPROD, IMG=IMP, LOG=1, ORIENTATION=0, TITLE=PTITLE, FONT_SIZE=14, POSITION=PBPOS, TEXTPOS=0, /DEVICE, PAL=PAL
            
        LMAR = 50
        LDIF = 18
        LCPOS = [    LMAR*1.5,LMAR,512 -LMAR*0.5,512-LMAR*1.5]
        LPPOS = [512+LMAR*1.5,LMAR,1024-LMAR*0.5,512-LMAR*1.5]
        TXTC = LMAR*2
        TXTP = 512+LMAR*2
        TXTY = 512-LMAR*2
  
        CTITLE = UNITS('CHLA',/NO_UNIT) + ' ' + UNITS('CHLOR_A',/NO_NAME)
        PTITLE = 'Primary productivity ' + UNITS('PPD',/NO_NAME)
  
        CP = PLOT(SAX.JD,CRANGE,XRANGE=SAX.JD,XTICKNAME=SAS.TICKNAME,XTICKVALUES=SAS.TICKV,YRANGE=CRANGE,XMINOR=0,XTICKLEN=0.03,YTICKLEN=0.03,YMINOR=0,AXIS_STYLE=1,/CURRENT,/DEVICE,POSITION=LCPOS,/NODATA,YTITLE=CTITLE)
        IF DATASET EQ 'SA_MERGE' THEN BEGIN
          SALINE = PLOT(DATE_2JD([2007,2007]),CRANGE,XRANGE=SAX.JD,YRANGE=CRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=5,THICK=2,COLOR='GREY',/CURRENT,/DEVICE,POSITION=LCPOS,/OVERPLOT)
          SEATXT = TEXT(DATE_2JD(200606),CRANGE[0]*1.1,'SeaWiFS',   /DATA,ALIGNMENT=1,COLOR='GREY',FONT_SIZE=11,FONT_NAME='HELVITICA',TARGET=CP)
          MODTXT = TEXT(DATE_2JD(200706),CRANGE[0]*1.1,'MODIS-Aqua',/DATA,ALIGNMENT=0,COLOR='GREY',FONT_SIZE=11,FONT_NAME='HELVITICA',TARGET=CP)
        ENDIF
        PLOTPERIOD = 'A_'
        FOR C=0, N_ELEMENTS(NAMES)-1 DO BEGIN
          OK = WHERE(ECOS.SUBAREA EQ STRUPCASE(NAMES(C)) AND ECOS.PROD+'-'+ECOS.ALG EQ CPRODA AND ECOS.AMEAN NE MISSINGS(0.0) AND STRMID(ECOS.PERIOD,0,STRLEN(PLOTPERIOD)) EQ PLOTPERIOD AND ECOS.MATH EQ 'STATS',COUNT)
          IF COUNT LE 1 THEN STOP
          CDATA = ECOS[OK] & CDATA = CDATA[SORT(PERIOD_2JD(CDATA.PERIOD))]
          CMEAN = MEAN(FLOAT(CDATA.AMEAN),/NAN)
          LDATA = LOWESS(DATE_2YEAR(PERIOD_2DATE(CDATA.PERIOD)),FLOAT(CDATA.AMEAN),WIDTH=7)
          CP0 = PLOT(PERIOD_2JD(CDATA.PERIOD),FLOAT(CDATA.AMEAN),XRANGE=SAX.JD,YRANGE=CRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=6,COLOR=COLORS(C),SYMBOL='CIRCLE',SYM_SIZE=0.8,/SYM_FILLED,/CURRENT,/DEVICE,POSITION=LCPOS,/OVERPLOT)
          CPL = PLOT(PERIOD_2JD(CDATA.PERIOD),LDATA,             XRANGE=SAX.JD,YRANGE=CRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=0,COLOR=COLORS(C),                THICK=2,                 /CURRENT,/DEVICE,POSITION=LCPOS,/OVERPLOT)
          TXT = TEXT(TXTC, TXTY-(LDIF*C),REPLACE(NAMES(C),'_full','')+' = ' + NUM2STR(CMEAN,DECIMALS=2),COLOR=COLORS(C),FONT_SIZE=12,FONT_NAME='HELVITICA',FONT_STYLE='BOLD',/DEVICE)
        ENDFOR
        XAXIS = AXIS('X',LOCATION=MAX(CP.YRANGE),MAJOR=0,TARGET=CP,MINOR=0)
        YAXIS = AXIS('Y',LOCATION=MAX(SAX.JD),   MAJOR=0,TARGET=CP,MINOR=0)
    
        PP = PLOT(SAX.JD,PRANGE,XRANGE=SAX.JD,XTICKNAME=SAS.TICKNAME,XTICKVALUES=SAS.TICKV,YRANGE=PRANGE,XMINOR=0,XTICKLEN=0.03,YTICKLEN=0.03,YMINOR=0,AXIS_STYLE=1,/CURRENT,/DEVICE,POSITION=LPPOS,/NODATA,YTITLE=PTITLE)
        IF DATASET EQ 'SA_MERGE' THEN BEGIN
          SALINE = PLOT(DATE_2JD([2007,2007]),PRANGE,XRANGE=SAX.JD,YRANGE=CRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=5,THICK=2,COLOR='GREY',/CURRENT,/DEVICE,POSITION=LCPOS,/OVERPLOT)
          SEATXT = TEXT(DATE_2JD(200606),PRANGE[0]*1.1,'SeaWiFS',   /DATA,ALIGNMENT=1,COLOR='GREY',FONT_SIZE=11,FONT_NAME='HELVITICA',TARGET=PP)
          MODTXT = TEXT(DATE_2JD(200706),PRANGE[0]*1.1,'MODIS-Aqua',/DATA,ALIGNMENT=0,COLOR='GREY',FONT_SIZE=11,FONT_NAME='HELVITICA',TARGET=PP)
        ENDIF
        FOR C=0, N_ELEMENTS(NAMES)-1 DO BEGIN
          OK = WHERE(ECOS.SUBAREA EQ STRUPCASE(NAMES(C)) AND ECOS.PROD+'-'+ECOS.ALG EQ PPRODA AND ECOS.AMEAN NE MISSINGS(0.0) AND STRMID(ECOS.PERIOD,0,STRLEN(PLOTPERIOD)) EQ PLOTPERIOD AND ECOS.MATH EQ 'STATS',COUNT)
          IF COUNT LE 1 THEN STOP
          PDATA = ECOS[OK] & PDATA = PDATA[SORT(PERIOD_2JD(PDATA.PERIOD))]
          PMEAN = MEAN(FLOAT(PDATA.AMEAN),/NAN)
          LDATA = LOWESS(DATE_2YEAR(PERIOD_2DATE(PDATA.PERIOD)),FLOAT(PDATA.AMEAN),WIDTH=7)
          PP0 = PLOT(PERIOD_2JD(PDATA.PERIOD),FLOAT(PDATA.AMEAN),XRANGE=SAX.JD,YRANGE=PRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=6,COLOR=COLORS(C),SYMBOL='CIRCLE',SYM_SIZE=0.8,/SYM_FILLED,/CURRENT,/DEVICE,POSITION=LPPOS,/OVERPLOT)       
          PPL = PLOT(PERIOD_2JD(PDATA.PERIOD),LDATA,             XRANGE=SAX.JD,YRANGE=PRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=0,COLOR=COLORS(C),                THICK=2,                 /CURRENT,/DEVICE,POSITION=LPPOS,/OVERPLOT)
          TXT = TEXT(TXTP, TXTY-(LDIF*C),REPLACE(NAMES(C),'_full','')+' = ' + NUM2STR(PMEAN,DECIMALS=2),COLOR=COLORS(C),FONT_SIZE=12,FONT_NAME='HELVITICA',FONT_STYLE='BOLD',/DEVICE)
        ENDFOR
        IF DATASET EQ 'SA_MERGE' THEN SALINE = PLOT(DATE_2JD([2007,2007]),CRANGE,/OVERPLOT,LINESTYLE=1,COLOR='LIGHT_GREY')
        XAXIS = AXIS('X',LOCATION=MAX(PP.YRANGE),MAJOR=0,TARGET=PP,MINOR=0)
        YAXIS = AXIS('Y',LOCATION=MAX(SAX.JD),   MAJOR=0,TARGET=PP,MINOR=0)
    
        PFILE, PNGFILE, /W
        W.SAVE,PNGFILE,RESOLUTION=RESOLUTION
        W.CLOSE
      ENDFOR 
    ENDFOR ; ALGS LOOP   
  stop
    
    CSCALE = '.1_10'
    PSCALE = '.2_4'
    CPROD = 'CHLOR_A'
    PPROD = 'PPD'
    CSTAT = 'MEAN'
    PSTAT = 'MEAN'
    AX = SAX
    AS = SAS
    CRANGE = [0.4,1.4]
    PRANGE = [0.2,1.2]
    PLOTPERIOD = 'A_'
  
    CANOMS =  FLS(CHLD[0] + 'ANOMS' + SL + CHLPROD + SL + 'A_*ANNUAL*-RATIO.SAV',DATERANGE=[YEARS[0],YEARS[1]]) & FC = PARSE_IT(CANOMS)
    PANOMS =  FLS(PPDD[0] + 'ANOMS' + SL + PPDPROD + SL + 'A_*ANNUAL*-RATIO.SAV',DATERANGE=[YEARS[0],YEARS[1]]) & FA = PARSE_IT(PANOMS)
        
    FOR N=0, N_ELEMENTS(CANOMS)-1 DO BEGIN
      CANOM = CANOMS(N)
      APERIOD = FC(N).PERIOD
      YEAR = DATE_2YEAR(PERIOD_2DATE(APERIOD))
      PAL    = 'PAL_ANOM_GREY'
      CTITLE = 'Chlorophyll ratio anomaly'
      PTITLE = 'Primary production ratio anomaly'
      TXT = STRMID(APERIOD,2,4)
      CPROD = 'RATIO'
      PPROD = 'RATIO'
      CSTAT = 'MEAN-RATIO'
      PSTAT = 'RATIO'
      AX = AAX
      AS = AAX
      CRANGE = [0.0,3.0]
      PRANGE = [0.0,1.5]
      PLOTPERIOD = 'M_' + STRMID(APERIOD,2,4)
    
      OK = WHERE(FA.PERIOD EQ APERIOD,COUNT)
      IF COUNT EQ 1 THEN PANOM = PANOMS[OK] ELSE PANOM = [] 
      PNGFILE = DIR_ESR_PLOTS + APERIOD + '-' + MAP_OUT+ '-CHL_PPD_COMPOSITE_WITH_LINE_PLOT'+FILEEXTRA+'-DPI_'+NUM2STR(RESOLUTION)+'.PNG'
      IF FILE_MAKE([CANOMS(N),PANOM],PNGFILE,OVERWRITE=OVERWRITE) EQ 0 THEN CONTINUE

      
      
      CHL = STRUCT_READ(CANOM,STRUCT=CSTRUCT,MAP_OUT=MAP_OUT)
      PPD = STRUCT_READ(PANOM,STRUCT=PSTRUCT,MAP_OUT=MAP_OUT)
      

      BCHL = PRODS_2BYTE(CHL,PROD=CPROD) & BCHL(L.LAND) = LCOLOR & BCHL(L.COAST) = CCOLOR
      BPPD = PRODS_2BYTE(PPD,PROD=PPROD) & BPPD(L.LAND) = LCOLOR & BPPD(L.COAST) = CCOLOR

      DIMS = [1024,1034]
      W = WINDOW(DIMENSIONS=DIMS,BUFFER=BUFFER)
      TXC = TEXT(512,995,TXT,/DEVICE,FONT_SIZE=20,ALIGNMENT=0.5)

      MAR  = 25
      CPOS = [    MAR,512+MAR,512 -MAR,1012-MAR] & CBPOS = [    MAR*2,512,512-MAR*4,1012-MAR*2]
      PPOS = [512+MAR,512+MAR,1024-MAR,1012-MAR] & PBPOS = [512+MAR*2,512,512-MAR*4,1012-MAR*2]
      IMC = IMAGE(BCHL,RGB_TABLE=CPAL_READ(PAL),MARGIN=0,IMG_POSITION=CPOS,BUFFER=BUFFER,/CURRENT)
      PRODS_COLORBAR, CCOLOR, IMG=IM, LOG=1, ORIENTATION=0, TITLE=CTITLE, FONT_SIZE=12, POSITION=CPOS, TEXTPOS=0, /DEVICE, PAL=PAL
      IMP = IMAGE(BPPD,RGB_TABLE=CPAL_READ(PAL),MARGIN=0,IMG_POSITION=PPOS,BUFFER=BUFFER,/CURRENT)
      PRODS_COLORBAR, PCOLOR, IMG=IM, LOG=1, ORIENTATION=0, TITLE=PTITLE, FONT_SIZE=12, POSITION=PPOS, TEXTPOS=0, /DEVICE, PAL=PAL
        
      
      
      
      
      
      
      
      
      
      
      MAR = 50
      DIF = 18
      CPOS = [    MAR*1.5,MAR,512 -MAR*0.5,512-MAR*1.5]
      PPOS = [512+MAR*1.5,MAR,1024-MAR*0.5,512-MAR*1.5]
      TXTC = MAR*2
      TXTP = 512+MAR*2
      TXTY = 512-MAR*2

      CTITLE = UNITS('CHLA',/NO_UNIT) + ' ' + UNITS('CHLOR_A',/NO_NAME)
      PTITLE = 'Primary productivity ' + UNITS('PPD',/NO_NAME)

      CP = PLOT(AX.JD,CRANGE,XRANGE=AX.JD,XTICKNAME=AS.TICKNAME,XTICKVALUES=AS.TICKV,YRANGE=CRANGE,XMINOR=0,XTICKLEN=0.03,YTICKLEN=0.03,YMINOR=0,AXIS_STYLE=1,/CURRENT,/DEVICE,POSITION=CPOS,/NODATA,YTITLE=CTITLE)
      FOR C=0, N_ELEMENTS(CODES)-1 DO BEGIN
        CPOSM = WHERE(TAG_NAMES(ECOS) EQ REPLACE(CHLPROD,'-','_')+'_MEAN')
        CPOSL = WHERE(TAG_NAMES(ECOS) EQ REPLACE(CHLPROD,'-','_')+'_LOWESS')
        OK = WHERE(ECOS.SUBAREA_CODE EQ CODES(C) AND ECOS.(CPOSM) NE MISSINGS(0.0) AND STRMID(ECOS.PERIOD,0,STRLEN(PLOTPERIOD)) EQ PLOTPERIOD)
        CDATA = ECOS[OK]
        CMEAN = MEAN(CDATA.(CPOSM),/NAN)
        CDATA = CDATA[SORT(PERIOD_2JD(CDATA.PERIOD))]
        IF APERIOD EQ 'MONTH' THEN CDATA = CDATA[SORT(DATE_2MONTH(PERIOD_2DATE(CDATA.PERIOD)))]
        IF APERIOD EQ 'ANNUAL' THEN BEGIN
          LDATA = LOWESS(DATE_2YEAR(PERIOD_2DATE(CDATA.PERIOD)),CDATA.(CPOSM),WIDTH=7)
          CP0 = PLOT(PERIOD_2JD(CDATA.PERIOD),CDATA.(CPOSM),XRANGE=AX.JD,YRANGE=CRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=6,COLOR=COLORS(C),SYMBOL='CIRCLE',SYM_SIZE=0.8,/SYM_FILLED,/CURRENT,/DEVICE,POSITION=CPOS,/OVERPLOT)
          ; CPL = PLOT(PERIOD_2JD(CDATA.PERIOD),LDATA,       XRANGE=AX.JD,YRANGE=CRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=0,COLOR=COLORS(C),                THICK=2,                 /CURRENT,/DEVICE,POSITION=CPOS,/OVERPLOT)
          CPL = PLOT(PERIOD_2JD(CDATA.PERIOD),CDATA.(CPOSL),XRANGE=AX.JD,YRANGE=CRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=0,COLOR=COLORS(C),                THICK=2,                 /CURRENT,/DEVICE,POSITION=CPOS,/OVERPLOT)
        ENDIF ELSE BEGIN
          LDATA = LOWESS(DATE_2MONTH(PERIOD_2DATE(CDATA.PERIOD)),CDATA.(CPOSM),WIDTH=7)
          CP0 = PLOT(JD_ADD(YDOY_2JD('2020',JD_2DOY(PERIOD_2JD(CDATA.PERIOD))),15,/DAY),CDATA.(CPOSM),XRANGE=AX.JD,YRANGE=CRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=6,COLOR=COLORS(C),SYMBOL='CIRCLE',SYM_SIZE=0.8,/SYM_FILLED,/CURRENT,/DEVICE,POSITION=CPOS,/OVERPLOT)
          ; CPL = PLOT(JD_ADD(YDOY_2JD('2020',JD_2DOY(PERIOD_2JD(CDATA.PERIOD))),15,/DAY),LDATA,       XRANGE=AX.JD,YRANGE=CRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=0,COLOR=COLORS(C),                THICK=2,                 /CURRENT,/DEVICE,POSITION=CPOS,/OVERPLOT)
          CPL = PLOT(JD_ADD(YDOY_2JD('2020',JD_2DOY(PERIOD_2JD(CDATA.PERIOD))),15,/DAY),CDATA.(CPOSL),XRANGE=AX.JD,YRANGE=CRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=0,COLOR=COLORS(C),                THICK=2,                 /CURRENT,/DEVICE,POSITION=CPOS,/OVERPLOT)
        ENDELSE
        TXT = TEXT(TXTC, TXTY-(DIF*C),NAMES(C)+' = ' + NUM2STR(CMEAN,DECIMALS=2),COLOR=COLORS(C),FONT_SIZE=12,FONT_NAME='HELVITICA',FONT_STYLE='BOLD',/DEVICE)
      ENDFOR
      XAXIS = AXIS('X',LOCATION=MAX(CP.YRANGE),MAJOR=0,TARGET=CP,MINOR=0)
      YAXIS = AXIS('Y',LOCATION=MAX(AX.JD), MAJOR=0,TARGET=CP,MINOR=0)

      PP = PLOT(AX.JD,PRANGE,XRANGE=AX.JD,XTICKNAME=AS.TICKNAME,XTICKVALUES=AS.TICKV,YRANGE=PRANGE,XMINOR=0,XTICKLEN=0.03,YTICKLEN=0.03,YMINOR=0,AXIS_STYLE=1,/CURRENT,/DEVICE,POSITION=PPOS,/NODATA,YTITLE=PTITLE)
      FOR C=0, N_ELEMENTS(CODES)-1 DO BEGIN
        PPOSM = WHERE(TAG_NAMES(ECOS) EQ REPLACE(PPDPROD,'-','_')+'_MEAN')
        PPOSL = WHERE(TAG_NAMES(ECOS) EQ REPLACE(PPDPROD,'-','_')+'_LOWESS')
        OK = WHERE(ECOS.SUBAREA_CODE EQ CODES(C) AND ECOS.(PPOSM) NE MISSINGS(0.0) AND STRMID(ECOS.PERIOD,0,STRLEN(PLOTPERIOD)) EQ PLOTPERIOD)
        PDATA = ECOS[OK]
        PMEAN = MEAN(PDATA.(PPOSM),/NAN)
        PDATA = PDATA[SORT(PERIOD_2JD(PDATA.PERIOD))]
        IF APERIOD EQ 'MONTH' THEN PDATA = PDATA[SORT(DATE_2MONTH(PERIOD_2DATE(PDATA.PERIOD)))]
        IF APERIOD EQ 'ANNUAL' THEN BEGIN
          ; LDATA = LOWESS(DATE_2YEAR(PERIOD_2DATE(PDATA.PERIOD)),PDATA.(PPOSM),WIDTH=7)
          PP0 = PLOT(PERIOD_2JD(PDATA.PERIOD),PDATA.(PPOSM),XRANGE=AX.JD,YRANGE=PRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=6,COLOR=COLORS(C),SYMBOL='CIRCLE',SYM_SIZE=0.8,/SYM_FILLED,/CURRENT,/DEVICE,POSITION=PPOS,/OVERPLOT)
          ;PPL = PLOT(PERIOD_2JD(PDATA.PERIOD),LDATA,       XRANGE=AX.JD,YRANGE=PRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=0,COLOR=COLORS(C),                THICK=2,                 /CURRENT,/DEVICE,POSITION=PPOS,/OVERPLOT)
          PPL = PLOT(PERIOD_2JD(PDATA.PERIOD),PDATA.(PPOSL),XRANGE=AX.JD,YRANGE=PRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=0,COLOR=COLORS(C),                THICK=2,                 /CURRENT,/DEVICE,POSITION=PPOS,/OVERPLOT)
        ENDIF ELSE BEGIN
          ;  LDATA = LOWESS(DATE_2MONTH(PERIOD_2DATE(PDATA.PERIOD)),PDATA.(PPOSM),WIDTH=7)
          PP0 = PLOT(JD_ADD(YDOY_2JD('2020',JD_2DOY(PERIOD_2JD(PDATA.PERIOD))),15,/DAY),PDATA.(PPOSM),XRANGE=AX.JD,YRANGE=PRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=6,COLOR=COLORS(C),SYMBOL='CIRCLE',SYM_SIZE=0.8,/SYM_FILLED,/CURRENT,/DEVICE,POSITION=PPOS,/OVERPLOT)
          ;  PPL = PLOT(JD_ADD(YDOY_2JD('2020',JD_2DOY(PERIOD_2JD(PDATA.PERIOD))),15,/DAY),LDATA,       XRANGE=AX.JD,YRANGE=PRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=0,COLOR=COLORS(C),                THICK=2,                 /CURRENT,/DEVICE,POSITION=PPOS,/OVERPLOT)
          PPL = PLOT(JD_ADD(YDOY_2JD('2020',JD_2DOY(PERIOD_2JD(PDATA.PERIOD))),15,/DAY),PDATA.(PPOSL),XRANGE=AX.JD,YRANGE=PRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=0,COLOR=COLORS(C),                THICK=2,                 /CURRENT,/DEVICE,POSITION=PPOS,/OVERPLOT)
        ENDELSE
        TXT = TEXT(TXTP, TXTY-(DIF*C),NAMES(C)+' = ' + NUM2STR(PMEAN,DECIMALS=2),COLOR=COLORS(C),FONT_SIZE=12,FONT_NAME='HELVITICA',FONT_STYLE='BOLD',/DEVICE)
      ENDFOR
      XAXIS = AXIS('X',LOCATION=MAX(PP.YRANGE),MAJOR=0,TARGET=PP,MINOR=0)
      YAXIS = AXIS('Y',LOCATION=MAX(AX.JD), MAJOR=0,TARGET=PP,MINOR=0)

      W.SAVE,PNGFILE,RESOLUTION=RESOLUTION
      W.CLOSE

    ENDFOR
  ENDIF ; DO_ESR2017_PLOTS

; *******************************************************
  IF DO_ESR2015_PLOTS GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_ESR2015_PLOTS GE 2
  
    BUFFER = 0
    MAP_OUT = 'NEC_ECO'
    RESOLUTION=300
  
    OUTLINE_FILE = !S.SUBAREAS + 'SUBAREAS_EXTRA/MASK_SUBAREA-'+MAP_OUT+'-PXY_1024_1024-ECOREGIONS_FULL_NO_ESTUARIES.PNG'
    CODES  = ['7',   '5',   '6',  '8']
    COLORS = ['BLUE','CYAN','RED','SPRING_GREEN']
    NAMES  = ['MAB', 'GB',  'GOM','SS']
  
    MASK = STRUCT_SD_READ(!S.SUBAREAS + 'MASK_SUBAREA-NEC-PXY_1024_1024-ECOREGIONS_FULL_NO_ESTUARIES.SAVE',STRUCT=STRUCT,MAP_OUT=MAP_OUT)
    MASK_SUBS = WHERE(MASK EQ 36 AND MASK NE MISSINGS(MASK))
    ADD_MASK = 1
    IF ADD_MASK EQ 1 THEN FILEEXTRA = '-OFFSHORE_MASK' ELSE FILEEXTRA = ''
  
    CHLPROD = 'CHLOR_A-PAN'
    PPDPROD = 'PPD-VGPM2'
    CHLD = ['OC-SEAWIFS-MLAC','OC-MODIS-LAC']
    PPDD = ['PP-SEAWIFS_PAN-PAT-MLAC','PP-MODIS_PAN-PAT-LAC'] ; ['PP-SEP-1KM','PP-AQP-1KM']
    SYEARS = ['1998','2007']
    MYEARS = ['2008','2014']
    
      
    FILE  = FILE_SEARCH(DIR_ESR_DATA + 'A_ANNUAL_M_MANNUAL_MONTH-SEAWIFS_OC_MODIS_OC_SEAWIFS_PP_PAT_MODIS_PP_PAT-ECOREGIONS_FULL_NO_ESTUARIES_ESTUARY_SHELF_LME-*.SAVE')      
    FILE  = FILE[WHERE(GET_MTIME(FILE) EQ MAX(GET_MTIME(FILE)))]
    ECOS  = IDL_RESTORE(FILE)
    
    ; Make ANNUAL image from SeaWiFS and MODIS
    
    CHLFILES =           DATE_SELECT(FILE_SEARCH(FIX_PATH(!S.DATASETS + CHLD[0] + '/NEC/STATS/'+CHLPROD+'/A_*MEAN.SAVE')),SYEARS[0],SYEARS[1])
    CHLFILES = [CHLFILES,DATE_SELECT(FILE_SEARCH(FIX_PATH(!S.DATASETS + CHLD[1] + '/NEC/STATS/'+CHLPROD+'/A_*MEAN.SAVE')),MYEARS[0],MYEARS[1])]
    PPDFILES =           DATE_SELECT(FILE_SEARCH(FIX_PATH(!S.DATASETS + PPDD[0] + '/NEC/STATS/'+PPDPROD+'/A_*MEAN.SAVE')),SYEARS[0],SYEARS[1])
    PPDFILES = [PPDFILES,DATE_SELECT(FILE_SEARCH(FIX_PATH(!S.DATASETS + PPDD[1] + '/NEC/STATS/'+PPDPROD+'/A_*MEAN.SAVE')),MYEARS[0],MYEARS[1])]
    SD_STATS_ALL,CHLFILES,PROD='CHLOR_A',STAT_TYPES='MEAN',PERIOD_CODE_IN='A',PERIOD_CODE_OUT='ANNUAL',DATE_RANGE=['1998','2014'],DIR_STATS=DIR_ESR_DATA,SKIP_CNUM=1
    SD_STATS_ALL,PPDFILES,PROD='PPD',    STAT_TYPES='MEAN',PERIOD_CODE_IN='A',PERIOD_CODE_OUT='ANNUAL',DATE_RANGE=['1998','2014'],DIR_STATS=DIR_ESR_DATA,SKIP_CNUM=1
    
    CHLBOT = FILE_SEARCH(DIR_ESR_DATA + 'ANNUAL*'+CHLPROD+'*MEAN.SAVE')
    PPDBOT = FILE_SEARCH(DIR_ESR_DATA + 'ANNUAL*'+PPDPROD+'*MEAN.SAVE')
    FOR F=0,N_ELEMENTS(CHLFILES)-1 DO RESULT = MAKE_ANOM_SAVES(DIR_OUT=DIR_ESR_DATA,FILEA=CHLFILES(F),FILEB=CHLBOT,ANOM='RATIO',OVERWRITE=OVERWRITE)
    FOR F=0,N_ELEMENTS(PPDFILES)-1 DO RESULT = MAKE_ANOM_SAVES(DIR_OUT=DIR_ESR_DATA,FILEA=PPDFILES(F),FILEB=PPDBOT,ANOM='RATIO',OVERWRITE=OVERWRITE)
   
    PERIODS = ['MONTH','ANNUAL', 'A_'+YEAR_RANGE(1998,2014,/STRING)]
    TYPES   = REPLICATE('ANOM',N_ELEMENTS(PERIODS)) & TYPES(0:1) = 'STAT'
    FOR N=0, N_ELEMENTS(PERIODS)-1 DO BEGIN
      APERIOD = PERIODS(N)
      LINEPLOT_ONLY = 0
      YEAR = DATE_2YEAR(PERIOD_2DATE(APERIOD))
      IF YEAR LE MAX(SYEARS) THEN CHLD = 'OC-SEAWIFS-MLAC' ELSE CHLD = 'OC-MODIS-LAC'
      IF YEAR LE MAX(SYEARS) THEN PPDD = 'PP-SEP-1KM'      ELSE PPDD = 'PP-AQ-1KM'
      CHLSTATS = FIX_PATH(!S.DATASETS + CHLD + '/NEC/STATS/'+CHLPROD+'/')
      CHLANOMS = FIX_PATH(!S.DATASETS + CHLD + '/NEC/ANOMS/'+CHLPROD+'/')
      PPDSTATS = FIX_PATH(!S.DATASETS + PPDD + '/NEC/STATS/'+PPDPROD+'/')
      PPDANOMS = FIX_PATH(!S.DATASETS + PPDD + '/NEC/ANOMS/'+PPDPROD+'/')
      IF TYPES(N) EQ 'STAT' THEN BEGIN
        CHLDIR = DIR_ESR_DATA ; CHLSTATS
        PPDDIR = DIR_ESR_DATA ; PPDSTATS
        PAL    = 'PAL_BR'
        CTITLE = UNITS('CHLOROPHYLL',       /NO_UNIT) + ',' + UNITS('CHLOR_A',/NO_NAME,/NO_PAREN) & CTITLE = REPLACE(CTITLE,['(',')'],['','']) ; CTITLE = UNITS('CHLOROPHYLL')
        PTITLE = UNITS('PRIMARY_PRODUCTION',/NO_UNIT) + ',' + UNITS('PPD',    /NO_NAME,/NO_PAREN) & PTITLE = REPLACE(PTITLE,['(',')'],['','']) ; PTITLE = UNITS('PRIMARY_PRODUCTION')
        LABEL  = '1998-2014'
        CSCALE = '.1_10'
        PSCALE = '.2_4'
        CPROD = 'CHLOR_A'
        PPROD = 'PPD'
        CSTAT = 'MEAN'
        PSTAT = 'MEAN'
        AX = DATE_AXIS([19970101,20150101],/YEAR,/YY_YEAR)
        AS = DATE_AXIS([19980101,20140101],/YEAR,/YY_YEAR,STEP=2)
        CRANGE = [0.4,1.4]
        PRANGE = [0.2,1.2]
        PLOTPERIOD = 'A_'
        IF APERIOD EQ 'MONTH' THEN BEGIN
          CHLDIR = CHLSTATS
          PPDDIR = PPDSTATS
          AX = DATE_AXIS([20200101,20201231],/MONTH,/FYEAR,/MID)
          AS = DATE_AXIS([20200101,20201231],/MONTH,/FYEAR,/MID)
          CRANGE = [0.0,2.0]
          PRANGE = [0.0,2.0]
          PLOTPERIOD = 'MONTH_'
          LINEPLOT_ONLY = 1
        ENDIF
      ENDIF ELSE BEGIN
        CHLDIR = DIR_ESR_DATA ; CHLANOMS
        PPDDIR = DIR_ESR_DATA ; PPDANOMS
        PAL    = 'PAL_ANOM_GREY'
        CTITLE = 'Chlorophyll ratio anomaly'
        PTITLE = 'Primary production ratio anomaly'
        LABEL = STRMID(APERIOD,2,4)
        CSCALE = ''
        PSCALE = ''
        CPROD = 'RATIO'
        PPROD = 'RATIO'
        CSTAT = 'MEAN-RATIO'
        PSTAT = 'RATIO'
        AX = DATE_AXIS([20200101,20201231],/MONTH,/FYEAR,/MID)
        AS = DATE_AXIS([20200101,20201231],/MONTH,/FYEAR,/MID)
        CRANGE = [0.0,3.0]
        PRANGE = [0.0,1.5]
        PLOTPERIOD = 'M_' + STRMID(APERIOD,2,4)
      ENDELSE
  
      CHLFILE = FILE_SEARCH(CHLDIR + APERIOD + '*CHLOR_A*' + CSTAT + '*.SAV*')
      PPDFILE = FILE_SEARCH(PPDDIR + APERIOD + '*PPD*' + PSTAT + '*.SAV*')
      PNGFILE = DIR_ESR_PLOTS + APERIOD + '-' + MAP_OUT+ '-CHL_PPD_COMPOSITE_WITH_LINE_PLOT'+FILEEXTRA+'-DPI_'+NUM2STR(RESOLUTION)+'.PNG'
      IF FILE_MAKE([FILE,CHLFILE,PPDFILE],PNGFILE,OVERWRITE=OVERWRITE) EQ 0 THEN CONTINUE
  
      IF LINEPLOT_ONLY EQ 1 THEN DIMS = [1024,475] ELSE DIMS = [1024,1034]
      W = WINDOW(DIMENSIONS=DIMS,BUFFER=BUFFER)
      IF LINEPLOT_ONLY EQ 0 THEN BEGIN
        CHL = STRUCT_READ(CHLFILE,STRUCT=CSTRUCT,MAP_OUT=MAP_OUT)
        PPD = STRUCT_READ(PPDFILE,STRUCT=PSTRUCT,MAP_OUT=MAP_OUT)
        TXC = TEXT(512,995,LABEL,/DEVICE,FONT_SIZE=20,ALIGNMENT=0.5)
  
        MAR  = 25
        CPOS = [    MAR,512+MAR,512 -MAR,1012-MAR]
        PPOS = [512+MAR,512+MAR,1024-MAR,1012-MAR]
  
        IMC = STRUCT_SD_2IMAGE_NG(CSTRUCT,IMG_POSITION=CPOS,USE_PROD=CPROD,/CURRENT,MAP_OUT=MAP_OUT,ADD_MASK=ADD_MASK,MASK_SUBS=MASK_SUBS,MASK_COLOR=255,/ADD_LAND,/ADD_COAST,/ADD_OUTLINE,OUTLINE_THICK=3,OUTLINE_FILE=OUTLINE_FILE,OUTLINE_COLOR=0,SPECIAL_SCALE=CSCALE,BUFFER=BUFFER,PAL=PAL,/DEVICE)
        IMP = STRUCT_SD_2IMAGE_NG(PSTRUCT,IMG_POSITION=PPOS,USE_PROD=PPROD,/CURRENT,MAP_OUT=MAP_OUT,ADD_MASK=ADD_MASK,MASK_SUBS=MASK_SUBS,MASK_COLOR=255,/ADD_LAND,/ADD_COAST,/ADD_OUTLINE,OUTLINE_THICK=3,OUTLINE_FILE=OUTLINE_FILE,OUTLINE_COLOR=0,SPECIAL_SCALE=PSCALE,BUFFER=BUFFER,PAL=PAL,/DEVICE)
        BAR = COLOR_BAR_SCALE_NG(PROD=CPROD,SPECIAL_SCALE=CSCALE,PX=     MAR*2, PY=512,CHARSIZE=12,BACKGROUND=252,XDIM=512-(MAR*4),YDIM=20,PAL=PAL,VERTICAL=0,RIGHT=0,BOTTOM=1,FONT='HELVETICA',/CURRENT,TITLE=CTITLE,/DEVICE)
        BAR = COLOR_BAR_SCALE_NG(PROD=PPROD,SPECIAL_SCALE=PSCALE,PX=512+(MAR*2),PY=512,CHARSIZE=12,BACKGROUND=252,XDIM=512-(MAR*4),YDIM=20,PAL=PAL,VERTICAL=0,RIGHT=0,BOTTOM=1,FONT='HELVETICA',/CURRENT,TITLE=PTITLE,/DEVICE)
      ENDIF
  
      MAR = 50
      DIF = 18
      CPOS = [    MAR*1.5,MAR,512 -MAR*0.5,512-MAR*1.5]
      PPOS = [512+MAR*1.5,MAR,1024-MAR*0.5,512-MAR*1.5]
      TXTC = MAR*2
      TXTP = 512+MAR*2
      TXTY = 512-MAR*2
  
      CTITLE = UNITS('CHLA',/NO_UNIT) + ' ' + UNITS('CHLOR_A',/NO_NAME)
      PTITLE = 'Primary productivity ' + UNITS('PPD',/NO_NAME)
  
      CP = PLOT(AX.JD,CRANGE,XRANGE=AX.JD,XTICKNAME=AS.TICKNAME,XTICKVALUES=AS.TICKV,YRANGE=CRANGE,XMINOR=0,XTICKLEN=0.03,YTICKLEN=0.03,YMINOR=0,AXIS_STYLE=1,/CURRENT,/DEVICE,POSITION=CPOS,/NODATA,YTITLE=CTITLE)
      FOR C=0, N_ELEMENTS(CODES)-1 DO BEGIN
        CPOSM = WHERE(TAG_NAMES(ECOS) EQ REPLACE(CHLPROD,'-','_')+'_MEAN')
        CPOSL = WHERE(TAG_NAMES(ECOS) EQ REPLACE(CHLPROD,'-','_')+'_LOWESS')
        OK = WHERE(ECOS.SUBAREA_CODE EQ CODES(C) AND ECOS.(CPOSM) NE MISSINGS(0.0) AND STRMID(ECOS.PERIOD,0,STRLEN(PLOTPERIOD)) EQ PLOTPERIOD)
        CDATA = ECOS[OK]
        CMEAN = MEAN(CDATA.(CPOSM),/NAN)
        CDATA = CDATA[SORT(PERIOD_2JD(CDATA.PERIOD))]
        IF APERIOD EQ 'MONTH' THEN CDATA = CDATA[SORT(DATE_2MONTH(PERIOD_2DATE(CDATA.PERIOD)))]
        IF APERIOD EQ 'ANNUAL' THEN BEGIN
          LDATA = LOWESS(DATE_2YEAR(PERIOD_2DATE(CDATA.PERIOD)),CDATA.(CPOSM),WIDTH=7)
          CP0 = PLOT(PERIOD_2JD(CDATA.PERIOD),CDATA.(CPOSM),XRANGE=AX.JD,YRANGE=CRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=6,COLOR=COLORS(C),SYMBOL='CIRCLE',SYM_SIZE=0.8,/SYM_FILLED,/CURRENT,/DEVICE,POSITION=CPOS,/OVERPLOT)
         ; CPL = PLOT(PERIOD_2JD(CDATA.PERIOD),LDATA,       XRANGE=AX.JD,YRANGE=CRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=0,COLOR=COLORS(C),                THICK=2,                 /CURRENT,/DEVICE,POSITION=CPOS,/OVERPLOT)
          CPL = PLOT(PERIOD_2JD(CDATA.PERIOD),CDATA.(CPOSL),XRANGE=AX.JD,YRANGE=CRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=0,COLOR=COLORS(C),                THICK=2,                 /CURRENT,/DEVICE,POSITION=CPOS,/OVERPLOT)
        ENDIF ELSE BEGIN
          LDATA = LOWESS(DATE_2MONTH(PERIOD_2DATE(CDATA.PERIOD)),CDATA.(CPOSM),WIDTH=7)
          CP0 = PLOT(JD_ADD(YDOY_2JD('2020',JD_2DOY(PERIOD_2JD(CDATA.PERIOD))),15,/DAY),CDATA.(CPOSM),XRANGE=AX.JD,YRANGE=CRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=6,COLOR=COLORS(C),SYMBOL='CIRCLE',SYM_SIZE=0.8,/SYM_FILLED,/CURRENT,/DEVICE,POSITION=CPOS,/OVERPLOT)
         ; CPL = PLOT(JD_ADD(YDOY_2JD('2020',JD_2DOY(PERIOD_2JD(CDATA.PERIOD))),15,/DAY),LDATA,       XRANGE=AX.JD,YRANGE=CRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=0,COLOR=COLORS(C),                THICK=2,                 /CURRENT,/DEVICE,POSITION=CPOS,/OVERPLOT)
          CPL = PLOT(JD_ADD(YDOY_2JD('2020',JD_2DOY(PERIOD_2JD(CDATA.PERIOD))),15,/DAY),CDATA.(CPOSL),XRANGE=AX.JD,YRANGE=CRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=0,COLOR=COLORS(C),                THICK=2,                 /CURRENT,/DEVICE,POSITION=CPOS,/OVERPLOT)
        ENDELSE
        TXT = TEXT(TXTC, TXTY-(DIF*C),NAMES(C)+' = ' + NUM2STR(CMEAN,DECIMALS=2),COLOR=COLORS(C),FONT_SIZE=12,FONT_NAME='HELVITICA',FONT_STYLE='BOLD',/DEVICE)
      ENDFOR
      XAXIS = AXIS('X',LOCATION=MAX(CP.YRANGE),MAJOR=0,TARGET=CP,MINOR=0)
      YAXIS = AXIS('Y',LOCATION=MAX(AX.JD), MAJOR=0,TARGET=CP,MINOR=0)
  
      PP = PLOT(AX.JD,PRANGE,XRANGE=AX.JD,XTICKNAME=AS.TICKNAME,XTICKVALUES=AS.TICKV,YRANGE=PRANGE,XMINOR=0,XTICKLEN=0.03,YTICKLEN=0.03,YMINOR=0,AXIS_STYLE=1,/CURRENT,/DEVICE,POSITION=PPOS,/NODATA,YTITLE=PTITLE)
      FOR C=0, N_ELEMENTS(CODES)-1 DO BEGIN
        PPOSM = WHERE(TAG_NAMES(ECOS) EQ REPLACE(PPDPROD,'-','_')+'_MEAN')
        PPOSL = WHERE(TAG_NAMES(ECOS) EQ REPLACE(PPDPROD,'-','_')+'_LOWESS')
        OK = WHERE(ECOS.SUBAREA_CODE EQ CODES(C) AND ECOS.(PPOSM) NE MISSINGS(0.0) AND STRMID(ECOS.PERIOD,0,STRLEN(PLOTPERIOD)) EQ PLOTPERIOD)
        PDATA = ECOS[OK]
        PMEAN = MEAN(PDATA.(PPOSM),/NAN)
        PDATA = PDATA[SORT(PERIOD_2JD(PDATA.PERIOD))]
        IF APERIOD EQ 'MONTH' THEN PDATA = PDATA[SORT(DATE_2MONTH(PERIOD_2DATE(PDATA.PERIOD)))]
        IF APERIOD EQ 'ANNUAL' THEN BEGIN
         ; LDATA = LOWESS(DATE_2YEAR(PERIOD_2DATE(PDATA.PERIOD)),PDATA.(PPOSM),WIDTH=7)
          PP0 = PLOT(PERIOD_2JD(PDATA.PERIOD),PDATA.(PPOSM),XRANGE=AX.JD,YRANGE=PRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=6,COLOR=COLORS(C),SYMBOL='CIRCLE',SYM_SIZE=0.8,/SYM_FILLED,/CURRENT,/DEVICE,POSITION=PPOS,/OVERPLOT)
          ;PPL = PLOT(PERIOD_2JD(PDATA.PERIOD),LDATA,       XRANGE=AX.JD,YRANGE=PRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=0,COLOR=COLORS(C),                THICK=2,                 /CURRENT,/DEVICE,POSITION=PPOS,/OVERPLOT)
          PPL = PLOT(PERIOD_2JD(PDATA.PERIOD),PDATA.(PPOSL),XRANGE=AX.JD,YRANGE=PRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=0,COLOR=COLORS(C),                THICK=2,                 /CURRENT,/DEVICE,POSITION=PPOS,/OVERPLOT)
        ENDIF ELSE BEGIN
        ;  LDATA = LOWESS(DATE_2MONTH(PERIOD_2DATE(PDATA.PERIOD)),PDATA.(PPOSM),WIDTH=7)
          PP0 = PLOT(JD_ADD(YDOY_2JD('2020',JD_2DOY(PERIOD_2JD(PDATA.PERIOD))),15,/DAY),PDATA.(PPOSM),XRANGE=AX.JD,YRANGE=PRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=6,COLOR=COLORS(C),SYMBOL='CIRCLE',SYM_SIZE=0.8,/SYM_FILLED,/CURRENT,/DEVICE,POSITION=PPOS,/OVERPLOT)
        ;  PPL = PLOT(JD_ADD(YDOY_2JD('2020',JD_2DOY(PERIOD_2JD(PDATA.PERIOD))),15,/DAY),LDATA,       XRANGE=AX.JD,YRANGE=PRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=0,COLOR=COLORS(C),                THICK=2,                 /CURRENT,/DEVICE,POSITION=PPOS,/OVERPLOT)
          PPL = PLOT(JD_ADD(YDOY_2JD('2020',JD_2DOY(PERIOD_2JD(PDATA.PERIOD))),15,/DAY),PDATA.(PPOSL),XRANGE=AX.JD,YRANGE=PRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=0,COLOR=COLORS(C),                THICK=2,                 /CURRENT,/DEVICE,POSITION=PPOS,/OVERPLOT)
        ENDELSE
        TXT = TEXT(TXTP, TXTY-(DIF*C),NAMES(C)+' = ' + NUM2STR(PMEAN,DECIMALS=2),COLOR=COLORS(C),FONT_SIZE=12,FONT_NAME='HELVITICA',FONT_STYLE='BOLD',/DEVICE)
      ENDFOR
      XAXIS = AXIS('X',LOCATION=MAX(PP.YRANGE),MAJOR=0,TARGET=PP,MINOR=0)
      YAXIS = AXIS('Y',LOCATION=MAX(AX.JD), MAJOR=0,TARGET=PP,MINOR=0)
  
      W.SAVE,PNGFILE,RESOLUTION=RESOLUTION
      W.CLOSE
  
    ENDFOR
  

  ENDIF ; DO_ESR2015_PLOTS


; *******************************************************
  IF DO_ESR2013_PLOTS GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_ESR2013_PLOTS GE 2
    
    BUFFER = 0
    MAP_OUT = 'NEC_ECO'
    RESOLUTION=300
    
    OUTLINE_FILE = !S.SUBAREAS + 'MASK_SUBAREA-'+MAP_OUT+'-PXY_1024_1024-ECOREGIONS_FULL_NO_ESTUARIES.PNG'
    CODES  = ['7',   '5',   '6',  '8']
    COLORS = ['BLUE','CYAN','RED','SPRING_GREEN']
    NAMES  = ['MAB', 'GB',  'GOM','SS']
    
    MASK = STRUCT_SD_READ(!S.SUBAREAS + 'MASK_SUBAREA-'+MAP_OUT+'-PXY_1024_1024-ECOREGIONS_FULL_NO_ESTUARIES.SAVE',STRUCT=STRUCT,MAP_OUT=MAP_OUT)    
    MASK_SUBS = WHERE(MASK EQ 36 AND MASK NE MISSINGS(MASK))
    ADD_MASK = 1
    IF ADD_MASK EQ 1 THEN FILEEXTRA = '-OFFSHORE_MASK' ELSE FILEEXTRA = ''
    
    CHLSTATS = FIX_PATH(!S.DATASETS + 'OC-SEA_AQU-LAC/NEC/STATS/CHLOR_A-PAN/')
    CHLANOMS = FIX_PATH(!S.DATASETS + 'OC-SEA_AQU-LAC/NEC/ANOMS/CHLOR_A-PAN/')
    PPDSTATS = FIX_PATH(!S.DATASETS + 'PP-SAP-1KM/NEC/STATS/PPD-VGPM2/')
    PPDANOMS = FIX_PATH(!S.DATASETS + 'PP-SAP-1KM/NEC/ANOMS/PPD-VGPM2/')
        
    CHLSUBS = FIX_PATH(!S.DATASETS + 'OC-SEA_AQU-LAC/NEC/TS_SUBAREAS-STATS/') ; 
    PPDSUBS = FIX_PATH(!S.DATASETS + 'PP-SAP-1KM/NEC/TS_SUBAREAS-STATS/') ;'PP-SA_PAN-PAT-LAC/
    CHLECO  = FILE_SEARCH(CHLSUBS + 'A_ANNUAL_M_*MONTH*-ECOREGIONS_FULL_NO_ESTUARIES-*-MIN_OC_PRODS.SAVE')           & CHLECOS = IDL_RESTORE(CHLECO)
    PPDECO  = FILE_SEARCH(PPDSUBS + 'A_ANNUAL_M_*MONTH*-ECOREGIONS_FULL_NO_ESTUARIES-*-FULL_PP_PRODS.SAVE')       & PPDECOS = IDL_RESTORE(PPDECO)
    CHLLME  = FILE_SEARCH(CHLSUBS + 'A_ANNUAL_M_*MONTH*-ESTUARY_SHELF_LME-*-CHLOR_A-OC_CHLOR_A-PAN.SAVE')            ;& CHLLMES = IDL_RESTORE(CHLLME)
    PPDLME  = FILE_SEARCH(PPDSUBS + 'A_ANNUAL_M_*MONTH*-ESTUARY_SHELF_LME-*-PPD-VGPM2.SAVE')                       ;& PPDLMES = IDL_RESTORE(PPDLME)
    
    PERIODS = ['MONTH','ANNUAL', 'A_'+YEAR_RANGE(1998,2014,/STRING)]
    TYPES   = REPLICATE('ANOM',N_ELEMENTS(PERIODS)) & TYPES(0:1) = 'STAT'
    FOR N=0, N_ELEMENTS(PERIODS)-1 DO BEGIN
      APERIOD = PERIODS(N)
      LINEPLOT_ONLY = 0
      IF TYPES(N) EQ 'STAT' THEN BEGIN
        CHLDIR = CHLSTATS
        PPDDIR = PPDSTATS
        PAL    = 'PAL_SW3'
        CTITLE = UNITS('CHLOROPHYLL',       /NO_UNIT) + ',' + UNITS('CHLOR_A',/NO_NAME,/NO_PAREN)  ; CTITLE = UNITS('CHLOROPHYLL') 
        PTITLE = UNITS('PRIMARY_PRODUCTION',/NO_UNIT) + ',' + UNITS('PPD',    /NO_NAME,/NO_PAREN)  ; PTITLE = UNITS('PRIMARY_PRODUCTION')                
        LABEL  = '1998-2014'
        CSCALE = '.1_10'
        PSCALE = '.2_4'
        CPROD = 'CHLOR_A'
        PPROD = 'PPD'
        CSTAT = 'MEAN'
        PSTAT = 'STATS'
        AX = DATE_AXIS([19970101,20150101],/YEAR,/YY_YEAR)
        AS = DATE_AXIS([19980101,20140101],/YEAR,/YY_YEAR,STEP=2)
        CRANGE = [0.4,1.0]
        PRANGE = [0.2,0.8]
        PLOTPERIOD = 'A_'
        IF APERIOD EQ 'MONTH' THEN BEGIN
          AX = DATE_AXIS([20200101,20201231],/MONTH,/FYEAR,/MID)
          AS = DATE_AXIS([20200101,20201231],/MONTH,/FYEAR,/MID)
          CRANGE = [0.0,1.4]
          PRANGE = [0.0,1.4]
          PLOTPERIOD = 'MONTH_'
          LINEPLOT_ONLY = 1
        ENDIF
      ENDIF ELSE BEGIN
        CHLDIR = CHLANOMS
        PPDDIR = PPDANOMS
        PAL    = 'PAL_ANOM_GREY'
        CTITLE = 'Chlorophyll ratio anomaly'
        PTITLE = 'Primary production ratio anomaly'
        LABEL = STRMID(APERIOD,2,4)
        CSCALE = ''
        PSCALE = ''
        CPROD = 'RATIO'
        PPROD = 'RATIO'
        CSTAT = 'MEAN-RATIO'
        PSTAT = 'RATIO'
        AX = DATE_AXIS([20200101,20201231],/MONTH,/FYEAR,/MID)
        AS = DATE_AXIS([20200101,20201231],/MONTH,/FYEAR,/MID)
        CRANGE = [0.0,2.0]
        PRANGE = [0.0,1.5]
        PLOTPERIOD = 'M_' + STRMID(APERIOD,2,4)
      ENDELSE
        
      CHLFILE = FILE_SEARCH(CHLDIR + APERIOD + '*' + CSTAT + '*.SAV*')
      PPDFILE = FILE_SEARCH(PPDDIR + APERIOD + '*' + PSTAT + '*.SAV*')
      PNGFILE = DIR_ESR_PLOTS + APERIOD + '-' + MAP_OUT+ '-CHL_PPD_COMPOSITE_WITH_LINE_PLOT'+FILEEXTRA+'-DPI_'+NUM2STR(RESOLUTION)+'.PNG'
      IF GET_MTIME(PNGFILE) GT MAX(GET_MTIME([CHLFILE,PPDFILE,CHLECO,PPDECO,CHLLME,PPDLME])) AND NOT KEYWORD_SET(OVERWRITE) THEN CONTINUE
      
      IF LINEPLOT_ONLY EQ 1 THEN DIMS = [1024,475] ELSE DIMS = [1024,1034]
      W = WINDOW(DIMENSIONS=DIMS,BUFFER=BUFFER)
      IF LINEPLOT_ONLY EQ 0 THEN BEGIN
        CHL = STRUCT_READ(CHLFILE,STRUCT=CSTRUCT,MAP_OUT=MAP_OUT)
        PPD = STRUCT_READ(PPDFILE,STRUCT=PSTRUCT,MAP_OUT=MAP_OUT)
        TXC = TEXT(512,1000,LABEL,/DEVICE,FONT_SIZE=20,ALIGNMENT=0.5)
        
        MAR  = 25
        CPOS = [    MAR,512+MAR,512 -MAR,1012-MAR]
        PPOS = [512+MAR,512+MAR,1024-MAR,1012-MAR]
        
        IMC = STRUCT_SD_2IMAGE_NG(CSTRUCT,IMG_POSITION=CPOS,USE_PROD=CPROD,/CURRENT,ADD_MASK=ADD_MASK,MASK_SUBS=MASK_SUBS,MASK_COLOR=255,/ADD_LAND,/ADD_COAST,/ADD_OUTLINE,OUTLINE_THICK=3,OUTLINE_FILE=OUTLINE_FILE,OUTLINE_COLOR=0,SPECIAL_SCALE=CSCALE,BUFFER=BUFFER,PAL=PAL,/DEVICE)
        IMP = STRUCT_SD_2IMAGE_NG(PSTRUCT,IMG_POSITION=PPOS,USE_PROD=PPROD,/CURRENT,ADD_MASK=ADD_MASK,MASK_SUBS=MASK_SUBS,MASK_COLOR=255,/ADD_LAND,/ADD_COAST,/ADD_OUTLINE,OUTLINE_THICK=3,OUTLINE_FILE=OUTLINE_FILE,OUTLINE_COLOR=0,SPECIAL_SCALE=PSCALE,BUFFER=BUFFER,PAL=PAL,/DEVICE)
        BAR = COLOR_BAR_SCALE_NG(PROD=CPROD,SPECIAL_SCALE=CSCALE,PX=     MAR*2, PY=512,CHARSIZE=12,BACKGROUND=252,XDIM=512-(MAR*4),YDIM=20,PAL=PAL,VERTICAL=0,RIGHT=0,BOTTOM=1,FONT='HELVETICA',/CURRENT,TITLE=CTITLE,/DEVICE)
        BAR = COLOR_BAR_SCALE_NG(PROD=PPROD,SPECIAL_SCALE=PSCALE,PX=512+(MAR*2),PY=512,CHARSIZE=12,BACKGROUND=252,XDIM=512-(MAR*4),YDIM=20,PAL=PAL,VERTICAL=0,RIGHT=0,BOTTOM=1,FONT='HELVETICA',/CURRENT,TITLE=PTITLE,/DEVICE)
      ENDIF     
      
      MAR = 50
      DIF = 18
      CPOS = [    MAR*1.5,MAR,512 -MAR*0.5,512-MAR*1.5]
      PPOS = [512+MAR*1.5,MAR,1024-MAR*0.5,512-MAR*1.5]
      TXTC = MAR*2
      TXTP = 512+MAR*2
      TXTY = 512-MAR*2
      
      CTITLE = UNITS('CHLA',/NO_UNIT) + ' ' + UNITS('CHLOR_A',/NO_NAME)
      PTITLE = 'Primary productivity ' + UNITS('PPD',/NO_NAME)
      
      CP = PLOT(AX.JD,CRANGE,XRANGE=AX.JD,XTICKNAME=AS.TICKNAME,XTICKVALUES=AS.TICKV,YRANGE=CRANGE,XMINOR=0,XTICKLEN=0.03,YTICKLEN=0.03,YMINOR=0,AXIS_STYLE=1,/CURRENT,/DEVICE,POSITION=CPOS,/NODATA,YTITLE=CTITLE)            
      FOR C=0, N_ELEMENTS(CODES)-1 DO BEGIN
        OK = WHERE(CHLECOS.SUBAREA_CODE EQ CODES(C) AND CHLECOS.MEAN_CHLOR_A_PAN NE MISSINGS(0.0) AND STRMID(CHLECOS.PERIOD,0,STRLEN(PLOTPERIOD)) EQ PLOTPERIOD)
        CDATA = CHLECOS[OK]
        CMEAN = MEAN(CDATA.MEAN_CHLOR_A_PAN,/NAN)        
        CDATA = CDATA[SORT(PERIOD_2JD(CDATA.PERIOD))]
        IF APERIOD EQ 'MONTH' THEN CDATA = CDATA[SORT(DATE_2MONTH(PERIOD_2DATE(CDATA.PERIOD)))]
        IF APERIOD EQ 'ANNUAL' THEN BEGIN        
          LDATA = LOWESS(DATE_2YEAR(PERIOD_2DATE(CDATA.PERIOD)),CDATA.MEAN_CHLOR_A_PAN,WIDTH=7)
          CP0 = PLOT(PERIOD_2JD(CDATA.PERIOD),CDATA.MEAN_CHLOR_A_PAN,XRANGE=AX.JD,YRANGE=CRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=6,COLOR=COLORS(C),SYMBOL='CIRCLE',SYM_SIZE=0.8,/SYM_FILLED,/CURRENT,/DEVICE,POSITION=CPOS,/OVERPLOT)
          CPL = PLOT(PERIOD_2JD(CDATA.PERIOD),LDATA,                 XRANGE=AX.JD,YRANGE=CRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=0,COLOR=COLORS(C),                THICK=2,                 /CURRENT,/DEVICE,POSITION=CPOS,/OVERPLOT)
        ENDIF ELSE BEGIN
          LDATA = LOWESS(DATE_2MONTH(PERIOD_2DATE(CDATA.PERIOD)),CDATA.MEAN_CHLOR_A_PAN,WIDTH=7)
          CP0 = PLOT(JD_ADD(YDOY_2JD('2020',JD_2DOY(PERIOD_2JD(CDATA.PERIOD))),15,/DAY),CDATA.MEAN_CHLOR_A_PAN,XRANGE=AX.JD,YRANGE=CRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=6,COLOR=COLORS(C),SYMBOL='CIRCLE',SYM_SIZE=0.8,/SYM_FILLED,/CURRENT,/DEVICE,POSITION=CPOS,/OVERPLOT)
          CPL = PLOT(JD_ADD(YDOY_2JD('2020',JD_2DOY(PERIOD_2JD(CDATA.PERIOD))),15,/DAY),LDATA,                 XRANGE=AX.JD,YRANGE=CRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=0,COLOR=COLORS(C),                THICK=2,                 /CURRENT,/DEVICE,POSITION=CPOS,/OVERPLOT)
        ENDELSE
        TXT = TEXT(TXTC, TXTY-(DIF*C),NAMES(C)+' = ' + NUM2STR(CMEAN,DECIMALS=2),COLOR=COLORS(C),FONT_SIZE=12,FONT_NAME='HELVITICA',FONT_STYLE='BOLD',/DEVICE)
      ENDFOR  
      XAXIS = AXIS('X',LOCATION=MAX(CP.YRANGE),MAJOR=0,TARGET=CP,MINOR=0)
      YAXIS = AXIS('Y',LOCATION=MAX(AX.JD), MAJOR=0,TARGET=CP,MINOR=0)
      
      PP = PLOT(AX.JD,PRANGE,XRANGE=AX.JD,XTICKNAME=AS.TICKNAME,XTICKVALUES=AS.TICKV,YRANGE=PRANGE,XMINOR=0,XTICKLEN=0.03,YTICKLEN=0.03,YMINOR=0,AXIS_STYLE=1,/CURRENT,/DEVICE,POSITION=PPOS,/NODATA,YTITLE=PTITLE)      
      FOR C=0, N_ELEMENTS(CODES)-1 DO BEGIN
        OK = WHERE(PPDECOS.SUBAREA_CODE EQ CODES(C) AND PPDECOS.MEAN_PPD_VGPM2 NE MISSINGS(0.0) AND STRMID(PPDECOS.PERIOD,0,STRLEN(PLOTPERIOD)) EQ PLOTPERIOD)
        PDATA = PPDECOS[OK]
        PMEAN = MEAN(PDATA.MEAN_PPD_VGPM2,/NAN)
        PDATA = PDATA[SORT(PERIOD_2JD(PDATA.PERIOD))]
        IF APERIOD EQ 'MONTH' THEN PDATA = PDATA[SORT(DATE_2MONTH(PERIOD_2DATE(PDATA.PERIOD)))]
        IF APERIOD EQ 'ANNUAL' THEN BEGIN        
          LDATA = LOWESS(DATE_2YEAR(PERIOD_2DATE(PDATA.PERIOD)),PDATA.MEAN_PPD_VGPM2,WIDTH=7)
          PP0 = PLOT(PERIOD_2JD(PDATA.PERIOD),PDATA.MEAN_PPD_VGPM2,XRANGE=AX.JD,YRANGE=PRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=6,COLOR=COLORS(C),SYMBOL='CIRCLE',SYM_SIZE=0.8,/SYM_FILLED,/CURRENT,/DEVICE,POSITION=PPOS,/OVERPLOT)
          PPL = PLOT(PERIOD_2JD(PDATA.PERIOD),LDATA,               XRANGE=AX.JD,YRANGE=PRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=0,COLOR=COLORS(C),                THICK=2,                 /CURRENT,/DEVICE,POSITION=PPOS,/OVERPLOT)
        ENDIF ELSE BEGIN
          LDATA = LOWESS(DATE_2MONTH(PERIOD_2DATE(PDATA.PERIOD)),PDATA.MEAN_PPD_VGPM2,WIDTH=7)
          PP0 = PLOT(JD_ADD(YDOY_2JD('2020',JD_2DOY(PERIOD_2JD(PDATA.PERIOD))),15,/DAY),PDATA.MEAN_PPD_VGPM2,XRANGE=AX.JD,YRANGE=PRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=6,COLOR=COLORS(C),SYMBOL='CIRCLE',SYM_SIZE=0.8,/SYM_FILLED,/CURRENT,/DEVICE,POSITION=PPOS,/OVERPLOT)
          PPL = PLOT(JD_ADD(YDOY_2JD('2020',JD_2DOY(PERIOD_2JD(PDATA.PERIOD))),15,/DAY),LDATA,               XRANGE=AX.JD,YRANGE=PRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=0,COLOR=COLORS(C),                THICK=2,                 /CURRENT,/DEVICE,POSITION=PPOS,/OVERPLOT)
        ENDELSE
        TXT = TEXT(TXTP, TXTY-(DIF*C),NAMES(C)+' = ' + NUM2STR(PMEAN,DECIMALS=2),COLOR=COLORS(C),FONT_SIZE=12,FONT_NAME='HELVITICA',FONT_STYLE='BOLD',/DEVICE)
      ENDFOR
      XAXIS = AXIS('X',LOCATION=MAX(PP.YRANGE),MAJOR=0,TARGET=PP,MINOR=0)
      YAXIS = AXIS('Y',LOCATION=MAX(AX.JD), MAJOR=0,TARGET=PP,MINOR=0)
      
      W.SAVE,PNGFILE,RESOLUTION=RESOLUTION
      W.CLOSE
      
    ENDFOR
    STOP
    
    
    
    
    
  ENDIF ; DO_ESR2013_PLOTS  


; *******************************************************
  IF DO_ANNUAL_IMAGES GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_ANNUAL_IMAGES GE 2
    
    BUFFER = 0
    RESOLUTION=200
    
    MAP_OUT='NEC'
    OUTLINE_FILE = !S.IMAGES + 'MASK_SUBAREA-'+MAP_OUT+'-PXY_1024_1024-ECOREGIONS_FULL_NO_ESTUARIES.PNG'
    MASK = STRUCT_SD_READ(!S.SUBAREAS + 'MASK_SUBAREA-NEC-PXY_1024_1024-ECOREGIONS_FULL_NO_ESTUARIES.SAVE',MAP_OUT=MAP_OUT)            
    MASK_SUBS = WHERE(MASK EQ 36 AND MASK NE MISSINGS(0.0))
    
    DIR_OC  = DIR_DATASETS + 'OC-SEA_AQU-LAC'    + SL + 'NEC' + SL + 'STATS' + SL + 'CHLOR_A-PAN' + SL 
    DIR_OCA = DIR_DATASETS + 'OC-SEA_AQU-LAC'    + SL + 'NEC' + SL + 'ANOMS' + SL + 'CHLOR_A-PAN' + SL
    DIR_PP  = DIR_DATASETS + 'PP-SA_PAN-PAT-LAC' + SL + 'NEC' + SL + 'STATS' + SL + 'PPD-VGPM2'   + SL
    DIR_PPA = DIR_DATASETS + 'PP-SA_PAN-PAT-LAC' + SL + 'NEC' + SL + 'ANOMS' + SL + 'PPD-VGPM2'   + SL
    
    YEARS = YEAR_RANGE(1998,2012,/STRING)
    
    FOR PER=0, N_ELEMENTS(YEARS)-1 DO BEGIN
      PERIOD = 'A_' + YEARS(PER)
    
      CFILE  = FILE_SEARCH(DIR_OC  + PERIOD+'*CHLOR_A-PAN*MEAN.SAVE')                          
      CSFILE = FILE_SEARCH(DIR_OC  + PERIOD+'*CHLOR_A-PAN*SPAN*.SAVE')                         
      CAFILE = FILE_SEARCH(DIR_OCA + PERIOD+'-ANNUAL_1998_2012*CHLOR_A-PAN*MEAN-RATIO*.SAVE')  
      PFILE  = FILE_SEARCH(DIR_PP  + PERIOD+'*PPD-VGPM2*MEAN.SAVE')                            
      PSFILE = FILE_SEARCH(DIR_PP  + PERIOD+'*PPD-VGPM2*SPAN*.SAVE')                           
      PAFILE = FILE_SEARCH(DIR_PPA + PERIOD+'-ANNUAL_1998_2012*PPD-VGPM2*MEAN-RATIO*.SAVE')    
    
;    CDATA   = STRUCT_SD_READ(CFILE, STRUCT=CSTRUCT, SUBS=CSUBS)
;    CSDATA  = STRUCT_SD_READ(CSFILE,STRUCT=CSSTRUCT,SUBS=CSSUBS)
;    CADATA  = STRUCT_SD_READ(CAFILE,STRUCT=CASTRUCT,SUBS=CASUBS)
;    PDATA   = STRUCT_SD_READ(PFILE, STRUCT=PSTRUCT, SUBS=PSUBS)
;    PSDATA  = STRUCT_SD_READ(PSFILE,STRUCT=PSSTRUCT,SUBS=PSSUBS)
;    PADATA  = STRUCT_SD_READ(PAFILE,STRUCT=PASTRUCT,SUBS=PASUBS)
;
;    W   = WINDOW(DIMENSIONS=[512,768],LAYOUT=[2,3,0],MARGIN=0,BUFFER=BUFFER)
;    CIMAGE  = STRUCT_SD_2IMAGE_NG(CSTRUCT ,/ADD_LAND,/ADD_COAST,/ADD_MASK,MASK_SUBS=MASK_SUBS,MASK_COLOR=255,BATHS=100,LAYOUT=[2,3,1],MARGIN=0,/CURRENT,SPECIAL_SCALE='MEDIUM',BUFFER=BUFFER,MAP_OUT='NEC_ECO',PAL='PAL_SW3')
;    PIMAGE  = STRUCT_SD_2IMAGE_NG(PSTRUCT ,/ADD_LAND,/ADD_COAST,/ADD_MASK,MASK_SUBS=MASK_SUBS,MASK_COLOR=255,BATHS=100,LAYOUT=[2,3,2],MARGIN=0,/CURRENT,SPECIAL_SCALE='MID'   ,BUFFER=BUFFER,MAP_OUT='NEC_ECO',PAL='PAL_SW3') 
;    CSIMAGE = STRUCT_SD_2IMAGE_NG(CSSTRUCT,/ADD_LAND,/ADD_COAST,/ADD_MASK,MASK_SUBS=MASK_SUBS,MASK_COLOR=255,BATHS=100,LAYOUT=[2,3,3],MARGIN=0,/CURRENT,SPECIAL_SCALE='30'  ,BUFFER=BUFFER,MAP_OUT='NEC_ECO',PAL='PAL_SW3',USE_PROD='LNUM')
;    PPIMAGE = STRUCT_SD_2IMAGE_NG(PSSTRUCT,/ADD_LAND,/ADD_COAST,/ADD_MASK,MASK_SUBS=MASK_SUBS,MASK_COLOR=255,BATHS=100,LAYOUT=[2,3,4],MARGIN=0,/CURRENT,SPECIAL_SCALE='30'   ,BUFFER=BUFFER,MAP_OUT='NEC_ECO',PAL='PAL_SW3',USE_PROD='LNUM')  
;    CAIMAGE = STRUCT_SD_2IMAGE_NG(CASTRUCT,/ADD_LAND,/ADD_COAST,/ADD_COLORBAR,/ADD_MASK,MASK_SUBS=MASK_SUBS,MASK_COLOR=255,BATHS=100,LAYOUT=[2,3,5],MARGIN=0,/CURRENT,SPECIAL_SCALE='2'     ,BUFFER=BUFFER,MAP_OUT='NEC_ECO',PAL='PAL_ANOMG')
;    PAIMAGE = STRUCT_SD_2IMAGE_NG(PASTRUCT,/ADD_LAND,/ADD_COAST,/ADD_MASK,MASK_SUBS=MASK_SUBS,MASK_COLOR=255,BATHS=100,LAYOUT=[2,3,6],MARGIN=0,/CURRENT,SPECIAL_SCALE='2'     ,BUFFER=BUFFER,MAP_OUT='NEC_ECO',PAL='PAL_ANOMG')   
;    
;    PALS  = ['PAL_SW3','PAL_SW3','PAL_SW3','PAL_SW3','PAL_ANOM_GREY','PAL_ANOM_GREY']
;    PRODS = ['CHLOR_A','PPD','LNUM','LNUM','RATIO','RATIO']
;    SS    = ['MEDIUM','MID','30','30','','']
;    TITLE = ['CHL '+UNITS('CHLOR_A',/NO_NAME),'PP '+UNITS('PPD',/NO_NAME),'2012 CHL Span','2012 PP Span','2012 CHL Anomaly', '2012 PP Anomaly']
;    TICKVALUES = LIST([ .03,  .1,  .3,  1,  3,  10], [ .1,  .3,  1,  3,  5], [ 1,  3,  10,  30], [ 1,  3, 10,30],    [.5,.75,1,1.5,2], [.5,.75,1,1.5,2])
;    TICKNAMES  = LIST(['.03','.1','.3','1','3','10'],['.1','.3','1','3','5'],['1','3','10','30'],['1','3','10','30'],['0.5','0.75','1.0','1.5','2.0'],['0.5','0.75','1.0','1.5','2.0'])
;    LOGS  = [1,1,1,1,1,1]
;    XPOS  = [0.02,0.52,0.02,0.52,0.02,0.52]
;    YPOS  = [0.95,0.95,0.61,0.61,0.283,0.283]
;    XDIF  = 0.23
;    YDIF  = 0.015
;    
;    FOR P=0, N_ELEMENTS(PRODS)-1 DO BEGIN   
;      RGB = CPAL_READ(PALS(P))
;      RGB = RGB(*,1:250)
;      RANGE = SD_SCALES([1,250],PROD=PRODS(P),SPECIAL_SCALE=SS(P),/BIN2DATA)
;      IF LOGS(P) EQ 1 THEN RANGE = ALOG10(RANGE)
;      IF LOGS(P) EQ 1 THEN TICKV = ALOG10(TICKVALUES(P)) ELSE TICKV = TICKVALUES(P)
;      POSITION = [XPOS(P),YPOS(P),XPOS(P)+XDIF,YPOS(P)+YDIF]      
;      CB = COLORBAR(POSITION=POSITION,RGB_TABLE=RGB,RANGE=RANGE,TICKVALUES=TICKV,TICKNAME=TICKNAMES(P),FONT_SIZE=9,TEXTPOS=0,MINOR=0,TICKLAYOUT=1,TICKLEN=0.2,/BORDER)
;      TXT = TEXT(XPOS(P)+.11,YPOS(P)+.02,TITLE(P),ALIGNMENT=0.5,FONT_SIZE=10)
;    ENDFOR  
;        
;    W.SAVE, DIR_ESR_PLOTS + 'CHLOR_A-PP-MEAN-SPAN_600DPI.PNG',RESOLUTION=600
;    W.SAVE, DIR_ESR_PLOTS + 'CHLOR_A-PP-MEAN-SPAN_300DPI.PNG',RESOLUTION=300
;    W.SAVE, DIR_ESR_PLOTS + 'CHLOR_A-PP-MEAN-SPAN_220DPI.PNG',RESOLUTION=220    
;    W.CLOSE
    
      FILES  = [CFILE,PFILE,CSFILE,PSFILE,CAFILE,PAFILE]
      PRODS = ['CHLOR_A','PPD',    'LNUM',   'LNUM',   'RATIO',        'RATIO']
      PALS  = ['PAL_SW3','PAL_SW3','PAL_SW3','PAL_SW3','PAL_ANOM_GREY','PAL_ANOM_GREY']    
      SS    = ['.1_10',  '.2_4',   '30',     '30',     '',             '']
      LOGS  = [1,1,1,1,1,1]
      TITLE = YEARS(PER)+[' CHL '+UNITS('CHLOR_A',/NO_NAME),' PP '+UNITS('PPD',/NO_NAME),+' CHL Span',' PP Span',' CHL Anomaly', ' PP Anomaly']
      TICKVALUES = LIST([ .1,  .3,  1,  3,  10], [ .2,  .3, .6,  1,  2,  3], [ 1,  3,  10,  30], [ 1,  3, 10,30],    [.5,.75,1,1.5,2], [.5,.75,1,1.5,2])
      TICKNAMES  = LIST(['.1','.3','1','3','10'],['.2','.3','6','1','2','3'],['1','3','10','30'],['1','3','10','30'],['0.5','0.75','1.0','1.5','2.0'],['0.5','0.75','1.0','1.5','2.0'])
      
      
      COMBOS = LIST([CFILE,PFILE],[CSFILE,PSFILE],[CAFILE,PAFILE])
      NAMES  = ['MEAN','SPAN','ANOM']
      
      FOR C=0, N_ELEMENTS(COMBOS)-1 DO BEGIN
        F  = COMBOS(C)
        F1 = F[0]
        F2 = F[1]         
        PNGFILE = DIR_ESR_PLOTS + PERIOD+'-CHLOR_A-PP-'+NAMES(C)+'-'+NUM2STR(RESOLUTION)+'_DPI.PNG'
        IF GET_MTIME(PNGFILE) GT MAX(GET_MTIME([F1,F2])) AND NOT KEYWORD_SET(OVERWRITE) THEN CONTINUE
        DATA1 = STRUCT_SD_READ(F1,STRUCT=STRUCT1,MAP_OUT=MAP_OUT)
        DATA2 = STRUCT_SD_READ(F2,STRUCT=STRUCT2,MAP_OUT=MAP_OUT)
        P1 = WHERE(FILES EQ F1)
        P2 = WHERE(FILES EQ F2)
          
        W   = WINDOW(DIMENSIONS=[1024,512],MARGIN=0,BUFFER=BUFFER)
        IM1  = STRUCT_SD_2IMAGE_NG(STRUCT1 ,/ADD_LAND,/ADD_COAST,/ADD_MASK,MASK_SUBS=MASK_SUBS,MASK_COLOR=255,/ADD_OUTLINE,OUTLINE_THICK=3,OUTLINE_FILE=OUTLINE_FILE,OUTLINE_COLOR=0,LAYOUT=[2,1,1],MARGIN=0,/CURRENT,SPECIAL_SCALE=SS(P1),BUFFER=BUFFER,PAL=PALS(P1),USE_PROD=PRODS(P1[0]))
        IM2  = STRUCT_SD_2IMAGE_NG(STRUCT2 ,/ADD_LAND,/ADD_COAST,/ADD_MASK,MASK_SUBS=MASK_SUBS,MASK_COLOR=255,/ADD_OUTLINE,OUTLINE_THICK=3,OUTLINE_FILE=OUTLINE_FILE,OUTLINE_COLOR=0,LAYOUT=[2,1,2],MARGIN=0,/CURRENT,SPECIAL_SCALE=SS(P2),BUFFER=BUFFER,PAL=PALS(P2),USE_PROD=PRODS(P2[0]))
          
        XPOS  = [0.015,0.515]
        YPOS  = [0.91,0.91]
        XDIF  = 0.26
        YDIF  = 0.03
        
        FOR P=0, N_ELEMENTS(F)-1 DO BEGIN
          POS = WHERE(FILES EQ F(P)) & POS = POS[0]      
          RGB = CPAL_READ(PALS(POS))
          RGB = RGB(*,1:250)
          RANGE = SD_SCALES([1,250],PROD=PRODS(POS),SPECIAL_SCALE=SS(POS),/BIN2DATA)
          TICKV = TICKVALUES(POS)
          IF LOGS(POS) EQ 1 THEN RANGE = ALOG10(RANGE)
          IF LOGS(POS) EQ 1 THEN TICKV = ALOG10(TICKV) 
          POSITION = [XPOS(P),YPOS(P),XPOS(P)+XDIF,YPOS(P)+YDIF]
          CB = COLORBAR(POSITION=POSITION,RGB_TABLE=RGB,RANGE=RANGE,TICKVALUES=TICKV,TICKNAME=TICKNAMES(POS),FONT_SIZE=11,TEXTPOS=0,MINOR=0,TICKLAYOUT=1,TICKLEN=0.2,/BORDER)
          TXT = TEXT(XPOS(P)+.13,YPOS(P)+.04,TITLE(POS),ALIGNMENT=0.5,FONT_SIZE=12,FONT_STYLE=1)
        ENDFOR
      
        W.SAVE,PNGFILE,RESOLUTION=RESOLUTION
        W.CLOSE
      ENDFOR
    ENDFOR
       
 STOP
  ENDIF ; DO_ANNUAL_IMAGES
;  
; *******************************************************
  IF DO_SST_ANOMS GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_SST_ANOMS GE 2
    BUFFER = 1
    DO_COMP = 1
  ;  FILES = FILE_SEARCH(DIR_DATASETS + 'SST-4-NEC' + SL + 'ANOMS' + SL + '*ANNUAL_1982_2010*SST*MEAN*SAVE')    
    FILES = FILE_SEARCH(DIR_DATASETS + 'SST-PAT-4' + SL + 'NEC' + SL + 'ANOMS' + SL + 'SST-N_11UM' + SL + 'A_*ANNUAL_1982_2012*SST*MEAN*SAVE')
    PNGS = []
  ;  W = WINDOW(DIMENSIONS=[1700,680],LAYOUT=[10,4,0],BUFFER=BUFFER)
    IF DO_COMP GE 1 THEN ADD_COLORBAR = 0 ELSE ADD_COLORBAR = 1
    FOR N = 0L, N_ELEMENTS(FILES)-1 DO BEGIN
      FP = PARSE_IT(FILES(N))
      YEAR = DATE_2YEAR(FP.DATE_START)
      PNGFILE = DIR_DATASETS + 'SST-PAT-4' + SL + 'NEC' + SL + 'ANOMS_BROWSE' + SL + FP.NAME + '.PNG'
      PNGS = [PNGS,PNGFILE]
      IF FILE_TEST(PNGFILE) EQ 1 AND OVERWRITE EQ 0 THEN CONTINUE
      DATA   = STRUCT_SD_READ(FILES(N),STRUCT=STRUCT,SUBS=SUBS,ERROR=ERROR)
      IF ERROR EQ 1 THEN CONTINUE
      IM = STRUCT_SD_2IMAGE_NG(STRUCT,/ADD_LAND,/ADD_COAST,/ADD_BATHY,ADD_COLORBAR=ADD_COLORBAR,BATHS=100,SPECIAL_SCALE='4',MAP_OUT='NEC',COLORBAR_TITLE='SST Anomaly '+ UNITS('SST',/NO_NAME),PAL='PAL_ANOMG',BUFFER=BUFFER)
   ;   IM = W.IMAGE(STRUCT_SD_2IMAGE(STRUCT,/ADD_LAND,/ADD_COAST,/ADD_BATHY,ADD_COLORBAR=ADD_COLORBAR,BATHS=100,SPECIAL_SCALE='4',MAP_OUT='NEC_ECO',PAL='PAL_ANOMG',LAYOUT=[10,4,N+2],/CURRENT)
      T = TEXT(20,860,YEAR,FONT_SIZE=50,/DEVICE,TARGET=IM)  
      IM.SAVE,PNGFILE,RESOLUTION=200,BIT_DEPTH=2
      IM.CLOSE
      GONE, IM
      GONE, T
    ENDFOR
  ;  COMPFILE = DIR_ESR_PLOTS + 'ANNUAL-AVHRR-MODIS_TERRA-MODIS_AQUA-SST_ANOMALY-COMPOSITE.PNG'
    COMPFILE = DIR_DATASETS + 'SST-PAT-4' + SL + 'NEC' + SL + 'ANOMS_COMPOSITE' + SL + 'ANNUAL-AVHRR-MODIS_TERRA-MODIS_AQUA-SST_ANOMALY-COMPOSITE.PNG'
    IF GET_MTIME(COMPFILE) LT MAX(GET_MTIME(PNGS)) OR FILE_TEST(COMPFILE) EQ 0 OR OVERWRITE EQ 1 AND DO_COMP EQ 1 THEN BEGIN
      W = WINDOW(DIMENSIONS=[1700,680],LAYOUT=[10,4,0],BUFFER=BUFFER)
      FOR N = 0L, N_ELEMENTS(PNGS)-1 DO IM = IMAGE(READALL(PNGS(N)),LAYOUT=[10,4,N+2],/CURRENT,MARGIN=0.001)
      BAR = COLOR_BAR_SCALE_NG(PROD='DIF',SPECIAL_SCALE='4',PX=425,PY=80,CHARSIZE=12,BACKGROUND=BACKGROUND,XDIM=850,YDIM=50,PAL='PAL_ANOMG',TITLE='SST Anomaly '+ UNITS('SST',/NO_NAME),/HORIZONTAL,/BOTTOM) 
      W.SAVE, COMPFILE, RESOLUTION=100, BIT_DEPTH=2
      W.CLOSE
      GONE, W
    ENDIF  
    
    FILES = FILE_SEARCH(DIR_DATASETS + 'SST-AVHRR-4' + SL + 'NEC' + SL + 'ANOMS' + SL + 'SST' + SL + 'A_*ANNUAL_1982_2010*SST*MEAN*SAVE')      
    PNGS = []
    FOR N = 0L, N_ELEMENTS(FILES)-1 DO BEGIN
      FP = PARSE_IT(FILES(N))
      IF FP.PERIOD_CODE EQ 'ANNUAL' THEN YEAR = '1982-2009' ELSE YEAR = DATE_2YEAR(FP.DATE_START) 
      IF FP.SUB EQ 'ANOMS' THEN BROWSE_DIR = 'ANOMS_BROWSE' ELSE BROWSE_DIR = 'BROWSE'
      PNGFILE = DIR_DATASETS + 'SST-AVHRR-4' + SL + 'NEC' + SL + 'ANOMS_BROWSE' + SL + FP.NAME + '.PNG'
      PNGS = [PNGS,PNGFILE]      
      IF FILE_TEST(PNGFILE) EQ 1 AND OVERWRITE EQ 0 THEN CONTINUE
      DATA   = STRUCT_SD_READ(FILES(N),STRUCT=STRUCT,SUBS=SUBS,ERROR=ERROR)
      IF ERROR EQ 1 THEN CONTINUE
      IF STRUCT.MATH EQ 'MEAN' THEN PAL = 'PAL_SW3' ELSE PAL = 'PAL_ANOMG'
      IF STRUCT.MATH EQ 'MEAN' THEN COLORBAR_TITLE=UNITS('SST') ELSE COLORBAR_TITLE='SST Anomaly '+ UNITS('SST',/NO_NAME)
      IF STRUCT.MATH EQ 'MEAN' THEN SPECIAL_SCALE = '' ELSE SPECIAL_SCALE ='4'
      IM = STRUCT_SD_2IMAGE_NG(STRUCT,/ADD_LAND,/ADD_COAST,/ADD_BATHY,ADD_COLORBAR=ADD_COLORBAR,BATHS=100,SPECIAL_SCALE=SPECIAL_SCALE,MAP_OUT='NEC',COLORBAR_TITLE=COLORBAR_TITLE,PAL=PAL,BUFFER=BUFFER)
      T = TEXT(20,860,YEAR,FONT_SIZE=50,/DEVICE,TARGET=IM) 
      IM.SAVE,PNGFILE,RESOLUTION=200,BIT_DEPTH=2
      IM.CLOSE
      GONE, IM
      GONE, T
    ENDFOR
    COMPFILE = DIR_ESR_PLOTS + 'ANNUAL-AVHRR_PATHFINDER_ONLY-SST_ANOMALY-COMPOSITE.PNG'
    IF FILE_TEST(COMPFILE) EQ 0 OR OVERWRITE EQ 1 AND DO_COMP EQ 1 THEN BEGIN
      W = WINDOW(DIMENSIONS=[1700,680],LAYOUT=[10,4,0],BUFFER=BUFFER)
      FOR N = 0L, N_ELEMENTS(PNGS)-1 DO IM = IMAGE(READALL(PNGS(N)),LAYOUT=[10,4,N+2],/CURRENT,MARGIN=0.001)
      BAR = COLOR_BAR_SCALE_NG(PROD='DIF',SPECIAL_SCALE='4',PX=425,PY=80,CHARSIZE=12,BACKGROUND=BACKGROUND,XDIM=850,YDIM=50,PAL='PAL_ANOMG',TITLE='SST Anomaly '+ UNITS('SST',/NO_NAME),/HORIZONTAL,/BOTTOM) 
      W.SAVE, COMPFILE, RESOLUTION=300, BIT_DEPTH=2
      W.CLOSE
      GONE, W
    ENDIF  
;    
;        
    STOP
  ENDIF ; DO_SST_ANOMS  
  
; *******************************************************
  IF DO_SEASONALS GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_SEASONALS GE 2
    
    BUFFER = 0
    
    SUBAREA_MAPS   = LIST('ESTUARY_SHELF_LME','ECOREGIONS_FULL_NO_ESTUARIES')
    SUBAREA_CODES  = LIST('32',                 ['7','5','6','8'])
    SUBAREA_TITLES = LIST('Northeast Shelf LME',['Mid-Atlantic Bight','Georges Bank','Gulf of Maine','Scotian Shelf'])
    DATE_RANGE = ['19970101','20131201']
    NESLME_FILE = DIR_ESR_PLOTS + 'SEASONAL_ANNUAL_CHLOR_A_PPD.PNG'
    ECOREGION_FILE = DIR_ESR_PLOTS + 'SEASONAL_ANNUAL_CHLOR_A_PPD-ECOREGIONS.PNG'
    
    WTITLE = ['OC Algorithms']        
    PROD_TAGS = ['CHLOR_A_OC']
    PRODS = ['CHLOROPHYLL']
    CRANGE  = [0.5,2.5] & CRANGE2 = [1.0,1.4] & CRANGE3 = [0.8,1.8]
    PRANGE  = [0.2,1.8] & PRANGE2 = [0.6,0.8] & PRANGE3 = [0.4,1.0]
    Y2RANGE = [0.75,1.5]
    
    PTICKS  = [0.2,0.6,1.0,1.4,1.8]    
    COLORS = LIST(['BLUE','RED'],['BLUE','CYAN','RED','SPRING_GREEN'])
      
    DIR_C = !S.DATASETS + 'OC-SEA_AQU-LAC' + SL + 'TS_SUBAREAS' + SL
    DIR_P = !S.DATASETS + 'PP-SA-LAC' + SL + 'TS_SUBAREAS' + SL      
        
    CPROD = 'MEAN_CHLOR_A_OC' & CNAME = 'FIRST_NAME_CHLOR_A_OC' & CN = 'N_CHLOR_A_OC' & CMIN = 'MIN_CHLOR_A_OC' & CMAX = 'MAX_CHLOR_A_OC' & CSTD = 'STD_CHLOR_A_OC'
    PPROD = 'MEAN_PPD_VGPM2'  & PNAME = 'FIRST_NAME_PPD_VGPM2'  & PN = 'N_PPD_VGPM2'  & CMIN = 'MIN_PPD_VGPM2'  & CMAX = 'MAX_PPD_VGPM2'  & CSTD = 'STD_PPD_VGPM2'
    
    FOR N=0L, N_ELEMENTS(SUBAREA_MAPS)-1 DO BEGIN
      CODES   = SUBAREA_CODES(N)
      TITLES  = SUBAREA_TITLES(N)
      ACOLOR  = COLORS(N)        
      CCOMBO  = IDL_RESTORE(FILE_SEARCH(DIR_C + 'MULTI_PERIODS-*' + SUBAREA_MAPS(N) + '*.SAVE')) & CTAGS = TAG_NAMES(CCOMBO) 
      PCOMBO  = IDL_RESTORE(FILE_SEARCH(DIR_P + 'MULTI_PERIODS-*' + SUBAREA_MAPS(N) + '*.SAVE')) & PTAGS = TAG_NAMES(PCOMBO)
      CDATA   = CCOMBO[WHERE(STRMID(CCOMBO.PERIOD,0,4) EQ 'WEEK' AND CCOMBO.(WHERE(CTAGS EQ CNAME)) NE '')]   ; CDATA   = COMBO[WHERE(COMBO.PERIOD_CODE EQ 'WEEK' AND COMBO.(WHERE(CTAGS EQ CNAME)) NE '')]                 
      PDATA   = PCOMBO[WHERE(STRMID(PCOMBO.PERIOD,0,4) EQ 'WEEK' AND PCOMBO.(WHERE(PTAGS EQ PNAME)) NE '')]   ; CDATA   = COMBO[WHERE(COMBO.PERIOD_CODE EQ 'WEEK' AND COMBO.(WHERE(CTAGS EQ CNAME)) NE '')]
      CPOS    = WHERE(CTAGS EQ CPROD) & PPOS = WHERE(PTAGS EQ PPROD)           
      CTITLE = UNITS('CHLOROPHYLL')           & PTITLE = UNITS('PPD')      
      AX = DATE_AXIS([20200101,20201231],/MONTH,/FYEAR,/MID)
      XRANGE = DATE_2JD([20200101,20201231])
      WIDTH = 7      
      IF N EQ 0 THEN BEGIN 
        W = WINDOW(WINDOW_TITLE='NES_LME',DIMENSIONS=[1024,1024],LAYOUT=[1,2,0],BUFFER=BUFFER)
        P = PLOT(AX.JD,CRANGE,AXIS_STYLE=1,MARGIN=[0.08,0.05,0.1,0.1],XSTYLE=1,YTITLE=CTITLE,FONT_SIZE=14,XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XTICKLEN=0.0,/NODATA,/CURRENT,LAYOUT=[1,2,1])                   
        XTICKV = P.XTICKVALUES 
        FOR G=0,N_ELEMENTS(XTICKV)-1 DO GR = PLOT([JD_ADD(XTICKV(G),-15,/DAY),JD_ADD(XTICKV(G),-15,/DAY)],CRANGE,AXIS_STYLE=1,XSTYLE=1,COLOR='GREY',/OVERPLOT,XRANGE=XRANGE,YRANGE=CRANGE)
        PO = POLYGON([0.63,0.89,0.89,0.63,0.63],[0.895,0.895,0.94,0.94,0.895],/NORMAL,FILL_COLOR='WHITE',/FILL_BACKGROUND)        
        OK = WHERE(CDATA.SUBAREA_CODE EQ CODES[0] AND CDATA.(CPOS) NE MISSINGS(0.0))          
        DATA = CDATA[OK]
        FP   = PARSE_IT(DATA.(WHERE(CTAGS EQ CNAME)))
        DATA = DATA[SORT(DATE_2DOY(FP.DATE_START))]  
        CMEAN = MEAN(DATA.(CPOS))        
        P0 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(DATA.PERIOD))),DATA.(CPOS),AXIS_STYLE=1,XSTYLE=1,XRANGE=XRANGE,YRANGE=CRANGE,XMINOR=0,LINESTYLE=6,/OVERPLOT,COLOR=ACOLOR[0],SYMBOL='CIRCLE',SYM_SIZE=0.8, NAME='Merged',/SYM_FILLED)
        PL = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(DATA.PERIOD))),LOWESS(DATE_2DOY(PERIOD_2DATE(DATA.PERIOD)),DATA.(CPOS),WIDTH=WIDTH),AXIS_STYLE=1,XSTYLE=1,XRANGE=XRANGE,YRANGE=CRANGE,THICK=2,/OVERPLOT,COLOR=ACOLOR[0])          
        OK = WHERE(PDATA.SUBAREA_CODE EQ CODES[0] AND PDATA.(PPOS) NE MISSINGS(0.0))          
        DATA = PDATA[OK]
        FP   = PARSE_IT(DATA.(WHERE(PTAGS EQ PNAME)))
        DATA = DATA[SORT(DATE_2DOY(FP.DATE_START))]
        PMEAN = MEAN(DATA.(PPOS))   
        P2 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(DATA.PERIOD))),DATA.(PPOS),AXIS_STYLE=0,MARGIN=[0.1,0.05,0.1,0.1],XSTYLE=1,XRANGE=XRANGE,YRANGE=PRANGE,XMINOR=0,LINESTYLE=6,/CURRENT,COLOR=ACOLOR[1],SYMBOL='CIRCLE',SYM_SIZE=0.8, NAME='Merged',/SYM_FILLED,LAYOUT=[1,2,1])
        P3 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(DATA.PERIOD))),LOWESS(DATE_2DOY(PERIOD_2DATE(DATA.PERIOD)),DATA.(PPOS),WIDTH=WIDTH),AXIS_STYLE=0,XSTYLE=1,MARGIN=[0.1,0.05,0.1,0.1],XRANGE=XRANGE,YRANGE=PRANGE,THICK=2,XMINOR=0,/CURRENT,COLOR=ACOLOR[1],LAYOUT=[1,2,1])
        A2 = AXIS('Y',TARGET=P2,LOCATION=[MAX(AX.JD),0,0],TEXTPOS=1,TICKDIR=1,TITLE='Primary Production ' + UNITS('PPD',/NO_NAME),TICKVALUES=PTICKS)
        A3 = AXIS('X',TARGET=P,LOCATION=[MIN(AX.JD),MAX(CRANGE),0],MAJOR=0,MINOR=0)
        T1 = TEXT(0.64,0.92,UNITS('CHLOROPHYLL',/NO_UNIT)+'(Mean = '+NUM2STR(CMEAN,DECIMALS=2)+')',       COLOR=ACOLOR[0],FONT_SIZE=12,/NORMAL,TARGET=P)                         
        T2 = TEXT(0.64,0.90,UNITS('PRIMARY_PRODUCTION',/NO_UNIT)+'(Mean = '+NUM2STR(PMEAN,DECIMALS=2)+')',COLOR=ACOLOR[1],FONT_SIZE=12,/NORMAL,TARGET=P)
                 
        CCOMBO  = IDL_RESTORE(FILE_SEARCH(DIR_C + 'MULTI_PERIODS-*' + SUBAREA_MAPS(N) + '*.SAVE')) & CTAGS = TAG_NAMES(CCOMBO) 
        PCOMBO  = IDL_RESTORE(FILE_SEARCH(DIR_P + 'MULTI_PERIODS-*' + SUBAREA_MAPS(N) + '*.SAVE')) & PTAGS = TAG_NAMES(PCOMBO)
        CDATA   = CCOMBO[WHERE(STRMID(CCOMBO.PERIOD,0,2) EQ 'A_' AND CCOMBO.(WHERE(CTAGS EQ CNAME)) NE '')]                   
        PDATA   = PCOMBO[WHERE(STRMID(PCOMBO.PERIOD,0,2) EQ 'A_' AND PCOMBO.(WHERE(PTAGS EQ PNAME)) NE '')]  
        CPOS    = WHERE(CTAGS EQ CPROD) & PPOS = WHERE(PTAGS EQ PPROD) 
                                          
        AX = DATE_AXIS([19980101,20100101],/YY_YEAR,/YEAR)
        XRANGE2 = DATE_2JD([19980101,20100101])
        WIDTH = 4                    
        PP = PLOT(AX.JD,CRANGE2,MARGIN=[0.08,0.05,0.1,0.1],AXIS_STYLE=1,YTITLE=CTITLE,FONT_SIZE=14,XMAJOR=AX.TICKS,YMINOR=5,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XTICKLEN=0.0,/NODATA,/CURRENT,LAYOUT=[1,2,2])          
        XTICKV = PP.XTICKVALUES 
        FOR G=0,N_ELEMENTS(XTICKV)-2 DO GR = PLOT([XTICKV(G),XTICKV(G)],CRANGE2,AXIS_STYLE=1,COLOR='GREY',/OVERPLOT,XRANGE=XRANGE2,YRANGE=CRANGE2,XSTYLE=1)
        PO = POLYGON([0.63,0.89,0.89,0.63,0.63],[0.395,0.395,0.44,0.44,0.395],/NORMAL,FILL_COLOR='WHITE',/FILL_BACKGROUND)
                               
        OK = WHERE(CDATA.SUBAREA_CODE EQ CODES[0] AND CDATA.(CPOS) NE MISSINGS(0.0))          
        DATA = CDATA[OK]
        CMEAN = MEAN(DATA.(CPOS))
        FP   = PARSE_IT(DATA.(WHERE(CTAGS EQ CNAME)))
        DATA = DATA[SORT(DATE_2DOY(FP.DATE_START))]          
        PP0 = PLOT(PERIOD_2JD(DATA.PERIOD),DATA.(CPOS),XRANGE=XRANGE2,YRANGE=CRANGE2,AXIS_STYLE=1,XMINOR=0,LINESTYLE=6,/OVERPLOT,COLOR=ACOLOR[0],SYMBOL='CIRCLE',SYM_SIZE=0.8, NAME='Merged',/SYM_FILLED)
        PPL = PLOT(PERIOD_2JD(DATA.PERIOD),LOWESS(DATE_2YEAR(PERIOD_2DATE(DATA.PERIOD)),DATA.(CPOS),WIDTH=WIDTH),AXIS_STYLE=1,XRANGE=XRANGE2,YRANGE=CRANGE2,THICK=2,/OVERPLOT,COLOR=ACOLOR[0])
        
        OK = WHERE(PDATA.SUBAREA_CODE EQ CODES[0] AND PDATA.(PPOS) NE MISSINGS(0.0))          
        DATA = PDATA[OK]
        FP   = PARSE_IT(DATA.(WHERE(PTAGS EQ PNAME)))
        DATA = DATA[SORT(DATE_2DOY(FP.DATE_START))] 
        PMEAN = MEAN(DATA.(PPOS))  
        PP2 = PLOT(PERIOD_2JD(DATA.PERIOD),DATA.(PPOS),AXIS_STYLE=0,MARGIN=[0.1,0.05,0.1,0.1],XSTYLE=1,XRANGE=XRANGE2,YRANGE=PRANGE2,XMINOR=0,LINESTYLE=6,/CURRENT,COLOR=ACOLOR[1],SYMBOL='CIRCLE',SYM_SIZE=0.8, NAME='Merged',/SYM_FILLED,LAYOUT=[1,2,2])
        PP3 = PLOT(PERIOD_2JD(DATA.PERIOD),LOWESS(DATE_2YEAR(PERIOD_2DATE(DATA.PERIOD)),DATA.(PPOS),WIDTH=WIDTH),AXIS_STYLE=0,XSTYLE=1,MARGIN=[0.1,0.05,0.1,0.1],XRANGE=XRANGE2,YRANGE=PRANGE2,THICK=2,XMINOR=0,/CURRENT,COLOR=ACOLOR[1],LAYOUT=[1,2,2])
        A2 = AXIS('Y',TARGET=PP2,LOCATION=[MAX(AX.JD),0],TEXTPOS=1,TICKDIR=1,TITLE='Primary Production ' + UNITS('PPD',/NO_NAME),MINOR=5,TICKVALUES=[0.6,0.65,0.7,0.75,0.8])
        A3 = AXIS('X',TARGET=PP,LOCATION=[MIN(AX.JD),MAX(CRANGE2)],MAJOR=0,MINOR=0)
        T1 = TEXT(0.64,0.42,UNITS('CHLOROPHYLL',/NO_UNIT)+'(Mean = '+NUM2STR(CMEAN,DECIMALS=2)+')',       COLOR=ACOLOR[0],FONT_SIZE=12,/NORMAL,TARGET=P)                         
        T2 = TEXT(0.64,0.40,UNITS('PRIMARY_PRODUCTION',/NO_UNIT)+'(Mean = '+NUM2STR(PMEAN,DECIMALS=2)+')',COLOR=ACOLOR[1],FONT_SIZE=12,/NORMAL,TARGET=P)
        W.SAVE, NESLME_FILE, RESOLUTION=300, BIT_DEPTH=2      
        W.CLOSE                    
      ENDIF ELSE BEGIN  
        W = WINDOW(WINDOW_TITLE='SUBAREAS',DIMENSIONS=[1024,1024],LAYOUT=[2,2,0],BUFFER=BUFFER)
        WIDTH = 6
        FOR C=0, N_ELEMENTS(CODES)-1 DO BEGIN                                
            OK = WHERE(CDATA.SUBAREA_CODE EQ CODES(C) AND CDATA.(CPOS) NE MISSINGS(0.0))          
            DATA = CDATA[OK]
            FP   = PARSE_IT(DATA.(WHERE(CTAGS EQ CNAME)))
            DATA = DATA[SORT(DATE_2DOY(FP.DATE_START))]            
            IF C EQ 0 THEN BEGIN
              P = PLOT(AX.JD,CRANGE,YTITLE=CTITLE,FONT_SIZE=14,XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XTICKLEN=0.0,/NODATA,/CURRENT,LAYOUT=[2,2,1])
              XTICKV = P.XTICKVALUES 
              FOR G=0,N_ELEMENTS(XTICKV)-1 DO GR = PLOT([JD_ADD(XTICKV(G),-15,/DAY),JD_ADD(XTICKV(G),-15,/DAY)],CRANGE,COLOR='GREY',/OVERPLOT,XRANGE=AX.JD,YRANGE=CRANGE)
              PO = POLYGON([0.315,0.45,0.45,0.315,0.315],[0.855,0.855,0.94,0.94,0.855],/NORMAL,FILL_COLOR='WHITE',/FILL_BACKGROUND)    
            ENDIF   
            P0 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(DATA.PERIOD))),DATA.(CPOS),XRANGE=AX.JD,YRANGE=CRANGE,XMINOR=0,LINESTYLE=6,/OVERPLOT,COLOR=ACOLOR(C),SYMBOL='CIRCLE',SYM_SIZE=0.4, /SYM_FILLED)            
            P1 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(DATA.PERIOD))),LOWESS(DATE_2DOY(PERIOD_2DATE(DATA.PERIOD)),DATA.(CPOS),WIDTH=WIDTH),XRANGE=AX.JD,YRANGE=CRANGE,THICK=2,/OVERPLOT,COLOR=ACOLOR(C))            
            T = TEXT(0.32,0.92-(C*.019),TITLES(C),COLOR=ACOLOR(C),FONT_SIZE=12,/NORMAL,TARGET=P0)  
          ENDFOR ; FOR C=0, N_ELEMENTS(CODES)-1 DO BEGIN    
          FOR C=0, N_ELEMENTS(CODES)-1 DO BEGIN                                
            OK = WHERE(PDATA.SUBAREA_CODE EQ CODES(C) AND PDATA.(PPOS) NE MISSINGS(0.0))          
            DATA = PDATA[OK]
            FP   = PARSE_IT(DATA.(WHERE(PTAGS EQ PNAME)))
            DATA = DATA[SORT(DATE_2DOY(FP.DATE_START))]            
            IF C EQ 0 THEN BEGIN
              P = PLOT(AX.JD,PRANGE,YTITLE='Primary Production ' + UNITS('PPD',/NO_NAME),FONT_SIZE=14,YTICKVALUES=PTICKS,XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XTICKLEN=0.0,/NODATA,/CURRENT,LAYOUT=[2,2,2])
              XTICKV = P.XTICKVALUES 
              FOR G=0,N_ELEMENTS(XTICKV)-1 DO GR = PLOT([JD_ADD(XTICKV(G),-15,/DAY),JD_ADD(XTICKV(G),-15,/DAY)],PRANGE,COLOR='GREY',/OVERPLOT,XRANGE=AX.JD,YRANGE=PRANGE)
              PO = POLYGON([0.815,0.95,0.95,0.815,0.815],[0.855,0.855,0.94,0.94,0.855],/NORMAL,FILL_COLOR='WHITE',/FILL_BACKGROUND)    
            ENDIF   
            P0 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(DATA.PERIOD))),DATA.(PPOS),YTICKVALUES=PTICKS,XRANGE=AX.JD,YRANGE=PRANGE,XMINOR=0,LINESTYLE=6,/OVERPLOT,COLOR=ACOLOR(C),SYMBOL='CIRCLE',SYM_SIZE=0.4, NAME='Merged',/SYM_FILLED)            
            P1 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(DATA.PERIOD))),LOWESS(DATE_2DOY(PERIOD_2DATE(DATA.PERIOD)),DATA.(PPOS),WIDTH=WIDTH),YTICKVALUES=PTICKS,XRANGE=AX.JD,YRANGE=PRANGE,THICK=2,/OVERPLOT,COLOR=ACOLOR(C))            
            T = TEXT(0.82,0.92-(C*.019),TITLES(C),COLOR=ACOLOR(C),FONT_SIZE=12,/NORMAL,TARGET=P0)  
          ENDFOR ; FOR C=0, N_ELEMENTS(CODES)-1 DO BEGIN       
        ENDELSE          
      ENDFOR     ; FOR N=0L, N_ELEMENTS(SUBAREA_MAPS)-1 DO BEGIN      
      FOR N=0L, N_ELEMENTS(SUBAREA_MAPS)-1 DO BEGIN
        CODES   = SUBAREA_CODES(N)
        TITLES  = SUBAREA_TITLES(N)
        ACOLOR  = COLORS(N)        
        CCOMBO  = IDL_RESTORE(FILE_SEARCH(DIR_C + 'MULTI_PERIODS-*' + SUBAREA_MAPS(N) + '*.SAVE')) & CTAGS = TAG_NAMES(CCOMBO) 
        PCOMBO  = IDL_RESTORE(FILE_SEARCH(DIR_P + 'MULTI_PERIODS-*' + SUBAREA_MAPS(N) + '*.SAVE')) & PTAGS = TAG_NAMES(PCOMBO)
        CDATA   = CCOMBO[WHERE(STRMID(CCOMBO.PERIOD,0,2) EQ 'A_' AND CCOMBO.(WHERE(CTAGS EQ CNAME)) NE '')]                   
        PDATA   = PCOMBO[WHERE(STRMID(PCOMBO.PERIOD,0,2) EQ 'A_' AND PCOMBO.(WHERE(PTAGS EQ PNAME)) NE '')]  
        CPOS    = WHERE(CTAGS EQ CPROD) & PPOS = WHERE(PTAGS EQ PPROD)                          
        AX = DATE_AXIS([19980101,20100101],/YY_YEAR,/YEAR)
        WIDTH = 4     
        IF N GT 0 THEN BEGIN                    
          FOR C=0, N_ELEMENTS(CODES)-1 DO BEGIN                                
            OK = WHERE(CDATA.SUBAREA_CODE EQ CODES(C) AND CDATA.(CPOS) NE MISSINGS(0.0))          
            DATA = CDATA[OK]
            FP   = PARSE_IT(DATA.(WHERE(CTAGS EQ CNAME)))
            DATA = DATA[SORT(DATE_2DOY(FP.DATE_START))]            
            IF C EQ 0 THEN BEGIN
              P = PLOT(AX.JD,CRANGE3,YTITLE=CTITLE,FONT_SIZE=14,XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XTICKLEN=0.0,/NODATA,/CURRENT,LAYOUT=[2,2,3])
              XTICKV = P.XTICKVALUES 
              FOR G=0,N_ELEMENTS(XTICKV)-1 DO GR = PLOT([XTICKV(G),XTICKV(G)],CRANGE3,COLOR='GREY',/OVERPLOT,XRANGE=AX.JD,YRANGE=CRANGE3)
              PO = POLYGON([0.315,0.45,0.45,0.315,0.315],[0.355,0.355,0.44,0.44,0.355],/NORMAL,FILL_COLOR='WHITE',/FILL_BACKGROUND)          
            ENDIF   
            P0 = PLOT(PERIOD_2JD(DATA.PERIOD),DATA.(CPOS),XRANGE=AX.JD,YRANGE=CRANGE3,XMINOR=0,LINESTYLE=6,/OVERPLOT,COLOR=ACOLOR(C),SYMBOL='CIRCLE',SYM_SIZE=0.8,LAYOUT=[2,2,3],/SYM_FILLED)            
            P1 = PLOT(PERIOD_2JD(DATA.PERIOD),LOWESS(DATE_2YEAR(PERIOD_2DATE(DATA.PERIOD)),DATA.(CPOS),WIDTH=WIDTH),XRANGE=AX.JD,YRANGE=CRANGE3,THICK=2,/OVERPLOT,COLOR=ACOLOR(C),LAYOUT=[2,2,3])            
            T = TEXT(0.32,0.42-(C*.019),TITLES(C),COLOR=ACOLOR(C),FONT_SIZE=12,/NORMAL,TARGET=P0)
          ENDFOR     
          FOR C=0, N_ELEMENTS(CODES)-1 DO BEGIN 
            OK = WHERE(PDATA.SUBAREA_CODE EQ CODES(C) AND PDATA.(PPOS) NE MISSINGS(0.0))          
            DATA = PDATA[OK]
            FP   = PARSE_IT(DATA.(WHERE(PTAGS EQ PNAME)))
            DATA = DATA[SORT(DATE_2DOY(FP.DATE_START))]            
            IF C EQ 0 THEN BEGIN
              P = PLOT(AX.JD,PRANGE3,YTITLE=PTITLE,FONT_SIZE=14,XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XTICKLEN=0.0,/NODATA,/CURRENT,LAYOUT=[2,2,4])
              XTICKV = P.XTICKVALUES 
              FOR G=0,N_ELEMENTS(XTICKV)-1 DO GR = PLOT([XTICKV(G),XTICKV(G)],PRANGE3,COLOR='GREY',/OVERPLOT,XRANGE=AX.JD,YRANGE=PRANGE3)
              PO = POLYGON([0.815,0.95,0.95,0.815,0.815],[0.355,0.355,0.44,0.44,0.355],/NORMAL,FILL_COLOR='WHITE',/FILL_BACKGROUND)          
            ENDIF   
            P0 = PLOT(PERIOD_2JD(DATA.PERIOD),DATA.(PPOS),XRANGE=AX.JD,YRANGE=PRANGE3,XMINOR=0,LINESTYLE=6,/OVERPLOT,COLOR=ACOLOR(C),SYMBOL='CIRCLE',SYM_SIZE=0.8,LAYOUT=[2,2,3],/SYM_FILLED)            
            P1 = PLOT(PERIOD_2JD(DATA.PERIOD),LOWESS(DATE_2YEAR(PERIOD_2DATE(DATA.PERIOD)),DATA.(CPOS),WIDTH=WIDTH),XRANGE=AX.JD,YRANGE=PRANGE3,THICK=2,/OVERPLOT,COLOR=ACOLOR(C),LAYOUT=[2,2,3])            
            T = TEXT(0.82,0.42-(C*.019),TITLES(C),COLOR=ACOLOR(C),FONT_SIZE=12,/NORMAL,TARGET=P0)   
          ENDFOR ; FOR C=0, N_ELEMENTS(CODES)-1 DO BEGIN   
          W.SAVE, ECOREGION_FILE, RESOLUTION=300, BIT_DEPTH=2      
          W.CLOSE    
        ENDIF          
      ENDFOR     ; FOR N=0L, N_ELEMENTS(SUBAREA_MAPS)-1 DO BEGIN
    
    
    
    STOP
    
  ENDIF ; DO_SEASONAL_CHL  
  
; *******************************************************
  IF DO_BLOOMS GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_BLOOMS GE 2
    
    BUFFER = 0
    YLOG = 0
    
    SUBAREA_MAP    = 'ECOREGIONS_FULL_NO_ESTUARIES'
    SUBAREA_CODES  = ['7','5','6','8']
    SUBAREA_TITLES = ['Mid-Atlantic Bight','Georges Bank','Gulf of Maine','Scotian Shelf']    
    BLOOMS_CLIM    = LIST(LIST([74,151],[280,352]),LIST([75,120],[254,318]),LIST([84,150],[248,312]),LIST([79,119],[234,316]))
    BLOOMS_2010    = LIST(LIST([83,131],[288,336]),LIST([81,132],[202,228]),LIST([75,125],[254,308]),LIST([76,117]))
    PS             = [89,90,108,104]
    PF             = [320,298,284,283]
    XPOS           = [0.68,0.68,0.68,0.68]
    YPOS           = [0.97,0.72,0.47,0.22]
    DATE_RANGE     = ['19970101','20111201']
    PNGFILE        = DIR_ESR_PLOTS + 'SEASONAL_ANNUAL_CHLOR_A-ECOREGIONS-BLOOMS.PNG'
            
    PROD_TAGS = ['CHLOR_A_OC']
    PRODS = ['CHLOROPHYLL']
    IF YLOG EQ 0 THEN CRANGE  = [0.0,4.0] ELSE CRANGE = [0.1,10] 
    COLORS = ['BLUE','DARK_ORANGE','RED','MEDIUM_SEA_GREEN']
    DIR_C = !S.DATASETS + 'OC-SEA_AQU-9_4-NEC' + SL + 'TS_SUBAREAS' + SL
    CPROD = 'MEAN_CHLOR_A_OC' & CNAME = 'FIRST_NAME_CHLOR_A_OC' & CN = 'N_CHLOR_A_OC' & CMIN = 'MIN_CHLOR_A_OC' & CMAX = 'MAX_CHLOR_A_OC' & CSTD = 'STD_CHLOR_A_OC'
  
         
    CCOMBO  = IDL_RESTORE(FILE_SEARCH(DIR_C + 'MULTI_PERIODS-*' + SUBAREA_MAP + '*.SAVE')) & CTAGS = TAG_NAMES(CCOMBO) 
 ;   LCOMBO  = READALL(DIR_C + 'W_2010-' + SUBAREA_MAP + '-LOESS_SMOOTH.CSV')
    CDATA   = CCOMBO[WHERE(CCOMBO.PERIOD_CODE EQ 'WEEK' AND CCOMBO.(WHERE(CTAGS EQ CNAME)) NE '')]                       
    CPOS    = WHERE(CTAGS EQ CPROD)            
    WDATA   = CCOMBO[WHERE(STRMID(CCOMBO.PERIOD,0,6) EQ 'W_2010' AND CCOMBO.(WHERE(CTAGS EQ CNAME)) NE '' AND CCOMBO.FILE_MATH EQ '')]                       
    CTITLE = UNITS('CHLOROPHYLL')         
    AX = DATE_AXIS([20200101,20201231],/MONTH,/FYEAR,/MID)
    XRANGE = DATE_2JD([20200101,20201231])
       
    W = WINDOW(WINDOW_TITLE='SUBAREAS',DIMENSIONS=[512,1024],LAYOUT=[1,4,0],MARGIN=MARGIN,BUFFER=BUFFER)
    WIDTH = 6
    XTICKLEN=0.03
    FOR C=0, N_ELEMENTS(SUBAREA_CODES)-1 DO BEGIN                                
      
      OK = WHERE(CDATA.SUBAREA_CODE EQ SUBAREA_CODES(C) AND CDATA.(CPOS) NE MISSINGS(0.0))          
      DATA = CDATA[OK]
      FP   = PARSE_IT(DATA.(WHERE(CTAGS EQ CNAME)))
      DATA = DATA[SORT(DATE_2DOY(FP.DATE_START))]      
      IF C EQ N_ELEMENTS(SUBAREA_CODES)-1 THEN XTICKNAME=AX.TICKNAME ELSE XTICKNAME=REPLICATE('',N_ELEMENTS(AX.TICKNAME))
      IF C EQ N_ELEMENTS(SUBAREA_CODES)-1 THEN MARGIN = [0.12,0.09,0.03,0.03]  ELSE MARGIN = [0.12,0.03,0.03,0.03]         
      P = PLOT(AX.JD,CRANGE,YTITLE=CTITLE,MARGIN=MARGIN,FONT_SIZE=14,XSTYLE=1,XTICKLEN=XTICKLEN,XTICKNAME=XTICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,YMINOR=5,/NODATA,/CURRENT,LAYOUT=[1,4,C+1],YLOG=YLOG)
      BLOOMC = BLOOMS_CLIM(C)
      FOR B=0, N_ELEMENTS(BLOOMC)-1 DO BEGIN
        BL = YDOY_2JD('2020',BLOOMC(B))
        P3 = POLYGON([BL[0],BL[1],BL[1],BL[0],BL[0]],[CRANGE[0],CRANGE[0],CRANGE[1],CRANGE[1],CRANGE[0]],/DATA,FILL_COLOR='DARK_GRAY',/FILL_BACKGROUND,LINESTYLE=6,TARGET=P,FILL_TRANSPARENCY=50)
      ENDFOR      
      
      OK = WHERE(CDATA.SUBAREA_CODE EQ SUBAREA_CODES(C) AND CDATA.(CPOS) NE MISSINGS(0.0))          
      DATA = CDATA[OK]
      FP   = PARSE_IT(DATA.(WHERE(CTAGS EQ CNAME)))
      DATA = DATA[SORT(DATE_2DOY(FP.DATE_START))]            
      P = PLOT(AX.JD,CRANGE,YTITLE=CTITLE,MARGIN=MARGIN,FONT_SIZE=14,XSTYLE=1,XTICKLEN=XTICKLEN,XTICKNAME=XTICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,YMINOR=5,/NODATA,/CURRENT,LAYOUT=[1,4,C+1],YLOG=YLOG)
      BLOOMS = BLOOMS_2010(C)
      BLOOMC = BLOOMS_CLIM(C)
      FOR B=0, N_ELEMENTS(BLOOMS)-1 DO BEGIN
        BL = YDOY_2JD('2020',BLOOMS(B))
        P3 = POLYGON([BL[0],BL[1],BL[1],BL[0],BL[0]],[CRANGE[0],CRANGE[0],CRANGE[1],CRANGE[1],CRANGE[0]],/DATA,FILL_COLOR=COLORS(C),/FILL_BACKGROUND,LINESTYLE=6,TARGET=P,FILL_TRANSPARENCY=85)
      ENDFOR      
            
;     XTICKV = P.XTICKVALUES     
;     PO = POLYGON([0.315,0.45,0.45,0.315,0.315],[0.855,0.855,0.94,0.94,0.855],/NORMAL,FILL_COLOR='WHITE',/FILL_BACKGROUND)       
;      P0 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(DATA.PERIOD))),DATA.(CPOS),XRANGE=AX.JD,YRANGE=CRANGE,XMINOR=0,LINESTYLE=6,/OVERPLOT,COLOR=COLORS(C),SYMBOL='CIRCLE',SYM_SIZE=0.4, /SYM_FILLED)            
      P3 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(DATA.PERIOD))),LOWESS(DATE_2DOY(PERIOD_2DATE(DATA.PERIOD)),DATA.(CPOS),WIDTH=WIDTH),XRANGE=AX.JD,YRANGE=CRANGE,THICK=2,/OVERPLOT,COLOR='DARK_GRAY',YLOG=YLOG)
           
      T = TEXT(XPOS(C),YPOS(C),     SUBAREA_TITLES(C),COLOR='BLACK',    FONT_SIZE=12,/NORMAL,TARGET=P0)
      T = TEXT(XPOS(C),YPOS(C)-.019,'- 2010',         COLOR=COLORS(C),  FONT_SIZE=12,/NORMAL,TARGET=P0)
      T = TEXT(XPOS(C),YPOS(C)-.038,'- Climatology',  COLOR='DARK_GRAY',FONT_SIZE=12,/NORMAL,TARGET=P0)
      
;      OK = WHERE(LCOMBO.SUBAREA_CODE EQ SUBAREA_CODES(C))
;      LDATA = LCOMBO[OK]
      
      OK = WHERE(WDATA.SUBAREA_CODE EQ SUBAREA_CODES(C) AND WDATA.(CPOS) NE MISSINGS(0.0))          
      DATA = WDATA[OK]
      FP   = PARSE_IT(DATA.(WHERE(CTAGS EQ CNAME)))
      DATA = DATA[SORT(DATE_2DOY(FP.DATE_START))]                    
      P5 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(DATA.PERIOD))),DATA.(CPOS),XRANGE=AX.JD,YRANGE=CRANGE,XMINOR=0,LINESTYLE=6,/OVERPLOT,COLOR=COLORS(C),SYMBOL='CIRCLE',SYM_SIZE=0.4,/SYM_FILLED,YLOG=YLOG)
;      P6 = PLOT(YDOY_2JD('2020',LDATA.DATE),FLOAT(LDATA.LOESS),XRANGE=AX.JD,YRANGE=CRANGE,THICK=2.5,/OVERPLOT,COLOR=COLORS(C),LINESTYLE=2,YLOG=YLOG)
      P6 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(DATA.PERIOD))),LOWESS(DATE_2DOY(PERIOD_2DATE(DATA.PERIOD)),DATA.(CPOS),WIDTH=WIDTH),XRANGE=AX.JD,YRANGE=CRANGE,THICK=2,/OVERPLOT,COLOR=COLORS(C),LINESTYLE=0,YLOG=YLOG)            
;      P7 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(DATA.PERIOD))),EXP(LOWESS(DATE_2DOY(PERIOD_2DATE(DATA.PERIOD)),ALOG(DATA.(CPOS)),WIDTH=WIDTH)),XRANGE=AX.JD,YRANGE=CRANGE,THICK=2,/OVERPLOT,COLOR=COLORS(C),LINESTYLE=2,YLOG=YLOG)
     
         
    ENDFOR ; FOR C=0, N_ELEMENTS(CODES)-1 DO BEGIN    
          
    
    STOP
    W.SAVE, PNGFILE, RESOLUTION=300, BIT_DEPTH=2      
    W.CLOSE    
    
  ENDIF ; DO_SEASONAL_CHL  
  
  

END; #####################  End of Routine ################################



