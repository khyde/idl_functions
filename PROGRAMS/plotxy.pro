; $ID:	PLOTXY.PRO,	2020-07-09-08,	USER-KJWH	$
;#########################################################################################################
PRO PLOTXY ,X ,Y , $
  ;         ### AXES SETUP
						LOGLOG = LOGLOG,$  	; FOR A LOG VS LOG REGRESSION AND LOG10 STATISTICS,
            XTITLE=XTITLE,YTITLE=YTITLE,$
            AXES_COLOR=AXES_COLOR,$
            ROOM = ROOM,$ ; EXTENDS XRANGE AND YRANGE [IN NORMAL UNITS]
                        
;						### PASSED TO STATS2.PRO
            MODEL=MODEL,$    		; REGRESSION MODEL(S)
            PARAMS=PARAMS,$     ; PASSED TO STATS2.PRO
            DECIMALS=DECIMALS,$ ; PASSED TO STATS2.PRO

            FAST = FAST, $			; PASSED TO STATS2.PRO

;           ### MISSING DATA AND OUTLIERS 
            MISSINGX=MISSINGX,MISSINGY=MISSINGY,$
            OUTLIERS=OUTLIERS,$           

              
;           ### DATA SYMBOLS
            SYMBOLS=SYMBOLS,$
            SYM_COLOR=SYM_COLOR,$
            PSYM=PSYM,$
            SYMSIZE=SYMSIZE,$

;           ### DATA LINE
            LIN_STYLE=LIN_STYLE,$
            LIN_COLOR=LIN_COLOR,$
            LIN_THICK=LIN_THICK,$

;           ### STATISTICS (REGRESSION)
            FILE = FILE,$                    ;FILE FOR APPENDING STATS TO
            STATS_NONE=STATS_NONE,$
            STATS_POS=STATS_POS,$             ;POSITION FOR STATS (DATA UNITS,X,Y)
            STATS_COLOR=STATS_COLOR,$
            STATS_CHARSIZE=STATS_CHARSIZE,$
            STATS_STRUCT=STATS_STRUCT,$
            DOUBLE_SPACE=DOUBLE_SPACE,$       ;(DOUBLE LINE SPACES BETWEEN STAT OUTPUT)

;           ### LEGEND
            LEG_SHOW=LEG_SHOW,$
            LEG_POS=LEG_POS,$
            LEG_COLOR=LEG_COLOR,$
            LEG_CHARSIZE=LEG_CHARSIZE,$

;           ### REGRESSION LINES:
            REG_NONE=REG_NONE,$
            REG_COLOR=REG_COLOR,$
            REG_THICK=REG_THICK,$
            REG_LINESTYLE=REG_LINESTYLE,$
            REG_MID_COLOR=REG_MID_COLOR,$
            REG_MID_THICK=REG_MID_THICK,$
            REG_MID_LINESTYLE=REG_MID_LINESTYLE,$

;           ### ONE2ONE LINE:
            ONE2ONE=ONE2ONE,$   
            ONE_COLOR=ONE_COLOR,$
            ONE_THICK=ONE_THICK,$
            ONE_LINESTYLE=ONE_LINESTYLE,$

;           ### PLOT MEAN X,Y:
            MEAN_SHOW=MEAN_SHOW,$
            MEAN_PSYM=MEAN_PSYM,$
            MEAN_SYMSIZE=MEAN_SYMSIZE,$
            MEAN_COLOR=MEAN_COLOR,$
            MEAN_THICK=MEAN_THICK,$

;           ### GRID 
            GRID_NONE = GRID_NONE,$
            GRID_COLOR=GRID_COLOR,$
            GRID_THICK=GRID_THICK,$
            GRID_LINESTYLE=GRID_LINESTYLE,$

            SHOW=SHOW,$

            _EXTRA=_EXTRA

;+
; NAME:
;       PLOTXY
;
; PURPOSE:
; PLOT A SCATTER PLOT OF X AND Y ARRAYS AND THE FUNCTIONAL (OR OTHER) LINEAR REGRESSION LINE
;   AND OPTIONALLY PLOT THE REGRESSION STATISTICS AND A ONE2ONE LINE

; EXAMPLES:
;   X =    FINDGEN(50)+25* RANDOMN(SEED,50)
;   Y =    X  + 25* RANDOMN(S,N_ELEMENTS(X))
;   PLOTXY,X,Y,PSYM=1
;
;   PLOTXY,INDGEN(10)+1,INDGEN(10)+2,/STATS_PLOT
;   PLOTXY,INDGEN(10)+1,INDGEN(10)+2,/STATS_PLOT , PSYM=6
;
;   X = INDGEN(500)+100*RANDOMN(SEED,500)
;   Y = INDGEN(500)+100*RANDOMN(SEED,500)
;   PLOTXY,X,Y,DECIMALS=3,/SHOW,MODEL=['RMA','LSY'],PARAMS=[1,2,3,4,7],PSYM=1


;
; INPUTS:
;   AN X AND Y ARRAY OF INTEGER,LONG,FLOAT,DOUBLE
;
; KEYWORD PARAMETERS:
;   MODEL: THE REGRESSION MODEL(S) (E.G. MODEL='LSY', OR MODEL='RMA');
;			LSY:	LEAST SQUARES Y
;			LSX:	LEAST SQUARES X
;			LSB:	LEAST SQUARES BISECTOR
;			ORMA:	ORTHOGONAL REDUCED MAJOR AXIS
;			RMA:	REDUCED MAJOR AXIS (FUNCTIONAL REGRESSION)
;			MLS:	MEAN LEAST SQUARES
;			RLAD:	ROBUST LEAST ABSOLUTE DEVIATION (IDL'S LADFIT.PRO)
;
;	DECIMALS:  NUMBER OF DECIMAL PLACES IN LEGEND (PASSED TO STATS2.PRO; AFFECTS TAG STATSTRING)
;
;	REG_MID_COLOR = REG_MID_COLOR,$
; OUTPUTS:
;       DISPLAYS A SCATTER PLOT IN THE GRAPHICS WINDOW,
;       FUNCTIONAL REGRESSION LINE, AND REGRESSION STATISTICS
;       ALSO PRINTS REGRESSION STATISTICS

; RESTRICTIONS:
;       NOTE: IF THE USER PROVIDES THE PLOT KEYWORD /XLOG OR /YLOG THEN A LOG-LOG PLOT RESULTS
;             THAT IS, THE PROGRAM WILL ONLY DRAW NORMAL VS NORMAL OR LOG VS LOG
;
; PROCEDURE:
;       STRAIGHTFORWARD.
;
; NOTES:
;
;
; MODIFICATION HISTORY:
;		WRITTEN JUNE ,1996 BY J.O'REILLY, 28 TARZWELL DRIVE, NMFS, NOAA 02882 (JAY.O'REILLY@NOAA.GOV)
;   SEPT 14, 1998 JOR ADDED KEYWORD DOUBLE_SPACE
;   MAR 30,2013,JOR FORMATTING
;   SEP 21,2013,JOR COMMENTED: ;    IF COUNT GE 1 THEN _LOGLOG = 1
;   SEP 23,2013,JOR, REGROUPED KEYWORDS ACCORDING TO THEIR FUNCTION; ADDED KEYWORDS FOR A DATA LINE

;#########################################################################################################
;-
;************************
ROUTINE_NAME =  'PLOTXY'
;************************
;STOP  _EXTRA
IF N_ELEMENTS(AXES_COLOR) NE 1 THEN AXES_COLOR = 0
 
; ===> ENSURE THAT X,Y PARAMETERS ARE PROVIDED
  IF N_PARAMS() LT 2 THEN MESSAGE, 'ERROR: PLEASE PROVIDE X AND Y VARIABLES'
  IF N_ELEMENTS(X) NE N_ELEMENTS(Y) THEN MESSAGE, 'X AND Y MUST BE SAME SIZE'

; ===> DEFAULT REGRESSION MODEL;
  IF N_ELEMENTS(MODEL) EQ 0 THEN MODEL = 'RMA' ELSE MODEL=STRUPCASE(MODEL); DEFAULT IS FUNCTIONAL REGRESSION (REDUCED MAJOR AXIS)
  N_MODEL = N_ELEMENTS(MODEL)

  IF N_ELEMENTS(STATS_COLOR)   	EQ 0 THEN STATS_COLOR     = !P.COLOR
  IF N_ELEMENTS(STATS_CHARSIZE)	EQ 0 THEN STATS_CHARSIZE  = 0.85
  IF N_ELEMENTS(REG_COLOR)     	NE N_MODEL THEN REG_COLOR = REPLICATE(!P.COLOR,N_MODEL)
  IF N_ELEMENTS(REG_THICK)     	NE N_MODEL THEN REG_THICK = REPLICATE(3,N_MODEL)
  IF N_ELEMENTS(REG_LINESTYLE) NE N_MODEL THEN REG_LINESTYLE = INDGEN(N_MODEL)

 ; IF N_ELEMENTS(LINE_STYLE) NE 1 THEN LINE_STYLE=0
 ; IF N_ELEMENTS(LINE_THICK) NE 1 THEN LINE_THICK=0
 ; IF N_ELEMENTS(LINE_COLOR) NE 1 THEN LINE_COLOR=0

	IF N_ELEMENTS(REG_MID_COLOR) 	NE N_MODEL THEN REG_MID_COLOR = REPLICATE(0,N_MODEL)
	IF N_ELEMENTS(REG_MID_THICK)     	NE N_MODEL THEN REG_MID_THICK = REPLICATE(3,N_MODEL)
  IF N_ELEMENTS(REG_MID_LINESTYLE) NE N_MODEL THEN REG_MID_LINESTYLE = REPLICATE(0,N_MODEL)
  

  IF N_ELEMENTS(PSYM)     		EQ 0 THEN PSYM = 1
  IF N_ELEMENTS(SYMSIZE)     	EQ 0 THEN SYMSIZE     = 1
  IF N_ELEMENTS(SYM_COLOR)     EQ 0 THEN SYM_COLOR     = !P.COLOR

  IF N_ELEMENTS(ONE_COLOR)     EQ 0 THEN ONE_COLOR     = !P.COLOR
  IF N_ELEMENTS(ONE_THICK)     EQ 0 THEN ONE_THICK     = !P.THICK
  IF N_ELEMENTS(ONE_LINESTYLE) EQ 0 THEN ONE_LINESTYLE = 0

  IF N_ELEMENTS(MEAN_PSYM) EQ 0 THEN MEAN_PSYM = 1
  IF N_ELEMENTS(MEAN_SYMSIZE) EQ 0 THEN MEAN_SYMSIZE=2
  IF N_ELEMENTS(MEAN_COLOR) EQ 0 THEN MEAN_COLOR = !P.COLOR
  IF N_ELEMENTS(MEAN_THICK) EQ 0 THEN MEAN_THICK = 1


  IF N_ELEMENTS(GRID_COLOR)  EQ 0 THEN GRID_COLOR     = !P.COLOR
  IF N_ELEMENTS(GRID_LINESTYLE)  EQ 0 THEN GRID_LINESTYLE = !P.LINESTYLE
  IF N_ELEMENTS(GRID_THICK)  EQ 0 THEN GRID_THICK     = !P.THICK

; ====================>
; IF NO DESCRIPTIVE NAME FOR X AND Y VARIABLES THEN DEFAULT NAMES: XVAR,YVAR
  IF N_ELEMENTS(XTITLE) EQ 0 THEN XTITLE = 'X'
  IF N_ELEMENTS(YTITLE) EQ 0 THEN YTITLE = 'Y'

; ===================>
; COPY X AND Y INTO NEW VARIABLES, AND CONVERT TO DOUBLE PRECISION
  XD = DOUBLE(X)
  YD = DOUBLE(Y)

; ===> ELIMINATE INFINITE DATA OR DATA EQUAL TO MISSING CODE
  IF N_ELEMENTS(MISSINGX) EQ 0 THEN MISSINGX = MISSINGS(XD)
  IF N_ELEMENTS(MISSINGY) EQ 0 THEN MISSINGY = MISSINGS(YD)

  OK = WHERE(XD NE MISSINGX AND YD NE MISSINGY,COUNT)
  IF COUNT LT 2 THEN  MESSAGE, 'NOT ENOUGH OBSERVATIONS'
   
  XD = XD[OK] & YD = YD[OK]


;	===> GENERATE A NICE XRANGE AND YRANGE
 	IF N_ELEMENTS(XRANGE) NE 2 THEN XRANGE=NICE_RANGE(XD)
	IF N_ELEMENTS(YRANGE) NE 2 THEN YRANGE=NICE_RANGE(YD)


; ====================>
; CHECK IF OUTLIERS IS SET (ELIMINATE OUTLIER RATIOS OF 10:1, 1:10 ETC.)
  IF KEYWORD_SET(OUTLIERS) THEN BEGIN
    OUTLIERS = DOUBLE(OUTLIERS)
    OK = WHERE( (YD/XD) LT  OUTLIERS AND (YD/XD) GT (1.0D/OUTLIERS), COUNT  )
    XD = XD[OK]      & YD = YD[OK]
    IF COUNT LT 2 THEN BEGIN
      PRINT, 'NOT ENOUGH OBSERVATIONS'
      GOTO, DONE
    ENDIF
  ENDIF

; ===> COMPUTE CORRELATION,RMSD AND REGRESSION COEFFICIENTS (NASA GSFC SIXLIN.PRO)
; MUST LOOK TO SEE IF _EXTRA CONTAINS 'XLOG' OR 'YLOG' KEYWORDS TO PASS TO PLOT COMMAND
  _LOGLOG = 0
  IF KEYWORD_SET(_EXTRA) THEN BEGIN
    TAGNAMES = TAG_NAMES(_EXTRA)
    
    OK = WHERE(STRUPCASE(TAGNAMES) EQ 'LINESTYLE', COUNT_LINE )
        IF N_ELEMENTS(LINE_STYLE) GE 1 OR COUNT_LINE GE 1 THEN DO_PLOT_LINE = 1  ELSE DO_PLOT_LINE = 0

  ENDIF;IF KEYWORD_SET(_EXTRA) THEN BEGIN


  IF KEYWORD_SET(LOGLOG) THEN _LOGLOG = 1


  IF NOT _LOGLOG THEN BEGIN
    _STATS2 = STATS2(XD,YD,MODEL=MODEL,PARAMS=PARAMS,DECIMALS=DECIMALS,SHOW=SHOW,FAST=FAST,FILE=FILE,DOUBLE_SPACE=DOUBLE_SPACE)
  ENDIF ELSE BEGIN
;    LOG10 TRANSFORM X AND Y DATA
    _STATS2 = STATS2(ALOG10(XD), ALOG10(YD),MODEL=MODEL,PARAMS=PARAMS, DECIMALS=DECIMALS,SHOW=SHOW,FAST=FAST,FILE=FILE,DOUBLE_SPACE=DOUBLE_SPACE)
  ENDELSE

		STATS_STRUCT = _STATS2
;

; ====================>
  IF N_ELEMENTS(ROOM) GE 1 THEN BEGIN
    GRACE = (100.0- ROOM)*.01
    XRANGE = [XRANGE[0]*GRACE,XRANGE[1]/GRACE]
    YRANGE = [YRANGE[0]*GRACE,YRANGE[1]/GRACE]
  ENDIF


;##################################################################
; ===> PLOT SCATTER PLOT
  IF N_ELEMENTS(SYMBOLS) EQ N_ELEMENTS(XD) THEN BEGIN
    SYMBOLS = LONG(SYMBOLS)

    PLOT,XD,YD,XRANGE=XRANGE,YRANGE=YRANGE,XSTYLE=1,YSTYLE=1,XTITLE= XTITLE, $
       YTITLE= YTITLE,COLOR = AXES_COLOR,$
       XTICK_GET = XTICK_GET, YTICK_GET=YTICK_GET,/NODATA,$
       XLOG=_LOGLOG,YLOG=_LOGLOG, _EXTRA=_EXTRA

      IF NOT KEYWORD_SET(GRID_NONE) THEN GRIDS,X=XTICK_GET,Y=YTICK_GET,COLOR=GRID_COLOR,LINESTYLE=GRID_LINESTYLE,THICK=GRID_THICK

     
       IF DO_PLOT_LINE EQ 0 THEN BEGIN
        PLOTS,XD,YD,PSYM=SYMBOLS,SYMSIZE=SYMSIZE, COLOR=SYM_COLOR
       ENDIF ELSE BEGIN
        OPLOT,XD,YD,LINESTYLE = LINE_STYLE,THICK=LINE_THICK,COLOR = LINE_COLOR,_EXTRA=_EXTRA
       ENDELSE;IF DO_PLOT_LINE EQ 0 THEN BEGIN
      

  ENDIF ELSE BEGIN

    PLOT,XD,YD,XRANGE=XRANGE,YRANGE=YRANGE, XSTYLE=1,YSTYLE=1,XTITLE= XTITLE, $
        YTITLE= YTITLE,COLOR = AXES_COLOR,$
        XTICK_GET = XTICK_GET, YTICK_GET=YTICK_GET,/NODATA,$
       XLOG=_LOGLOG,YLOG=_LOGLOG, _EXTRA=_EXTRA
       IF NOT KEYWORD_SET(GRID_NONE) THEN GRIDS,X=XTICK_GET,Y=YTICK_GET,COLOR=GRID_COLOR,LINESTYLE=GRID_LINESTYLE,THICK=GRID_THICK
       IF DO_PLOT_LINE EQ 0 THEN BEGIN
          PLOTS,XD,YD,PSYM=SYMBOLS,SYMSIZE=SYMSIZE, COLOR=SYM_COLOR
       ENDIF ELSE BEGIN
          OPLOT,XD,YD,LINESTYLE = LINE_STYLE,THICK=LINE_THICK,COLOR = LINE_COLOR,_EXTRA=_EXTRA
       ENDELSE;IF DO_PLOT_LINE EQ 0 THEN BEGIN
      
  ENDELSE;IF N_ELEMENTS(SYMBOLS) EQ N_ELEMENTS(XD) THEN BEGIN



; ===> GET X AND Y AXIS LIMITS FOR SUBSEQUENT PLACEMENT OF STATISTICS LEGEND
; AND FOR PROPER PLOTTING OF ONE2ONE LINE AND REGRESSION LINE

  XCRANGE= !X.CRANGE
  YCRANGE= !Y.CRANGE
  
  IF _LOGLOG THEN BEGIN
    XCRANGE= (10.0D*DOUBLE(_LOGLOG))^!X.CRANGE
    YCRANGE= (10.0D*DOUBLE(_LOGLOG))^!Y.CRANGE
  ENDIF

; ===> OVER PLOT ONE2ONE LINE.
  IF KEYWORD_SET(ONE2ONE) THEN ONE2ONE,COLOR=ONE_COLOR,THICK=ONE_THICK,LINESTYLE=ONE_LINESTYLE

; ===> OVER PLOT REGRESSION LINE.
  IF NOT KEYWORD_SET(REG_NONE) THEN BEGIN

;		FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
    FOR NTH = 0, N_ELEMENTS(MODEL)-1 DO BEGIN
    	AMODEL = MODEL[NTH]
    	OK_MODEL=WHERE(_STATS2.MODEL EQ AMODEL,COUNT_MODEL)

    	IF COUNT_MODEL EQ 0 THEN CONTINUE  ;        >>>>>>>>>>>>>>>>>>>>>

      IF NOT _LOGLOG THEN BEGIN

      	OPLOT, XD, (_STATS2(OK_MODEL).INT + _STATS2(OK_MODEL).SLOPE*XD),$
                     COLOR=REG_COLOR[NTH],THICK=REG_THICK[NTH],LINESTYLE=0
        OPLOT, XD, (_STATS2(OK_MODEL).INT + _STATS2(OK_MODEL).SLOPE*XD),$
                     COLOR=REG_MID_COLOR[NTH],THICK=REG_MID_THICK[NTH],LINESTYLE=REG_MID_LINESTYLE[NTH]

      ENDIF ELSE BEGIN

        OPLOT, XD, 10.0^(_STATS2(OK_MODEL).INT + _STATS2(OK_MODEL).SLOPE*ALOG10(XD)),$
                   COLOR=REG_COLOR[0],THICK=REG_THICK[NTH],LINESTYLE=0
        OPLOT, XD, 10.0^(_STATS2(OK_MODEL).INT + _STATS2(OK_MODEL).SLOPE*ALOG10(XD)),$
                   COLOR=REG_MID_COLOR[NTH],THICK=REG_MID_THICK[NTH],LINESTYLE=REG_MID_LINESTYLE[NTH]

      ENDELSE

    ENDFOR ; FOR NTH = 0, N_ELEMENTS(MODEL)-1 DO BEGIN
    ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
    
  ENDIF;IF NOT KEYWORD_SET(REG_NONE) THEN BEGIN

; ===> PLOT MEAN X,Y POSITION
  IF  KEYWORD_SET(MEAN_SHOW) THEN BEGIN
    IF NOT _LOGLOG THEN BEGIN
      PLOTS,_STATS2[0].MEAN_X,_STATS2[0].MEAN_Y,$
            PSYM=MEAN_PSYM,SYMSIZE=MEAN_SYMSIZE,$
            COLOR=MEAN_COLOR,THICK=MEAN_THICK
    ENDIF ELSE BEGIN
      PLOTS,10.0^_STATS2[0].MEAN_X, 10.0^_STATS2[0].MEAN_Y,$
            PSYM=MEAN_PSYM,SYMSIZE=MEAN_SYMSIZE,$
            COLOR=MEAN_COLOR,THICK=MEAN_THICK
    ENDELSE;IF NOT _LOGLOG THEN BEGIN
      
  ENDIF;IF  KEYWORD_SET(MEAN_SHOW) THEN BEGIN

; ===> PLOT REGRESSION STATISTICS
  IF  NOT KEYWORD_SET(STATS_NONE) THEN BEGIN
    _POS = [!X.S[1]*!X.CRANGE + !X.S[0],$
            !Y.S[1]*!Y.CRANGE + !Y.S[0]]
    IF NOT KEYWORD_SET(STATS_POS) OR N_ELEMENTS(STATS_POS) NE 2 THEN $
      STATS_POS = [0.02,.99]
      X_POS= (_POS[1]-_POS[0])*STATS_POS[0]+ _POS[0]
      Y_POS= (_POS(3)-_POS(2))*STATS_POS[1]+ _POS(2)

    STATS_TXT = ''
;		FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
    FOR NTH = 0, N_ELEMENTS(MODEL)-1 DO BEGIN
    	AMODEL = MODEL[NTH]
    	OK_MODEL=WHERE(_STATS2.MODEL EQ AMODEL,COUNT_MODEL)
    	IF COUNT_MODEL EQ 0 THEN CONTINUE  ;        >>>>>>>>>>>>>>>>>>>>>
      STATS_TXT = STATS_TXT + _STATS2(OK_MODEL).STATSTRING  +'!C'
    ENDFOR;FOR NTH = 0, N_ELEMENTS(MODEL)-1 DO BEGIN
    ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
    
    XYOUTS,X_POS,Y_POS,STATS_TXT,/NORMAL,COLOR=STATS_COLOR,CHARSIZE=STATS_CHARSIZE
;    XYOUTS2,X_POS,Y_POS,STATS_TXT,/NORMAL,COLOR=STATS_COLOR,CHARSIZE=STATS_CHARSIZE,BACKGROUND=!P.BACKGROUND

  ENDIF;IF  NOT KEYWORD_SET(STATS_NONE) THEN BEGIN


; ===> PLOT A LEGEND USING JHUAPL PROGRAM LEG.PRO
  IF  KEYWORD_SET(LEG_SHOW) THEN BEGIN
    IF NOT KEYWORD_SET(LEG_POS) OR N_ELEMENTS(LEG_POS) NE 4 THEN BEGIN
     XYZ=CONVERT_COORD(!X.CRANGE[1],!Y.CRANGE[0],/DATA,/TO_NORMAL)
     LEG_POS = [XYZ[0]-.2, .1,.85, XYZ[1]+.2]
    ENDIF;IF NOT KEYWORD_SET(LEG_POS) OR N_ELEMENTS(LEG_POS) NE 4 THEN BEGIN
    TXT = ''

    START = 1

;		LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
    FOR NTH = 0,N_ELEMENTS(MODEL)-1 DO BEGIN
    	AMODEL = MODEL[NTH]
    	OK_MODEL=WHERE(_STATS2.MODEL EQ AMODEL,COUNT_MODEL)
    	IF COUNT_MODEL EQ 0 THEN CONTINUE  ;        >>>>>>>>>>>>>>>>>>>>>
      IF START EQ 1 THEN BEGIN
        TXT =   STRTRIM(_STATS2(OK_MODEL).(1),2)
        START = 0
      ENDIF ELSE BEGIN
        TXT = [TXT,STRTRIM(_STATS2(OK_MODEL).(1),2)]
      ENDELSE
    ENDFOR;FOR NTH = 0,N_ELEMENTS(MODEL)-1 DO BEGIN
    ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF


		BOX=[255, 0,  1, 0.75, 0.8]
   	LEG,POS=LEG_POS,LINESTYLE=REG_LINESTYLE,LABEL=TXT,BOX=BOX   ; JHUAPL PROGRAM, IF YOU HAVE IT
  ENDIF;IF  KEYWORD_SET(LEG_SHOW) THEN BEGIN
  
  
  
  
 DONE:   ; DONE HERE IF INSUFFICIENT NUMBER OF OBSERVATIONS
 
END; #####################  END OF ROUTINE ################################
