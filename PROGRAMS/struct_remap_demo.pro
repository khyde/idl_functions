; $ID:	STRUCT_REMAP_DEMO.PRO,	2021-04-15-17,	USER-KJWH	$
;####################################################################################
  PRO STRUCT_REMAP_DEMO
;+
; THIS PROGRAM IS A DEMO FOR STRUCT_REMAP

; MODIFICATION HISTORY
;     FEB 14, 2015 - JOR: COPIED FROM STRUCT_SD_REMAP_DEMO AND MODIFIED
;     NOV 23, 2015 - KJWH: REPLACE L3_2SAV WITH SAVE_MAKE_L3
;     JAN 05, 2017 - KJWH: Overhauled to work with the updated STRUCT_REMAP and STRUCT_REMAP_WRITE programs
;     JAN 06, 2017 - KJWH: Changed SUBSET map names
;
;#######################################################################################################
;-
;*******************************
  ROUTINE='STRUCT_REMAP_DEMO'
;*******************************
  SL = PATH_SEP()

  DIR_DEMO = !S.DEMO + ROUTINE + SL
  DIR_TEST, DIR_DEMO
  
;===> SWITCHES
  DO_L3B_TO_SAVES  = ''
  DO_L3B_SUBSET    = 'S'
  DO_NEC_TO_MAB    = '' 
 

;*******************************
  IF KEY(DO_L3B_TO_SAVES) THEN BEGIN
;*******************************
    SWITCHES,DO_L3B_TO_SAVES,STOPP=STOPP,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,INIT=INIT,R_FILES=R_FILES,R_DATASETS=R_DATASETS,R_MAPS=R_MAPS,R_PRODS=R_PRODS,DATERANGE=DATERANGE,DATASETS=DATASETS
    IF STOPP THEN STOP
    FILES = FILE_SEARCH(!S.FILES + 'MONTH_01*-SEAWIFS-*L3B1*-CHLOR_A-OCI-STATS.SAV')
    MAPS_OUT = ['CHES_BAY','NEC','EC','MAB','DEL_BAY','NES','GEQ']
    STRUCT_REMAP_WRITE, FILES, MAP_OUT=MAPS_OUT, DIR_OUT=DIR_DEMO, OVERWRITE=OVERWRITE
    
    FOR M=0, N_ELEMENTS(MAPS_OUT)-1 DO BEGIN
      FILE = FILE_SEARCH(DIR_DEMO + 'MONTH_01*-'+MAPS_OUT(M)+'-*STATS.SAV')
      L = READ_LANDMASK(MAPS_OUT(M),/STRUCT)
      PNGFILE = REPLACE(FILE,'.SAV','.PNG')
      IF FILE_MAKE(FILE,PNGFILE,OVERWRITE=OVERWRITE) EQ 0 THEN CONTINUE
      D = STRUCT_READ(FILE,STRUCT=SD)
      B = PRODS_2BYTE(SD.MEAN,PROD='CHLOR_A')
      SZ = SIZEXYZ(B,PX=PX,PY=PY)
   ;  B(L.LAND) = 252
      B(L.COAST) = 0
      IM = IMAGE(B,RGB_TABLE=CPAL_READ('PAL_BR'),MARGIN=0,DIMENSIONS=[PX,PY],BUFFER=BUFFER)
      PRODS_COLORBAR, 'CHLOR_A', IMG=IM, LOG=1, ORIENTATION=0, TITLE=TITLE, POSITION=[.25,.01,.75,.02], FONT_SIZE=12, TEXTPOS=1, PAL='PAL_BR'
      IM.SAVE, PNGFILE
      IM.CLOSE
    ENDFOR
    
    IF STOPP THEN STOP
    
  ENDIF;IF KEY(DO_L3B9_REMAP) THEN BEGIN
;|||||||||||||||||||||||||||||||||||||


; *********************************
  IF KEY(DO_L3B_SUBSET) THEN BEGIN
; *********************************
  SWITCHES,DO_L3B_SUBSET,STOPP=STOPP,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,INIT=INIT,R_FILES=R_FILES,R_DATASETS=R_DATASETS,R_MAPS=R_MAPS,R_PRODS=R_PRODS,DATERANGE=DATERANGE,DATASETS=DATASETS
  IF STOPP THEN STOP
  FILES = FILE_SEARCH(!S.FILES + 'MONTH_01*-SEAWIFS-*L3B2*-CHLOR_A-OCI-STATS.SAV')
  MAPS_OUT = ['SUBSET_CHESBAY','SUBSET_DOPPIO','SUBSET_DELBAY']
  
  STRUCT_REMAP_WRITE, FILES, MAP_OUT=MAPS_OUT, DIR_OUT=DIR_DEMO, OVERWRITE=OVERWRITE

  FOR M=0, N_ELEMENTS(MAPS_OUT)-1 DO BEGIN
    FILE = FILE_SEARCH(DIR_DEMO + 'MONTH_01*-'+MAPS_OUT(M)+'-*STATS.SAV')
    L = READ_LANDMASK(MAPS_OUT(M),/STRUCT)
    PNGFILE = REPLACE(FILE,'.SAV','.PNG')
    IF FILE_MAKE(FILE,PNGFILE,OVERWRITE=OVERWRITE) EQ 0 THEN CONTINUE
    D = STRUCT_READ(FILE,STRUCT=SD)
    B = PRODS_2BYTE(SD.MEAN,PROD='CHLOR_A')
    SZ = SIZEXYZ(B,PX=PX,PY=PY)
    IM = IMAGE(B,RGB_TABLE=CPAL_READ('PAL_BR'),MARGIN=0,DIMENSIONS=[PX,PY],BUFFER=BUFFER)
    PRODS_COLORBAR, 'CHLOR_A', IMG=IM, LOG=1, ORIENTATION=0, TITLE=TITLE, POSITION=[.25,.01,.75,.02], FONT_SIZE=12, TEXTPOS=1, PAL='PAL_BR'
    IM.SAVE, PNGFILE
    IM.CLOSE
  ENDFOR

  IF STOPP THEN STOP

ENDIF;IF KEY(DO_L3B9_REMAP) THEN BEGIN




;*******************************
  IF KEY(DO_NEC_TO_MAB) THEN BEGIN    ; Remaps from NEC to MAB - creating a new structure, but not saving the new file
;*******************************
    SWITCHES,DO_NEC_TO_MAB,STOPP=STOPP,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,INIT=INIT,R_FILES=R_FILES,R_DATASETS=R_DATASETS,R_MAPS=R_MAPS,R_PRODS=R_PRODS,DATERANGE=DATERANGE,DATASETS=DATASETS
    IF STOPP THEN STOP
    FILES = DIR_DEMO + 'MONTH_01_1998_2010-SEAWIFS-R2015-NEC-CHLOR_A-OCI-STATS.SAV'
    D = STRUCT_READ(FILES[0],STRUCT=S)
    IMGR, S.MEAN, MAP=S.MAP, PROD=S.PROD
    IF VERBOSE THEN ST,S
    MAP_OUT = 'MAB'
    NEW = STRUCT_REMAP(S, MAP_OUT=MAP_OUT, INIT=INIT)
    IF VERBOSE THEN ST, NEW
    IMGR, NEW.MEAN, MAP=NEW.MAP, PROD=NEW.PROD
    IF STOPP THEN STOP
    
  ENDIF;IF KEY(DO_NEC_MAB) THEN BEGIN


END; #####################  END OF ROUTINE ################################
