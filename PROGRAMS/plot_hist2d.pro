; $ID:	PLOT_HIST2D.PRO,	2020-07-08-15,	USER-KJWH	$

;###################################################################################################
	PRO PLOT_HIST2D, X,	Y, $ ;  X,Y ARRAYS ARE THE ONLY REQUIRED INPUTS.  EVERYTHING ELSE IS OPTIONAL.
;PS  SAMPLE  STOP

			MODEL = MODEL,$

			IMAGE = IMAGE,$ ; IMAGE (THE JOINT FREQUENCY ARRAY FROM HIST2D) IS THE ONLY OPTIONAL OUTPUT FROM THIS ROUTINE, OTHER THAN THE PLOT

			MIN_X=MIN_X,	MAX_X=MAX_X,	BIN_X=BIN_X,$
			MIN_Y=MIN_Y,	MAX_Y=MAX_Y,	BIN_Y=BIN_Y,$

			PERCENT=PERCENT,	LOG_FREQ=LOG_FREQ,	SMO=SMO,  ISOTROPIC=ISOTROPIC, $

			AXES=AXES, ALOGX=ALOGX,ALOGY=ALOGY,$
			X_DECIMALS=X_DECIMALS,Y_DECIMALS=Y_DECIMALS,$

 			TITLE=TITLE,$
      XTITLE=XTITLE,	X_COLOR=X_COLOR,	X_THICK=X_THICK,$
      YTITLE=YTITLE, 	Y_COLOR=Y_COLOR,	Y_THICK=Y_THICK, $
      XLABEL=XLABEL,  YLABEL=YLABEL, $

			VERTICAL= VERTICAL,     HORIZONTAL= HORIZONTAL, $
			BAR_NONE=BAR_NONE,      BAR_POS=BAR_POS,         BAR_TITLE=BAR_TITLE, 	BAR_COLOR=BAR_COLOR,BAR_CHARSIZE=BAR_CHARSIZE,$
			BAR_XTITLE=BAR_XTITLE,	BAR_YTITLE=BAR_YTITLE,$
			BAR_BOTTOM=BAR_BOTTOM,	BAR_TOP=BAR_TOP,	BAR_LEFT=BAR_LEFT, BAR_RIGHT=BAR_RIGHT,$

			PAL=PAL,$

     	ZERO_COLOR=ZERO_COLOR,	BKG_COLOR=BKG_COLOR,	MIN_COLOR=MIN_COLOR,	MAX_COLOR=MAX_COLOR, $

      LAB_NONE=LAB_NONE,      LAB_POS=LAB_POS,         LAB_TXT=LAB_TXT,          LAB_COLOR=LAB_COLOR,            LAB_CHARSIZE=LAB_CHARSIZE,$
      REG_NONE=REG_NONE,      REG_COLOR=REG_COLOR,     REG_THICK=REG_THICK,      REG_LINESTYLE=REG_LINESTYLE, $
      REG_MID_COLOR=REG_MID_COLOR,	REG_MID_THICK=REG_MID_THICK,	 REG_MID_LINESTYLE=REG_MID_LINESTYLE,$

      MEAN_NONE=MEAN_NONE,    MEAN_COLOR=MEAN_COLOR,   MEAN_THICK=MEAN_THICK,    MEAN_PSYM=MEAN_PSYM,            MEAN_SYMSIZE=MEAN_SYMSIZE,$
      CURVE_NONE=CURVE_NONE,  CURVE_X=CURVE_X,         CURVE_Y=CURVE_Y,          CURVE_COLOR=CURVE_COLOR,        CURVE_THICK=CURVE_THICK,          CURVE_LINESTYLE=CURVE_LINESTYLE,$
 			ONE_NONE=ONE_NONE,      ONE_COLOR=ONE_COLOR,     ONE_THICK=ONE_THICK,      ONE_LINESTYLE=ONE_LINESTYLE,$
 			GRID_NONE=GRID_NONE,    GRID_X=GRID_X,           GRID_Y=GRID_Y,            GRID_COLOR=GRID_COLOR,					 GRID_THICK=GRID_THICK,            GRID_LINESTYLE=GRID_LINESTYLE,$

			FRAME_NONE=FRAME_NONE,  FRAME_COLOR=FRAME_COLOR, FRAME_THICK=FRAME_THICK,$

			STATS_NONE=STATS_NONE,  STATS_POS=STATS_POS,     STATS_COLOR=STATS_COLOR,        STATS_CHARSIZE=STATS_CHARSIZE,	STATS_BACKGROUND=STATS_BACKGROUND,		STATS_BRIEF=STATS_BRIEF,$
      STATS_PARAMS=STATS_PARAMS, DECIMALS=DECIMALS,       FAST=FAST,$   ; PASSED TO STATS2.PRO

      NO_TIMESTAMP=NO_TIMESTAMP, TIMESTAMP_SIZE=TIMESTAMP_SIZE, $
      SAMPLE=SAMPLE,SIMPLENAME=SIMPLENAME,$
			POSITION=POSITION,$
      _EXTRA=_EXTRA





;+
; NAME:  PS
;       PLOT_HIST2D
;
; PURPOSE:
;       THIS PROGRAM PLOTS A 2-DIMENSIONAL FREQUENCY DENSITY PLOT OF TWO VARIABLES,
;				THE LINEAR REGRESSION LINE, A COLOR BAR, AND REGRESSION STATISTICS
;
; CATEGORY:
;       STATISTICS.
;
; CALLING SEQUENCE:
;       RESULT = PLOT_HIST2D(X,Y)
;
; INPUTS:
;     	X:  X DATA ARRAY
;   		Y:  Y DATA ARRAY
;
; KEYWORD PARAMETERS:
;
;		IMAGE: THE 2-D HISTOGRAM ARRAY GENERATED BY IDL'S HIST2D ROUTINE

;   ALOGX: TO CREATE A LOG SCALE ON THE X AXIS
;   ALOGY: TO CREATE A LOG SCALE ON THE X AXIS

; 	BIN_X,BIN_Y,MAX_X,MAX_Y,MIN_X,MIN_Y (SEE IDL HELP FOR HIST2D ROUTINE);
; 	BIN_X: THE SIZE OF EACH BIN IN THE X DIRECTION (COLUMN WIDTH). 	IF THIS KEYWORD IS NOT SPECIFIED, THIS ROUTINE PARTITIONS THE X DATA INTO 50 BINS.
; 	BIN_Y: THE SIZE OF EACH BIN IN THE Y DIRECTION (ROW HEIGHT). 		IF THIS KEYWORD IS NOT SPECIFIED, THIS ROUTINE PARTITIONS THE Y DATA INTO 50 BINS.
; 	MIN_X: THE MINIMUM X VALUE TO CONSIDER. IF THIS KEYWORD IS NOT SPECIFIED, THEN IT IS SET TO A 'NICE' VALUE LE MIN(X).
; 	MAX_X: THE MAXIMUM X VALUE TO CONSIDER. IF THIS KEYWORD IS NOT SPECIFIED, THEN IT IS SET TO A 'NICE' VALUE GE MAX(X).
; 	MIN_Y: THE MINIMUM Y VALUE TO CONSIDER. IF THIS KEYWORD IS NOT SPECIFIED, THEN IT IS SET TO A 'NICE' VALUE LE MIN(Y).
; 	MAX_Y: THE MAXIMUM Y VALUE TO CONSIDER. IF THIS KEYWORD IS NOT SPECIFIED, THEN IT IS SET TO A 'NICE' VALUE GE MAX(Y).

;		PERCENT:	CALCULATE FREQUENCIES AS A PERCENT OF THE TOTAL FREQUENCY
;		LOG_FREQ: DISPLAY THE HISTOGRAM AND COLOR BAR AS THE LOG OF THE FREQUENCY (OR LOG OF THE PERCENT FREQUENCY)
;		SMO:			SMOOTHING FACTOR TO APPLY TO THE FREQUENCY HISTOGRAM (SMO = 8 IS USUALLY GOOD)
;		ISOTROPIC: SET THIS KEYWORD TO FORCE THE SCALING OF THE X AND Y AXES TO BE EQUAL (SEE IDL PLOT KEYWORDS).
;
;		AXES:		  DEFAULT IS AXES=[1,1,0,0].  SEE IDL ROUTINE AXIS (AXES ORDER=	XBOTTOM; YLEFT, XTOP, YRIGHT)
;		X_DECIMALS:			NUMBER OF DECIMAL PLACES TO SHOW FOR THE X AXIS
;		Y_DECIMALS:			NUMBER OF DECIMAL PLACES TO SHOW FOR THE Y AXIS
;
;		TITLE:		THE TITLE FOR THE PLOT
;		XTITLE:		X-AXIS TITLE
; 	X_COLOR:  COLOR FOR XAXIS
; 	X_THICK:  THICKNESS FOR XAXIS
;
;		YTITLE:		Y-AXIS TITLE
; 	Y_COLOR:  COLOR FOR YAXIS
; 	Y_THICK:  THICKNESS FOR YAXIS
;
;		X_LABEL:	ADDITIONAL TEXT LABEL TO BE CONCATENATED TO THE XTITLE
;		Y_LABEL:	ADDITIONAL TEXT LABEL TO BE CONCATENATED TO THE YTITLE

;		VERTICAL:		DRAWS A VERTICAL COLOR BAR SCALE (DEFAULT)
;		HORIZONTAL: DRAWS A HORIZONTAL COLOR BAR SCALE
;
;		BAR_NONE:		DO NOT DRAW A COLOR BAR SCALE
;		BAR_POS:		POSITION FOR THE COLOR BAR (DEFAULT: BAR_POS = [1.005,	0.0, 	1.020, 1.00] )
;		BAR_TITLE:	TITLE FOR THE COLOR BAR
;		BAR_COLOR:	COLOR FOR THE COLOR BAR TITLE
;		BAR_CHARSIZE: CHARACTER SIZE FOR THE COLOR BAR TITLE
;		BAR_XTITLE:		COLOR BAR XTITLE (ABOVE OR BELOW THE COLOR BAR DEPENDING ON BAR_BOTTOM OR BAR_TOP)
;		BAR_YTITLE:		COLOR BAR YTITLE (LEFT OR RIGHT SIDE OF THE COLOR BAR DEPENDING ON BAR_LEFT,BAR_RIGHT
;		BAR_BOTTOM:		HORIZONTAL AXIS ON BOTTOM (DEFAULT FOR HORIZONTAL BAR).
;		BAR_TOP:			HORIZONTAL AXIS ON TOP.
;		BAR_LEFT:			VERTICAL AXIS ON LEFT.
;		BAR_RIGHT:		VERTICAL AXIS ON RIGHT (DEFAULT FOR VERTICAL BAR)

;		PAL:	THE NAME OF A 'STANDARD' IDL PALETTE PROGRAM (E.G. PAL_SW3) TO USE

; 	ZERO_COLOR:   COLOR TO SUBSTITUTE FOR ZERO FREQUENCIES IN THE 2D-HISTOGRAM IMAGE
; 	BKG_COLOR:    COLOR FOR THE PLOT BACKGROUND
;		MIN_COLOR			MINIMUM COLOR TO USE FOR THE 2D-HISTOGRAM IMAGE (DEFAULT = 1)
; 	MAX_COLOR:    MAXIMUM COLOR TO USE FOR THE 2D-HISTOGRAM IMAGE (DEFAULT = 250)
;
;		LAB_NONE:		DO NOT ADD A LABEL ;
; 	LAB_POS:  	X,Y POSITION FOR LABEL (DEFAULT IS LAB_POS = [0.81,0.05])
; 	LAB_TXT:    LABEL STRING
; 	LAB_COLOR:  	COLOR FOR LABEL
; 	LAB_CHARSIZE: CHARSIZE FOR LABEL
;
;		MODEL:	REGRESSION MODELS (SEE STATS2.PRO)
;			LSY:	LEAST SQUARES Y
;			LSX:	LEAST SQUARES X
;			LSB:	LEAST SQUARES BISECTOR
;			ORMA:	ORTHOGONAL REDUCED MAJOR AXIS
;			RMA:	REDUCED MAJOR AXIS (THE DEFAULT MODEL FOR THIS ROUTINE)
;			MLS:	MEAN LEAST SQUARES
;			RLAD:	ROBUST LEAST ABSOLUTE DEVIATION (IDL'S LADFIT.PRO)
;
;		REG_NONE:   		DO NOT DRAW A REGRESSION LINE
; 	REG_COLOR:    	COLOR FOR REGRESSION LINE     (CAN BE ARRAY)
; 	REG_THICK:  		THICKNESS FOR REGRESSION LINE (CAN BE ARRAY)
; 	REG_LINESTYLE:  LINESTYLE FOR REGRESSION LINE

;
;
;		MEAN_NONE:		DO NOT PLACE A PLOT SYMBOL AT THE MEAN(X),MEAN(Y) COORDINATE
;		MEAN_COLOR:		COLOR FOR THE MEAN SYMBOL
;		MEAN_THICK:		THICKNESS FOR THE MEAN SYMBOL
;		MEAN_PSYM:		SYMBOL CODE FOR THE MEAN
;		MEAN_SYMSIZE:	SYMBOL SIZE FOR THE MEAN
;
;		CURVE_NONE:		DO NOT PLACE A PLOT SYMBOL AT THE CURVE(X),CURVE(Y) COORDINATE
;		CURVE_X:			THE X ARRAY COORDINATES FOR THE CURVE TO PLOT ATOP THE 2-D HISTOGRAM IMAGE
;		CURVE_Y:			THE Y ARRAY COORDINATES FOR THE CURVE TO PLOT ATOP THE 2-D HISTOGRAM IMAGE
;		CURVE_COLOR:	COLOR FOR THE CURVE
;		CURVE_THICK:	THICKNESS FOR THE CURVE
;		CURVE_LINESTYLE:	LINESTYLE FOR THE CURVE
;
;
; 	ONE_NONE:   		DO NOT DRAW A ONE-2-ONE LINE
; 	ONE_COLOR:    	COLOR FOR ONE-2-ONE LINE  (CAN BE ARRAY)
; 	ONE_THICK:    	THICK FOR ONE-2-ONE LINE  (CAN BE ARRAY)
; 	ONE_LINESTYLE:  LINESTYLE FOR ONE-2-ONE LINE
;
;		GRID_NONE:			DO NOT DRAW GRID LINES IN THE PLOT AREA
;		GRID_X:					COORDINATES ALONG THE X-AXIS TO USE IN DRAWING VERTICAL GRID LINES
;		GRID_Y:					COORDINATES ALONG THE Y-AXIS TO USE IN DRAWING HORIZONGAL GRID LINES
;   GRID_COLOR:			COLOR FOR THE HORIZONTAL AND VERTICAL GRID LINES
;		GRID_THICK:			THICKNESS FOR GRID LINES
;		GRID_LINESTYLE:	LINESTYLE FOR GRID LINES
;
;
;		FRAME_NONE:			DO NOT DRAW A FRAME AROUND THE PLOT AXES
;		FRAME_COLOR:		COLOR FOR FRAME
;		FRAME_THICK:		THICKNESS FOR FRAME
;
;		STATS_NONE:			DO NOT PLOT THE REGRESSION STATISTICS
;		STATS_POS:			POSITION FOR THE REGRESSION STATISTICS (DEFAULT: STATS_POS = [0.02,0.95])
;	  STATS_COLOR:		COLOR FOR REGRESSION STATISTICS TEXT
;		STATS_CHARSIZE:	CHARACTER SIZE FOR REGRESSION STATISTICS
;		STATS_BACKGROUND: COLOR FOR THE BACKGROUND FOR STATS (BEHIND THE STATS TEXT STRING)
;		STATS_BRIEF:		COMPUTE AND DISPLAY REGRESSION STATISTICS FOR SIMPLE STATISTICS (SEE STATS2.PRO)
;		STATS_PARAMS:					CODES FOR THE REGRESSION STATISTICS WHICH SHOULD BE DISPLAYED
;		DECIMALS:				NUMBER OF DECIMAL PLACES TO SHOW FOR THE REGRESSION STATISTICS


;		FAST:						USE TO SPEED UP REGRESSION FOR VERY LARGE X,Y ARRAYS (SEE STATS2.PRO)
;		NO_TIMESTAMP:		DO NOT DRAW THE CURRENT DATE TIME ON THE PLOT
;
;		_EXTRA:					ANY VALID KEYWORDS TO PASS TO THE PLOT ROUTINE FOR DRAWING AND LABELING THE X,Y AXES
;
;
;	OUTPUTS:
;		A PLOT OF THE 2D-HISTOGRAM OF THE DATA TO THE ACTIVE GRAPHICS DEVICE
;
;	OPTIONAL OUTPUTS:
;		IMAGE:	THE 2-D ARRAY GENERATED BY IDL'S HIST2D ROUTINE.
;
; SIDE EFFECTS:

; EXAMPLES:
;   X=RANDOMN(SEED,256L*256) & Y=RANDOMN(SEED,256L*256)+2*X & WINDOW,0,XSIZE=512,YSIZE=512 & PLOT_HIST2D,X,Y
;		X=RANDOMN(SEED,256L*256) & Y=RANDOMN(SEED,256L*256)+1.7*X & SLIDEW,[500,500] & PAL_SW3,R,G,B & TVLCT,R,G,B & PLOT_HIST2D,X,Y,PAL='PAL_SW3',ONE_COLOR=255
;		PSPRINT,/COLOR,/FULL & !Y.OMARGIN=[5,5] & !X.OMARGIN=[5,5] & FONTS,'TIMES'& X=RANDOMN(SEED,256L*256) & Y=RANDOMN(SEED,256L*256)+1.7*X & PAL_SW3,R,G,B & TVLCT,R,G,B & PLOT_HIST2D,X,Y,PAL='PAL_SW3',ONE_COLOR=255,SMO=4,CHARSIZE=1.5 & PSPRINT
;
;		ALSO SEE: PLOT_HIST2D_DEMO.PRO
;
; PROCEDURE:
;
; RESTRICTIONS:
;		NOTE THAT HIST_2DJ  IS CALLED NOT IDL'S HIST_2D (SEE EXPLANATION IN HIST_2DJ)
;
;		DO NOT PROVIDE XSTYLE AND YSTYLE AS _EXTRA KEYWORDS TO THIS PROGRAM (FOR PROPER ALIGNMENT OF IMAGE AND PLOT AXES
;		THIS PROGRAM PLOTS USING XSTYLE=5, YSTYLE=5).

;
;
; NOTES:
;		IF PROGRAM JAMS UP IN CBAR ('AXIS: DATA COORDINATE SYSTEM NOT ESTABLISHED.' , USUALLY BECAUSE YOU ARE TRYING TO PLACE
;		THE COLOR BAR TOO FAR BELOW OR ABOVE THE PLOT X AXIS,
;		THEN BEFORE YOU RUN THIS ROUTINE GIVE SOME ROOM IN THE Y DIMENSION (!Y.OMARGIN=[10,2]) OR X-DIMENSION (!X.OMARGIN=[10,5])
;
;   TO CREATE A LOGLOG STYLE PLOT, ALL INPUTS (X,Y,BIN_X,MIN_X,MAX_X, ETC.) MUST BE IN LOGGED UNITS.  THE ALOGX AND ALOGY
;   KEYWORDS WILL CREATE LOG SCALE AXES
;
;		IF PORTIONS OF THE OUTPUT PLOT ARE OUTSIDE THE PLOT PAGE (E.G. THE COLOR BAR)
;		THEN USE !Y.OMARGIN AND !X.OMARGIN GRAPHIC KEYWORDS (SEE IDL HELP ON THESE)
;
;		DO NOT USE AN INTERPOLATION VALUE OF 7 (THERE IS A PROBLEM WITH CONGRID !! JOR
;		ORIG IMAGE FROM HIST2D = 13 AND INTERPOLATE = 7 & 13 RESULTS IN A PROBLEM ?
;
; MODIFICATION HISTORY:
;		WRITTEN FEB 6,2001 BY J.O'REILLY, 28 TARZWELL DRIVE, NMFS, NOAA 02882 (JAY.O'REILLY@NOAA.GOV)
;
;   PROGRAM LOGIC FOR SCALING IMAGES FOLLOWS IMG_CONT.PRO (RSI).
; 	AUG 6, 2004 JOR TD MAKE COLORBAR SMALLER,TAKE OUT MULTI LOGIC
;		NOV 2006 JOR NOW USING CONGRID INSTEAD OF REBIN WHEN SMOOTHING IS SPECIFIED
;		AUG 30,2012,JOR ADDED KEYWORD SAMPLE
;###################################################################################################
;-
; ****************************
  ROUTINE_NAME='PLOT_HIST2D'
;*****************************
; SAMPLE PLOT STATS_  SORT
  _X = X
  _Y = Y
  ;===> SUBSAMPLE INPUT DATA?
  IF N_ELEMENTS(SAMPLE) EQ 1 THEN BEGIN
   _X = SUBSAMPLE(_X,SAMPLE)
   _Y = SUBSAMPLE(_Y,SAMPLE)    
  ENDIF;IF N_ELEMENTS(SAMPLE) GE 1 THEN BEGIN
  
;	***************************************************************
;	*** D E F A U L T S   F O R    K E Y W O R D   I N P U T S  ***
;	***************************************************************
;	===> GENERATE A NICE RANGE ENCOMPASSING X AND Y DATA INPUTS
  NICE_X = NICE_RANGE(_X)
  NICE_Y = NICE_RANGE(_Y)

;	===> IF PROVIDED THEN USE MIN_X,MAX_X,MIN_Y,MAX_Y INSTEAD THOSE FROM NICE_X,NICE_Y
  IF N_ELEMENTS(MIN_X) NE 1 THEN MIN_X = NICE_X[0]
  IF N_ELEMENTS(MAX_X) NE 1 THEN MAX_X = NICE_X[1]
  IF N_ELEMENTS(MIN_Y) NE 1 THEN MIN_Y = NICE_Y[0]
  IF N_ELEMENTS(MAX_Y) NE 1 THEN MAX_Y = NICE_Y[1]

;	===> DEFAULT IS TO PARTITION THE DATA INTO 50 BINS
  IF N_ELEMENTS(BIN_X) NE 1 THEN BIN_X = ABS((MAX_X-MIN_X)/50.)
  IF N_ELEMENTS(BIN_Y) NE 1 THEN BIN_Y = ABS((MAX_Y-MIN_Y)/50.)


;	===> DEFAULT IS NO ENLARGEMENT AND SMOOTHING OF THE ARRAY GENERATED BY IDL'S HIST_2D
  IF NOT KEYWORD_SET(SMO) THEN BEGIN
  	_SMOOTH = 1
  ENDIF ELSE BEGIN
  	_SMOOTH = 1 > SMO
  ENDELSE

	IF N_ELEMENTS(AXES) NE 4 THEN AXES=[1,1,0,0]
	IF N_ELEMENTS(X_DECIMALS) NE 1 THEN X_DECIMALS = 3
	IF N_ELEMENTS(Y_DECIMALS) NE 1 THEN Y_DECIMALS = 3

;	===> TITLE, AND X,Y AXES TITLES
  IF N_ELEMENTS(TITLE)  NE 1 THEN TITLE		=	''
  IF N_ELEMENTS(XTITLE) NE 1 THEN XTITLE 	= ''
  IF N_ELEMENTS(YTITLE) NE 1 THEN YTITLE 	= ''

;	===> AXES COLOR, THICK
  IF N_ELEMENTS(X_COLOR) NE 1 THEN X_COLOR = 0
  IF N_ELEMENTS(Y_COLOR) NE 1 THEN Y_COLOR = 0
  IF N_ELEMENTS(X_THICK) NE 1 THEN X_THICK = !P.THICK
  IF N_ELEMENTS(Y_THICK) NE 1 THEN Y_THICK = !P.THICK

;	===> LABEL COLOR AND CHARACTER SIZE
	IF N_ELEMENTS(LAB_POS) NE 2 THEN LAB_POS = [0.77,0.05]
  IF N_ELEMENTS(LAB_COLOR) 		NE 1 THEN LAB_COLOR = 0
  IF N_ELEMENTS(LAB_CHARSIZE) NE 1 THEN LAB_CHARSIZE = 1.0

;	===> COLOR FOR ZERO FREQUENCIES, BACKGROUND, MAX AND MIN COLOR
;			 FOR THE BYTE IMAGE DISPLAYED TO THE GRAPHICS DEVICE
  IF N_ELEMENTS(ZERO_COLOR) NE 1 THEN ZERO_COLOR = 255
  IF N_ELEMENTS(BKG_COLOR) 	NE 1 THEN BKG_COLOR = 255
  IF N_ELEMENTS(MAX_COLOR) 	NE 1 THEN MAX_COLOR = 250
  IF N_ELEMENTS(MIN_COLOR) 	NE 1 THEN MIN_COLOR = 1


;	===> DEFAULT REGRESSION MODEL IS REDUCED MAJOR AXIS (TYPE II)
	IF N_ELEMENTS(MODEL) EQ 0 THEN MODEL = 'RMA' ELSE MODEL = MODEL
	N_MODEL = N_ELEMENTS(MODEL)


;	===> POSITION COORDINATES FOR STATS OUTPUT, STATS COLOR AND STATS CHARACTER SIZE
	IF N_ELEMENTS(STATS_POS) 			NE 2 THEN STATS_POS = [0.02,0.95]
  IF N_ELEMENTS(STATS_COLOR)    NE N_MODEL THEN STATS_COLOR = REPLICATE(!P.COLOR,N_MODEL)
  IF N_ELEMENTS(STATS_CHARSIZE) NE 1 THEN STATS_CHARSIZE = 1
  IF N_ELEMENTS(STATS_BACKGROUND) NE 1 THEN STATS_BACKGROUND = !P.BACKGROUND
  IF KEYWORD_SET(STATS_BRIEF) THEN _STATS_BRIEF = STATS_BRIEF ELSE _STATS_BRIEF = 0

;	===> NUMBER OF DECIMAL PLACES TO SHOW FOR STATISTICAL RESULTS
  IF N_ELEMENTS(DECIMALS)       NE 1 THEN DECIMALS = 3

; ===> CHARSIZE FOR THE TIME STAMP
	IF N_ELEMENTS(TIMESTAMP_SIZE) NE 1 THEN TIMESTAMP_SIZE = 0.25

;	===> DEFAULT PARAMETER PASED TO STATS2 (ASSUMES LARGE X,Y
;			ARRAYS AND PREVENTS HIGHER-ORDER, TIME-CONSUMING STATISTICS
;			FROM BEING CALCULATED (SEE STATS2)
  IF N_ELEMENTS(FAST)           NE 1 THEN FAST = 1

;	===> CODES FOR STATISTICAL PARAMETERS TO SHOW (SEE STATS2)
  IF N_ELEMENTS(STATS_PARAMS)         LT 1 THEN BEGIN
  	STATS_PARAMS = [1,2,3,4,5,6,8,10,11]
  	IF FAST EQ 1 THEN STATS_PARAMS = [1,2,3,4,8,10]
	ENDIF



;	===> STATISTICAL LINEAR REGRESSION LINE COLOR, THICK, LINESTYLE
	IF N_ELEMENTS(REG_COLOR)     	NE N_MODEL THEN REG_COLOR = REPLICATE(!P.COLOR,N_MODEL)
  IF N_ELEMENTS(REG_THICK)     	NE N_MODEL THEN REG_THICK = REPLICATE(5,N_MODEL)
  IF N_ELEMENTS(REG_LINESTYLE) NE N_MODEL THEN REG_LINESTYLE = INDGEN(N_MODEL)

	IF N_ELEMENTS(REG_MID_COLOR) 	NE N_MODEL THEN REG_MID_COLOR = REPLICATE(0,N_MODEL)
	IF N_ELEMENTS(REG_MID_THICK)     NE N_MODEL THEN REG_MID_THICK = REPLICATE(1,N_MODEL)
  IF N_ELEMENTS(REG_MID_LINESTYLE) NE N_MODEL THEN REG_MID_LINESTYLE = REPLICATE(0,N_MODEL)


	IF N_ELEMENTS(CURVE_COLOR)     NE 2 THEN CURVE_COLOR = 0
  IF N_ELEMENTS(CURVE_THICK)     NE 2 THEN CURVE_THICK = 1
  IF N_ELEMENTS(CURVE_LINESTYLE) NE 1 THEN CURVE_LINESTYLE = 0

  IF N_ELEMENTS(ONE_COLOR)     LT 1 THEN ONE_COLOR = 0
  IF N_ELEMENTS(ONE_THICK)     LT 1 THEN ONE_THICK = 1
  IF N_ELEMENTS(ONE_LINESTYLE) NE 1 THEN ONE_LINESTYLE = 0

;	===> GRID COLOR, THICK AND LINESTYLE
  IF N_ELEMENTS(GRID_COLOR)     LT 1 THEN GRID_COLOR = 0
  IF N_ELEMENTS(GRID_THICK)     LT 1 THEN GRID_THICK = 2
  IF N_ELEMENTS(GRID_LINESTYLE) NE 1 THEN GRID_LINESTYLE = 1

;	===> MEAN XY COLOR, THICK, PSYM AND SYMSIZE
	IF N_ELEMENTS(MEAN_COLOR)     LT 1 THEN MEAN_COLOR =  0
  IF N_ELEMENTS(MEAN_THICK)     LT 1 THEN MEAN_THICK =  2
  IF N_ELEMENTS(MEAN_PSYM) 			NE 1 THEN MEAN_PSYM = 1
  IF N_ELEMENTS(MEAN_SYMSIZE) 	NE 1 THEN MEAN_SYMSIZE = 1

;	===> COLOR BAR
	IF N_ELEMENTS(BAR_COLOR) NE 1 THEN BAR_COLOR = 0
	IF N_ELEMENTS(BAR_CHARSIZE) NE 1 THEN BAR_CHARSIZE = 1.0

	IF N_ELEMENTS(HORIZONTAL) NE 1 AND N_ELEMENTS(VERTICAL) NE 1 THEN VERTICAL = 1 ; DEFAULT
	IF N_ELEMENTS(HORIZONTAL) EQ 1 AND N_ELEMENTS(VERTICAL) EQ 1 THEN BEGIN
		HORIZONTAL = 0
		VERTICAL = 1 ; DEFAULT
	ENDIF

	IF N_ELEMENTS(BAR_POS) NE 4 THEN BEGIN
		IF KEYWORD_SET(HORIZONTAL) THEN BAR_POS = [0.10,		1.010,  0.9, 1.025]
		IF KEYWORD_SET(VERTICAL  ) THEN BAR_POS = [1.005,	0.0, 	1.020, 1.00]
  ENDIF


	IF N_ELEMENTS(BAR_TITLE) NE 1 AND N_ELEMENTS(BAR_XTITLE) NE 1 AND N_ELEMENTS(BAR_YTITLE) NE 1  THEN BEGIN
		IF KEYWORD_SET(HORIZONTAL) THEN BAR_TITLE='FREQUENCY' ELSE BAR_TITLE = 'FREQ.'
		IF KEYWORD_SET(PERCENT) THEN BAR_TITLE = BAR_TITLE+' %'
	ENDIF


;	===> FRAME AROUND THE PLOT AXES
	IF N_ELEMENTS(FRAME_COLOR)    NE 1 THEN FRAME_COLOR = 0
  IF N_ELEMENTS(FRAME_THICK)    NE 1 THEN FRAME_THICK = 2

;	===> CROSS
	IF N_ELEMENTS(CROSS_COLOR)     LT 1 THEN CROSS_COLOR = [0]
  IF N_ELEMENTS(CROSS_THICK)     LT 1 THEN CROSS_THICK = [2]
  IF N_ELEMENTS(CROSS_LINESTYLE) NE 1 THEN CROSS_LINESTYLE = 1

; ===> X AND Y LABEL
	IF N_ELEMENTS(XLABEL) EQ 0 THEN XLABEL =''
	IF N_ELEMENTS(YLABEL) EQ 0 THEN YLABEL =''

	XTITLE=XTITLE+'  '+ XLABEL
	YTITLE=YTITLE+'  '+ YLABEL


;	***************************************************************************************
; *** H I S T _ 2 D     CONSTRUCT A 2-D IMAGE OF THE JOINT OCCURANCES OF X,Y DATA 		***
;	***************************************************************************************
;	===> USE HIST_2DJ .
;			 THIS VERSION (JOR) OF IDL'S HIST_2D DOES NOT ADD AN EXTRA ARRAY ELEMENT IF IT IS NOT NEEDED)
	IMAGE = HIST_2DJ(_X,_Y,MIN1=MIN_X,MAX1=MAX_X,BIN1=BIN_X, MIN2=MIN_Y,MAX2=MAX_Y,BIN2=BIN_Y)
  
; ===> GET THE RESULTING IMAGE ARRAY SIZE IN PIXELS
  SZ_IMAGE = SIZE(IMAGE,/STRUCT)
  PX = SZ_IMAGE.DIMENSIONS[0]
  PY = SZ_IMAGE.DIMENSIONS[1]

;	===> MAKE FIMAGE, A FLOATING-POINT IMAGE FROM IMAGE
;	===> IF /PERCENT THEN CALCULATE THE RELATIVE PERCENT FREQUENCY FOR EACH ELEMENT IN FIMAGE
	IF NOT KEYWORD_SET(PERCENT) THEN FIMAGE = FLOAT(IMAGE) ELSE FIMAGE = 100.0*IMAGE/TOTAL(IMAGE)


;	**********************************************************************
;	*** E N L A R G E   A N D    S M O O T H    T H E   F I M A G E    ***
;	**********************************************************************
;	===> ENLARGE FIMAGE USING CONGRID, NEAREST NEIGHBOR RESAMPLING (INTERP=0) AND CENTER KEYWORD
 	FIMAGE 	= CONGRID(FIMAGE,	PX*_SMOOTH, PY*_SMOOTH,/CENTER,INTERP=0)

;	===> FIND THE NON-ZERO AND ZERO FREQUENCIES
	OK_FIMAGE		=	WHERE(FINITE(FIMAGE) AND FIMAGE GT 0, COUNT_FIMAGE,NCOMPLEMENT=N_ZERO_FREQUENCY,COMPLEMENT=OK_ZERO_FREQUENCY)

;	===> LOG10-TRANSFORM THE FREQUENCIES (OR PERCENT FREQUENCIES) IF /LOG_FREQ
	IF KEYWORD_SET(LOG_FREQ) THEN BEGIN
		IF COUNT_FIMAGE GE 1 THEN FIMAGE(OK_FIMAGE) = ALOG10(FIMAGE(OK_FIMAGE))
		XMINOR = 9
		YMINOR = 9
	ENDIF ELSE BEGIN
 		XMINOR=2
		YMINOR=2
	ENDELSE

;	===> COMPUTE THE MIN MAX OF FIMAGE
 	MIN_FIMAGE = MIN(FIMAGE(OK_FIMAGE))
	MAX_FIMAGE = MAX(FIMAGE(OK_FIMAGE))

;	===> SET ANY ZERO FREQUENCIES TO INFINITY
	IF N_ZERO_FREQUENCY GE 1 THEN FIMAGE(OK_ZERO_FREQUENCY) = MISSINGS(FIMAGE)

;	===> SMOOTH, IGNORING MISSING VALUE CODES (INFINITY)
  IF _SMOOTH NE 1 THEN FIMAGE = SMOOTH( FIMAGE, _SMOOTH,/EDGE_TRUNCATE, MISSING=MISSINGS(FIMAGE), /NAN )


;	**************************************************************************
;	***  S C A L E   P R O B A B I L I T Y    A R R A Y   T O    B Y T E   ***
;	**************************************************************************
;	===> INITIALIZE A BYTE IMAGE
	BIMAGE = BYTE(FIMAGE) & BIMAGE(*,*) =255B

;	===> USE SCALE TO CONSTRUCT A BINARY IMAGE OF THE PROBABILITY VALUES
;			 SCALING THE PROBABILITY VALUES BETWEEN MIN_FIMAGE AND MAX_FIMAGE
;			 TO THE COLOR RANGE ([MIN_COLOR,MAX_COLOR]
	BIMAGE(OK_FIMAGE) = SCALE(FIMAGE(OK_FIMAGE),[MIN_COLOR,MAX_COLOR],MIN=MIN_FIMAGE,MAX=MAX_FIMAGE )
	
;	===> REPLACE THE ZERO FREQUENCY PIXELS IN THE BIMAGE WITH THE ZERO_COLOR
  IF N_ZERO_FREQUENCY GE 1 THEN BIMAGE(OK_ZERO_FREQUENCY) = ZERO_COLOR

;	===> LOAD THE PALETTE PROGRAM
  IF N_ELEMENTS(PAL) EQ 1 THEN BEGIN
  	CALL_PROCEDURE,PAL,R,G,B
  ENDIF ELSE BEGIN
;		===> LOAD A RAINBOW TYPE PALETTE BUT ALTER 0 TO BE BLACK AND 251:254 TO BE GRAY SHADES AND 255 TO BE WHITE
  	LOADCT,25,/SILENT
  	TVLCT,R,G,B,/GET
  	R[0]=0 & G[0]=0 & B[0]=0 &
  	R(251)=128 & G(251)=128 & B(251)=128 &
		R(252)=160 & G(252)=160 & B(252)=160 &
		R(253)=192 & G(253)=192 & B(253)=192 &
		R(254)=224 & G(254)=224 & B(254)=224 &
		R(255)=255 & G(255)=255 & B(255)=255 &
		TVLCT,R,G,B
  ENDELSE




; ********************************************
; ****** P L O T  ****************************
; ********************************************

  PLOT, _X,_Y,/NODATA, XSTYLE=5, YSTYLE = 5,$
	  XTICK_GET=XTICK_GET,YTICK_GET=YTICK_GET,$
	  XRANGE=[MIN_X,MAX_X],YRANGE=[MIN_Y,MAX_Y],$
	  TITLE=TITLE,XTITLE=XTITLE,YTITLE=YTITLE,$
	  XTICKLEN= -0.02, YTICKLEN= -0.02,$
	  XTICKFORMAT='(G0)',YTICKFORMAT='(G0)',$
	  ISOTROPIC=ISOTROPIC,$
	  BACKGROUND=BKG_COLOR,POSITION=POSITION,$
	  _EXTRA= _EXTRA


; ********************************************
; ****** SCALE HIST_2D IMAGE TO PLOT AREA  ***
; ********************************************

;	===> DIMENSIONS OF HIST2D IMAGE
 	SZ_IMAGE = SIZE(BIMAGE,/STRUCT)
  IF SZ_IMAGE.N_DIMENSIONS  NE 2  THEN MESSAGE, 'IMAGE IS NOT 2D'
  PX = FLOAT(SZ_IMAGE.DIMENSIONS[0])
  PY = FLOAT(SZ_IMAGE.DIMENSIONS[1])

; ===> GET SIZE OF WINDOW IN DEVICE UNITS
  WINDOW_X = !X.WINDOW * !D.X_VSIZE
  WINDOW_Y = !Y.WINDOW * !D.Y_VSIZE

  PX_WINDOW = WINDOW_X[1]-WINDOW_X[0]   ;SIZE IN X IN DEVICE UNITS
  PY_WINDOW = WINDOW_Y[1]-WINDOW_Y[0]   ;SIZE IN Y IN DEVICE UNITS

  IMAGE_ASPECT 				= PX / PY    ;IMAGE ASPECT RATIO
  WINDOW_ASPECT 			= PX_WINDOW / PY_WINDOW    ;WINDOW ASPECT RATIO
  IMAGE_WINDOW_RATIO = IMAGE_ASPECT / WINDOW_ASPECT     ;RATIO OF ASPECT RATIOS

 	IMAGE_OFFSET_X = 0
 	IMAGE_OFFSET_Y = 0


;	****************************************************************************************
; *** D I S P L A Y   I M A G E   T O   G R A P H I C    O U T P U T     D E V I C E   ***
;	****************************************************************************************
;	POSTSCRIPT ?
  IF (!D.FLAGS AND 1) NE 0 THEN BEGIN     				; SCALABLE PIXELS?
		IF KEYWORD_SET(ISOTROPIC) THEN BEGIN       		;	RETAIN ASPECT RATIO?;


        IF IMAGE_WINDOW_RATIO GE 1.0 THEN BEGIN
        	PY_WINDOW = PY_WINDOW / IMAGE_WINDOW_RATIO
          IMAGE_OFFSET_Y =  PY_WINDOW	* (IMAGE_WINDOW_RATIO-1.0)*0.5

       	ENDIF ELSE BEGIN
       		PX_WINDOW = PX_WINDOW * IMAGE_WINDOW_RATIO ;ADJUST WINDOW SIZE
 					IMAGE_OFFSET_X =  PX_WINDOW	* (1.0-IMAGE_WINDOW_RATIO)*0.5

       	ENDELSE
    ENDIF

    TV, BIMAGE,WINDOW_X[0]+IMAGE_OFFSET_X, WINDOW_Y[0]+IMAGE_OFFSET_Y,XSIZE = PX_WINDOW, YSIZE = PY_WINDOW, /DEVICE


  ENDIF ELSE BEGIN                  							;NOT SCALABLE PIXELS (E.G. NOT POSTSCRIPT)

    IF KEYWORD_SET(ISOTROPIC) THEN BEGIN
      IF IMAGE_WINDOW_RATIO GE 1.0 THEN PY_WINDOW = PY_WINDOW / IMAGE_WINDOW_RATIO ELSE PX_WINDOW = PX_WINDOW * IMAGE_WINDOW_RATIO
    ENDIF


; 	===>
TV,POLY_2D(BIMAGE,$           ;HAVE TO RESAMPLE IMAGE
[[-0.0,0],[PX/PX_WINDOW,0]], [[-0.0,PY/PY_WINDOW],[0,0]],$
0,PX_WINDOW,PY_WINDOW), $   ; 0 = DO NOT WANT TO INTERPOLATE (USE NEAREST NEIGHBOR)
WINDOW_X[0],WINDOW_Y[0]
        
  
  ENDELSE     ; IF (!D.FLAGS AND 1) NE 0 THEN BEGIN


; *********************
; *****  A X E S  *****
; *********************
	XTICKS = N_ELEMENTS(XTICK_GET)-1
	YTICKS = N_ELEMENTS(YTICK_GET)-1
	IF KEYWORD_SET(ALOGX) THEN XTICKNAME = 10^XTICK_GET ELSE XTICKNAME = XTICK_GET
	IF KEYWORD_SET(ALOGY) THEN YTICKNAME = 10^YTICK_GET ELSE YTICKNAME = YTICK_GET

;	===> REMOVE TRAILING ZEROS
	XTICKNAME = STRING(ROUNDS(XTICKNAME,X_DECIMALS),FORMAT='(G0)')
	YTICKNAME = STRING(ROUNDS(YTICKNAME,Y_DECIMALS),FORMAT='(G0)')



; AXES ORDER=	XBOTTOM; YLEFT, XTOP, YRIGHT
	IF AXES[0] NE 0 THEN AXIS, XAXIS = 0 ,XSTYLE=1,XTITLE=XTITLE,XTICKLEN= -0.02,COLOR=X_COLOR,XTHICK=X_THICK,XTICKV=XTICK_GET,XTICKS=XTICKS,XTICKNAME=XTICKNAME,_EXTRA= _EXTRA
  IF AXES[1] NE 0 THEN AXIS, YAXIS = 0 ,YSTYLE=1,YTITLE=YTITLE,YTICKLEN= -0.02,COLOR=Y_COLOR,YTHICK=Y_THICK,YTICKV=YTICK_GET,YTICKS=YTICKS,YTICKNAME=YTICKNAME,_EXTRA= _EXTRA
  IF AXES(2) NE 0 THEN AXIS, XAXIS = 1 ,XSTYLE=1,XTITLE=XTITLE,XTICKLEN= -0.02,COLOR=X_COLOR,XTHICK=X_THICK,XTICKV=XTICK_GET,XTICKS=XTICKS,XTICKNAME=XTICKNAME,_EXTRA= _EXTRA
  IF AXES(3) NE 0 THEN AXIS, YAXIS = 1 ,YSTYLE=1,YTITLE=YTITLE,YTICKLEN= -0.02,COLOR=Y_COLOR,YTHICK=Y_THICK,YTICKV=YTICK_GET,YTICKS=YTICKS,YTICKNAME=YTICKNAME,_EXTRA= _EXTRA


; ************************
; *****  G R I D S   *****
; ************************
  IF NOT KEYWORD_SET(GRID_NONE) THEN BEGIN
  	IF N_ELEMENTS(GRID_X) EQ 0 THEN _GRID_X = XTICK_GET ELSE _GRID_X = GRID_X
  	IF N_ELEMENTS(GRID_Y) EQ 0 THEN _GRID_Y = YTICK_GET ELSE _GRID_Y = GRID_Y
  	GRIDS,X= _GRID_X, Y= _GRID_Y, THICK=GRID_THICK,COLOR=GRID_COLOR,LINESTYLE=GRID_LINESTYLE
  ENDIF
;	///////////////////////////////////////////////////////////////////////////////////

; *****************************
; *****  M E A N   X,Y    *****
; *****************************
  IF  NOT KEYWORD_SET(MEAN_NONE) THEN BEGIN
    OK=WHERE(FINITE(_X) AND FINITE(_Y) ,COUNT)
    IF COUNT GE 1 THEN 	PLOTS, MEAN(_X[OK]),MEAN(_Y[OK]), THICK=MEAN_THICK,COLOR=MEAN_COLOR,PSYM=MEAN_PSYM,SYMSIZE=MEAN_SYMSIZE
  ENDIF
;	///////////////////////////////////////////////////////////////////////////////////


; ************************************
; *****  C U R V E_X, C U R V E_Y  ***
; ************************************
  IF  NOT KEYWORD_SET(CURVE_NONE) THEN BEGIN
     IF N_ELEMENTS(CURVE_X) GE 1 THEN BEGIN
;    FOR N=0,N_ELEMENTS(CURVE_COLOR)-1 DO BEGIN
;      ACOLOR = CURVE_COLOR;
 ;     ATHICK = CURVE_THICK;
      OPLOT, CURVE_X,CURVE_Y, THICK=CURVE_THICK,COLOR=CURVE_COLOR
;    ENDFOR
;   OPLOT, CURVE_X,CURVE_Y,   THICK=1,COLOR=0
    ENDIF
  ENDIF
;	///////////////////////////////////////////////////////////////////////////////////

; ****************************
; *****  O N E 2 O N E   *****
; ****************************
  IF NOT KEYWORD_SET(ONE_NONE) THEN BEGIN
 ;    FOR N=0,N_ELEMENTS(ONE_COLOR)-1 DO BEGIN
 ;     ACOLOR = ONE_COLOR(N)
;      ATHICK = ONE_THICK(N)

      OPLOT, [MIN_X,MAX_X], [MIN_X,MAX_X], THICK=ONE_THICK,COLOR=ONE_COLOR
 ;   ENDFOR
  ENDIF
;	///////////////////////////////////////////////////////////////////////////////////




; ******************************************************
; *****   R E G R E S S I O N   S T A T I S T I C S  ***
; ******************************************************
	IF NOT KEYWORD_SET(REG_NONE) OR NOT KEYWORD_SET(STATS_NONE) THEN $
		_STATS2 = STATS2(_X,_Y,DECIMALS=DECIMALS,PARAMS=STATS_PARAMS,FAST=FAST,BRIEF=_STATS_BRIEF,MODEL=MODEL)

; ===> OVER PLOT REGRESSION LINE.
  IF NOT KEYWORD_SET(REG_NONE) THEN BEGIN

;		LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
    FOR NTH = 0, N_ELEMENTS(MODEL)-1 DO BEGIN
    	AMODEL = MODEL[NTH]
    	OK_MODEL=WHERE(_STATS2.MODEL EQ AMODEL,COUNT_MODEL)

    	IF COUNT_MODEL EQ 0 THEN CONTINUE  ;        >>>>>>>>>>>>>>>>>>>>>

      	OPLOT, [MIN_X,MAX_X], (_STATS2(OK_MODEL).INT + _STATS2(OK_MODEL).SLOPE*[MIN_X,MAX_X]),$
                     COLOR=REG_COLOR[NTH],THICK=REG_THICK[NTH],LINESTYLE=0
        OPLOT, [MIN_X,MAX_X], (_STATS2(OK_MODEL).INT + _STATS2(OK_MODEL).SLOPE*[MIN_X,MAX_X]),$
                     COLOR=REG_MID_COLOR[NTH],THICK=REG_MID_THICK[NTH],LINESTYLE=REG_MID_LINESTYLE[NTH]

    ENDFOR ; FOR NTH = 0, N_ELEMENTS(MODEL)-1 DO BEGIN
  ENDIF
;	///////////////////////////////////////////////////////////////////////////////////


;	===> DISPLAY REGRESSION STATISTICS
	IF  NOT KEYWORD_SET(STATS_NONE) THEN BEGIN
   	STATS_TXT = ''
   	P=COORD_2PLOT(STATS_POS[0],STATS_POS[1],/TO_DATA)
   	_XX = P.X
   	_YY = P.Y
;		LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
    FOR NTH = 0, N_ELEMENTS(MODEL)-1 DO BEGIN
    	AMODEL = MODEL[NTH]
    	OK_MODEL=WHERE(_STATS2.MODEL EQ AMODEL,COUNT_MODEL)
    	IF COUNT_MODEL EQ 0 THEN CONTINUE  ;        >>>>>>>>>>>>>>>>>>>>>
      STATS_TXT = _STATS2(OK_MODEL).STATSTRING ;;; +'!C'
	  	XYOUTS2,_XX,_YY,STATS_TXT, COLOR=STATS_COLOR[NTH],CHARSIZE=STATS_CHARSIZE,BACKGROUND= STATS_BACKGROUND,/DATA,POS_LAST=POS_LAST
	  	XYZ=CONVERT_COORD(POS_LAST[0],POS_LAST[1],/NORMAL,/TO_DATA)
	  	_XX = REFORM(XYZ(0,*))
  		_YY = REFORM(XYZ(1,*))
    ENDFOR
	ENDIF
;	///////////////////////////////////////////////////////////////////////////////////



;	**********************
;	***** F R A M E  *****
;	**********************
 	IF NOT KEYWORD_SET(FRAME_NONE) THEN FRAME, COLOR=FRAME_COLOR,THICK=FRAME_THICK,/PLOT
;	///////////////////////////////////////////////////////////////////////////////////

; *************************
; *****   L A B E L   *****
; *************************
 	IF NOT KEYWORD_SET(LAB_NONE) THEN BEGIN
 		IF N_ELEMENTS(LAB_TXT) GE 1 THEN BEGIN
			P=COORD_2PLOT(LAB_POS[0],LAB_POS[1], /TO_DATA)
  		XYOUTS,P.X,P.Y,LAB_TXT,COLOR=LAB_COLOR,CHARSIZE=LAB_CHARSIZE
  	ENDIF
	ENDIF
;	///////////////////////////////////////////////////////////////////////////////////

; ******************************
; *****  C O L O R B A R   *****
; ******************************
; ===> JHUAPL PROGRAM CBAR TO DRAW A COLOR BAR
	IF NOT KEYWORD_SET(BAR_NONE) AND MIN_FIMAGE NE MAX_FIMAGE THEN BEGIN

;		===> GET THE NORMAL COORDINATES
 		P=COORD_2PLOT([BAR_POS[0],BAR_POS(2)],[BAR_POS[1],BAR_POS(3)], /TO_DATA)
		XYZ = CONVERT_COORD(P.X,P.Y,/DATA,/TO_NORMAL)
		XPOS=REFORM(XYZ(0,*))
		YPOS=REFORM(XYZ(1,*))
		IF XPOS[1] LT XPOS[0] THEN XPOS=REVERSE(XPOS)
		IF YPOS[1] LT YPOS[0] THEN YPOS=REVERSE(YPOS)
		NORM_POS = [XPOS[0],YPOS[0],XPOS[1],YPOS[1]]


;		******************************************************
;		*** USE JHUAPL CBAR PROGRAM TO DRAW THE COLOR BAR  ***
;		******************************************************
		CBAR,VMIN=MIN_FIMAGE,VMAX=MAX_FIMAGE,CMIN= MIN_COLOR,CMAX=MAX_COLOR,POS= NORM_POS,$
		COLOR=BAR_COLOR,CHARSIZE=BAR_CHARSIZE,$
		TITLE = BAR_TITLE,$
		BOTTOM=BAR_BOTTOM,TOP=BAR_TOP,LEFT=BAR_LEFT,RIGHT=BAR_RIGHT,$
		XTITLE=BAR_XTITLE,YTITLE=BAR_YTITLE,$
		XTICKLEN= -0.5,YTICKLEN= -0.5,$
		XTICKFORMAT='(G0)',YTICKFORMAT='(G0)',$
		VERTICAL=VERTICAL,HORIZONTAL=HORIZONTAL,$
		XLOG=LOG_FREQ,YLOG=LOG_FREQ,$
		XMINOR=XMINOR,YMINOR=YMINOR
	ENDIF
;	///////////////////////////////////////////////////////////////////////////////////


;	*******************************
;	***** T I M E   S T A M P   ***
; *******************************
 	IF NOT KEYWORD_SET(NO_TIMESTAMP) THEN BEGIN
 		TXT= '!C!C'+ DATE_FORMAT(DATE_NOW(),UNITS='DAY',/MDY,/NAME)
 		XYOUTS,!X.WINDOW[1],!Y.WINDOW[0],TXT,/NORMAL,CHARSIZE=TIMESTAMP_SIZE, ALIGN=1.03
 	ENDIF
;	///////////////////////////////////////////////////////////////////////////////////

DONE:
END; #####################  END OF ROUTINE ################################
