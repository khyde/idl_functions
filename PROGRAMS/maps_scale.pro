; $ID:	MAPS_SCALE.PRO,	2020-07-08-15,	USER-KJWH	$
;###########################################################
PRO MAPS_SCALE,MAPP,PX=PX,PY=PY,KMP_X=KMP_X,KMP_Y=KMP_Y,NO_CLOSE=NO_CLOSE,VERBOSE=VERBOSE
;+
;	THIS PROGRAM CALCULATES THE MAP SCALE IN THE MIDDLE LONGITUDE AND MIDDLE LATITUDE
;	             OF THE MAP IN UNITS OF KM/PIXEL

; OUTPUT:
;		KM/PIXEL
; ARGUMENTS: MAPP

; KEYWORDS: 
;     PX..... WIDTH IN PIXELS
;     PY..... HEIGHT IN PIXELS 
;     KMP_X.... KILOMETERS PER PIXEL-HORIZONTAL [OUTPUT]
;     KMP_Y.... KILOMETERS PER PIXEL-VERTICAL [OUTPUT]
;     VERBOSE.. PREVENTS PRINTING
;     NO_CLOSE PREVENTS CLOSING OF THE ZWIN 
 
; CATEGORY:	MAPS
;	
; EXAMPLES:
;      MAPS_SCALE,'GEQ'
;      MAPS_SCALE,'SMI'
;      MAPS_SCALE,'NEC'
;      MAPS_SCALE,'NEC',KMP_Y=KMP_Y,/VERBOSE & P,KMP_Y
;      MAPS_SCALE,'EC',KMP_Y=KMP_Y,/VERBOSE & P,KMP_Y
;      MAPS_SCALE,'NARR_BAY'

;      MAPS_SCALE,'GEQ',PX = 4096*2,PY = 2048*2
;      MAPS_SCALE,'GEQ',PX = 4096*4,PY = 2048*4
;      MAPS_SCALE,'GEQ',PX = 4096*ULONG(8),PY = 2048*ULONG(8)
;      MAPS_SCALE,'GEQ',PX = 4096*ULONG(10),PY = 2048*ULONG(10)
; MODIFICATION HISTORY:
;		MAR 24, 2001	WRITTEN BY:	J.E. O'REILLY, NOAA, 28 TARZWELL DRIVE, NARRAGANSETT, RI 02882
;		DEC 10,2014,JOR RENAMED TO MAPS_SCALE, REMOVED KEYWORDS, ADDED MAPS_SET
;		DEC 11,2014,JOR ADDED KEYS PX,PY [PASSED TO MAPS_SET]
;   FEB 27,2016,JOR CHANGED MAP TO MAPP,
;                   ADDED KEY KMP_Y [KILOMETERS PER PIXEL],VERBOSE,NO_CLOSE
;                   ADDED CODE SO PROGRAM WILL WORK WITH OLD MAP PROS [ WHEN !X.TYPE = 3]
;   AUG 22,2016,JOR ADDED CODE FOR SCALE ALONG THE MIDDLE LATITUDE
;############################################################################################
;-
;*************************
ROUTINE_NAME='MAPS_SCALE'
;*************************

IF NONE(MAPP) THEN BEGIN
  ;===> GET PX,PY FROM DEVICE SETTINGS
  PX = !D.X_SIZE
  PY = !D.Y_SIZE
  MAPP = !D.NAME
  NO_CLOSE = 1
ENDIF ELSE BEGIN
  ;===> ENSURE S-BUFFER IS NOT ALREADY ACTIVE [ IF SO THEN CLOSE Z]
  IF !D.NAME EQ 'Z' THEN ZWIN
  S = MAPS_READ(MAPP,/INIT)   
ENDELSE;IF NONE(MAPP) THEN BEGIN


IF NONE(PX) THEN PX = S.PX  ELSE PX = DOUBLE(PX)
IF NONE(PY) THEN PY = S.PY  ELSE PY = DOUBLE(PY)
IF S.SCALE EQ '' THEN NO_MAP_SCALE = 1 ELSE NO_MAP_SCALE = 0
;===> IF !X.TYPE = 3 THEN MAP DOMAIN IS ALREADY ESTABLISHED SO SKIP MAPS_SET
IF !X.TYPE EQ 3 THEN GOTO,SKIP_MAPS_SET
MAPS_SET,MAPP,PX=PX,PY=PY
SKIP_MAPS_SET:
;===> KILOMETERS PER PIXEL IN THE VERTICAL:
XYZ = CONVERT_COORD([PX/2.0D,PX/2.0D],[0.0D,PY],/DEVICE,/TO_DATA)
X = REFORM(XYZ(0,*))
Y = REFORM(XYZ(1,*))
M=MAP_2POINTS(X[0],Y[0],X[1],Y[1],/METERS)
KMP_Y =  DOUBLE(1E-3 *M/PY)
TXT = MAPP + '  PX:'+ROUNDS(PX) + ' PY:' + ROUNDS(PY) +' FROM: ' + ROUNDS(X[0],3) + ' ,' + ROUNDS(Y[0],3)+ ' TO ' + ROUNDS(X[1],3)+' ,' + ROUNDS(Y[1],3)+$
      ' = ' + ROUNDS(KMP_Y,9) +  ' KM PER PIXEL-VERTICAL'
IF KEY(VERBOSE) THEN PRINT,TXT
     
;===> KILOMETERS PER PIXEL IN THE HORIZONTAL:
XYZ = CONVERT_COORD([0.0D,PX],[PY/2.0D,PY/2.0D],/DEVICE,/TO_DATA)
X = REFORM(XYZ(0,*))
Y = REFORM(XYZ(1,*))
M=MAP_2POINTS(X[0],Y[0],X[1],Y[1],/METERS)
KMP_X =  DOUBLE(1E-3 *M/PX)
TXT = MAPP + '  PX:'+ROUNDS(PX) + ' PY:' + ROUNDS(PY) +' FROM: ' + ROUNDS(X[0],3) + ' ,' + ROUNDS(Y[0],3)+ ' TO ' + ROUNDS(X[1],3)+' ,' + ROUNDS(Y[1],3)+$
      ' = ' + ROUNDS(KMP_X,9) +  ' KM PER PIXEL-HORIZONTAL'      
IF KEY(VERBOSE) THEN PRINT,TXT
IF NOT KEY(NO_CLOSE) THEN  ZWIN

END; #####################  END OF ROUTINE ################################
