; $ID:	IMAGE_REGION_EXTRACT.PRO,	2020-07-08-15,	USER-KJWH	$
;+
; This Program extracts a region from a png file, adds legend, adds time bar
; SYNTAX:
;
;
;  OUTPUT:        PNG FILE
;   ARGUMENTS:
;   KEYWORDS:
;   DIR_OUT:        OUTPUT DIRECTORY FOR PNG FILE
;   BACKGROUND:     Background color (e.g. 254)
;   PAL:            IDL palette program (e.g. PAL = 'PAL_SW3')
;   BACKGROUND:     Background color
; EXAMPLE:
; 	HISTORY:
;   Feb 9, 2004  Written by T.Ducas
;-
; *************************************************************************

FUNCTION IMAGE_REGION_EXTRACT,FILE,DIR_OUT=DIR_OUT,REGION=REGION,CSV_REGIONS=CSV_REGIONS,PAL=PAL,$
											BACKGROUND=background,LEGEND=LEGEND,TBAR=TBAR,LABEL=LABEL,SPECIAL_SCALE=SPECIAL_SCALE,$
											PNG=PNG,OVERWRITE=overwrite

  ROUTINE_NAME='IMAGE_REGION_EXTRACT'
  IF N_ELEMENTS(FILE) NE 1 OR N_ELEMENTS(REGION) NE 1 THEN STOP
  IF N_ELEMENTS(PAL)            NE 1 THEN _PAL       = 'PAL_SW3' ELSE _PAL=PAL
  IF N_ELEMENTS(BACKGROUND)     NE 1 THEN _BACKGROUND     = 252  ELSE _BACKGROUND     = BACKGROUND
  IF N_ELEMENTS(OVERWRITE)      NE 1 THEN _OVERWRITE = 0 ELSE _OVERWRITE=OVERWRITE
  IF N_ELEMENTS(CSV_REGIONS)    NE 1 THEN CSV_REGIONS = 'D:\IDL\DATA\MAP_REGIONS.CSV'
	IF N_ELEMENTS(SPECIAL_SCALE)  NE 1 THEN _SPECIAL_SCALE='' ELSE _SPECIAL_SCALE=SPECIAL_SCALE
	_ADD_DATE=1

	FA_IN=FILE_ALL(FILE)
	MAP=FA_IN[0].MAP

	IF N_ELEMENTS(DIR_OUT) LT 1 THEN DIR_OUT=FA_IN.DIR
	CSV=READ_CSV(CSV_REGIONS)
	OK=WHERE(STRUPCASE(CSV.REGION) EQ STRUPCASE(REGION) AND STRUPCASE(CSV.MAP) EQ STRUPCASE(MAP),COUNT)
	IF COUNT LT 1 THEN BEGIN
		PRINT, 'REGION ',REGION,' MAP ',MAP ,' NOT FOUND IN ',CSV_REGIONS
		RETURN, -1
	ENDIF
	CSV=CSV[OK]
	CSV=CSV[0]

	IMAGE=READALL(FA_IN[0].FULLNAME,RED=R,GREEN=G,BLUE=B)
 	DATE=FA_IN[0].DATE_START

	SZ=SIZE(IMAGE,/STRUCT)
 	IF SZ.DIMENSIONS[0] LT CSV.PX OR SZ.DIMENSIONS[1] LT CSV.PY THEN BEGIN
		PRINT, 'PX and PY in a ',CSV_REGIONS,' file, do not agree with image dimensions of file: ',file
		RETURN, -1
 	ENDIF

STOP

	IF MAP EQ 'NEC' THEN BEGIN
	  _SPECIAL_SCALE='NEC'
	   ALAND_COLOR=252
	  LANDMASK=READALL('D:\IDL\IMAGES\MASK_NEC.PNG')
	  OK_LAND=WHERE(LANDMASK NE 255B)
	  H=HISTOGRAM(IMAGE(OK_LAND),MIN=0)
	  OK_MAX=WHERE(H EQ MAX(H))

	  OK_BLANK=WHERE(LANDMASK NE 255B AND (IMAGE GE 0B AND IMAGE LE 250B),COUNT)
	  IF COUNT GE 1 THEN BEGIN
	  	IMAGE(OK_BLANK)=OK_MAX[0]
	  ENDIF
	ENDIF

	LEG = COLOR_BAR_SCALE(PROD=FA_IN[0].PROD,/NAME,/UNIT,px= 600, py=130,$
                     /TRIM,GRACE=4, charsize=3.25,BACKGROUND=_BACKGROUND,pos=[.04,.04,.96,.18],PAL= _PAL,SPECIAL_SCALE=_SPECIAL_SCALE)

	JULIAN = DATE_2JD(FA_IN[0].DATE_START)
	ADATE  = STRMID(FA_IN[0].DATE_START,0,8)
	line_color=250
	line_thick=4

 	BAR= DT_TIME_BAR(julian ,BACKGROUND=_BACKGROUND,LINE_COLOR=line_color,$
                                  LINE_THICK=line_thick,/NO_YEAR,PX=800,PY=100, charsize=2.5,charthick=3)
	CUT = IMAGE(CSV.LEFT:CSV.RIGHT,CSV.BOTTOM:CSV.TOP)
  SZ_CUT = SIZE(CUT,/STRUCT)
  FACTOR = SZ_CUT.DIMENSIONS[0]
  BAR_LEG=IMAGE_WELD(BAR,LEG)

  SZ_BAR_LEG = SIZE(BAR_LEG,/STRUCT)
  FACT = FLOAT(SZ_CUT.DIMENSIONS[0])/SZ_BAR_LEG.DIMENSIONS[0]
  SZ_TARGET = FACT*([SZ_BAR_LEG.DIMENSIONS[0],SZ_BAR_LEG.DIMENSIONS[1]])
  BAR_LEG=CONGRID(BAR_LEG,SZ_TARGET[0],SZ_TARGET[1])
  SZ_BAR_LEG = SIZE(BAR_LEG,/STRUCT)
  YY= SZ_CUT.DIMENSIONS[1] - SZ_BAR_LEG.DIMENSIONS[1]-1
  CUT=IMAGE_WELD(CUT,BAR_LEG)

  ZWIN,CUT
  TV,CUT

  IF _ADD_DATE EQ 1     THEN XYOUTS,SZ_CUT.DIMENSIONS[0],SZ_CUT.DIMENSIONS[1]-6,/DEVICE,ADATE,   COLOR=0,CHARSIZE=0.7,CHARTHICK=1,ALIGN=1.1
  IF KEYWORD_SET(LABEL) THEN XYOUTS,0                   ,SZ_CUT.DIMENSIONS[1]-6,/DEVICE,CSV.NAME,COLOR=0,CHARSIZE=0.7,CHARTHICK=1,ALIGN=-0.05

  CUT=TVRD()
  ZWIN

	IF KEYWORD_SET(PNG) THEN BEGIN
  	PNGFILE = DIR_OUT+ FA_IN.NAME+'.PNG'
  	PNGFILE= REPLACE(PNGFILE,'-'+MAP+'-','-REGION_'+CSV.REGION+'-')
  	PRINT, 'Writing ' + PNGFILE
  	CALL_PROCEDURE, _PAL,R,G,B
  	WRITE_PNG,PNGFILE,CUT,R,G,B
	ENDIF
	IMAGE=''
	RETURN, CUT
	DONE:

END
