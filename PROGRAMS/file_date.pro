; $ID:	FILE_DATE.PRO,	2020-07-01-12,	USER-KJWH	$
;###################################################################################################
 PRO FILE_DATE,FILES, DIR_OUT=DIR_OUT,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE
;+
; NAME:
;       FILE_DATE
;
;  PURPOSE: THIS PROGRAM CHANGES THE DATE STAMP ON FILES TO THE CURRENT DATE

;
; CATEGORY:
;		FILE
;		
; INPUTS:
;   FILE: COMPLETE PATH AND NAME OF INPUT FILE
;   
; OPTIONAL INPUTS:
;   NONE: 
;   
; KEYWORD PARAMETERS:
;   DIR_OUT: THE DIR FOR THE UPDATED FILE
;   OVERWRITE: OVERWRITE OUTPUT FILE IF IT EXISTS
; OUTPUTS:
;   A  FILE IS WRITTEN TO DIR_OUT WITH THE CURRENT TIME STAMP
;   
;KEYWORDS:
;   
;	EXAMPLES:FILE_DATE,'F:\SMI\STATS_ALL_PNGS\CANARY_CURRENT\CANARY_CURRENT-15-YEAR-CHLOR_A-MEAN.PNG'
;                   FILES = FILE_SEARCH('F:\SMI\STATS_ALL_PNGS\CANARY_CURRENT\','*.*')& FILE_DATE,FILES
; MODIFICATION HISTORY:
;       WRITTEN BY:  J.E.O'REILLY, OCT 31,2012
;       FEB 14, 2017 - JEOR: Changed DIR_OUT to !S.IDL_TEMP
;       FEB 21, 2017 - KJWH: Now using DIR_TEST to make the output directory
;-
;###################################################################################################

;*****************************************************
  ROUTINE_NAME='FILE_DATE'
;*****************************************************
  IF NONE(VERBOSE) THEN VERBOSE = 0
  
  IF VERBOSE THEN 
  DIR_OUT = !S.IDL_TEMP
  IF N_ELEMENTS(FILES) EQ 0 THEN MESSAGE,'FILES ARE REQUIRED INPUT'
  IF N_ELEMENTS(OVERWRITE) EQ 0 THEN OVERWRITE = 0
;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF  
  FOR _FILE = 0L, N_ELEMENTS(FILES)-1L DO BEGIN
    FILE = FILES(_FILE)
  	FN = FILE_PARSE(FILE)
  	IF N_ELEMENTS(DIR_OUT) NE 1 THEN DIR_OUT=FN.DIR

; ===> MAKE THE DIR_OUT IF NEEDED:
    DIR_TEST, DIR_OUT, /NOEXPAND_PATH
    OUTFILE= DIR_OUT + FN.NAME_EXT
  
  ;===> IF ZIP UNCOMPRESS
    IF FN.EXT EQ 'ZIP' THEN BEGIN  
    STOP
      ;===> FIND ALL FILES IN DIR_OUT BEFORE UNZIPPING
      BEFORE = FILE_SEARCH(DIR_OUT,'*')
      WINZIP,FILE, DIR_OUT=DIR_OUT,/HIDE  
      AFTER = FILE_SEARCH(DIR_OUT,'*')
      OK = WHERE_STRING(AFTER,BEFORE ,COUNT,NCOMPLEMENT = NCOMPLEMENT,COMPLEMENT=COMPLEMENT)
;===> COMPLIMENT FILES BECOME FILE
STOP
      IF NCOMPLEMENT EQ 1 THEN FILE = AFTER(COMPLEMENT) ELSE MESSAGE,'MORE THAN ONE FILE INSIDE ZIP FILE'    
    ENDIF;IF FN.EXT EQ 'ZIP' THEN BEGIN
  
    IF FILE_TEST(OUTFILE) EQ 1 AND OVERWRITE EQ 0 THEN BEGIN
      IF VERBOSE THEN PRINT, 'SKIPPING '+OUTFILE + ' BECAUSE IT  ALREADY EXISTS'
      GOTO,DONE
    ENDIF;F FILE_TEST(OUTFILE) EQ 1 AND OVERWRITE EQ 0 THEN BEGIN
    IF FILE_TEST(OUTFILE) EQ 1 AND OVERWRITE EQ 1 AND FN.EXT NE 'ZIP' THEN BEGIN
      CLOSE,/ALL    
      FILE_DELETE,OUTFILE,/ALLOW_NONEXISTENT ,/VERBOSE   
    ENDIF;IF FILE_TEST(OUTFILE) EQ 1 THEN BEGIN
    
    IF VERBOSE THEN PFILE,FILE,/R
    OPENR, LUN_IN, FILE, /GET_LUN
  
  	IF VERBOSE THEN PFILE,OUTFILE,/W
  	OPENW,LUN_OUT,OUTFILE,/GET_LUN
  	COPY_LUN, LUN_IN, LUN_OUT,TRANSFER_COUNT=TRANSFER_COUNT
  	
  	FREE_LUN,LUN_IN
  
    FREE_LUN,LUN_OUT
  	CLOSE,/ALL
  	
  	IF VERBOSE THEN PRINT,STR_COMMA(ROUNDS(TRANSFER_COUNT)) + '  BYTES COPIED '

  ENDFOR;FOR _FILE = 0L, N_ELEMENTS(FILES)-1L DO BEGIN
;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF

  DONE:
  IF VERBOSE THEN 
END; #####################  END OF ROUTINE ################################



