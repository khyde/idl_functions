; $ID:	FRONTS_PROB.PRO,	2020-07-08-15,	USER-KJWH	$
; #########################################################################; 
PRO FRONTS_PROB, FILES, SAVFILE=SAVFILE, MIN_GRAD=MIN_GRAD, VERBOSE=VERBOSE
;+
; PURPOSE:  CREATE A PROBABILITY MAP IMAGE [PERCENT FREQUENCY] FROM A SERIES OF FILES
;
; CATEGORY: FRONTS
;
; INPUTS:
;       FILES ......... IDL SAV FILES HAVING GRAD_SST OR GRAD_CHL ARRAYS 
;
; KEYWORDS:  
;       VERBOSE ....... PRINT PROGRAM PROGRESS 
;       SAVFILE........ FULL PATH AND NAME OF THE OUTPUT SAV FILE
;       MIN_GRAD....... MINIMUM GRADIENT TO CUMULATE [THRESHOLD]
;         
; OUTPUTS: A MAP IMAGE OF THE PERCENT FREQUENCY OF FRONTS
; 
; NOTES:
;   The scheme here is based on work by Peter Miller (see references).   
;   
;   The goal [from Miller] 'is to identify strong, persistent and frequently occurring features.
;   Fronts are not detected on chl-a composites, but rather on individual chl-a scenes that reveal the
;   detailed structure without averaging artifacts.'
;   
;   SIED - Single Image Edge Detection 
;   SIED for SST images only indicates a front where the mean temperatures of the adjacent water masses differ by 
;   at least 0.4 K, to limit false detections caused by sensor noise inhereent in the standard
;   SST fields. 
;   
;   In the Northeast US region (assuming a map at ~1km/pixel), persistent and significant SST fronts are at least 
;   4 pixels wide then the minimum gradient we can detect is 0.4K/4km, which is equivalent to ~0.1 Deg C/km.
;   
;   [THIS VALUE OF  ~0.1 DEG/KM WAS CONFIRMED BY CONTOURING IT ON A NUMBER OF SST_GRAD 
;    IMAGES WHICH REVEALED THAT GRAD_SST VALUES GE 0.1 DEG/KM ARE ASSOCIATED WITH 
;    PERSISTENT,SIGNIFICANT SST FRONTS IN OUR REGION]
;    
;    CHL FRONTS:
;    
;; PROCEDURE: 
;       SST:
;    1  SAVE_MAKE_FRONTS IS RUN ON MODIS OR AVHRR DATA TO GENERATE IDL SAV FILES.
;    2  A SET [MONTH OR OTHER PERIOD OF INTEREST] OF MAPPED FILES IS PASSED TO FRONTS_PROB [THIS PROGRAM].
;    3  GRAD_SST OR GRAD_CHL AND THE MAP NAME ARE EXTRACTED FROM EACH FILE [STRUCT_READ].   
;    4  A LANDMASK FOR THE MAP IS READ AND THE COASTLINE [0M] IS EXTENDED USING MAPS_ADD_DEPTHS 
;       WITH A THICKNESS OF 25 PIXELS
;    5  SUBSCRIPTS IN THE EXTENDED LANDMASK ARE APPLIED TO EACH GRAD_SST IMAGE TO REMOVE 
;       RESIDUAL GRAD_SST ARTIFACTS ADJACENT TO THE COASTLINE 
;      
;       [KIM NOT SURE IF THIS A GOOD IDEA TO USE IN THE GULF OF MAINE?
;       -WHERE THE FRONTS ARE DUE TO THE MAINE COASTAL CURRENT]. 
;       
;    6  MISSING DATA REGIONS [USUALLY CLOUDS] WITHIN EACH THE GRAD_SST IMAGE ARE ALSO DILATED [SET TO MISSING]
;       USING IMG_DILATE TO REMOVE RESIDUAL GRAD_SST ARTIFACTS ADJACENT TO THE CLOUDS [PRESUMABLY].
;    7  A NEW IMAGE IS MADE FROM THE GRAD_SST, IDENTIFYING THOSE PIXEL HAVING 
;       A GRAD_SST GREATER OR EQUAL TO 0.1 DEG C/KM :  NEW = FLOAT(FINITE(DAT) AND DAT GE MIN_GRAD)
;    8  EACH NEW IMAGE [ZEROS AND ONES]FROM THE FILE SET IS PASSED TO STATS_ARRAYS 
;       WHICH ACCUMULATES THE FREQUENCIES OF SIGNIFICANT FRONTS FOR EACH PIXEL.
;    9  THE LAST FILE FROM THE SET IS PASSED TO STATS_ARRAYS,WITH KEY CALC=1.
;    10 THE PIXELS WHERE NUM = N_SETS [E.G. ALWAYS HAD GRAD_SST GE MIN_GRAD] ARE USED TO CALCULATE
;       THE PERCENT PROBABILITY/FREQUENCY OF SIGNIFICANT FRONTS AS:
;       100.0 X THE NUMBER OF TIMES THE GRAD_SST FOR THE PIXEL WAS GE 0.1 DEG/KM  
;       DIVIDED BY THE NUMBER OF TIMES THE PIXEL WAS SAMPLED IN THE FILE SET.
;       
;  CHL:
;      
; REFERENCES:         
;  Miller, P.I., Xu, W., Carruthers, M., 2015. Seasonal shelf-sea front mapping using satellite ocean colour and temperature 
;     to support development of a marine protected area network. Deep Sea Research Part II: Topical Studies in Oceanography 119, 3-19.
;     
;  Miller, P., 2009. Composite front maps for improved visibility of dynamic sea-surface features on cloudy SeaWiFS and AVHRR data. 
;     Journal of Marine Systems 78, 327-336.    
;  
;   
; MODIFICATION HISTORY:
;     FEB 24, 2018  WRITTEN BY: J.E. O'REILLY
;     MAR 01, 2018, JEOR: ADDED CLOUD_BOX & IMG_DILATE AROUND PRESUMED CLOUDS
;     MAR 02, 2018, JEOR: STRUCT_WRITE, S, FILE=SAVFILE
;     MAR 05, 2018, JEOR: USING REVISED MIN_GRAD

; #########################################################################
;-
;***********************
ROUTINE = 'FRONTS_PROB'
;***********************
;RESTORE,'JUNK.SAV'; TESTING FIRST TEN FILES
IF NONE(SAVFILE) THEN SAVFILE = !S.IDL_TEMP + ROUTINE + '.SAV'
;===> DEFAULTS:
IF NONE(VERBOSE) THEN VERBOSE = 1
COAST_THICK    = 25 ; PASSED TO MAPS_ADD_DEPTHS [EFFECTIVELY A 12 PIXEL SWATH ON EITHER SIDE OF THE COASTLINE
DO_MAPS_ADD_DEPTHS = 0
CLOUD_BOX      = 3  ; PASSED TO IMG_DILATE TO ELBOW OUT FALSE GRADIENTS NEAR CLOUDS 
DO_STATS       = ['NUM','MIN','MAX','MEAN','SUM']
IF NONE(FILES) THEN MESSAGE,'ERROR: FILES ARE REQUIRED'
IF NONE(SAVFILE) THEN MESSAGE,'ERROR: A SAVFILE NAME IS REQUIRED'
;===> GET THE MAP NAME AND PROD FROM THE FIRST FILE
FN = PARSE_IT(FIRST(FILES),/ALL)
MAP = FN.MAP
PROD = FN.PROD
IF PROD EQ 'SST_BOA' THEN BEGIN
  TAG = 'GRAD_SST'
  IF NONE(MIN_GRAD) THEN  MIN_GRAD = 0.10 ; DEGREES C /KM

ENDIF;IF PROD EQ 'SST_BOA' THEN BEGIN

IF PROD EQ 'CHL_BOA' THEN BEGIN
  TAG = 'GRAD_CHL'
  IF NONE(MIN_GRAD) THEN  MIN_GRAD = 1.09 ; DEGREES C /KM
ENDIF;IF PROD EQ 'CHL_BOA' THEN BEGIN

IF KEY(VERBOSE) THEN BEGIN
  PFILE,MAP,/U
  PFILE,TAG,/U
ENDIF;IF KEY(VERBOSE) THEN BEGIN
;===> GET THE LANDMASK FOR THIS MAP
MASK = READ_LANDMASK(MAP,/LAND)
IF DO_MAPS_ADD_DEPTHS EQ 1 THEN BEGIN
;===> EXTEND  THE LAND SO LATER WE MAY APPLY THE SUBS_LAND TO MASK FRONTS ADJACENT TO THE COAST
  MASK = MAPS_ADD_DEPTHS(MASK,D_MAP=MAP,D_DEPTHS=0,D_THICKS=COAST_THICK,D_COLORS=1,D_MIN_PTS=D_MIN_PTS,D_VERBOSE=D_VERBOSE,$
  D_SMO=D_SMO,D_PAL='PAL_36',D_CHARSIZE=D_CHARSIZE,D_LABEL=D_LABEL,D_METHOD = D_METHOD,D_PNG=D_PNG)
ENDIF;IF DO_MAPS_ADD_DEPTHS EQ 1 THEN BEGIN
 SUBS_LAND = WHERE(MASK  EQ 1,COUNT) ; [INCLUDES LAND PLUS ~12KM SWATH ADJACENT TO COAST]
;STOP
;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FOR NTH = 0L,NOF(FILES)-1 DO BEGIN
  FILE = FILES[NTH]
  IF KEY(VERBOSE) THEN POF,NTH,FILES
  IF KEY(VERBOSE) THEN PFILE,FILE,/R  
  FN = PARSE_IT(FILE,/ALL)
  DAT = STRUCT_READ(FILE,STRUCT = S,TAG =TAG)
  
  ;===> REMOVE DATA AROUND PRESUMED CLOUDS BY DILATING MISSING DATA
  DAT = IMG_DILATE(DAT,BOX = CLOUD_BOX,TARGET = MISSINGS(DAT),/DATA)
  ;===> BLANK OUT DAT(SUBS_LAND)
  DAT(SUBS_LAND) = MISSINGS(DAT)
  
  ;===> MAKE A NEW IMAGE OF ONES AND ZEROS
  NEW = FLOAT(FINITE(DAT) AND DAT GE MIN_GRAD)
  ;===> SET ALL NON-FINITE PIXELS IN NEW TO MISSING 
  ;     [SO NUM IS NOT INCREMENTED FOR THESE PIXELS IN STATS_ARRAYS
  OK = WHERE(FINITE(DAT) EQ 0,COUNT)
  IF COUNT GE 1 THEN NEW[OK] = MISSINGS(NEW)
 
  ;CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
  CASE [1] OF
    NTH EQ 0: BEGIN
      START = 1
      CALC = 0
    END;NTH EQ 0
    NTH EQ NOF(FILES)-1: BEGIN
      START = 0
      CALC = 1
    END;NTH EQ NOF(FILES)-1
    ELSE: BEGIN
      START = 0
      CALC = 0
    END;ELSE
  ENDCASE;CASE (1) OF
  ;CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
  S = STATS_ARRAYS(NEW,DO_STATS=DO_STATS,START=START,CALC = CALC)
;  S = STATS_ARRAYS(DAT,DO_STATS=DO_STATS,START=START,CALC = CALC)
ENDFOR;FOR NTH = 0L,NOF(FILES) -1 DO BEGIN
;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
;STOP
STRUCT_WRITE, S, FILE=SAVFILE,INFILES = FILES,MIN_GRAD=MIN_GRAD

END; #####################  END OF ROUTINE ################################
