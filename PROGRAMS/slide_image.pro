; $ID:	SLIDE_IMAGE.PRO,	2020-07-08-15,	USER-KJWH	$
;
; COPYRIGHT (C) 1991-1997, RESEARCH SYSTEMS, INC.  ALL RIGHTS RESERVED.
; UNAUTHORIZED REPRODUCTION PROHIBITED.
;+
; NAME:
; SLIDE_IMAGE
;
; PURPOSE:
; CREATE A SCROLLING GRAPHICS WINDOW FOR EXAMINING LARGE IMAGES.
; BY DEFAULT, 2 DRAW WIDGETS ARE USED.  THE LEFT DRAW WIDGET SHOWS
; A REDUCED VERSION OF THE COMPLETE IMAGE, WHILE THE DRAW WIDGET ON
; THE RIGHT DISPLAYS THE ACTUAL IMAGE WITH SCROLLBARS THAT ALLOW SLIDING
; THE VISIBLE WINDOW.
;
; CALLING SEQUENCE:
; SLIDE_IMAGE [, IMAGE]
;
; INPUTS:
; IMAGE:  THE 2-DIMENSIONAL IMAGE ARRAY TO BE DISPLAYED.  IF THIS
;   ARGUMENT IS NOT SPECIFIED, NO IMAGE IS DISPLAYED. THE
;   FULL_WINDOW AND SCROLL_WINDOW KEYWORDS CAN BE USED TO OBTAIN
;   THE WINDOW NUMBERS OF THE 2 DRAW WIDGETS SO THEY CAN BE DRAWN
;   INTO AT A LATER TIME.
;
; KEYWORDS:
;      CONGRID: NORMALLY, THE IMAGE IS PROCESSED WITH THE CONGRID
;   PROCEDURE BEFORE IT IS WRITTEN TO THE FULLY VISIBLE
;   WINDOW ON THE LEFT. SPECIFYING CONGIRD=0 WILL FORCE
;   THE IMAGE TO BE DRAWN AS IS.
;
;  FRAME: DRAWS A FRAME 1 PIXEL WIDE INSIDE THE FULL WINDOW.
;
;
;
;  FULL_WINDOW: A NAMED VARIABLE IN WHICH TO STORE THE IDL WINDOW NUMBER OF \
;   THE NON-SLIDING WINDOW.  THIS WINDOW NUMBER CAN BE USED WITH
;   THE WSET PROCEDURE TO DRAW TO THE SCROLLING WINDOW AT A LATER
;   POINT.
;
; GROUP:  THE WIDGET ID OF THE WIDGET THAT CALLS SLIDE_IMAGE.  IF THIS
;   KEYWORD IS SPECIFIED, THE DEATH OF THE CALLER RESULTS IN THE
;   DEATH OF SLIDE_IMAGE.
;
; ORDER:  THIS KEYWORD IS PASSED DIRECTLY TO THE TV PROCEDURE
;   TO CONTROL THE ORDER IN WHICH THE IMAGES ARE DRAWN. USUALLY,
;   IMAGES ARE DRAWN FROM THE BOTTOM UP.  SET THIS KEYWORD TO A
;   NON-ZERO VALUE TO DRAW IMAGES FROM THE TOP DOWN.
;
;     REGISTER: SET THIS KEYWORD TO CREATE A "DONE" BUTTON FOR SLIDE_IMAGE
;   AND REGISTER THE WIDGETS WITH THE XMANAGER PROCEDURE.
;
;   THE BASIC WIDGETS USED IN THIS PROCEDURE DO NOT GENERATE
;   WIDGET EVENTS, SO IT IS NOT NECESSARY TO PROCESS EVENTS
;   IN AN EVENT LOOP.  THE DEFAULT IS THEREFORE TO SIMPLY CREATE
;   THE WIDGETS AND RETURN.  HENCE, WHEN REGISTER IS NOT SET,
;   SLIDE_IMAGE CAN BE DISPLAYED AND THE USER CAN STILL TYPE
;   COMMANDS AT THE "IDL>" PROMPT THAT USE THE WIDGETS.
;
; RETAIN: THIS KEYWORD IS PASSED DIRECTLY TO THE WIDGET_DRAW
;   FUNCTION, AND CONTROLS THE TYPE OF BACKING STORE
;   USED FOR THE DRAW WINDOWS.  IF NOT PRESENT, A VALUE OF
;   2 IS USED TO MAKE IDL HANDLE BACKING STORE.
;
; SLIDE_WINDOW: A NAMED VARIABLE IN WHICH TO STORE THE IDL WINDOW NUMBER OF
;   THE SLIDING WINDOW.  THIS WINDOW NUMBER CAN BE USED WITH THE
;   WSET PROCEDURE TO DRAW TO THE SCROLLING WINDOW AT A LATER
;   TIME.
;
; TITLE:  THE TITLE TO BE USED FOR THE SLIDE_IMAGE WIDGET.  IF THIS
;   KEYWORD IS NOT SPECIFIED, "SLIDE IMAGE" IS USED.
;
; TOP_ID: A NAMED VARIABLE IN WHICH TO STORE THE TOP WIDGET ID OF THE
;   SLIDE_IMAGE HIERARCHY.  THIS ID CAN BE USED TO KILL THE
;   HIERARCHY AS SHOWN BELOW:
;
;     SLIDE_IMAGE, TOP_ID=BASE, ...
;     .
;     .
;     .
;     WIDGET_CONTROL, /DESTROY, BASE
;
; XSIZE:  THE MAXIMUM WIDTH OF THE IMAGE THAT CAN BE DISPLAYED BY
;   THE SCROLLING WINDOW.  THIS KEYWORD SHOULD NOT BE CONFUSED
;   WITH THE VISIBLE SIZE OF THE IMAGE, CONTROLLED BY THE XVISIBLE
;   KEYWORD.  IF XSIZE IS NOT SPECIFIED, THE WIDTH OF IMAGE IS
;   USED.  IF IMAGE IS NOT SPECIFIED, 256 IS USED.
;
;     XVISIBLE: THE WIDTH OF THE VIEWPORT ON THE SCROLLING WINDOW.  IF THIS
;   KEYWORD IS NOT SPECIFIED, 256 IS USED.
;
; YSIZE:  THE MAXIMUM HEIGHT OF THE IMAGE THAT CAN BE DISPLAYED BY
;   THE SCROLLING WINDOW.  THIS KEYWORD SHOULD NOT BE CONFUSED
;   WITH THE VISIBLE SIZE OF THE IMAGE, CONTROLLED BY THE YVISIBLE
;   KEYWORD.  IF YSIZE IS NOT PRESENT THE HEIGHT OF IMAGE IS USED.
;   IF IMAGE IS NOT SPECIFIED, 256 IS USED.
;
;     YVISIBLE: THE HEIGHT OF THE VIEWPORT ON THE SCROLLING WINDOW. IF
;   THIS KEYWORD IS NOT PRESENT, 256 IS USED.
;
; OUTPUTS:
; NONE.
;
; COMMON BLOCKS:
; NONE.
;
; SIDE EFFECTS:
; WIDGETS FOR DISPLAYING A VERY LARGE IMAGE ARE CREATED.
; THE USER TYPICALLY USES THE WINDOW MANAGER TO DESTROY
; THE WINDOW, ALTHOUGH THE TOP_ID KEYWORD CAN ALSO BE USED TO
; OBTAIN THE WIDGET ID TO USE IN DESTROYING IT VIA WIDGET_CONTROL.
;
; RESTRICTIONS:
; SCROLLING WINDOWS DON'T WORK CORRECTLY IF BACKING STORE IS NOT
; PROVIDED.  THEY WORK BEST WITH WINDOW-SYSTEM-PROVIDED BACKING STORE
; (RETAIN=1), BUT ARE ALSO USABLE WITH IDL PROVIDED BACKING STORE
; (RETAIN=2).
;
; VARIOUS MACHINES PLACE DIFFERENT RESTRICTIONS ON THE SIZE OF THE
; ACTUAL IMAGE THAT CAN BE HANDLED.
;
; MODIFICATION HISTORY:
; 7 AUGUST, 1991, WRITTEN BY AB, RSI.
; 10 MARCH, 1993, ACY, CHANGE DEFAULT RETAIN=2
; 23 SEPT., 1994  KDB, FIXED TYPO IN COMMENTS. FIXED ERROR IN
;     CONGRID CALL. XVISIBLE WAS USED INSTEAD OF YVISIBLE.
;   JULY 7,   1997  DS   ADDED KEYWORD FRAME TO PRO SLIDE_IMAGE
;                        IF KEYWORD FRAME NOT PROVIDED THEN FRAME = 0
;   DEC.15,2009,JOR, REMOVED PRINT STATEMENT:
;     PRINT,'OLDER VERSION OF SLIDE_IMAGE WHICH WORKS!'
;   JUL 22,2011, JOR, NOW USING SIZEXYZ ALSO STREAMLINED PROGRAM

;-

PRO SLIDE_IMG_EVENT, EV
  WIDGET_CONTROL, EV.TOP, /DESTROY
END







PRO SLIDE_IMAGE, IMAGE, CONGRID=USE_CONGRID, ORDER=ORDER, REGISTER=REGISTER, $
  RETAIN=RETAIN, SHOW_FULL=SHOW_FULL, SLIDE_WINDOW=SLIDE_WINDOW, $
  XSIZE=XSIZE, XVISIBLE=XVISIBLE, YSIZE=YSIZE, YVISIBLE=YVISIBLE, $
  TITLE=TITLE, TOP_ID=BASE, FULL_WINDOW=FULL_WINDOW, GROUP = GROUP ,FRAME=FRAME

  SWIN = !D.WINDOW
    S = SIZEXYZ(IMAGE)
    PX = S.PX
    PY=  S.PY
    IF (S.PX EQ 0 OR S.PY EQ 0) THEN MESSAGE,'IMAGE MUST BE A 2-D ARRAY'
  
    
   
    IMAGE_SIZE=BYTARR(1)
    IF (N_ELEMENTS(XSIZE) EQ 0) THEN XSIZE = 256
    IF (N_ELEMENTS(YSIZE) EQ 0) THEN YSIZE = 256
  
  IF (N_ELEMENTS(XVISIBLE) EQ 0) THEN XVISIBLE=256
  IF (N_ELEMENTS(YVISIBLE) EQ 0) THEN YVISIBLE=256
  IF(N_ELEMENTS(SHOW_FULL) EQ 0) THEN SHOW_FULL = 1
  IF(NOT KEYWORD_SET(ORDER)) THEN ORDER = 0
  IF(NOT KEYWORD_SET(USE_CONGRID)) THEN USE_CONGRID = 1
  IF(N_ELEMENTS(RETAIN) EQ 0) THEN RETAIN = 2
  IF(N_ELEMENTS(TITLE) EQ 0) THEN TITLE='X= '+STRTRIM(PX,2)+ '  Y=: '+STRTRIM(PY,2)
  IF(NOT KEYWORD_SET(REGISTER)) THEN REGISTER = 0
  IF(NOT KEYWORD_SET(FRAME)) THEN FRAME = 0

  IF (REGISTER) THEN BEGIN
    BASE = WIDGET_BASE(TITLE=TITLE, /COLUMN)
    JUNK = WIDGET_BUTTON(WIDGET_BASE(BASE), VALUE='DONE')
    IBASE = WIDGET_BASE(BASE, /ROW)
  ENDIF ELSE BEGIN
    BASE = WIDGET_BASE(TITLE=TITLE, /ROW)
    IBASE = BASE
  ENDELSE
  ; SETTING THE MANAGED ATTRIBUTE INDICATES OUR INTENTION TO PUT THIS APP
  ; UNDER THE CONTROL OF XMANAGER, AND PREVENTS OUR DRAW WIDGETS FROM
  ; BECOMING CANDIDATES FOR BECOMING THE DEFAULT WINDOW ON WSET, -1. XMANAGER
  ; SETS THIS, BUT DOING IT HERE PREVENTS OUR OWN WSETS AT STARTUP FROM
  ; HAVING THAT PROBLEM.
  WIDGET_CONTROL, /MANAGED, BASE

  IF (SHOW_FULL) THEN BEGIN
      FBASE = WIDGET_BASE(IBASE, /COLUMN,  /FRAME)
        JUNK = WIDGET_LABEL(FBASE, VALUE='FULL IMAGE')
        ALL = WIDGET_DRAW(FBASE,RETAIN=RETAIN,XSIZE=XVISIBLE,YSIZE=YVISIBLE)
      SBASE = WIDGET_BASE(IBASE, /COLUMN, /FRAME)
        JUNK = WIDGET_LABEL(SBASE, VALUE='FULL RESOLUTION')
        SCROLL = WIDGET_DRAW(SBASE, RETAIN=RETAIN,XSIZE=XSIZE,YSIZE=YSIZE, $
    /SCROLL, X_SCROLL_SIZE=XVISIBLE, Y_SCROLL_SIZE=YVISIBLE)
    WIDGET_CONTROL, /REAL, BASE
    WIDGET_CONTROL, GET_VALUE=FULL_WINDOW, ALL
  ENDIF ELSE BEGIN
    SCROLL = WIDGET_DRAW(IBASE, RETAIN=RETAIN, XSIZE=XSIZE, YSIZE=YSIZE, $
   FRAME=FRAME, /SCROLL, X_SCROLL_SIZE=XVISIBLE, Y_SCROLL_SIZE=YVISIBLE)

    WIDGET_CONTROL, /REAL, BASE
    FULL_WINDOW=-1
  ENDELSE

  WIDGET_CONTROL, GET_VALUE=SLIDE_WINDOW, SCROLL

  ; SHOW THE IMAGE(S) IF ONE IS PRESENT
  IF (IMAGE_SIZE[0] NE 0) THEN BEGIN
    IF (SHOW_FULL) THEN BEGIN
      WSET, FULL_WINDOW
      IF (USE_CONGRID) THEN BEGIN
  TV, CONGRID(IMAGE, XVISIBLE, YVISIBLE), ORDER=ORDER
      ENDIF ELSE BEGIN
  TV, IMAGE, ORDER=ORDER
      ENDELSE
    ENDIF
    WSET, SLIDE_WINDOW
    TV, IMAGE, ORDER=ORDER
  ENDIF
  IF (N_ELEMENTS(GROUP) EQ 0) THEN GROUP=BASE
 ; WSET, SWIN

  IF (REGISTER) THEN XMANAGER, 'SLIDE_IMAGE', BASE, EVENT='SLIDE_IMG_EVENT', $
  GROUP_LEADER = GROUP, /NO_BLOCK

END
