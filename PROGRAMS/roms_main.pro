; $ID:	ROMS_MAIN.PRO,	2020-07-09-08,	USER-KJWH	$
PRO ROMS_MAIN

; Generate a plot illustrating the North Atlantic Oscillation Index

ROUTINE_NAME='ROMS_MAIN'

;	******************************************
; ***** Directories for Resource Files *****
;	******************************************
  DIR_PROGRAMS       = 'D:\IDL\PROGRAMS\'
  DIR_DATA           = 'D:\IDL\DATA\'
  DIR_IMAGES         = 'D:\IDL\IMAGES\'
  DIR_COMBO          = 'E:\COMBO\'

;	******************************
;	***** C O N S T A N T S  *****
;	******************************
  COMPUTER=GET_COMPUTER() & NOW = LONG(STRMID(DATE_NOW(),0,8))
  DELIM		=DELIMITER(/PATH) & SLASH=DELIMITER(/SLASH) & DASH=DELIMITER(/DASH) & UL=DELIMITER(/UL) & CM=DELIMITER(/COMMA) & AS = DELIMITER(/ASTER)
  NOW 		= NUM2STR(LONG(STRMID(DATE_NOW(),0,8)))
  ASTER='*'


;	*************************************************
;	***** O U T P U T   D I R E C T O R I E S   *****
;	*************************************************
	IF COMPUTER EQ 'LOLIGO' THEN DISK_PROJECT = 'E:'
	PROJECT_FOLDER = 'ROMS-NENA'
	METHOD = '801_HYCOM'
	METHOD = '749_HYCOM'
	METHOD = '823_HYCOM'


 	FILE_FOLDERS,'E:\ROMS-NENA\',FOLDERS=['DATA','BROWSE','SAVE','STATS','DOC','STATS_BROWSE']



;	******************************************************************
; *********** J O B  S W I T C H E S  ******************************
;	******************************************************************



	DO_ROMS_ASC_2SAVE 					= 0
	DO_NETCDF_2SAVE							= 0
	DO_STATS										= 0

	DO_STATS_BROWSE							= 0
	DO_STATS_BROWSE_PAGE				= 0

	DO_HIST2D_CHLOR_A_A_CDOM_MANINNO = 0
	DO_ROMS_VS_SEAWIFS_PAR      =	0
	DO_CHECK_PAR_RUNS     			= 0

	DO_COMPOSITE_STATS_BROWSE_HIST2D_ROMS = 0

	DO_COMPOSITE_ANNUAL_SATELLITE_VS_ROMS_EC_DIAGONAL = 2






;	###############################################
; #####  B E G I N   P R O C E S S I N G    #####
;	###############################################







; *********************************************
  IF DO_ROMS_ASC_2SAVE GE 1 THEN BEGIN
; *********************************************
    PRINT, 'S T E P:    DO_ROMS_ASC_2SAVE'
    OVERWRITE = DO_ROMS_ASC_2SAVE GE 2
;    FILES=FILELIST(DIR_ROMS_DATA+'!D_*.mat')

    LANDMASK = READ_LANDMASK(DIR_IMAGES+'MASK_LAND-NENA-PXY_386_130.PNG',/STRUCT)
    OK_LAND   = LANDMASK.LAND

		IF METHOD EQ '751_HYCOM' THEN BEGIN
			FILES=FILELIST(DIR_DATA+'D_*-ROMS-bio-NENA-CHLOR_A-SURFACE.asc')
	 		FILES=FILELIST(DIR_DATA+'D_*-ROMS-bio-NENA-PP.asc')
	 		FILES=FILELIST(DIR_DATA+'D_*-ROMS-bio-NENA-SST-SURFACE.asc')
	 		FILES=FILELIST(DIR_DATA+'D_*-ROMS-bio-NENA-PAR-SURFACE.asc')
	 		FILES=FILELIST(DIR_DATA+'D_*-ROMS-bio-NENA-POC-SURFACE.asc')
	 		FILES=FILELIST(DIR_DATA+'D_*-ROMS-bio-NENA-CHLOR_EUPHOTIC.asc')
	 		FILES=FILELIST(DIR_DATA+'D_*-ROMS-bio-NENA-ZEU.asc')
	 		FILES=FILELIST(DIR_DATA+'D_*-ROMS-bio-NENA-KPAR.asc')
 		ENDIF

		IF METHOD EQ '749_HYCOM' OR METHOD EQ '801_HYCOM' THEN BEGIN
 			FILES=FILELIST(DIR_DATA+'D_*-ROMS-*-NENA-CHLOR_A-SURFACE.asc')
	 		FILES=FILELIST(DIR_DATA+'D_*-ROMS-*-NENA-PP.asc')
	 		FILES=FILELIST(DIR_DATA+'D_*-ROMS-*-NENA-SST-SURFACE.asc')
	 		FILES=FILELIST(DIR_DATA+'D_*-ROMS-*-NENA-PAR-SURFACE.asc')
			FILES=FILELIST(DIR_DATA+'D_*-ROMS-*-NENA-POC-SURFACE.asc')
	  		FILES=FILELIST(DIR_DATA+'D_*-ROMS-*-NENA-CHLOR_EUPHOTIC.asc')
 		   FILES=FILELIST(DIR_DATA+'D_*-ROMS-*-NENA-ZEU.asc')
	 	 	FILES=FILELIST(DIR_DATA+'D_*-ROMS-*-NENA-KPAR.asc')
	 	 		FILES=FILELIST(DIR_DATA+'D_*-ROMS-*-NENA-ZEU.asc')

	 	ENDIF

		;FILES=FILELIST(DIR_DATA+'D_*-ROMS-bio-NENA-ZEU.asc') ; DO NOT USE ZEU BECAUSE OF INFINITIES IF EUP BELOW BOTTOM
;

STOP

;		LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
    FOR NTH=0L,N_ELEMENTS(FILES)-1L DO BEGIN
    	AFILE=FILES[NTH]
    	FN=PARSE_IT(AFILE,/ALL)

			INFILE = AFILE


    	NAME = '!'+ FN.FIRST_NAME
      NAME = REPLACE(NAME,'bio',METHOD)
      NAME = REPLACE(NAME,'ROMS-749','ROMS-749_HYCOM')
      NAME = REPLACE(NAME,'ROMS-801','ROMS-801_HYCOM')
      NAME = REPLACE(NAME,'PP','PPD')
      NAME = REPLACE(NAME,'-SURFACE','')
      NAME = REPLACE(NAME,'-ZEU','-EUPHOTIC_DEPTH')
      NAME = REPLACE(NAME,'-KPAR','-K_PAR')
      NAME = REPLACE(NAME,'_kchlp02486','')

      FN_ =PARSE_IT(NAME,/ALL)
      PROD = FN_.PROD

			SAVEFILE=DIR_SAVE+FN_.NAME+'.SAVE'


 			EXIST=FILE_TEST(SAVEFILE)
 			OK=WHERE(EXIST EQ 0,COUNT)
 			IF COUNT EQ 0 AND OVERWRITE EQ 0 THEN CONTINUE ; >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>


    	IF STRUPCASE(FN.EXT) EQ 'ASC' THEN BEGIN
    		TXT=READ_TXT(AFILE)
    		IMAGE= TRANSPOSE(FLOAT(STR_BREAK(TXT,' ')))
 			ENDIF

			IF STRUPCASE(FN.EXT) EQ 'MAT' THEN BEGIN
    		M=READ_MATFILE(AFILE)
    		FILE_NAME=AFILE
    		PROD=FN.PROD
    		IMAGE=M.(1).DATA
    	ENDIF


			IF NTH EQ 0 THEN BEGIN
 	    			PAL_36 & SLIDEW, READ_LANDMASK(DIR_IMAGES+'MASK_LAND-NENA-PXY_386_130.PNG',/LAND)
 	    			PAL_SW3 &SLIDEW, SD_SCALES(PROD=PROD,IMAGE,/DATA2BIN)
    	ENDIF


 			M = MM(IMAGE,/FIN)

     	IF N_ELEMENTS(DB) EQ 0 THEN BEGIN
     		D =CREATE_STRUCT('NAME',FN.FIRST_NAME, 'MIN',M[0],'MAX',M[1])
     		DB=D
     	ENDIF ELSE DB = [DB,D]

;			===> Convert the incomming PAR (W/m2) into E M-2 D-1 ***********************>>>>>
			IF PROD EQ 'PAR' THEN BEGIN
;				K.FENNEL OCT 13, 2006 Sorry, that's my mistake. The values in the asc-files need to be multiplied by 0.43.
 				IF  METHOD EQ '751_HYCOM' THEN BEGIN
					IMAGE = IMAGE* 0.43
					IMAGE = i_par_watts_2emd(IMAGE)
				ENDIF
				IF METHOD EQ '749_HYCOM' OR METHOD EQ '801_HYCOM'  THEN BEGIN
					IMAGE = i_par_watts_2emd(IMAGE)
				ENDIF
			ENDIF
;			===> Convert POC into mg/l
			IF PROD EQ 'POC' THEN IMAGE = IMAGE*0.001




 			IMAGE(OK_LAND) 	= MISSINGS(IMAGE)

    	MISSING_CODE 		= MISSINGS(IMAGE)
    	SCALING='Linear'
    	Intercept=0.0
    	SLOPE   = 1.0
    	DATA_UNITS=UNITS(FN.PROD,/NO_NAME)

      STRUCT_SD_WRITE,  SAVEFILE,           PROD=PROD, $
                        IMAGE=IMAGE,        MISSING_CODE=missing_code,$
                        MASK=MASK,          CODE_MASK=CODE_MASK,  CODE_NAME_MASK=CODE_NAME_MASK, $
                        SCALING=SCALING,    INTERCEPT=INTERCEPT,  SLOPE=SLOPE,          DATA_UNITS=DATA_UNITS,$
                        TRANSFORMATION=TRANSFORMATION, $
                        PERIOD=PERIOD,      SENSOR=SENSOR,        SATELLITE=SATELLITE,  SAT_EXTRA=SAT_EXTRA,$
                        METHOD=METHOD,      SUITE=SUITE,          MAP=MAP, $
                        INFILE=INFILE,$
                        NOTES=NOTES,        ERROR=ERROR,$
                        HELP=HELP

		ENDFOR


		; ===> WRITE DB



		DO_ROMS_ASC_2SAVE:
    ENDIF
; |||||||||||||||||||||||||||||||||||||||||||||||||


; ************************************
	IF DO_NETCDF_2SAVE GE 1 THEN BEGIN
;	************************************
    PRINT, 'S T E P:   DO_NETCDF_2SAVE' & PRINT, 'This step will Extract Products from the *.nc files'


    LANDMASK = READ_LANDMASK(DIR_IMAGES+'MASK_LAND-NENA-PXY_386_130.PNG',/STRUCT)
    OK_LAND   = LANDMASK.LAND
    SENSOR='ROMS'
		METHOD='823_HYCOM'
    MAP = 'NENA'
    DATASET='ROMS-NENA'
    PRODUCTS = 'CHLOROPHYLL'
    PRODUCTS = 'TEMP'
  	PRODUCTS = 'SEMILABILEDOC'

 		FILES=FILELIST(!DIR_DATA+'\'+METHOD+'\*.nc')

;		LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
		FOR _PRODUCTS=0,N_ELEMENTS(PRODUCTS)-1L DO BEGIN
			TRANSFORM = ''
			APRODUCT = PRODUCTS(_PRODUCTS)

;			LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
			FOR _FILE=0,N_ELEMENTS(FILES)-1 DO BEGIN
				AFILE=FILES(_FILE)
	    	FN=PARSE_IT(AFILE,/ALL)
				INFILE = AFILE
;				===> TO GET VARIABLE NAMES
  				D=READ_NCDF_2STRUCT(AFILE,/LOOK) & NAMES=TAG_NAMES(D.SD) & S=SORT(NAMES) & LIST, NAMES(S)

stop

				D=READ_NCDF_2STRUCT(AFILE,PRODUCTS= 'OCEAN_TIME')
				;DEPTH = D.SD.H.IMAGE	& SLIDEW, SD_SCALES(PROD='BATHY',DEPTH,/DATA2BIN)
				JD=SECONDS2001_2JD(D.SD.OCEAN_TIME.IMAGE)
				DATE = JD_2DATE(JD)
				DATE = STRMID(Date,0,8)
				PERIOD=DATE_2PERIOD(DATE)

				IF APRODUCT EQ 'CHLOROPHYLL' THEN BEGIN
					TRANSFORM = 'ALOG'
					PROD = 'CHLOR_A'
				ENDIF
				IF APRODUCT EQ 'TEMP' THEN PROD = 'SST'
				IF APRODUCT EQ 'SEMILABILEDOC' THEN PROD = 'DOC_SEMILABILE'

			 	SAVEFILE=!DIR_SAVE+PERIOD+'-'+SENSOR+'-'+METHOD+'-'+MAP+'-'+PROD+'.SAVE'
			 	PRINT, SAVEFILE
			 	IF FILE_TEST(SAVEFILE) AND DO_NETCDF_2SAVE LT 2 THEN CONTINUE ; >>>>>>>>>>>>>>>>>>>>>>>>

				DB=READ_NCDF_2STRUCT(AFILE,PRODUCT=APRODUCT)

				IMAGE = DB.SD.(0).IMAGE

;				last array element is surface
				IMAGE = REFORM(IMAGE(*,*,29))

;				===> Convert the incomming PAR (W/m2) into E M-2 D-1 ***********************>>>>>
				IF PROD EQ 'PAR' THEN BEGIN
;					K.FENNEL OCT 13, 2006 Sorry, that's my mistake. The values in the asc-files need to be multiplied by 0.43.
	 				IF  METHOD EQ '751_HYCOM' THEN BEGIN
						IMAGE = IMAGE* 0.43
						IMAGE = i_par_watts_2emd(IMAGE)
					ENDIF
					IF METHOD EQ '749_HYCOM' OR METHOD EQ '801_HYCOM' OR METHOD EQ '823_HYCOM' THEN BEGIN
						IMAGE = i_par_watts_2emd(IMAGE)
					ENDIF
				ENDIF
;			===> Convert POC into mg/l
			IF PROD EQ 'POC' THEN IMAGE = IMAGE*0.001

 			IMAGE(OK_LAND) 	= MISSINGS(IMAGE)

    	MISSING_CODE 		= MISSINGS(IMAGE)
    	SCALING='Linear'
    	Intercept=0.0
    	SLOPE   = 1.0
    	DATA_UNITS=UNITS(PROD,/NO_NAME)

      STRUCT_SD_WRITE,  SAVEFILE,           PROD=PROD, $
                        IMAGE=IMAGE,        MISSING_CODE=missing_code,$
                        MASK=MASK,          CODE_MASK=CODE_MASK,  CODE_NAME_MASK=CODE_NAME_MASK, $
                        SCALING=SCALING,    INTERCEPT=INTERCEPT,  SLOPE=SLOPE,          DATA_UNITS=DATA_UNITS,$
                        TRANSFORMATION=TRANSFORMATION, $
                        PERIOD=PERIOD,      SENSOR=SENSOR,        SATELLITE=SATELLITE,  SAT_EXTRA=SAT_EXTRA,$
                        METHOD=METHOD,      SUITE=SUITE,          MAP=MAP, $
                        INFILE=INFILE,$
                        NOTES=NOTES,        ERROR=ERROR,$
                        DEPTH = '0',$
                        HELP=HELP


			ENDFOR
		ENDFOR
	ENDIF ; DO_NETCDF_2SAVE
; *******************************


;	**********************************************
	IF DO_ROMS_VS_SEAWIFS_PAR GE 1 THEN BEGIN
;	**********************************************

; *******************************************************
;	*********** BY YEAR MONTH ****************************
; *******************************************************
	PSFILE=DIR_PLOTS+'ROMS_VS_SEAWIFS_PAR-BY_YEAR_MONTH.PS'
	PSPRINT,FILENAME=PSFILE,/COLOR,/FULL,/LANDSCAPE

	!P.CHARSIZE=1.0
	!p.multi=[0,4,3]
	PAL_36,R,G,B

	FILES_SW 		= FILE_SEARCH(DIR_STATS+'!M_*-SEAWIFS-REPRO5-NENA-PAR-MEAN.SAVE')
	FILES_ROMS 	= FILE_SEARCH(DIR_STATS+'!M_*-ROMS-749_HYCOM-NENA-PAR-MEAN.SAVE')

	LIST, FILES_SW
	LIST, FILES_ROMS

	FA =FILE_ALL(FILES_SW)
	METHOD_SW   = FA[0].METHOD
	FB=FILE_ALL(FILES_ROMS)
	METHOD_ROMS = FB[0].METHOD
	F_AB = [FA,FB]

	TXT_A = STR_JOIN(FA.PERIOD, FA.PROD,FA.MAP,DELIM='-')
	TXT_B = STR_JOIN(FB.PERIOD, FB.PROD,FB.MAP,DELIM='-')

	SETS = WHERE_SETS(TXT_A, TXT_B)
	OK = WHERE(SETS.N EQ 2)
	SETS = SETS[OK]

;	LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
	FOR _SET = 0,N_ELEMENTS(SETS)-1 DO BEGIN
		SET = SETS(_SET)
		VALUE = SET.VALUE
		PERIOD = PERIOD_2STRUCT(VALUE)
		IF PERIOD.PERIOD_CODE EQ '!MONTH' THEN DATE_LABEL = MONTH_NAMES(PERIOD.MONTH_START)
		DATE_LABEL = STRTRIM(PERIOD.YEAR_START,2) + ' '+ MONTH_NAMES(PERIOD.MONTH_START,/SHORT)

		SUBS = WHERE_SETS_SUBS(SET)
		PRINT,SUBS
		SW 	= STRUCT_SD_READ(F_AB(SUBS[0]).FULLNAME)
		ROM = STRUCT_SD_READ(F_AB(SUBS[1]).FULLNAME)
		OK=WHERE(ROM NE MISSINGS(ROM) AND SW NE MISSINGS(SW))
		ROM = ROM[OK]
		SW  = SW[OK]

		IF _SET EQ 0 THEN BEGIN
			SW_ALL  = SW
			ROM_ALL = ROM
		ENDIF ELSE BEGIN
			SW_ALL  = [SW_ALL, SW]
			ROM_ALL = [ROM_ALL,ROM]
		ENDELSE

;		*************PLOT EACH MONTH ************************************************
		PLOTXY, ROM,SW,PSYM=1,/MEAN_NONE,DECIMALS=3,PARAMS=[1,2,3,4,8,10],XRANGE=[0,70],YRANGE=[0,70],SYMSIZE=0.05,GRID_COLOR=34,GRID_THICK=3,REG_COLOR=21,REG_THICK=3,$
						YTITLE='SeaWiFS '+UNITS('PAR') , XTITLE=METHOD_ROMS + ' ' + UNITS('PAR'),/ISOTROPIC, $
						TITLE=DATE_LABEL,STATS_CHARSIZE=0.4,/ONE2ONE,/QUIET
		FRAME,/PLOT,COLOR=0,THICK=5
	ENDFOR
	PSPRINT
;	\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\



	PSFILE=DIR_PLOTS+'ROMS_VS_SEAWIFS_PAR-COMBINED_YEAR_MONTH.PS'
	PSPRINT,FILENAME=PSFILE,/COLOR,/FULL,/LANDSCAPE

	!P.CHARSIZE=1.0
	!p.multi=[0,4,3]
	PAL_36,R,G,B

; ===> LINEAR REGRESSION OF THE COMBINED YEAR MONTH SET
	PLOTXY, ROM_ALL,SW_ALL,PSYM=1,/MEAN_NONE,DECIMALS=4,PARAMS=[1,2,3,4,8,10],XRANGE=[0,70],YRANGE=[0,70],SYMSIZE=0.05,GRID_COLOR=34,GRID_THICK=3,REG_COLOR=21,REG_THICK=3,$
					YTITLE='SeaWiFS '+UNITS('PAR') , XTITLE=METHOD_ROMS+UNITS('PAR'),/ISOTROPIC,$
					TITLE='All Months',STATS_CHARSIZE=0.4,/QUIET
	FRAME,/PLOT,COLOR=0,THICK=5
	S=STATS2((ROM_ALL),(SW_ALL))
	S=S(4)
	SLOPE = S.SLOPE
	INT    = S.INT
;	ADJ_ROM =  (((ROM_ALL) - INT)/SLOPE)
	ADJ_ROM =  INT + SLOPE*ROM_ALL ;
	TXT= 'Adjusted ROMS PAR = !C'+NUM2STR(INT,FORMAT='(F10.4)')+'!C+'+NUM2STR(SLOPE,FORMAT='(F10.4)')+'* ROMS PAR'
	PLOTXY, ADJ_ROM,SW_ALL,PSYM=1,/MEAN_NONE,DECIMALS=4,PARAMS=[1,2,3,4,8,10],XRANGE=[0,70],YRANGE=[0,70],SYMSIZE=0.05,GRID_COLOR=34,GRID_THICK=3,REG_COLOR=21,REG_THICK=3,$
					YTITLE='SeaWiFS '+UNITS('PAR') , XTITLE='Adjusted '+METHOD_ROMS+UNITS('PAR'),$
					/ISOTROPIC,TITLE='Linear Adjusted ROM PAR',STATS_CHARSIZE=0.4
	FRAME,/PLOT,COLOR=0,THICK=3
	XYOUTS,18.,10.5,TXT,/DATA,CHARSIZE=0.8

	PLOT, ADJ_ROM, ADJ_ROM/SW_ALL, PSYM=3,SYMSIZE=0.05,XTITLE='Adjusted '+METHOD_ROMS+UNITS('PAR'),$
				YTITLE='Adjusted '+METHOD_ROMS+UNITS('PAR')+'/ SeaWiFS PAR' ,/NODATA,YRANGE=[0,2],/YSTYLE
	GRIDS,/ALL,COLOR=34,THICK=3
	frame,/plot,thick=3,color=0
	OPLOT, ADJ_ROM,  ADJ_ROM/SW_ALL,PSYM=1,SYMSIZE=0.05
	PLOT_EVENT,/YAXIS, 1.0,COLOR=21

	EMPTY

;
;	===> MP 2ND DEG  *****
	SW = SUBSAMPLE(SW_ALL,2)
	ROM= SUBSAMPLE(ROM_ALL,2)

	MP_2:
	SET_PLOT,'WIN'
  FTOL = 0.0000001d
	DEG=2
	MP=0
	precision = 0.0000001d
	SCALER=8
	LL='NN'
	METHOD=1


	SET_PLOT,'WIN'
  COEFFS_MP = MP_AMOEBA(ROM,SW,DEG=DEG,MP=MP,FTOL=FTOL,PRECISION=precision,LL=LL,QUIET=quiet, METHOD=METHOD, START=START,SCALER=scaler)
  PRINT,COEFFS_MP
  SET_PLOT,'PS'

	!p.multi=[0,4,3]

  PLOTXY, ROM,SW,PSYM=1,/MEAN_NONE,DECIMALS=4,PARAMS=[1,2,3,4,8,10],XRANGE=[0,70],YRANGE=[0,70],SYMSIZE=0.05,GRID_COLOR=34,GRID_THICK=3,REG_COLOR=21,REG_THICK=3,$
  YTITLE='SeaWiFS '+UNITS('PAR') , XTITLE=METHOD_ROMS+UNITS('PAR'),/ISOTROPIC,/STATS_NONE,/REG_NONE,TITLE=STRTRIM(DEG,2)+'nd Degree Polynomial Regression'
  FRAME,/PLOT,COLOR=0,THICK=3

	TXT= 'Adjusted ROMS PAR = !C'+NUM2STR(COEFFS_MP[0],FORMAT='(F10.4)')+'!C+'+NUM2STR(COEFFS_MP[1],FORMAT='(F10.4)')+'* ROMS PAR' +'!C'+NUM2STR(COEFFS_MP(2),FORMAT='(F10.4)')+'* ROMS PAR^2'
	IF DEG EQ 2 THEN ADJ_ROM =  (COEFFS_MP[0] + COEFFS_MP[1]*(ROM) + COEFFS_MP(2)*(ROM)^2)
	IF DEG EQ 3 THEN ADJ_ROM =  (COEFFS_MP[0] + COEFFS_MP[1]*(ROM) + COEFFS_MP(2)*(ROM)^2 + COEFFS_MP(3)*(ROM)^3)
  S=SORT(ADJ_ROM)
	OPLOT, ROM(S),ADJ_ROM(S),COLOR=21

	PLOTXY, ADJ_ROM,SW,PSYM=1,/MEAN_NONE,DECIMALS=4,PARAMS=[1,2,3,4,8,10],XRANGE=[0,70],YRANGE=[0,70],SYMSIZE=0.05,GRID_COLOR=34,GRID_THICK=3,REG_COLOR=21,REG_THICK=3,$
	YTITLE='SeaWiFS '+UNITS('PAR') , XTITLE='Adjusted '+METHOD_ROMS+UNITS('PAR'),/ISOTROPIC,TITLE=STRTRIM(DEG,2)+'nd Degree Polynomial Adjusted ROM PAR'
	FRAME,/PLOT,COLOR=0,THICK=5
	XYOUTS,18.,10.5,TXT,/DATA,CHARSIZE=0.8


	PLOT, ADJ_ROM,  ADJ_ROM/SW,PSYM=3,SYMSIZE=0.05,XTITLE='Adjusted '+METHOD_ROMS+' PAR',YTITLE='Adjusted '+METHOD_ROMS+' PAR'+'/ SeaWiFS PAR' ,/NODATA,YRANGE=[0,2],/YSTYLE
	GRIDS,/ALL,COLOR=34,THICK=3
	frame,/plot,thick=3,color=0
	OPLOT, ADJ_ROM,  ADJ_ROM/SW,PSYM=1,SYMSIZE=0.05
	PLOT_EVENT,/YAXIS, 1.0,COLOR=21


	CAPTION,"J.O'Reilly (NOAA)",/NOROUTINE
	PSPRINT

STOP

	PSFILE=DIR_PLOTS+'ROMS_VS_SEAWIFS_PAR-BY_MONTH.PS'
	FILES_SW 		= FILE_SEARCH(DIR_STATS+'!MONTH_*-SEAWIFS-REPRO5-NENA-PAR-MEAN.SAVE')
	FILES_ROMS 	= FILE_SEARCH(DIR_STATS+'!MONTH_*-ROMS-749_HYCOM-NENA-PAR-MEAN.SAVE')

	LIST, FILES_SW
	LIST, FILES_ROMS

	FA =FILE_ALL(FILES_SW)
	METHOD_SW   = FA[0].METHOD
	FB=FILE_ALL(FILES_ROMS)
	METHOD_ROMS = FB[0].METHOD
	F_AB = [FA,FB]
	PSFILE = DIR_PLOTS+'SEAWIFS_VS_ROMS_PAR.PS'
	PSPRINT,FILENAME=PSFILE,/COLOR,/FULL,/LANDSCAPE

	!P.CHARSIZE=1.0
	!p.multi=[0,4,3]
	PAL_36,R,G,B

	TXT_A = STR_JOIN(FA.PERIOD,FA.PROD+FA.MAP,DELIM='-')
	TXT_B = STR_JOIN(FB.PERIOD,FB.PROD+FB.MAP,DELIM='-')

	SETS = WHERE_SETS(TXT_A, TXT_B)
	OK = WHERE(SETS.N EQ 2)
	SETS = SETS[OK]

;	LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
	FOR _SET = 0,N_ELEMENTS(SETS)-1 DO BEGIN
		SET = SETS(_SET)
		VALUE = SET.VALUE
		PERIOD = PERIOD_2STRUCT(VALUE)
		IF PERIOD.PERIOD_CODE EQ '!MONTH' THEN DATE_LABEL = MONTH_NAMES(PERIOD.MONTH_START)

		SUBS = WHERE_SETS_SUBS(SET)
		PRINT,SUBS
		SW 	= STRUCT_SD_READ(F_AB(SUBS[0]).FULLNAME)
		ROM = STRUCT_SD_READ(F_AB(SUBS[1]).FULLNAME)
		OK=WHERE(ROM NE MISSINGS(ROM) AND SW NE MISSINGS(SW))
		ROM = ROM[OK]
		SW  = SW[OK]

		IF _SET EQ 0 THEN BEGIN
			SW_ALL  = SW
			ROM_ALL = ROM
		ENDIF ELSE BEGIN
			SW_ALL  = [SW_ALL, SW]
			ROM_ALL = [ROM_ALL,ROM]
		ENDELSE

;		*************PLOT EACH MONTH ************************************************
		PLOTXY, ROM,SW,PSYM=1,/MEAN_NONE,DECIMALS=3,PARAMS=[1,2,3,4,8,10],XRANGE=[0,70],YRANGE=[0,70],SYMSIZE=0.05,GRID_COLOR=34,GRID_THICK=3,REG_COLOR=21,REG_THICK=3,$
						YTITLE='SeaWiFS '+UNITS('PAR') , XTITLE=METHOD_ROMS + ' ' + UNITS('PAR'),/ISOTROPIC, $
						TITLE=DATE_LABEL,STATS_CHARSIZE=0.4,/ONE2ONE,/QUIET
		FRAME,/PLOT,COLOR=0,THICK=5
	ENDFOR
STOP





;	****************************************************************************
;	***** MP 2ND DEG  *****
;	****************************************************************************

	SET_PLOT,'WIN'
  FTOL = 0.0000001d
	DEG=3
	MP=0
	precision = 0.0000001d
	SCALER=8
	LL='NN'
	METHOD=1

	SET_PLOT,'WIN'
  COEFFS_MP = MP_AMOEBA(ROM,SW,DEG=DEG,MP=MP,FTOL=FTOL,PRECISION=precision,LL=LL,QUIET=quiet, METHOD=METHOD, START=START,SCALER=scaler)
  SET_PLOT,'PS'
 	!p.multi=[0,3,2]
  PRINT,COEFFS_MP

	SW = SUBSAMPLE(SW_ALL,10)
	ROM= SUBSAMPLE(ROM_ALL,10)


  PLOTXY, ROM,SW,PSYM=1,/MEAN_NONE,DECIMALS=4,PARAMS=[1,2,3,4,8,10],XRANGE=[0,70],YRANGE=[0,70],SYMSIZE=0.05,GRID_COLOR=34,GRID_THICK=3,REG_COLOR=21,REG_THICK=3,$
  YTITLE='SeaWiFS '+UNITS('PAR') , XTITLE=METHOD_ROMS+UNITS('PAR'),/ISOTROPIC,/STATS_NONE,/REG_NONE,TITLE=STRTRIM(DEG,2)+'nd Degree Polynomial Regression'
  FRAME,/PLOT,COLOR=0,THICK=3

	TXT= 'Adjusted ROMS PAR = !C'+NUM2STR(COEFFS_MP[0],FORMAT='(F10.4)')+'!C+'+NUM2STR(COEFFS_MP[1],FORMAT='(F10.4)')+'* ROMS PAR' +'!C'+NUM2STR(COEFFS_MP(2),FORMAT='(F10.4)')+'* ROMS PAR^2'
	IF DEG EQ 2 THEN ADJ_ROM =  (COEFFS_MP[0] + COEFFS_MP[1]*(ROM) + COEFFS_MP(2)*(ROM)^2)
	IF DEG EQ 3 THEN ADJ_ROM =  (COEFFS_MP[0] + COEFFS_MP[1]*(ROM) + COEFFS_MP(2)*(ROM)^2 + COEFFS_MP(3)*(ROM)^3)
  S=SORT(ADJ_ROM)
	OPLOT, ROM(S),ADJ_ROM(S),COLOR=21

	PLOTXY, ADJ_ROM,SW,PSYM=1,/MEAN_NONE,DECIMALS=4,PARAMS=[1,2,3,4,8,10],XRANGE=[0,70],YRANGE=[0,70],SYMSIZE=0.05,GRID_COLOR=34,GRID_THICK=3,REG_COLOR=21,REG_THICK=3,$
	YTITLE='SeaWiFS '+UNITS('PAR') , XTITLE='Adjusted '+METHOD_ROMS+UNITS('PAR'),/ISOTROPIC,TITLE=STRTRIM(DEG,2)+'nd Degree Polynomial Adjusted ROM PAR'
	FRAME,/PLOT,COLOR=0,THICK=5
	XYOUTS,18.,10.5,TXT,/DATA,CHARSIZE=0.8


	PLOT, ADJ_ROM,  ADJ_ROM/SW,PSYM=3,SYMSIZE=0.05,XTITLE='Adjusted '+METHOD_ROMS+' PAR',YTITLE='Adjusted '+METHOD_ROMS+' PAR'+'/ SeaWiFS PAR' ,/NODATA,YRANGE=[0.5,1.5]
	GRIDS,/ALL,COLOR=34,THICK=3
	frame,/plot,thick=3,color=0
	OPLOT, ADJ_ROM,  ADJ_ROM/SW,PSYM=1,SYMSIZE=0.05
	PLOT_EVENT,/YAXIS, 1.0,COLOR=21

; ***************************************************************************************
;	***** LINEAR *****
; ***************************************************************************************

	PLOTXY, ROM,SW,PSYM=1,/MEAN_NONE,DECIMALS=4,PARAMS=[1,2,3,4,8,10],XRANGE=[0,70],YRANGE=[0,70],SYMSIZE=0.05,GRID_COLOR=34,GRID_THICK=3,REG_COLOR=21,REG_THICK=3,$
	YTITLE='SeaWiFS '+UNITS('PAR') , XTITLE=METHOD_ROMS+UNITS('PAR'),/ISOTROPIC, TITLE='Linear Type II Regression'
	FRAME,/PLOT,COLOR=0,THICK=5
	S=STATS2((ROM),(SW))
	S=S(4)
	SLOPE = S.SLOPE
	INT    = S.INT
	ADJ_ROM =  (((SW) - INT)/SLOPE)

	TXT= 'Adjusted ROMS PAR = !C'+NUM2STR(INT,FORMAT='(F10.4)')+'!C+'+NUM2STR(SLOPE,FORMAT='(F10.4)')+'* ROMS PAR'

	ADJ_ROM =  INT+SLOPE*ROM
	PLOTXY, ADJ_ROM,SW,PSYM=1,/MEAN_NONE,DECIMALS=4,PARAMS=[1,2,3,4,8,10],XRANGE=[0,70],YRANGE=[0,70],SYMSIZE=0.05,GRID_COLOR=34,GRID_THICK=3,REG_COLOR=21,REG_THICK=3,$
	YTITLE='SeaWiFS '+UNITS('PAR') , XTITLE='Adjusted '+METHOD_ROMS+UNITS('PAR'),/ISOTROPIC,TITLE='Linear Adjusted ROM PAR'
	FRAME,/PLOT,COLOR=0,THICK=3
	XYOUTS,18.,10.5,TXT,/DATA,CHARSIZE=0.8

	PLOT, ADJ_ROM,  ADJ_ROM/SW,PSYM=3,SYMSIZE=0.05,XTITLE='Adjusted ROMS 004 PAR ',YTITLE='Adjusted ROMS 004 PAR / SeaWiFS PAR' ,/NODATA,YRANGE=[0.5,1.5]
	GRIDS,/ALL,COLOR=34,THICK=3
	frame,/plot,thick=3,color=0
	OPLOT, ADJ_ROM,  ADJ_ROM/SW,PSYM=1,SYMSIZE=0.05
	PLOT_EVENT,/YAXIS, 1.0,COLOR=21




	CAPTION,"J.O'Reilly (NOAA)",/NOROUTINE
	PSPRINT


STOP


	ENDIF
;	|||||||||||||||||||

;	****************************************************
	IF DO_HIST2D_CHLOR_A_A_CDOM_MANINNO GE 1 THEN BEGIN
;	****************************************************


  CHL=STRUCT_SD_READ('D:\PROJECTS\NEFSC_WEBSITE\SAVE\!STUDY-SEAWIFS-REPRO5-NEC-CHLOR_A-MEAN.SAVE')

  A_CDOM = STRUCT_SD_READ('D:\SEAWIFS_HRPT-NEC\STATS\!STUDY-SEAWIFS-REPRO5-NEC-A_CDOM_MANNINO-MEAN.SAVE')

STOP

	ENDIF
;	******************************************



; ************************************
	IF DO_STATS GE 1 THEN BEGIN
;	************************************
    PRINT, 'S T E P:   DO_STATS' & PRINT, 'This step will Compute Statistical SUMs of Products'
    OVERWRITE = DO_STATS EQ 2

		PROCESS = 'MODEL'
		SAT = 'Z' &  SAT_EXTRA=''
		SENSOR='ROMS'
		METHOD='823_HYCOM' & OUTMETHOD=METHOD
    MAP    = 'NENA' &  MAP_OUT ='NENA'
    DATA_SET='ROMS-NENA'
    SUITE  = ''

		DIR_SAVE = !DIR_SAVE
		DIR_STATS=!DIR_STATS

   	STATS_PRODUCTS = ['CHLOR_A','PAR','PPD','K_PAR','CHLOR_EUPHOTIC','ZEU','SST','POC','EUPHOTIC_DEPTH']
    STATS_PRODUCTS = ['CHLOR_A','SST','DOC_SEMILABILE']
 ;   STATS_PRODUCTS = 'SST'
    stats_products = 'DOC_SEMILABILE'

  	DATE_RANGE=['19940101000000','20201231235959']

		STAT_PERIOD_CODES_IN  = ['!D', '!M',      '!M', '!Y',		'!MONTH']
    STAT_PERIOD_CODES_OUT = ['!M', '!MONTH',  '!Y', '!YEAR','!ANNUAL']
 		STAT_TYPES= 							['MEAN;NUM','MEAN;NUM;CV','MEAN;NUM;CV','MEAN;NUM;CV;MIN;MAX;SPAN','MEAN;NUM;CV;MIN;MAX;SPAN']

;		LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
  	FOR _PROD=0,N_ELEMENTS(STATS_PRODUCTS)-1 DO BEGIN
    	APROD = STATS_PRODUCTS(_PROD)
			TRANSFORM=''
	     CRITERIA_OPER=''
	     CRITERIA_RANGE=''
			IF APROD EQ 'CHLOR_A' OR APROD EQ 'POC' OR APROD EQ 'A_DCOM_MANNINO' THEN TRANSFORM = 'ALOG'

;			LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
	 		FOR _PERIOD_CODE=0,N_ELEMENTS(STAT_PERIOD_CODES_IN)-1 DO BEGIN
	 			PERIOD_CODE_IN=STAT_PERIOD_CODES_IN(_PERIOD_CODE)
	 			PERIOD_CODE_OUT=STAT_PERIOD_CODES_OUT(_PERIOD_CODE)
	 			STAT_TYPE=STAT_TYPES(_PERIOD_CODE)
	 			STAT_TYPE_ARRAY=STRSPLIT(STAT_TYPE,';',/EXTRACT)

			  file_target = METHOD+'-'+MAP+ASTER+'-'+APROD

	 			SD_STATS_ALL,METHOD=METHOD,OUTMETHOD=OUTMETHOD,PERIOD_CODE_IN=PERIOD_CODE_IN,PERIOD_CODE_OUT=PERIOD_CODE_OUT,$
		      						STAT_TYPE=STAT_TYPE_ARRAY,SENSOR=SENSOR,DATE_RANGE=DATE_RANGE,PROCESS=process,DATA_SET=DATA_SET,$
		      						PROD=APROD,FILE_TARGET=file_target,DIR_EXCLUDE=dir_exclude,DIR_SAVE=dir_save,DIR_STATS=dir_stats,$
		      						MAP=MAP_OUT,OVERWRITE=overwrite, CRITERIA_OPER=CRITERIA_OPER,CRITERIA_RANGE=CRITERIA_RANGE,$
		      						TRANSFORM=TRANSFORM,NO_FLAGS=no_flags
			ENDFOR
		ENDFOR
;		||||||
	ENDIF ; DO_STATS
; *******************************





; ************************************
	IF DO_STATS_BROWSE GE 1 THEN BEGIN
;	************************************
    PRINT, 'S T E P:   DO_STATS_BROWSE' & PRINT, 'This step will Compute Statistical SUMs of Products'
    OVERWRITE = DO_STATS_BROWSE EQ 2
    STATS_PRODUCTS = 'CHLOR_A'
    STATS_PRODUCTS = 'PPD'
    STATS_PRODUCTS = 'EUPHOTIC_DEPTH'
    STATS_PRODUCTS = 'CHLOR_A'
    STATS_PRODUCTS = ['CHLOR_A','SST','DOC']

		STATS_PRODUCTS = 'DOC_SEMILABILE'

    STAT_TYPE= ['MEAN','NUM']

    MAP = 'NENA'
    DATASET='ROMS-NENA'

		DIR_OUT=!DIR_STATS_BROWSE
		ADD_COLORBAR = 1
		ADDDATE = 1
		ADD_METHOD = 1
		BACKGROUND=252
		ADD_LAND=1

;		LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
  	FOR _PROD=0,N_ELEMENTS(STATS_PRODUCTS)-1 DO BEGIN
    	APROD = STATS_PRODUCTS(_PROD)
 			file_target = METHOD+'-'+MAP+ASTER+'-'+APROD
;			LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
 			FOR _STAT_TYPE = 0,N_ELEMENTS(STAT_TYPE)-1 DO BEGIN
 				ASTAT=STAT_TYPE(_STAT_TYPE)
 				IF ASTAT EQ 'NUM' THEN USE_PROD = ASTAT
				FILES=FILELIST(!DIR_STATS +'*'+ FILE_TARGET   +'-'+ASTAT+'.SAVE')
				LIST, FILES

				IF FILES[0] NE '' THEN $
            STRUCT_SD_2PNG, FILES,$
	            DIR_OUT=DIR_OUT, $ ; Everything below is optional (see defaults in STRUCT_SD_2IMAGE.PRO)
	            ADD_COLORBAR=ADD_COLORBAR, ADD_DATEBAR=ADD_DATEBAR, ADDDATE=ADDDATE, $
	            ADD_SENSOR=_ADD_SENSOR,ADD_PROD=ADD_PROD,ADD_METHOD=ADD_METHOD, ADD_EXTRA=add_extra, ADD_BATHY=ADD_BATHY,$
	            ADD_LAND=ADD_LAND,ADD_COAST=ADD_COAST,PAL=_pal,MAP_OUT=MAP_OUT, $
  						 USE_PROD=USE_PROD,$
	            BACKGROUND=background,LAND_COLOR=land_color,FLAG_COLOR=flag_color,MISS_COLOR=miss_color,$
	            OUTSCAN_COLOR=outscan_color,OUTMAP_COLOR=outmap_color,ALGFAIL_COLOR=algfail_color,$
	            HI_LOW=hi_low,HI_LO_COLOR=hi_lo_color,BATHY_COLOR=BATHY_COLOR,CRITERIA_COLOR=CRITERIA_COLOR,$
	            CRITERIA_RANGE=CRITERIA_RANGE,CRITERIA_OPER=CRITERIA_OPER,$
	            IMAGE_SCALE=image_scale,BELOW=_BELOW,$
	            OVERWRITE=overwrite,QUIET=quiet
			ENDFOR ;
		ENDFOR

	ENDIF ; DO_STATS_BROWSE
; *******************************


; ************************************
	IF DO_STATS_BROWSE_PAGE GE 1 THEN BEGIN
;	************************************
    PRINT, 'S T E P:   DO_STATS_BROWSE_PAGE'
    OVERWRITE = DO_STATS_BROWSE_PAGE EQ 2

    STATS_PRODUCTS = 'CHLOR_A'
     STATS_PRODUCTS = ['CHLOR_A','SST','DOC']
     STATS_PRODUCTS = 'DOC_SEMILABILE'
   ; STAT_TYPE= ['MEAN','NUM']
    MAP = 'NENA'
    DATASET='ROMS-NENA'
    DISK_ANALYSES = 'E:'
    DISK_SAVE = DISK_ANALYSES
    SWITCHES = 'DO_STATS_BROWSE_PAGE'

    SD_ANALYSES_MAIN ,DATASET=dataset,DISK_ANALYSES=DISK_ANALYSES,DISK_SAVE=DISK_SAVE,$
											DISK_TS_IMAGES=DISK_TS_IMAGES,DISK_PSERIES=DISK_PSERIES,$
											METHOD=METHOD,DATE_RANGE=DATE_RANGE,TS_IMAGES_PRODUCTS=TS_IMAGES_PRODUCTS,$
										  OUTMETHOD=OUTMETHOD,SENSOR=SENSOR,PSERIES_KEEP=PSERIES_KEEP,$
											SWITCHES=switches,OVERWRITE=OVERWRITE


	ENDIF ; DO_STATS_BROWSE
; *******************************



IF DO_CHECK_PAR_RUNS GE 1 THEN BEGIN
	FILE_A = 'E:\ROMS-NENA\DATA_749_HYCOM\D_20040622-ROMS-bio-NENA-PAR-SURFACE.asc'
	FILE_B = 'E:\ROMS-NENA\DATA_751_HYCOM\D_20040622-ROMS-bio-NENA-PAR-SURFACE.asc'
	FILE_C = 'E:\ROMS-NENA\DATA_801_HYCOM\D_20040622-ROMS-801-NENA-PAR-SURFACE.asc'

	PRINT,FILE_TEST([FILE_A,FILE_B,FILE_C])
	STOP

		TXT=READ_TXT(FILE_A)
  IMAGE_A= TRANSPOSE(DOUBLE(STR_BREAK(TXT,' ')))
  	TXT=READ_TXT(FILE_B)
  IMAGE_B= TRANSPOSE(DOUBLE(STR_BREAK(TXT,' ')))
  	TXT=READ_TXT(FILE_C)
  IMAGE_C= TRANSPOSE(DOUBLE(STR_BREAK(TXT,' ')))

STOP
ENDIF








; *******************************************************************************
    IF DO_COMPOSITE_STATS_BROWSE_HIST2D_ROMS GE 1 THEN BEGIN
; *******************************************************************************
   		OVERWRITE = DO_COMPOSITE_STATS_BROWSE_HIST2D_ROMS EQ 2
   		METHOD = '801_HYCOM'
   		ROMS_METHOD = '749_HYCOM'
   		CSV_FILE = DIR_STATS+'STATS.CSV'

			ALL_LIST 	= ['DO_SST','DO_CHLOR','DO_PAR','DO_POC','DO_PPD','DO_KPAR','DO_CHLOR_EUPHOTIC', 'DO_EUPHOTIC_DEPTH']
			DO_LIST 	= ['DO_SST','DO_CHLOR','DO_PAR','DO_POC','DO_PPD','DO_KPAR','DO_CHLOR_EUPHOTIC'] ;, 'DO_EUPHOTIC_DEPTH']

			FOR _DO = 0,N_ELEMENTS(ALL_LIST)-1 	DO BEGIN & 	TXT = ALL_LIST(_DO)	+'=0' & A=EXECUTE(TXT) & ENDFOR
		  FOR _DO = 0,N_ELEMENTS(DO_LIST)-1 	DO BEGIN &	TXT = DO_LIST(_DO)	+'=1' & A=EXECUTE(TXT)

;			*** Defaults
			PATH =      ['E:\SEAWIFS_L3B9-NENA\STATS\','E:\ROMS-NENA\stats\']
      SENSOR =    ['SEAWIFS','ROMS']
      METHOD =    ['REPRO5',ROMS_METHOD]
      MAP =       ['NENA','NENA']
      STAT_TARGET=['MEAN','MEAN']
      PERIOD =    ['!MONTH','!MONTH']
      EXT =				['SAVE','SAVE']
			DIR_OUT = 	DIR_COMBO+'hist2d\'

			ACCUMULATE = 1
			PS=1
			DO_SUBAREAS=1
			SHOW_SUBAREA_PLOT =1
			SHOW_SUBAREA_HIST = 0
			PAGE_COLUMNS = 4
			SPECIAL_SCALE = ''
			xtitle=''
			ytitle=''

STOP
			IF DO_SST GE 1 THEN BEGIN
;				===> AVHRR-MODIS SST vs ROMS 801_HYCOM SST (so no sensor and no method for AVHRR-MODIS
				ACCUMULATE = 0
		 		PATH =      ['E:\SST_GEQ-NENA\STATS\','E:\ROMS-NENA\stats\']
      	SENSOR =    ['','ROMS']
      	METHOD =    ['N4AT',ROMS_METHOD]
      	PRODUCTS=   ['SST','SST']
			ENDIF

			IF DO_PPD GE 1 THEN BEGIN
;				===> SeaWiFS PPD vs ROMS 801_HYCOM PPD
				ACCUMULATE = 0
		 		PATH =      ['E:\PP_N4ATG_L3B9-NENA\STATS\','E:\ROMS-NENA\stats\']
      	SENSOR =    ['PP','ROMS']
      	METHOD =    ['VGPM2A',ROMS_METHOD]
      	PRODUCTS=  	 ['PPD','PPD']
      	SPECIAL_SCALE = 'VERY_LOW'
			ENDIF

			IF DO_CHLOR_EUPHOTIC GE 1 THEN BEGIN
;				===> SeaWiFS PPD vs ROMS 801_HYCOM PPD
				ACCUMULATE = 1
		 		PATH =      ['E:\PP_N4ATG_L3B9-NENA\STATS\','E:\ROMS-NENA\stats\']
      	SENSOR =    ['PP','ROMS']
      	METHOD =    ['VGPM2A',ROMS_METHOD]
      	PRODUCTS=   ['CHLOR_EUPHOTIC','CHLOR_EUPHOTIC']
			ENDIF

			IF DO_KPAR GE 1 THEN BEGIN
;				===> SeaWiFS PPD vs ROMS 801_HYCOM PPD
				ACCUMULATE = 0
		 		PATH =      ['E:\PP_N4ATG_L3B9-NENA\STATS\','E:\ROMS-NENA\stats\']
      	SENSOR =    ['PP','ROMS']
      	METHOD =    ['VGPM2A',ROMS_METHOD]
      	PRODUCTS=   ['K_PAR','K_PAR']
			ENDIF

			IF DO_CHLOR GE 1 THEN BEGIN
				PRODUCTS=   ['CHLOR_A','CHLOR_A']
				ACCUMULATE = 0
			ENDIF

			IF DO_PAR GE 1 THEN BEGIN
				ACCUMULATE = 0
      	PRODUCTS=   ['PAR','PAR']
			ENDIF

			IF DO_POC GE 1 THEN BEGIN
				PRODUCTS=   ['POC','POC']
				ACCUMULATE = 0
			ENDIF


			IF DO_EUPHOTIC_DEPTH GE 1 THEN BEGIN
				ACCUMULATE = 1
		 		PATH =      ['D:\IDL\DATA\','E:\ROMS-NENA\stats\']
      	SENSOR =    ['','ROMS']
      	METHOD =    ['SRTM30',ROMS_METHOD]
      	PRODUCTS=   ['BATHY','EUPHOTIC_DEPTH']
      	STAT_TARGET=['','MEAN']
      	PERIOD =    ['','!MONTH']
      	EXT =				['SAVE','SAVE']
			ENDIF


;			*********************************
;			*** Define the subarea groups ***
;			*********************************
			subarea_file = 'd:\idl\images\MASK_SUBAREA-NENA-PXY_386_130-ECOS.SAVE'
			subareas = STRUCT_SD_READ(subarea_file,struct=struct)

			SUBAREA_GROUP=''
			SUBAREA_NAMES = ''
			SUBAREA_CODES = ''

			SUBAREA_GROUP=[SUBAREA_GROUP, 'Wilk!CBasin' ] & TARGETS = ['WBASIN']
			ok=WHERE_IN(struct.subarea_name,TARGETS)
			SUBAREA_NAMES = [SUBAREA_NAMES,  STRJOIN(STR_ADD(TARGETS,',',/NO_LAST))]
			SUBAREA_CODES = [SUBAREA_CODES,	 STRJOIN(STR_ADD(STRUCT.SUBAREA_CODE[OK],';',/NO_LAST))]

			SUBAREA_GROUP=[SUBAREA_GROUP, 'Central!CGOM' ] & TARGETS = ['CGOM']
			ok=WHERE_IN(struct.subarea_name,TARGETS)
			SUBAREA_NAMES = [SUBAREA_NAMES,  STRJOIN(STR_ADD(TARGETS,',',/NO_LAST))]
			SUBAREA_CODES = [SUBAREA_CODES,	 STRJOIN(STR_ADD(STRUCT.SUBAREA_CODE[OK],';',/NO_LAST))]

			SUBAREA_GROUP=[SUBAREA_GROUP, 'GB' ] & TARGETS = ['GB']
			ok=WHERE_IN(struct.subarea_name,TARGETS)
			SUBAREA_NAMES = [SUBAREA_NAMES,  STRJOIN(STR_ADD(TARGETS,',',/NO_LAST))]
			SUBAREA_CODES = [SUBAREA_CODES,	 STRJOIN(STR_ADD(STRUCT.SUBAREA_CODE[OK],';',/NO_LAST))]

			SUBAREA_GROUP=[SUBAREA_GROUP, 'ES2' ] & TARGETS = ['ES2']
			ok=WHERE_IN(struct.subarea_name,TARGETS)
			SUBAREA_NAMES = [SUBAREA_NAMES,  STRJOIN(STR_ADD(TARGETS,',',/NO_LAST))]
			SUBAREA_CODES = [SUBAREA_CODES,	 STRJOIN(STR_ADD(STRUCT.SUBAREA_CODE[OK],';',/NO_LAST))]

			SUBAREA_GROUP=[SUBAREA_GROUP, 'MAB!CMidshelf' ] & TARGETS = ['D2','D3','N2','N3','L2','L3']
			ok=WHERE_IN(struct.subarea_name,TARGETS)
			SUBAREA_NAMES = [SUBAREA_NAMES,  STRJOIN(STR_ADD(TARGETS,',',/NO_LAST))]
			SUBAREA_CODES = [SUBAREA_CODES,	 STRJOIN(STR_ADD(STRUCT.SUBAREA_CODE[OK],';',/NO_LAST))]

			SUBAREA_GROUP=[SUBAREA_GROUP, 'MAB!COuter' ] & TARGETS = ['MABO']
			ok=WHERE_IN(struct.subarea_name,TARGETS)
			SUBAREA_NAMES = [SUBAREA_NAMES,  STRJOIN(STR_ADD(TARGETS,',',/NO_LAST))]
			SUBAREA_CODES = [SUBAREA_CODES,	 STRJOIN(STR_ADD(STRUCT.SUBAREA_CODE[OK],';',/NO_LAST))]

			SUBAREA_GROUP=[SUBAREA_GROUP, 'MAB SSF' ] & TARGETS = ['MAB SSF']
			ok=WHERE_IN(struct.subarea_name,TARGETS)
			SUBAREA_NAMES = [SUBAREA_NAMES,  STRJOIN(STR_ADD(TARGETS,',',/NO_LAST))]
			SUBAREA_CODES = [SUBAREA_CODES,	 STRJOIN(STR_ADD(STRUCT.SUBAREA_CODE[OK],';',/NO_LAST))]


			SUBAREA_GROUP=[SUBAREA_GROUP, 'SLOPE2' ] & TARGETS = ['SLOPE2']
			ok=WHERE_IN(struct.subarea_name,TARGETS)
			SUBAREA_NAMES = [SUBAREA_NAMES,  STRJOIN(STR_ADD(TARGETS,',',/NO_LAST))]
			SUBAREA_CODES = [SUBAREA_CODES,	 STRJOIN(STR_ADD(STRUCT.SUBAREA_CODE[OK],';',/NO_LAST))]

			SUBAREA_GROUP=[SUBAREA_GROUP, 'SAB!CInner' ] & TARGETS = ['G1','SC1','NC1']
			ok=WHERE_IN(struct.subarea_name,TARGETS)
			SUBAREA_NAMES = [SUBAREA_NAMES,  STRJOIN(STR_ADD(TARGETS,',',/NO_LAST))]
			SUBAREA_CODES = [SUBAREA_CODES,	 STRJOIN(STR_ADD(STRUCT.SUBAREA_CODE[OK],';',/NO_LAST))]

			SUBAREA_GROUP=[SUBAREA_GROUP, 'SAB!COuter' ] & TARGETS = ['G2','SC2','NC2']
			ok=WHERE_IN(struct.subarea_name,TARGETS)
			SUBAREA_NAMES = [SUBAREA_NAMES,  STRJOIN(STR_ADD(TARGETS,',',/NO_LAST))]
			SUBAREA_CODES = [SUBAREA_CODES,	 STRJOIN(STR_ADD(STRUCT.SUBAREA_CODE[OK],';',/NO_LAST))]


			SUBAREA_GROUP=[SUBAREA_GROUP, 'GS!CWest' ] & TARGETS = ['GSWEST']
			ok=WHERE_IN(struct.subarea_name,TARGETS)
			SUBAREA_NAMES = [SUBAREA_NAMES,  STRJOIN(STR_ADD(TARGETS,',',/NO_LAST))]
			SUBAREA_CODES = [SUBAREA_CODES,	 STRJOIN(STR_ADD(STRUCT.SUBAREA_CODE[OK],';',/NO_LAST))]


			SUBAREA_GROUP=[SUBAREA_GROUP, 'Sargasso!CNorth' ] & TARGETS = ['SARGN']
			ok=WHERE_IN(struct.subarea_name,TARGETS)
			SUBAREA_NAMES = [SUBAREA_NAMES,  STRJOIN(STR_ADD(TARGETS,',',/NO_LAST))]
			SUBAREA_CODES = [SUBAREA_CODES,	 STRJOIN(STR_ADD(STRUCT.SUBAREA_CODE[OK],';',/NO_LAST))]


			SUBAREA_GROUP=SUBAREA_GROUP(1:*)
			SUBAREA_NAMES=SUBAREA_NAMES(1:*)
			SUBAREA_CODES=SUBAREA_CODES(1:*)


			IF MAP[0] NE MAP[1] THEN STOP

      file_target_a =PERIOD[0]+aster+SENSOR[0]+aster+METHOD[0]+DASH+aster+MAP[0]+aster+dash+PRODUCTS[0]+dash+aster+STAT_TARGET[0]+'.'+EXT[0]
      file_target_b =PERIOD[1]+aster+SENSOR[1]+aster+METHOD[1]+DASH+aster+MAP[1]+aster+dash+PRODUCTS[1]+dash+aster+STAT_TARGET[1]+'.'+EXT[1]

     	Fi_A=FILELIST(PATH[0]+file_target_A) & Fi_A=PARSE_IT(Fi_A,/ALL)
     	Fi_B=FILELIST(PATH[1]+file_target_B) & Fi_B=PARSE_IT(Fi_B,/ALL)



			IF PRODUCTS[0] EQ 'BATHY' THEN	BEGIN
				file_target_a = 'SRTM30-NENA-PXY_386_130-BATHY.SAVE'
				Fi_A=FILELIST(PATH[0]+file_target_A) & Fi_A=PARSE_IT(Fi_A,/ALL)
				fi_a = REPLICATE(FI_A,12)
				FI_A.PERIOD =  '!MONTH_'+NUM2STR(INDGEN(12)+1,LEADING=2)
				FI_A.PERIOD_CODE =  '!MONTH'
			ENDIF



;			===> Sometimes the target specification is not sufficient (get multiple methods with similar method elements'
			OK=WHERE(FI_A.METHOD EQ METHOD[0]) & Fi_A=Fi_A[OK]
			OK=WHERE(FI_B.METHOD EQ METHOD[1]) & Fi_B=Fi_B[OK]

      IF FI_A[0].FULLNAME  NE ''  AND FI_B[0].FULLNAME NE '' THEN BEGIN

;				*** ENSURE PAIRING BY PERIOD CODE
				SETS = WHERE_SETS(FI_A.PERIOD,FI_B.PERIOD)

				OK = WHERE(SETS.N EQ 2,COUNT)
				IF COUNT EQ 0 THEN STOP
				SETS = SETS[OK]

				ISOTROPIC=1
				LOG_FREQ = 1

				POSITION_COL = [0.01, 0.22, 0.43, 0.64,0.85]
				POSITION_ROW = [1.0, 0.70 ]

				N_PAGES = N_ELEMENTS(SETS)/PAGE_COLUMNS


;				LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
				FOR _PAGE = 0,N_PAGES-1 DO BEGIN
					_SETS=SETS(_PAGE*PAGE_COLUMNS: _PAGE*PAGE_COLUMNS+PAGE_COLUMNS-1)
					SUBS = WHERE_SETS_SUBS(_SETS,GROUPS=GROUPS)

					OK_0 = WHERE(GROUPS EQ 0)
					OK_1 = WHERE(GROUPS EQ 1)
					SUBS_0 = SUBS(OK_0)
					SUBS_1 = SUBS(OK_1)
					FI = [FI_A ,FI_B]
					FULLNAME = [FI_A.FULLNAME,FI_B.FULLNAME]
					BOTH_FILES = FULLNAME
					FILES_X = BOTH_FILES(SUBS_0)
					FILES_Y = BOTH_FILES(SUBS_1)
					FX = FI(SUBS_0)
					FY = FI(SUBS_1)
					LIST,FILES_X
					LIST,FILES_Y

				  NAME_X =  FX.SENSOR+'-'+FX.METHOD+'-'+FX.PROD
				  NAME_Y =  FY.SENSOR+'-'+FY.METHOD+'-'+FY.PROD
				  NAME_X = FIRST(NAME_X)
				  NAME_Y = FIRST(NAME_Y)
				 	MONTHS = MONTH_NAMES(JD_2MONTH(PERIOD_2JD(FX.PERIOD)),/SHORT)


					PS_FILE = DIR_OUT + NAME_X + '-VS-'+ NAME_Y	+'-'+ FIRST(MONTHS)+'_'+LAST(MONTHS)+'.PS'
					PSPRINT,FILENAME=PS_FILE,/FULL,/COLOR
					FONTS,'TIMES'

		 			!X.OMARGIN = [0,0]
					!Y.OMARGIN = [0,0]
					PAL_SW3,R,G,B & 	R(255)=246 & G(255)=246 & B(255)=246 & TVLCT,R,G,B & 	BACKGROUND,/PAGE,COLOR=255 & PAL_SW3




 ;				LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
					FOR NTH = 0,N_ELEMENTS(FILES_X)-1 DO BEGIN
						FILE_X=FILES_X[NTH]
						FILE_Y=FILES_Y[NTH]
						FP_X = FILE_PARSE(FILE_X)
						FP_Y = FILE_PARSE(FILE_Y)

						PERIOD = PERIOD_2STRUCT(FILE_X)
						MONTH  = MONTH_NAMES(PERIOD.MONTH_START)

						DATA_X = STRUCT_SD_READ(file_x,STRUCT=STRUCT_X, SUBS= SUBS_X)
						IMAGE_X = STRUCT_SD_2IMAGE(STRUCT_X,/add_colorbar,/adddate,/add_method,background=254,SPECIAL_SCALE=SPECIAL_SCALE)
						SZ=SIZE(IMAGE_X,/STRUCT) & PX_X=SZ.DIMENSIONS[0] & PY_X=SZ.DIMENSIONS[1]


						DATA_Y = STRUCT_SD_READ(file_Y,STRUCT=STRUCT_Y, SUBS=SUBS_Y)
						IMAGE_Y = STRUCT_SD_2IMAGE(STRUCT_Y,/add_colorbar,/adddate,/add_method,background=254,SPECIAL_SCALE=SPECIAL_SCALE)
						SZ=SIZE(IMAGE_Y,/STRUCT) & PX_Y=SZ.DIMENSIONS[0] & PY_Y=SZ.DIMENSIONS[1]

;						*** PREEMPT POC HIGH SPURIOUS VALUES ***
						IF PRODUCTS[0] EQ 'POC' THEN BEGIN
							OK=WHERE(DATA_X GE 60,COUNT)
							IF COUNT GE 1 THEN DATA_X[OK] = MISSINGS(DATA_X)
							OK=WHERE(DATA_Y GE 60,COUNT)
							IF COUNT GE 1 THEN DATA_Y[OK] = MISSINGS(DATA_Y)
						ENDIF

						IF PRODUCTS[0] NE  'K_PAR' THEN BEGIN
	  					XRANGE= NICE_RANGE( SD_SCALES([0,250],PROD=PRODUCTS[0],/BIN2DATA,STRUCT=X_STRUCT))
	  					YRANGE= NICE_RANGE( SD_SCALES([0,250],PROD=PRODUCTS[1],/BIN2DATA,STRUCT=Y_STRUCT))


							IF PRODUCTS[0] EQ 'PPD' THEN BEGIN
								SPECIAL_SCALE = 'VERY_LOW'
								XRANGE= NICE_RANGE( SD_SCALES([0,250],PROD=PRODUCTS[0],/BIN2DATA,STRUCT=X_STRUCT,SPECIAL_SCALE=SPECIAL_SCALE))
	  					  YRANGE= NICE_RANGE( SD_SCALES([0,250],PROD=PRODUCTS[1],/BIN2DATA,STRUCT=Y_STRUCT,SPECIAL_SCALE=SPECIAL_SCALE))
							ENDIF

							IF X_STRUCT.B_SCALING EQ 'LOGARITHMIC' THEN BEGIN
								 DATA_X = ALOG10(DATA_X) & xtitle='Log ' +xtitle  & xrange = ALOG10(xrange)
						  ENDIF

							IF Y_STRUCT.B_SCALING EQ 'LOGARITHMIC' THEN BEGIN
								 DATA_Y = ALOG10(DATA_Y) & ytitle='Log ' +ytitle  & yrange = ALOG10(yrange)
						  ENDIF

							XTITLE = UNITS(PRODUCTS[0]) + '!C'+ STRUCT_X.SENSOR + ' ' + STRUCT_X.METHOD
							YTITLE = UNITS(PRODUCTS[1]) + '!C'+ STRUCT_Y.SENSOR + ' ' + STRUCT_Y.METHOD
						ENDIF ELSE BEGIN
							XRANGE = [0.0, 0.5]
							YRANGE = XRANGE
							xtitle = ''
							ytitle = ''

							XTITLE = UNITS(PRODUCTS[0]) + '!C'+ STRUCT_X.SENSOR + ' ' + STRUCT_X.METHOD
							YTITLE = UNITS(PRODUCTS[1]) + '!C'+ STRUCT_Y.SENSOR + ' ' + STRUCT_Y.METHOD
						ENDELSE


		 				Y_OFFSET = 0.05
		 				POS_LEFT = POSITION_COL(NTH MOD PAGE_COLUMNS)
		 				POS_RIGHT= POSITION_COL(NTH MOD PAGE_COLUMNS +1)
						POS_TOP  = POSITION_ROW[0]
						POS_BOT  = POSITION_ROW[1]

						OFFSET_X = 0.025
						OFFSET_Y = 0.025

						POSITION=[POS_LEFT+OFFSET_X,POS_BOT+OFFSET_Y,POS_RIGHT-OFFSET_X,POS_TOP-OFFSET_Y]




						STRUCT_SD_HIST2D,FILE_X,FILE_Y,DIR_OUT=DIR_OUT,ACCUMULATE=ACCUMULATE,/OVERWRITE,$
						XMARGIN=[0,0],YMARGIN=[0,0],ISOTROPIC=ISOTROPIC,LOG_FREQ=log_freq ,/NO_CLOSE, position=position,$
						bar_charsize=0.5,xcharsize=0.4,ycharsize=0.4,stats_charsize=0.5,stats_charthick=1,/NOERASE,$
						/MEAN_NONE, REG_THICK = 1,ONE_THICK=1,FRAME_THICK=1,GRID_THICK=1,GRID_COLOR=253,STATS_BACKGROUND=254,XTHICK=1,YTHICK=1,$
						FONT='TIMES',SPECIAL_SCALE=SPECIAL_SCALE

;						===> Month Title
						XYOUTS2,MEAN([POS_LEFT,POS_RIGHT]),!Y.WINDOW[1],MONTH,ALIGN=[0.5,-0.6],CHARSIZE=1.25,/NORMAL

;						===> Page Title
						IF NTH EQ 0 THEN BEGIN
							IF PRODUCTS[0] NE PRODUCTS[1] THEN BEGIN
								PAGE_TITLE = PRODUCTS[0] + ' vs. '+ PRODUCTS[1]
								ALIGN=[0.7,-1.3]
							ENDIF ELSE BEGIN
								PAGE_TITLE = PRODUCTS[0]
								ALIGN=[1.5,-1.3]
							ENDELSE
							XYOUTS2,0.5,!Y.WINDOW[1],PAGE_TITLE,ALIGN=ALIGN,CHARSIZE=2,/NORMAL
						ENDIF

;						===> Update POS_TOP
						POS_TOP  = !Y.WINDOW[0]-offset_y*1.2

	 					XSIZE = (POS_RIGHT-POS_LEFT)-offset_x*.3
	 					YSIZE = FLOAT(XSIZE) * FLOAT(PY_X)/PX_X
	 					POS_BOT = POS_TOP - YSIZE


						TV,IMAGE_x, POS_LEFT+offset_x*0.5, POS_BOT, XSIZE=XSIZE,YSIZE=YSIZE,/NORMAL

					 	POS_TOP = POS_BOT - offset_y*.25
	 					XSIZE = (POS_RIGHT-POS_LEFT)-offset_x*.3
	 					YSIZE = FLOAT(XSIZE) * FLOAT(PY_X)/PX_X
	 				  POS_BOT = POS_TOP - YSIZE
						TV,IMAGE_y, POS_LEFT+offset_x*0.5, POS_BOT, XSIZE=XSIZE,YSIZE=YSIZE,/NORMAL

						IF DO_SUBAREAS NE 1 THEN GOTO, SKIP_SUBAREAS ; >>>>>>>>>>>>>>>>>>>>>>>>>



;						===> DO stats on X variable
						SUBAREA = ''
			  		FILE_NAME = FP_X.FIRST_NAME
						SS = STATS_2CSV(Data_X(subs_X), FILE_NAME=file_name, PERIOD=STRUCT_X.PERIOD,METHOD=STRUCT_X.METHOD,MAP=STRUCT_X.MAP,SUBAREA=subarea, $
				                		LABEL=label,  PROD=PRODUCTS[0], CSV_FILE=csv_file, ERROR = error)

;						===> DO stats on Y variable
						SUBAREA = ''
			  		FILE_NAME = FP_Y.FIRST_NAME
						SS = STATS_2CSV(Data_Y(subs_Y), FILE_NAME=file_name, PERIOD=STRUCT_Y.PERIOD,METHOD=STRUCT_Y.METHOD,MAP=STRUCT_Y.MAP,SUBAREA=subarea, $
				                		LABEL=label,  PROD=PRODUCTS[0], CSV_FILE=csv_file, ERROR = error)




;						****************
;						*** SUBAREAS ***
;						****************
						POS_TOP = POS_BOT-offset_y*0.125

						ROW = 3 & COL = 4
						P = PARTITION(POSITION=[POS_LEFT+offset_x*0.5,0.38,POS_RIGHT,POS_TOP],ROW=ROW,COL=COL,/TOP,XMARGIN=[0.003,0.003],YMARGIN=[0.003,0.003])


;						LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
	 				  FOR _SUBAREA_GROUP = 0,N_ELEMENTS(SUBAREA_GROUP)-1 DO BEGIN
	 				  	COPY = SUBAREAS
	 				  	ASUBAREA_GROUP = SUBAREA_GROUP(_SUBAREA_GROUP)
	 				  	ASUBAREA_NAME=SUBAREA_NAMES(_SUBAREA_GROUP)
	 				  	ASUBAREA_CODE= FIX(STRSPLIT(SUBAREA_CODES(_SUBAREA_GROUP),';',/EXTRACT))
	 				  	OK_SUBAREA=WHERE_IN(SUBAREAS, ASUBAREA_CODE,COUNT_SUBAREA,NCOMPLEMENT=NCOMPLEMENT_SUBAREA,COMPLEMENT=COMPLEMENT_SUBAREA)

	 				  	IF COUNT_SUBAREA GE 1 THEN BEGIN

								X_SUBAREA = DATA_X(OK_SUBAREA)
								Y_SUBAREA = DATA_Y(OK_SUBAREA)
								OK = WHERE(FINITE(X_SUBAREA) AND X_SUBAREA NE MISSINGS(X_SUBAREA) AND FINITE(Y_SUBAREA) AND Y_SUBAREA NE MISSINGS(Y_SUBAREA) )
								X_SUBAREA = X_SUBAREA[OK]
								Y_SUBAREA = Y_SUBAREA[OK]


								IF SHOW_SUBAREA_PLOT EQ 1 THEN BEGIN
								  _P = P(_SUBAREA_GROUP)
								  XSTYLE=1
								  YSTYLE=1
									IF _P.COL NE 0 THEN YSTYLE = 5
									IF _P.ROW NE 2 THEN XSTYLE = 5
									IF NTH MOD PAGE_COLUMNS NE 0 THEN BEGIN
										XSTYLE = 5
										YSTYLE = 5
									ENDIF


;									===> DO stats on X variable
									_ASUBAREA_GROUP = REPLACE(ASUBAREA_GROUP,'!C',' ')
						  		FILE_NAME = FP_X.FIRST_NAME
									SS = STATS_2CSV(X_SUBAREA, FILE_NAME=file_name, PERIOD=STRUCT_X.PERIOD,METHOD=STRUCT_X.METHOD,MAP=STRUCT_X.MAP,SUBAREA=_ASUBAREA_GROUP, $
							                		LABEL=label,  PROD=PRODUCTS[0], CSV_FILE=csv_file, ERROR = error)

;									===> DO stats on Y variable
									SUBAREA = ''
						  		FILE_NAME = FP_Y.FIRST_NAME
									SS = STATS_2CSV(Y_SUBAREA, FILE_NAME=file_name, PERIOD=STRUCT_Y.PERIOD,METHOD=STRUCT_Y.METHOD,MAP=STRUCT_Y.MAP,SUBAREA=_ASUBAREA_GROUP, $
							                		LABEL=label,  PROD=PRODUCTS[0], CSV_FILE=csv_file, ERROR = error)




	 				  	 		PLOTXY,X_SUBAREA,Y_SUBAREA,PSYM=1, POSITION=_P.POSITION,/NOERASE, /STATS_NONE,CHARSIZE=0.30,BACKGROUND = 254,$
	 				  	 			SYMSIZE=0.1,GRID_COLOR=252,GRID_THICK=1,/ONE2ONE,ONE_COLOR = 251,ONE_LINESTYLE=1,THICK=1,SYM_COLOR=225,/REG_NONE,$
	 				  	 			XTITLE = XTITLE, YTITLE=YTITLE,XRANGE=XRANGE,XSTYLE=XSTYLE,YRANGE=YRANGE,YSTYLE=YSTYLE,XMINOR=1,YMINOR=1 ,/GRID_NONE

	 				  	 		FRAME,/PLOT,COLOR=0,THICK=1
	 				  	 		XP = COORD_2PLOT(0.04,0.99) & XYOUTS2,XP.X,XP.Y,ASUBAREA_GROUP,CHARSIZE=0.40, ALIGN=[0.0,1.25]

	 				  	 		IF N_ELEMENTS(ASUBAREA_CODE) GE 2 THEN BEGIN
	 				  	 			XP = COORD_2PLOT(0.99,0.06) & XYOUTS2,XP.X,XP.Y,ASUBAREA_NAME,CHARSIZE=0.25, ALIGN=[1.06,0.5]
	 				  	 		ENDIF
	 				  	 	ENDIF

								IF SHOW_SUBAREA_HIST EQ 1 THEN BEGIN
									COPY_X=STRUCT_X
		 				  		COPY_X.IMAGE(COMPLEMENT) = MISSINGS(COPY_X.IMAGE(COMPLEMENT))
		 				  		JUNK_X = 'JUNK_X.SAVE'
		 				  		SAVE,FILENAME=JUNK_X,COPY_X,/COMPRESS
		 				  		COPY_Y=STRUCT_Y
		 				  		COPY_Y.IMAGE(COMPLEMENT) = MISSINGS(COPY_Y.IMAGE(COMPLEMENT))
		 				  		JUNK_Y = 'JUNK_Y.SAVE'
		 				  		SAVE,FILENAME=JUNK_Y,COPY_Y,/COMPRESS

	  				  	 	STRUCT_SD_HIST2D,JUNK_X,JUNK_Y,DIR_OUT=DIR_OUT,ACCUMULATE=ACCUMULATE, X_DATA=X_DATA,Y_DATA=Y_DATA,/OVERWRITE,$
	 								XMARGIN=[0,0],YMARGIN=[0,0],ISOTROPIC=ISOTROPIC,LOG_FREQ=log_freq ,/NO_CLOSE, POSITION=P(_SUBAREA_GROUP).POSITION,$
	 								bar_charsize=0.4,xcharsize=0.4,ycharsize=0.4,stats_charsize=0.5,stats_charthick=1,/NOERASE,$
	 								/MEAN_NONE, REG_THICK = 1,ONE_THICK=1,FRAME_THICK=1,GRID_THICK=1,GRID_COLOR=253,STATS_BACKGROUND=254,XTHICK=1,YTHICK=1,$
	 								FONT='TIMES',/STATS_NONE,/REG_NONE
	 							ENDIF ; IF SHOW_SUBAREA_HIST EQ 1 THEN BEGIN
	 				  	ENDIF ; 	IF NCOMPLEMENT GE 1 THEN BEGIN
	 				  ENDFOR ; FOR _SUBAREA_GROUP = 0,N_ELEMENTS(SUBAREA_GROUP)-1 DO BEGIN

						SKIP_SUBAREAS:


					ENDFOR
					PSPRINT



		;		image_trim,PS_FILE,dir_out=DIR_OUT,/OVERWRITE,DPI=1200
				ENDFOR ; PAGES

			ENDIF ELSE BEGIN
				PRINT,'FILES_X and FILES_Y need to have same number of elements
			ENDELSE

;			===> Turn off the current switch
			TXT = DO_LIST(_DO)+'=0' & A=EXECUTE(TXT)
			ENDFOR ; DO LIST
    ENDIF ;IF DO_COMPOSITE_STATS_BROWSE_HIST2D_ROMS
;   ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||




; *******************************************************************************
    IF DO_COMPOSITE_ANNUAL_SATELLITE_VS_ROMS_EC_DIAGONAL GE 1 THEN BEGIN
; *******************************************************************************
		ROMS_METHOD='823'

		FILES=''
		DRIVE_IN = 'D:\WORK\'
		FILES=[FILES,FILELIST(DRIVE_IN+'stats\!ANNUAL-'+'N4AT'+'*SST-MEAN.SAVE')]
    FILES=[FILES,FILELIST(DRIVE_IN+'STATS\!ANNUAL-SEAWIFS-REPRO5-EC-CHLOR_A-MEAN.SAVE')]
    FILES=[FILES,FILELIST(DRIVE_IN+'STATS\!ANNUAL-SEAWIFS-REPRO5-EC-POC-MEAN.SAVE')]
    FILES=[FILES,FILELIST(DRIVE_IN+'STATS\!ANNUAL-SEAWIFS-REPRO5-EC-DOC_MANNINO-MEAN.SAVE')]
    FILES=[FILES,FILELIST(DRIVE_IN+'STATS\!ANNUAL-SEAWIFS-REPRO5-EC-A_CDOM_MANNINO-MEAN.SAVE')]
   	FILES=[FILES,FILELIST(DRIVE_IN+'STATS\!ANNUAL-PP-VGPM2A-EC-K_PAR-MEAN.SAVE')]
    FILES=[FILES,FILELIST(DRIVE_IN+'STATS\!ANNUAL-PP-VGPM2A-EC-CHLOR_EUPHOTIC-MEAN.SAVE')]
   	FILES=[FILES,FILELIST(DRIVE_IN+'STATS\!ANNUAL-PP-VGPM2A-EC-PPD-MEAN.SAVE')]
		FILES=FILES(1:*)
		LIST, FILES

 		FN=PARSE_IT(FILES,/ALL)

		OVERWRITE=1
		PRODS=['CHLOR_A','SST','DOC']
		PRODS=[ 'DOC']
		PRODS='DOC'


		FOR _PROD=0,N_ELEMENTS(PRODS)-1 DO BEGIN
			APROD=PRODS(_PROD)
			OK=WHERE_STRING(FN.PROD, APROD,COUNT)
			IF COUNT NE 1 THEN CONTINUE ; >>>>>>>>>>>>>>>>
		  SAT_FILE = FILES[OK]
		  NENA_FILES=FILELIST(!DIR_STATS+'!ANNUAL-ROMS-'+ROMS_METHOD+'_HYCOM-NENA-'+'*'+'-MEAN.SAVE')
		  FN_NENA = PARSE_IT(NENA_FILES,/ALL)
			OK=WHERE_STRING(FN_NENA.PROD, APROD,COUNT)
			IF COUNT NE 1 THEN CONTINUE ; >>>>>>>>>>>>>>>>
			NENA_FILE = NENA_FILES[OK]
	  	FN_NENA = FN_NENA[OK]
		  PRINT, FILE_TEST([SAT_FILE,NENA_FILE])

;			===> Remap nena to EC
			DIR_OUT = 'E:\ROMS-NENA\stats\EC\'
			S=STRUCT_SD_REMAP(FILES=NENA_FILE ,DIR_OUT=DIR_OUT, MAP_OUT='EC', $
			PX_OUT=PX_OUT, PY_OUT=PY_OUT,NULL=NULL,OVERWRITE=OVERWRITE,_EXTRA=_extra)
			NENA_EC = dir_out+REPLACE(FN_NENA.FIRST_NAME,'-NENA','-EC')+'.SAVE'
			PRINT, FILE_TEST(NENA_EC)

			F = [SAT_FILE,NENA_EC]
			LIST, F
			MAP_COMPOSITE, F, COLS=2,ROWS=1 ,SKIP=0, DIR_OUT=dir_out,/ADD_BATHY,BATHS=100,BATHY_COLOR = 251,BATHY_THICK =2,NO_WATER_BLANK=0,OVERWRITE=OVERWRITE

 		ENDFOR

	ENDIF


END
