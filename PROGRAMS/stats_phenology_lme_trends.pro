; $ID:	STATS_PHENOLOGY_LME_TRENDS.PRO,	2020-07-01-12,	USER-KJWH	$
;#############################################################################################################
	PRO STATS_PHENOLOGY_LME_TRENDS,FILE,DIR_OUT = DIR_OUT,PAGE_TITLE=PAGE_TITLE,LABEL=LABEL
	
;  PRO STATS_PHENOLOGY_LME_TRENDS
;+
; NAME:
;		STATS_PHENOLOGY_LME_TRENDS
;
; PURPOSE: THIS PROGRAM  COMPUTES TRENDS IN THE TIMING OF THE MONTH OF MAXIMUM AND MINIMUM FOR THE LMES
;
; CATEGORY:
;		STATISTICS
;		 
;
; CALLING SEQUENCE:STATS_PHENOLOGY_LME_TRENDS
;
; INPUTS: 
; ; FILE:E.G. FILE = 'I:\SMI\CHL_STATS_PERIOD\TAG_Y-CHLOR_A.CSV'
;		
;		
; OPTIONAL INPUTS:
;		NONE:	
;		
; KEYWORD PARAMETERS:
;		DIR_OUT: OUTPUT DIRECTORY
;   DIR_OUT: OUTPUT DIRECTORY
; OUTPUTS:  STRUCT_SD_WRITE,SAVEFILE [MONTH MIN, MONTH MAX]
;		
;; EXAMPLES:
;  STATS_PHENOLOGY_LME_TRENDS
;	NOTES:
;	
; MODIFICATION HISTORY:
;			WRITTEN JULY 20,2013 J.O'REILLY

;#################################################################################
;-
;	*******************************************
ROUTINE_NAME='STATS_PHENOLOGY_LME_TRENDS'
; *******************************************
; XYOUTS FRAME  CV CHARSIZE  ENDFOR SWITCHES  RETURN    ,
; 

IF N_ELEMENTS(FILE) NE 1 THEN MESSAGE,'ERROR:   FILE IS REQUIRED'
FA = FILE_ALL(FILE)
PROD = VALIDS('PRODS',FA.PROD)

DB = CSV_READ(FILE) & PN,DB,'RECORDS'
SETS = WHERE_SETS(DB.LME) & PN,SETS,'N SETS' & IF N_ELEMENTS(SETS) NE 63 THEN STOP


;===> IF OUTPUT DIR_OUTECTORY NOT PROVIDED, WRITE PSFILE TO IDL WORKING DIRECTOTY
IF N_ELEMENTS(DIR_OUT) LT 1 THEN DIR_OUT = GET_DIR() 
IF N_ELEMENTS(LABEL)NE 1 THEN LABEL = ROUTINE_NAME  

TAGS  = ['JD_MIN','JD_MAX']

;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FOR _TAGS = 0,N_ELEMENTS(TAGS)-1 DO BEGIN 
  ATAG = TAGS(_TAGS)
  CSVFILE = DIR_OUT+LABEL+'-'+ ATAG + '.CSV'
  
  
  ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
  FOR _SET = 0,N_ELEMENTS(SETS)-1 DO BEGIN
    SET = SETS(_SET)
    LME = SET.VALUE & PFILE,LME,/U ;& WAIT,1
    ANAME = LME
    SUBS = WHERE_SETS_SUBS(SET) & PN,SUBS,' YEARS'
    D = DB(SUBS)
    OK_TAG = WHERE(TAG_NAMES(D) EQ ATAG,COUNT_TAG)
    X = JD_2DYEAR(FLOAT(D.JD))
    MONTHS = FLOAT(JD_2MONTH(FLOAT(D.(OK_TAG))))
    MONTH_AVG = MEAN(MONTHS)
    MONTH_ANOM = MONTHS-MONTH_AVG
    Y = MONTH_ANOM
;=====>  REGRESS JD_MONTH VS JD
    S=STATS2(X,Y,MODEL = 'LSY')   
    SS=STRUCT_COPY(S,TAGNAMES = ['MODEL','N','INT','SLOPE','R','RSQ','SLOPE_PROB'])
    _CSV = CREATE_STRUCT('LME',D[0].LME)
    _CSV = STRUCT_MERGE(_CSV,SS)
    IF N_ELEMENTS(CSV) EQ 0 THEN CSV = _CSV ELSE CSV = [CSV,_CSV]
  ENDFOR;FOR _SET = 0,N_ELEMENTS(SETS)-1 DO BEGIN
  ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
  STRUCT_2CSV,CSVFILE,CSV & PFILE,CSVFILE,/W
ENDFOR;FOR _TAGS = 0,N_ELEMENTS(TAGS)-1 DO BEGIN 
;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF



DONE:          
	END; #####################  END OF ROUTINE ################################
