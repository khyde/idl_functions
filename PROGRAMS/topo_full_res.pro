; $ID:	TOPO_FULL_RES.PRO,	2021-03-15-16,	USER-KJWH	$
;+
;;#############################################################################################################
	PRO TOPO_FULL_RES
;
; PURPOSE: THIS PROGRAM FILLS & STORES A FULL RESOLUTION[43,200 X 21,600] TOPO ARRAY IN COMMON MEMORY
; 
; 
; INPUTS: 
;      NONE: 
;		
;		
; KEYWORD PARAMETERS:
;      NONE
;   
 

;  OUTPUT: A SIGNED,[43,200 X 21,600] INTEGER ARRAY WITH LAND > 0 AND WATER < 0 IN COMMON MEMORY

;
; MODIFICATION HISTORY:
;			DEC 28,2015 - WRITTEN BY J.O'REILLY
;     DEC 29,2015 - JEOR: ENLARGE TILES_SMI 10X [WITH REBIN NOT CONGRID TO AVOID ANY INTERPOLATION]

;#################################################################################
;-
;******************************
ROUTINE_NAME  = 'TOPO_FULL_RES'
;******************************
;===> STORE SHM_ARRAY IN COMMON MEMORY
COMMON SHM, SHM_ARRAY
MAPP = 'SMI'
MS = MAPS_SIZE(MAPP)

PX = MS.PX*10
PY = MS.PY*10

;===> CONSTRUCT A NAME FOR THE SH_MEM_FILE
DIR = !S.IDL_TOPO  +  'MEM' +PATH_SEP()  & DIR_TEST, DIR
SHM_FILE = DIR + 'TOPO-' +'PXY_'+ ROUNDS(PX) + '_'+ ROUNDS(PY) + '-SH_MEM.INT'

LONLATS_FILE = !S.MASTER + "SRTM30PLUS-LONLATS.CSV"
DB = CSV_READ(LONLATS_FILE)
DB = STRUCT_2NUM(DB)

TILEMAP_FILE = !S.MASTER + 'SRTM30_TILES.PNG'
TILES_SMI = READ_PNG(TILEMAP_FILE,R,G,B)

;###################################################################
;===> OPEN, WRITE AND THEN MEMORY-MAP THE TOPO ARRAY TO THE SHM_FILE
IF FILE_TEST(SHM_FILE) EQ 0 THEN BEGIN
PFILE,SHM_FILE,/M

OPENW, TOPO_LUN, SHM_FILE, /GET_LUN
WRITEU, TOPO_LUN, INTARR([PX,PY])
FREE_LUN, TOPO_LUN
ENDIF;IF FILE_TEST(SHM_FILE) EQ 0 THEN BEGIN
;|||||||||||||||||||||||||||||||||||||||||||


SHMMAP ,'SHM_ARRAY',/INTEGER,DIMENSION= [PX,PY],FILENAME=SHM_FILE
SHM_ARRAY = SHMVAR('SHM_ARRAY')
;|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
;
;===> ENLARGE TILES_SMI 10X [WITH REBIN NOT CONGRID TO AVOID ANY INTERPOLATION]
TILE_MAP = REBIN(TILES_SMI,PX,PY,/SAMPLE)

;===> FIND WHICH TILES THIS MAP COVERS
H = HISTOGRAM(TILE_MAP)                                     
OK_TILES = WHERE(H GT 0,COUNT_TILES) &  IF COUNT_TILES NE 33 THEN STOP


OK_DB = WHERE_IN(DB.COLOR,OK_TILES)
TILES = DB(OK_DB).TILE 
DIR = !S.IDL_TOPO +'DATA' + PATH_SEP()
FILES = DIR + TILES + '.nc'


;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF  
FOR NTH = 0,N_ELEMENTS(FILES)-1 DO BEGIN
  FILE = FILES[NTH]
  PFILE,FILE,/R
  TILE = TILES[NTH]
  OK = WHERE(DB.TILE EQ TILE,COUNT)
  TILE_NUM = DB[OK].COLOR
  FN = FILE_PARSE(FILE)
  SD = READ_NC(FILE,PRODS='SD')
  ITOPO  = SD.SD.Z.IMAGE 
  ;===> GET SUBS FROM ENLARGED TILE_MAP & PLACE TOPO INTO SHM_ARRAY
  SUBS = WHERE(TILE_MAP EQ TILE_NUM,COUNT)
  SHM_ARRAY(SUBS) = ITOPO 
ENDFOR ; FOR NTH = 0,N_ELEMENTS(FILES)-1 DO BEGIN
;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF

;===> RENAME SHM_FILE TO INDICATE THAT IT HAS BEEN MODIFIED BY THIS PROGRAM
FULL = REPLACE(SHM_FILE,'-SH_MEM','-SH_MEM_FULL')
FILE_MOVE,SHM_FILE,FULL,/VERBOSE

DONE:          
END; #####################  END OF ROUTINE ################################
