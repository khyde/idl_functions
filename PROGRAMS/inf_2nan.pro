; $ID:	INF_2NAN.PRO,	2020-06-26-15,	USER-KJWH	$
;###########################################################################################       
FUNCTION INF_2NAN, DATA, MISSING=MISSING
;+
; NAME:
;       INF_2NAN
;
; PURPOSE: CONVERT INFINITY TO NAN (INFINITY FOR FLOAT AND DOUBLE)

;
; EXAMPLES::
;       PRINT, INF_2NAN([0.0,!VALUES.F_INFINITY]) 
;			  S= REPLICATE(CREATE_STRUCT('DAT',0.0D),3) & S(0:1).DAT = !VALUES.F_INFINITY & SPREAD, INF_2NAN(S)
;

; MODIFICATION HISTORY:
;       WRITTEN BY:  J.E.O'REILLY, MARCH 15,2000
;       MAR 18,2015,JOR COPIED AND RENAMED FROM INFINITY_2NAN,  FORMATTING
;###########################################################################################       
;-
;***********************
ROUTINE_NAME='INF_2NAN'
;***********************

COPY = DATA  ; DO NOT CHANGE INPUT DATA
TYPE = IDLTYPE(COPY,/CODE)
;===> STRUCTURE ?
IF TYPE EQ 8 THEN BEGIN
  NTAGS = N_TAGS(COPY)
  ;FFFFFFFFFFFFFFFFFFFFFFFFFFFF
  FOR N = 0L, NTAGS-1L DO BEGIN
  	_DATA = COPY.(N)
    TYPE = IDLTYPE(_DATA,/CODE)
    IF TYPE EQ 4 OR TYPE EQ 5 THEN BEGIN
    	OK = WHERE(FINITE(_DATA) NE 1,COUNT)
    	IF COUNT GE 1 THEN COPY.(N) = INF_2NAN(_DATA)
    ENDIF;IF TYPE EQ 4 OR TYPE EQ 5 THEN BEGIN
  ENDFOR;FOR N = 0L, NTAGS-1L DO BEGIN
  ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
ENDIF ELSE BEGIN
  IF TYPE EQ 4 OR TYPE EQ 5 THEN BEGIN
     OK = WHERE(FINITE(COPY) NE 1,COUNT)
     IF COUNT GE 1 THEN BEGIN
       IF TYPE EQ 4 THEN COPY[OK]  = !VALUES.F_NAN
       IF TYPE EQ 5 THEN COPY[OK]  = !VALUES.D_NAN
     ENDIF; IF COUNT GE 1 THEN BEGIN
  ENDIF;IF TYPE EQ 4 OR TYPE EQ 5 THEN BEGIN
ENDELSE;IF TYPE EQ 8 THEN BEGIN

 RETURN, COPY
END; #####################  END OF ROUTINE ################################

