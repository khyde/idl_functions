; $ID:	COLOR_CIRCLE.PRO,	2020-07-08-15,	USER-KJWH	$

	PRO COLOR_CIRCLE, LABELS, $
										DEG=DEG, TITLE=TITLE, POSITION=POSITION, N_CIRCLE=N_CIRCLE, $
										CHARSIZE=CHARSIZE, CHARTHICK=CHARTHICK, COLOR=COLOR, $
										LOW_COLOR=LOW_COLOR, HIGH_COLOR=HIGH_COLOR, $
										REVERSE_COLOR=REVERSE_COLOR, SHIFT_COLOR=SHIFT_COLOR,$
										HORIZONTAL=HORIZONTAL,RADIAL=RADIAL,ORIENT=ORIENT, $
										TRUE_DEGREE = TRUE_DEGREE,$
										_EXTRA=_EXTRA, ERROR = ERROR

;+
; NAME:
;		COLOR_CIRCLE
;
; PURPOSE:
;		THIS PROCEDURE DRAWS A CIRCULAR COLOR SCALE WITH LABELS AT DEGREES CLOCKWISE FROM NORTH 
;		(AZIMUTH)
;
; CATEGORY:
;		PLOT
;
; CALLING SEQUENCE:
;
;		COLOR_CIRCLE, LABELS
;
;	INPUTS:
;		LABELS....	STRING ARRAY OF LABELS TO PLACE ALONG THE PERIMETER OF THE CIRCLE
;	KEYWORD PARAMETERS:
;		COLOR..... COLOR FOR THE LABELS AND TICKMARKS (DEFAULT = 0)
;		DEG....... DEGREE LOCATIONS FOR THE LABELS (IF PROVIDED N_ELEMENTS(DEG) MUST MATCH N_ELEMENTS(LABELS).
;		TITLE..... TITLE FOR THE COLOR CIRCLE
;		POSITION.. (SEE IDL HELP: ALLOWS DIRECT SPECIFICATION OF THE PLOT WINDOW.
;							 POSITION IS A 4-ELEMENT VECTOR GIVING, IN ORDER, THE COORDINATES [(X0, Y0), (X1, Y1)], OF THE LOWER LEFT AND UPPER RIGHT CORNERS OF THE DATA WINDOW.
;		N_CIRCLE.. NUMBER OF POINTS TO USE TO DEFINE THE UNIT CIRCLE (DEFAULT = 360)
;		CHARSIZE.. CHARACTER SIZE FOR THE LABELS (DEFAULT=3)
;		CHARTHICK. CHARACTER THICKNESS FOR THE LABELS (DEFAULT = 3)
;		COLOR..... COLOR INDEX FOR THE LABELS AND TICKS
;		LOW_COLOR. LOWEST COLOR INDEX TO USE FOR THE COLOR CIRCLE (DEFAULT = 1); NORMALLY 0, AND 251-255 ARE RESERVED FOR ANNOTATIONS, ETC.
;		HIGH_COLOR. HIGHEST COLOR INDEX TO USE FOR THE COLOR CIRCLE (DEFAULT = 250)
;		REVERSE_COLOR. REVERSE (0:255) COLORINDICES
;		SHIFT_COLOR.. SHIFT COLORS BY NUMBER FROM 2 TO 255
;		HORIZONTAL...... MAKE ALL LABELS HORIZONTAL AND EASILY READABLE
;		ORIENT.... MAKE ALL LABELS RADIALLY BUT UPRIGHT
;		RADIAL.... ORIENT THE LABLES ACCORDING TO THE DEGREES AROUND THE CIRCLE (NOT EASY TO READ)
;		TRUE_DEGREE . DEGREES ARE IN TRUE DEGREES (0 DEGREES = EAST AND PROCEED COUNTER CLOCKWISE)
;		_EXTRA.... ANY NON-DEFINED KEYWORDS PROVIDED ARE PASSED TO THE XYOUTS PROCEDURE.
;		ERROR..... IF ERRORS ARE ENCOUNTERED THE ERROR MESSAGE IS PLACED INTO THE ERROR KEYWORD, OTHERWISE ERROR=''
;
; OUTPUTS:
;		THIS PROCEDURE DRAWS A COLOR CIRCLE ONTO THE GRAPHICS DEVICE
;
; RESTRICTIONS:
;		THIS ROUTINE WILL NOT WORK IF !P.MULTI IS OTHER THAN 0
;
; EXAMPLE:
;		SEE: COLOR_CIRCLE_DEMO
;
;		CLOCK NUMBERS:
; 	COLOR_CIRCLE,LABELS= REVERSE(SHIFT( STRTRIM(INDGEN(12)+1,2), 9)), CHARSIZE=4,/HORIZONTAL
;
;	NOTES:
;
;
; MODIFICATION HISTORY:
;			WRITTEN JAN 15, 2006  BY J.O'REILLY, 28 TARZWELL DRIVE, NMFS, NOAA 02882 (JAY.O'REILLY@NOAA.GOV)
;			JUN 30,2016,JOR FONT_HELVETICA
;-
;******************************
ROUTINE_NAME = 'COLOR_CIRCLE'
;******************************	
	FONT_HELVETICA

;	===> SAVE PLOT AND AXIS SYSTEM VARIABLES FROM PREVIOUS PLOT
 	PSAVE = !P
 	XSAVE = !X
	YSAVE = !Y
	ZSAVE = !Z


;	************************************************
;	*** CHECK ON KEYWORD INPUTS AND SET DEFAULTS ***
;	************************************************
;	===> CONSTANTS
	RADIUS 	= 1.0
;
	N_CIRCLE = 360 ; CIRCLE RESOLUTION
	TICKLEN = -0.03

;	===> AZIMUTHAL DEGREES IS THE DEFAULT
 	IF KEYWORD_SET(TRUE_DEGREE) THEN BEGIN
 	 	RANGE_ORIENT = [90.5, 269.5]
 	ENDIF ELSE BEGIN
 	 	RANGE_ORIENT = [-269, -90.5]
 	ENDELSE

;	===> RESOLUTION OF CIRCLE
	IF N_ELEMENTS(N_CIRCLE) NE 1 THEN _N_CIRCLE = 360 ELSE _N_CIRCLE = N_CIRCLE

;	===> DEFAULT LABELING IS HORIZONTAL
	IF NOT KEYWORD_SET(ORIENT) AND NOT KEYWORD_SET(RADIAL) AND NOT KEYWORD_SET(HORIZONTAL) THEN HORIZONTAL  = 1
;	===> ORIENT IS PREFERRED OVER RADIAL
	IF KEYWORD_SET(ORIENT) AND KEYWORD_SET(RADIAL) THEN RADIAL = 0

;	===> DEFAULT POSITION (ALLOWS SOME ROOM FOR LABELS)
	IF N_ELEMENTS(POSITION) NE 4 THEN _POSITION = [0.15,0.15,0.85,0.85] ELSE _POSITION = POSITION

;	===> SIZE AND THICKNESS OF CHARACTER LABELS AROUND THE PERIMETER
	IF N_ELEMENTS(CHARSIZE) NE 1 THEN _CHARSIZE=3 ELSE _CHARSIZE=CHARSIZE
	IF N_ELEMENTS(CHARTHICK) NE 1 THEN _CHARTHICK=3 ELSE _CHARTHICK=CHARTHICK

;	===> NORMALLY OUR STANDARD NARR PALETTES RESERVE 0 AND 251-255 FOR ANNOTATIONS
	IF N_ELEMENTS(LOW_COLOR) NE 1 THEN _LOW_COLOR = 1 	ELSE _LOW_COLOR = LOW_COLOR
	IF N_ELEMENTS(HIGH_COLOR) NE 1 THEN _HIGH_COLOR = 250 ELSE _HIGH_COLOR = HIGH_COLOR

;	===> COLOR AND THICKNESS OF TICKS AROUND PERMITER AND COLOR OF LABELS
	IF N_ELEMENTS(COLOR) 		NE 1 THEN _COLOR=0 		ELSE _COLOR=COLOR
	IF N_ELEMENTS(THICK) 		NE 1 THEN _THICK=3 		ELSE _THICK=THICK

;	===> TITLE POSITION
	IF N_ELEMENTS(POS_TITLE) NE 2 THEN _POS_TITLE = [0.0,1.21] ELSE _POS_TITLE = POS_TITLE

;	******************************
;	*** DEFINE THE UNIT CIRCLE ***
;	******************************
	RAD = FINDGEN(N_CIRCLE+1) * (!PI*2/N_CIRCLE)
	XCIRCLE= SIN(RAD)
	YCIRCLE= COS(RAD)

;	===> GET COLOR INDICES FOR EACH ARC BY INTERPOLATION
	COLORS = INTERPOL([_LOW_COLOR,_HIGH_COLOR],_N_CIRCLE)

	IF KEYWORD_SET(REVERSE_COLOR) THEN COLORS = REVERSE(COLORS)
 	IF N_ELEMENTS(SHIFT_COLOR) EQ 1 THEN COLORS=SHIFT(COLORS,SHIFT_COLOR)


ERASE,255
;	===> PLOT ATOP (/NOERASE) PREVIOUS PLOT BUT WITHOUT AXES AND USE ISOTROPIC KEYWORD TO ENSURE ASPECT RATIO OF CIRCLE IS 1:1
  PLOT,[-1,1],[-1,1],/DATA,XSTYLE=5,YSTYLE=5,/ISOTROPIC ,/NODATA,/NOERASE, POSITION=_POSITION


;	******************************************************************
;	*** OBTAIN CHARACTER WIDTH AND HEIGHT FOR THIS PLOTTING DEVICE ***
;	******************************************************************
	_CHARSZ = _CHARSIZE*(!X.WINDOW[1]-!X.WINDOW[0])
	CHAR_X_NORMAL = _CHARSZ*(!D.X_CH_SIZE/FLOAT(!D.X_SIZE))
	CHAR_Y_NORMAL = _CHARSZ*(!D.Y_CH_SIZE/FLOAT(!D.Y_SIZE))
	TICKNAME_OFFSET = (1.02 + _CHARSZ*0.02/4.0) * ( 1  >  (1-TICKLEN*1) )

;	*************************************
;	*** DRAW EACH ARC USING POLYFILL  ***
;	*************************************
	FOR NTH = 0L,N_CIRCLE-1L DO BEGIN
	  X =    ( [0, XCIRCLE[NTH],XCIRCLE(NTH+1),0])
		Y =    ( [0, YCIRCLE[NTH],YCIRCLE(NTH+1),0])
		POLYFILL,X,Y,COLOR=  (COLORS[NTH]),/DATA
	ENDFOR

;	********************************************************
;	*** ADD TICKS AND LABELS ALONG THE CIRCLE PERIMITER  ***
;	********************************************************
	IF N_ELEMENTS(LABELS) GE 1 THEN IF LABELS[0] NE '' THEN BEGIN

		MAX_WIDTH = 0.0
;		===> IF DEG NOT PROVIDED THEN ASSUME EQUIDISTANT LABELING AROUND THE PERIMITER OF THE CIRCLE
;				 (WHERE DEGREES ARE AZIMUTH (AZIMUTH (NORTH = 0 DEGREES; PROGRESSING CLOCKWISE)
		IF N_ELEMENTS(DEG) NE N_ELEMENTS(LABELS) THEN BEGIN
			IF KEYWORD_SET(TRUE_DEGREE) THEN BEGIN
			 	DEG = (DINDGEN(N_ELEMENTS(LABELS))*360./DOUBLE(N_ELEMENTS(LABELS)))
			ENDIF ELSE BEGIN
				DEG = 90.0 - (DINDGEN(N_ELEMENTS(LABELS))*360./DOUBLE(N_ELEMENTS(LABELS)))
			ENDELSE
		ENDIF

;		===> CONVERT DEGREES TO RADIANS
		RTICKV = DEG * (1/!RADEG)

;		LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
		FOR NTH = 0,N_ELEMENTS(RTICKV)-1 DO BEGIN
;			===>. PLOT THE MAJOR RTICKV VALUES PERPENDICULAR TO THE RAXIS
 			OPLOT,/POLAR,[RADIUS, RADIUS-TICKLEN*RADIUS],[(RTICKV[NTH]),(RTICKV[NTH])],COLOR=_COLOR,THICK=_THICK,/NOCLIP
			TXT = STRTRIM(LABELS[NTH],2)

;			===> HORIZONTAL: DEFAULT IS HORIZONTAL AND READABLE LABELS
			IF KEYWORD_SET(HORIZONTAL) THEN BEGIN
	 			ORIENTATION=0
	 			RAD=RTICKV[NTH] ; - OFFSET/2
	 			XY = CV_COORD(FROM_POLAR=[RAD ,TICKNAME_OFFSET],/TO_RECT)
				ALIGN_X =  (1 - COS(RAD)) * 0.5
				ALIGN_Y =  (1 - SIN(RAD)) * 0.5
			ENDIF

;			===> ORIENT: LABELS ORIENTED WITH THE DEGREE TICKS BUT READABLE
			IF KEYWORD_SET(ORIENT) THEN BEGIN
 				ORIENTATION = ((RTICKV[NTH])*!RADEG)
				IF DEG[NTH] GT RANGE_ORIENT[0] AND DEG[NTH] LT RANGE_ORIENT[1] THEN BEGIN
				  OFFSET = CV_COORD(FROM_RECT=[TICKNAME_OFFSET, CHAR_X_NORMAL*TICKNAME_OFFSET/(!X.WINDOW[1]-!X.WINDOW[0])],/TO_POLAR)
					ORIENTATION =  ORIENTATION   - 180
					RAD = RTICKV[NTH] + OFFSET[0]  ; HALF A CHARACTER
					ALIGN_X = 1
					ALIGN_Y = 0.0
				ENDIF ELSE BEGIN
				  OFFSET = CV_COORD(FROM_RECT=[TICKNAME_OFFSET, CHAR_X_NORMAL*TICKNAME_OFFSET/(!X.WINDOW[1]-!X.WINDOW[0])],/TO_POLAR)
					RAD = RTICKV[NTH] - OFFSET[0]
					ALIGN_X = 0
					ALIGN_Y = 0.0
				ENDELSE
				XY = CV_COORD(FROM_POLAR=[RAD ,TICKNAME_OFFSET],/TO_RECT)
			ENDIF

;			===> RADIAL: LABELS ORIENTED WITH THE DEGREE TICKS
			IF KEYWORD_SET(RADIAL) THEN BEGIN
;				===> COMPUTE OFFSET NEEDED TO ALIGN AND CENTER THE RTICKNAME WITH THE RAXIS TICK
  			OFFSET = CV_COORD(FROM_RECT=[TICKNAME_OFFSET, CHAR_X_NORMAL*TICKNAME_OFFSET/(!X.WINDOW[1]-!X.WINDOW[0])],/TO_POLAR)
;				===> CONVERT THE POLAR X,Y RTICKV COORDINATES TO RECTANGULAR COORDINATES [RADIAL IN RADIANS, RADIUS]
	 			RAD = RTICKV[NTH] - OFFSET[0]
	 			XY = CV_COORD(FROM_POLAR=[RAD ,TICKNAME_OFFSET],/TO_RECT)
				ORIENTATION = ((RTICKV[NTH])*!RADEG)
				ALIGN_X = 0
				ALIGN_Y = 0
			ENDIF

;			===> PLOT THE TXT LABEL ASIDE THE TICKMARK
	 		XYOUTS2, XY[0],XY[1],TXT,/NOCLIP, ORIENTATION=ORIENTATION, COLOR=_COLOR, $
	 						 CHARSIZE=_CHARSZ, CHARTHICK =_CHARTHICK,ALIGN=[ALIGN_X,ALIGN_Y],WIDTH=WIDTH, _EXTRA=_EXTRA


			;MAX_WIDTH = MAX_WIDTH > WIDTH

  	ENDFOR ; FOR NTH = 0,N_ELEMENTS(RTICKV)-1 DO BEGIN
;		||||||
	ENDIF





;	*****************************
;	*** ADD TITLE IF PROVIDED ***
;	*****************************
	IF N_ELEMENTS(TITLE) GE 1 THEN BEGIN
 		XYOUTS,_POS_TITLE[0],_POS_TITLE[1],TITLE,/DATA, ALIGN=0.5
	ENDIF

;	===> RESTORE THE OLD PLOT AND AXES SYSTEM VARIABLES
  !P=	PSAVE
 	!X= XSAVE
	!Y= YSAVE
	!Z= ZSAVE


	END; #####################  END OF ROUTINE ################################
