; $ID:	STRUCT_ROUNDS.PRO,	2020-06-26-15,	USER-KJWH	$
;#######################################################################################################
	FUNCTION STRUCT_ROUNDS, STRUCT, DECIMAL_PLACES,DOWN=DOWN,SIG=SIG
;+
; THIS FUNCTION CONVERTS ROUNDS TAGS IN A SIMPLE SPREADSHEET STRUCTURE TO THE SPECIFIED NUMBER OF DECIMALS
; SYNTAX:
;   RESULT = STRUCT_ROUNDS(STRUCT)
;   RESULT = STRUCT_ROUNDS(STRUCT,DECIMALS = 3)
; ARGUMENTS:
;   STRUCT: IDL STRUCTURE (SIMPLE SPREADSHEET TYPE STRUCTURE)
; KEYWORDS:
;   DECIMALS: THE NUMBER OF DECIMALS TO ROUND TO

; EXAMPLES:
;		
;		D=STRUCT_ROUNDS(CREATE_STRUCT('A', 1.23456789))& HELP,D
;		D=STRUCT_ROUNDS(CREATE_STRUCT('A', 1.23456789D,'B','1.234567'),DECIMALS = 5)& HELP,D
;   D=STRUCT_ROUNDS(CREATE_STRUCT('A', 1.23456789D,'B','1.234567','C',1234),DECIMALS = 2)& HELP,D
;
; NOTES:
;
;
; HISTORY:
;   JUL 5,2013 WRITTEN BY: J.E. O'REILLY, NOAA, 28 TARZWELL DRIVE, NARRAGANSETT, RI 02882
;   MAY 23,2014,JOR, ADDED KEYWORDS:  DECIMAL_PLACES,DOWN=DOWN,SIG=SIG
;		
;#######################################################################################################
;
;-
; *****************************
ROUTINE_NAME  = 'STRUCT_ROUNDS'
;******************************
  SZ=SIZE(STRUCT,/STRUCT)
  TYPE = SZ.TYPE

;	===> STRUCT MUST BE A STRUCTURE
  IF TYPE NE 8 THEN BEGIN
    ERROR = 'ERROR: STRUCT MUST BE A SIMPLE SPREADSHEET-TYPE IDL STRUCTURE'
    RETURN, ERROR
  ENDIF
IF N_ELEMENTS(DECIMAL_PLACES) NE 1 THEN DECIMAL_PLACES = 3

  NTAGS = N_TAGS(STRUCT)

  TAGNAMES = TAG_NAMES(STRUCT)
	NUM = N_ELEMENTS(STRUCT)
	INDX = LINDGEN(NUM)
  
  

;	******************************************************
; CREATE A NEW STRUCTURE WITH TAG NAMES SAME AS ORIGINAL
; BUT CHANGE THE DATA TYPE TO NUMERIC IF POSSIBLE
  ;FFFFFFFFFFFFFFFFFFFFFFFFFFFF
  FOR N = 0L, NTAGS-1L DO BEGIN
  	TYPE = IDLTYPE(STRUCT.(N),/CODE)
;STOP
P
    IF TYPE LE 2 OR TYPE GE 8 THEN TEMPLATE = STRUCT.(N) ELSE TEMPLATE = ''
;		===> MAKE THE NEW STRUCTURE
    IF N EQ 0 THEN BEGIN
      _STRUCT  = CREATE_STRUCT(TAGNAMES(N),TEMPLATE)
    ENDIF  ELSE BEGIN
      S=CREATE_STRUCT(TAGNAMES(N),TEMPLATE)
      _STRUCT = CREATE_STRUCT(_STRUCT,S)
    ENDELSE;IF N EQ 0 THEN BEGIN		
  ENDFOR;FOR N = 0L, NTAGS-1L DO BEGIN
  ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF

  _STRUCT=REPLICATE(_STRUCT,NUM)


;FFFFFFFFFFFFFFFFFFFFFFFFFFFF
FOR N = 0L, NTAGS-1L DO BEGIN	
  IF TOTAL(NUMBER(STRUCT.(N))) NE 0   THEN BEGIN    
    _STRUCT.(N) = ROUNDS(STRUCT.(N),DECIMAL_PLACES,DOWN=DOWN,SIG=SIG)
  ENDIF ELSE BEGIN
    _STRUCT.(N) = STRUCT.(N)    
  ENDELSE;  IF TOTAL(NUMBER(STRUCT.(N))) NE 0   THEN BEGIN  
	OK=WHERE(STRTRIM(STRUCT.(N),2) EQ '',COUNT)
	IF COUNT GE 1 THEN _STRUCT[OK].(N) = MISSINGS(_STRUCT[OK].(N))
ENDFOR;FOR N = 0L, NTAGS-1L DO BEGIN
;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF

RETURN,_STRUCT


END; #####################  END OF ROUTINE ################################
