; $ID:	EMAX_MAIN.PRO,	2020-07-08-15,	USER-KJWH	$

;	This Program is a MAIN for EMAX
;
; History:
;	JAN 23, 2004	Written by:	J.E. O'Reilly

;-
; *************************************************************************
PRO EMAX_MAIN
  ROUTINE_NAME='EMAX_MAIN'

; *** Computer & Operating System & Date & Default Graphics Window ***
  computer=GET_COMPUTER()  & os = STRUPCASE(!VERSION.OS) & DATE=DATE_NOW()
  IF os EQ 'WIN32' THEN SET_PLOT,'WIN'

; *** Constants ***
	SLASH=DELIMITER(/SLASH) & SP=DELIMITER(/SPACE) & UL=DELIMITER(/UL) & DASH=DELIMITER(/DASH) & ASTER=DELIMITER(/ASTER)

; TYPICAL FILE NAME:    2002214h09dd-gdm.hdf.Z
; *** Data Set & File Parameters ***

	SATELLITE = ''
  SENSOR 		= ''
	METHOD    = 'EMAX'
	MAP    		= 'NEC'

; *** Main Disk ***
  IF computer EQ 'LOLIGO' 	THEN DISK = 'D:'
  IF computer EQ 'LAPSANG' 	THEN DISK = 'D:'
  DIR_SUFFIX = ''

; *** Main Path ***
  path = DISK + SLASH+ 'PROJECTS\EMAX'  + SLASH ;;;

; *** Program Directories ***
	DIR_PROGRAMS       	= 'D:\IDL\PROGRAMS\'
	DIR_DATA					 	= 'D:\IDL\DATA\'
	DIR_INVENTORY			 	= 'D:\IDL\INVENTORY\'
	DIR_IMAGES				 	= 'D:\IDL\IMAGES\'
  DIR_GZIP 						= 'C:\GZIP\'
  DIR_landmask 				= 'D:\IDL\IMAGES\'
  DISK_CD 						=	'Z:'

; *** Program Files ***
;  land_mask_file  						= DIR_landmask+'MASK_NEC.png'

; *** Data Directories ***



  DIR_SAVE 				= path+'SAVE'					+	DIR_SUFFIX+SLASH
  DIR_DOC					= path+'DOC'					+	DIR_SUFFIX+SLASH
  DIR_DATA 				= path+'DATA'					+	DIR_SUFFIX+SLASH

  DIR_PLOTS 			= path+'plots'				+ DIR_SUFFIX+SLASH
  DIR_ALL = [DIR_DATA,DIR_SAVE,DIR_PLOTS]
	DIR_INVENTORY   = 'D:\IDL\INVENTORY\'
; *** FTP Parameters ***
  FTP_SITE = 'podaac.jpl.nasa.gov'

  FTP_ACCOUNT = 'anonymous'
  FTP_PASSWORD = "Jay.O'Reilly@noaa.gov"
  IF SATELLITE EQ 'AQU' THEN $
  											FTP_REMOTE_FOLDER='/pub/sea_surface_temperature/modis/data/aqua/L3_mapped/sst/daily/04km/'
 	IF SATELLITE EQ 'TER' THEN $
  											FTP_REMOTE_FOLDER='/pub/sea_surface_temperature/modis/data/terra/L3_mapped/sst/daily/04km/'
  INVENTORY= DIR_INVENTORY+'INVENTORY_MODIS_JPL_SST.CSV'
  FTP_N_FILES= 2
  MIN_SIZE = 1 ; BYTES MIN for file to be added to inventory
  size_avhrCONSUMEDile = 3650808L

; *** AT Parameters ***
	AT_PERIOD='DAILY'
  AT_TIME = INDGEN(24)
  AT_TIME = [6,20]
  AT_TIME = NUM2STR(INDGEN(24))+':17'
  OVERWRITE_AT 	= 1
  KILL_AT    		= 0

; *** Colors ***
 	BACKGROUND=252 &
	IF N_ELEMENTS(LAND_COLOR) 	NE 1 THEN LAND_COLOR=252
 	IF N_ELEMENTS(CLOUD_COLOR) 	NE 1 THEN CLOUD_COLOR=254
	IF N_ELEMENTS(MISS_COLOR) 	NE 1 THEN MISS_COLOR=253
	OUR_MISS_COLOR=251
	HI_LO_COLOR		=255

		COLOR_CODES = REPLICATE(CREATE_STRUCT('NAME','','COLOR',0),35)
		COLOR_CODES[0].NAME = ''								& COLOR_CODES[0].COLOR = 0
		COLOR_CODES[1].NAME = 'PHYTO' 					& COLOR_CODES[1].COLOR=  1
		COLOR_CODES(2).NAME = 'BACT' 						& COLOR_CODES(2).COLOR = 2
		COLOR_CODES(3).NAME = 'MICROZ' 					& COLOR_CODES(3).COLOR = 3
		COLOR_CODES(4).NAME = 'S_COPEPODS' 			& COLOR_CODES(4).COLOR = 4
		COLOR_CODES(5).NAME = 'L_COPEPODS' 			& COLOR_CODES(5).COLOR = 5
		COLOR_CODES(6).NAME = 'GEL_ZOO' 				& COLOR_CODES(6).COLOR = 6
		COLOR_CODES(7).NAME = 'MICRONEKTON' 		& COLOR_CODES(7).COLOR = 7
		COLOR_CODES(8).NAME = 'MB_POLY' 				& COLOR_CODES(8).COLOR = 8
		COLOR_CODES(9).NAME = 'MB_CRUST' 				& COLOR_CODES(9).COLOR = 9
		COLOR_CODES(10).NAME = 'MB_MOLLUSCS'		& COLOR_CODES(10).COLOR = 10
		COLOR_CODES(11).NAME = 'MB_OTHER' 			& COLOR_CODES(11).COLOR = 11
		COLOR_CODES(12).NAME = 'MGB_FILTER' 		& COLOR_CODES(12).COLOR = 12
		COLOR_CODES(13).NAME = 'MGB_OTHER' 			& COLOR_CODES(13).COLOR = 13
		COLOR_CODES(14).NAME = 'SHRIMP' 				& COLOR_CODES(14).COLOR = 14
		COLOR_CODES(15).NAME = 'LARV_JUVFISH' 	& COLOR_CODES(15).COLOR = 15
		COLOR_CODES(16).NAME = 'SM_PEL_COM' 		& COLOR_CODES(16).COLOR = 16
		COLOR_CODES(17).NAME = 'SM_PEL_OTHER' 	& COLOR_CODES(17).COLOR = 17
		COLOR_CODES(18).NAME = 'SM_PEL_SQUID' 	& COLOR_CODES(18).COLOR = 18
		COLOR_CODES(19).NAME = 'SM_PEL_ANAD' 		& COLOR_CODES(19).COLOR = 19
		COLOR_CODES(20).NAME = 'MED_PEL_PISCIV'	& COLOR_CODES(20).COLOR = 20
		COLOR_CODES(21).NAME = 'DEM_BENTHIV' 		& COLOR_CODES(21).COLOR = 21
		COLOR_CODES(22).NAME = 'DEM_OMNI' 			& COLOR_CODES(22).COLOR = 22
		COLOR_CODES(23).NAME = 'DEM_PISCV' 			& COLOR_CODES(23).COLOR = 23
		COLOR_CODES(24).NAME = 'SHARKS_PELAGIC'	& COLOR_CODES(24).COLOR = 24
		COLOR_CODES(25).NAME = 'HMS' 						& COLOR_CODES(25).COLOR = 25
		COLOR_CODES(26).NAME = 'PINNIPEDS' 			& COLOR_CODES(26).COLOR = 26
		COLOR_CODES(27).NAME = 'BALEEN_WHALES' 	& COLOR_CODES(27).COLOR = 27
		COLOR_CODES(28).NAME = 'ODONTOCETES' 		& COLOR_CODES(28).COLOR = 28
		COLOR_CODES(29).NAME = 'SEABIRDS' 			& COLOR_CODES(29).COLOR = 29
		COLOR_CODES(30).NAME = 'DISCARDS' 			& COLOR_CODES(30).COLOR = 30
		COLOR_CODES(31).NAME = 'DETRITUS' 			& COLOR_CODES(31).COLOR = 31

		COLOR_CODES(32).NAME = 'MESOPELAGICS'   & COLOR_CODES(32).COLOR = 32
		COLOR_CODES(33).NAME = 'SHARKS_COASTAL'	& COLOR_CODES(33).COLOR = 23

; ****************************************************************************************
; ********************* U S E R    S W I T C H E S  *************************************
; ****************************************************************************************
; Switches controlling which Processing STEPS to do.  The steps are in order of execution
; Switches: 0 = Off, 1 = On,  2= On and Overwrite any Output Files

  OVERWRITE_1D  = 0
; =====>
  DO_CHECK_DIRS  			        = 1  ; Normally, keep this switch on


;	===> simulation
	DO_LOWER_TROPHIC_SIMULATION  = 0
	DO_BAR_CHARTS								 = 1





; *********************************************
	IF DO_CHECK_DIRS EQ 1 THEN BEGIN
; *********************************************
    PRINT, 'S T E P:    DO_CHECK_DIRS'
    FOR N=0,N_ELEMENTS(DIR_ALL)-1 DO BEGIN & AFILE = STRMID(DIR_ALL(N),0,STRLEN(DIR_ALL(N))-1) &
    	IF FILE_TEST(AFILE,/DIRECTORY) EQ 0L THEN FILE_MKDIR,AFILE &  ENDFOR
  ENDIF
; |||||||||||||||||||||||||||||||||||||||||||||||||


; *****************************************************
  IF DO_LOWER_TROPHIC_SIMULATION EQ 1 THEN BEGIN
; *****************************************************
	 	PRINT, 'S T E P:   DO_LOWER_TROPHIC_SIMULATION'
   TEMP=CREATE_STRUCT('TAXA','','NODE','','CHLOROPHYLL_MG_M2',0.0,'CARBON_2CHLOROPHYLL',0.0,$
   							'B_GC_M2',0.0,'FRACT_NPP_CONSUMED_BY_BACT',0.0,$
   							'PP_GROSS_GC_M2_D',0.0,'C_GC_M2_D',0.0,'ASSIM_EFF',0.0,'A_GC_M2_D',0.0,'R_FRACT_OF_ASSIM',0.0,'R_GC_M2_D',0.0,'P_GC_M2_D',0.0,$
   							 'Growth_d',0.0,$
								 'UN_ASSIM_GC_M2_D',0.0,'GGE_D',0.0,'NGE_D',0.0,'C2B_D',0.0,'P2B_D',0.0,'R2B_D',0.0,'P2R_D',0.0,$

								 'GDW_2GWW',0.0,'GC_2GDW',0.0,'GC_2GWW',0.0,$  ; CONVERSIONS

								 'B_GWW_M2',0.0,$
								 'PP_GROSS_GWW_M2_Y',0.0,'C_GWW_M2_Y',0.0,'P_GWW_M2_Y',0.0,'R_GWW_M2_Y',0.0,$
								 'C2B_Y',0.0,'P2B_Y',0.0,'R2B_Y',0.0,'P2R_Y',0.0,$

								 'B_BACT_2B_PHY_GC_M2_D',0.0,'B_BACT_2B_PHY_GWW_M2_Y',0.0,$
								 'P_BACT_2P_PHY_GC_M2_D',0.0,'P_BACT_2P_PHY_GWW_M2_Y',0.0,$

								 'B_MICROZ_2B_PHY_GC_M2_D',0.0,'B_MICROZ_2B_PHY_GWW_M2_Y',0.0,$
								 'B_MICROZ_2B_BACT_GC_M2_D',0.0,'B_MICROZ_2B_BACT_GWW_M2_Y',0.0,$

								 'P_MICROZ_2P_PHY_GC_M2_D',0.0,'P_MICROZ_2P_PHY_GWW_M2_Y',0.0,$
								 'P_MICROZ_2P_BACT_GC_M2_D',0.0,'P_MICROZ_2P_BACT_GWW_M2_Y',0.0)




;	*****************
;	*** Constants ***
;	*****************
 	DPY=365.

	SUBAREAS 					= ['MAB',		'SNE',		'GB',		'GOM']
	SUBAREA_NUMBER		= [1,        2,        3,        4  ]
	CHLOROPHYLL_MG_M2 = [50.11375833, 51.18231917,	49.4321525 ,	50.2859]
	PP_GC_M2_D 				= [1.164896867,	1.025661933, 	0.899985833, 	0.899046758]


; LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
 	FOR _SUBAREA = 0,N_ELEMENTS(SUBAREAS)-1 DO BEGIN


		SUBAREA = SUBAREAS(_SUBAREA)

    TEMP=STRUCT_2MISSINGS(TEMP)
		DB=REPLICATE(TEMP,4)

;	**********************
;	PHYTOPLANKTON NODE ***
;	**********************
	I=1
	DB(I).TAXA = 'PHYTO'
	DB(I).NODE = I

;	===> FIXED PARAMETERS
	DB(I).CHLOROPHYLL_MG_M2 			= CHLOROPHYLL_MG_M2(_SUBAREA) ; 50.2859 ; GULF OF MAIN
	DB(I).P_GC_M2_D 							= PP_GC_M2_D(_SUBAREA)        ;0.899

	DB(I).CARBON_2CHLOROPHYLL 		= 40.0

	DB(I).R_FRACT_OF_ASSIM				= 0.20
	DB(I).ASSIM_EFF								= 1.0

	DB(I).GDW_2GWW								= 0.2
	DB(I).GC_2GDW									= 0.5
;	GDW_2GWW
	DB(I).GC_2GWW 				= 	DB(I).GDW_2GWW 					*	DB(I).GC_2GDW

;	===> CALCULATED PARAMETERS
	DB(I).B_GC_M2 				= DB(I).CHLOROPHYLL_MG_M2		*	DB(I).CARBON_2CHLOROPHYLL	*	0.001;
	DB(I).P2B_D 					= DB(I).P_GC_M2_D						/	DB(I).B_GC_M2
	DB(I).PP_GROSS_GC_M2_D = DB(I).P_GC_M2_D					/	((1-DB(I).R_FRACT_OF_ASSIM))
	DB(I).R_GC_M2_D 			= DB(I).PP_GROSS_GC_M2_D		*	DB(I).R_FRACT_OF_ASSIM
	DB(I).Growth_d 				= DB(I).P_GC_M2_D						/	DB(I).B_GC_M2
	DB(I).C_GC_M2_D 			= DB(I).PP_GROSS_GC_M2_D
	DB(I).A_GC_M2_D       = DB(I).PP_GROSS_GC_M2_D

	DB(I).NGE_D 					= DB(I).P_GC_M2_D						/	(DB(I).P_GC_M2_D +DB(I).R_GC_M2_D)
	DB(I).GGE_D 					= DB(I).NGE_D								/	DB(I).ASSIM_EFF
	DB(I).UN_ASSIM_GC_M2_D=	(1.0 - DB(I).ASSIM_EFF)		/ DB(I).C_GC_M2_D

	DB(I).C2B_D 					= DB(I).C_GC_M2_D 					/ DB(I).B_GC_M2
	DB(I).R2B_D 					= DB(I).R_GC_M2_D 					/ DB(I).B_GC_M2
	DB(I).P2R_D 					= DB(I).P_GC_M2_D 					/ DB(I).R_GC_M2_D

;	===> PER YEAR

	DB(I).B_GWW_M2 					= DB(I).B_GC_M2 					/ DB(I).GC_2GWW

	DB(I).C_GWW_M2_Y 				= DB(I).C_GC_M2_D 				/ DB(I).GC_2GWW *DPY
	DB(I).PP_GROSS_GWW_M2_Y = DB(I).PP_GROSS_GC_M2_D 	/ DB(I).GC_2GWW *DPY
	DB(I).R_GWW_M2_Y 				= DB(I).R_GC_M2_D 				/ DB(I).GC_2GWW *DPY
	DB(I).P_GWW_M2_Y 				= DB(I).P_GC_M2_D 				/ DB(I).GC_2GWW *DPY

	DB(I).C2B_Y = DPY*DB(I).C_GC_M2_D 								/ DB(I).B_GC_M2
	DB(I).P2B_Y = DPY*DB(I).P_GC_M2_D 								/ DB(I).B_GC_M2
	DB(I).R2B_Y = DPY*DB(I).R_GC_M2_D 								/ DB(I).B_GC_M2
	DB(I).P2R_Y = DPY*DB(I).P_GC_M2_D 								/ DB(I).R_GC_M2_D



;	*********************
;	*** BACTERIA NODE ***
;	*********************
  I=2
	DB(I).TAXA = 'BACT'
	DB(I).NODE = I

;	===> FIXED PARAMETERS
	DB(I).NGE_D = 0.27 ; Del Giorgio and Cole (2000)
	DB(I).FRACT_NPP_CONSUMED_BY_BACT = 0.50

	DB(I).ASSIM_EFF = 0.8
	DB(I).Growth_d = 0.25 ; LITERATURE

	DB(I).GDW_2GWW			= 0.2
	DB(I).GC_2GDW				= 0.5
;	GDW_2GWW
	DB(I).GC_2GWW 			= 	DB(I).GDW_2GWW 					*	DB(I).GC_2GDW


	DB(I).C_GC_M2_D = DB[1].C_GC_M2_D


;	===> SENSITIVITY PARAMETERS
	NGE_D 		= [0.3]
	ASSIM_EFF = [0.8]

	FRACT_NPP_CONSUMED_BY_BACT 	= [0.40]
	Growth_d 	= [0.25]

; ===> FINAL DAVE AND JAY JUNE 23, 2006 PHONE CON
;	BACT	2	0.30	0.8	0.5	0.25


  ;	LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
	FOR _NGE_D = 0,N_ELEMENTS(NGE_D)-1 DO BEGIN
		I=2
		DB(I).NGE_D = NGE_D(_NGE_D)
		FOR _ASSIM_EFF = 0,N_ELEMENTS(ASSIM_EFF)-1 DO BEGIN
			I=2
			DB(I).ASSIM_EFF = ASSIM_EFF(_ASSIM_EFF)
			FOR _FRACT_NPP_CONSUMED_BY_BACT = 0, N_ELEMENTS(FRACT_NPP_CONSUMED_BY_BACT)-1 DO BEGIN
				I=2
				DB(I).FRACT_NPP_CONSUMED_BY_BACT = FRACT_NPP_CONSUMED_BY_BACT(_FRACT_NPP_CONSUMED_BY_BACT)
				FOR _Growth_d = 0,N_ELEMENTS(Growth_d)-1 DO BEGIN
					I=2
					DB(I).Growth_d = Growth_d(_Growth_d)

;	===> Calculated PARAMETERS
	DB(I).C_GC_M2_D 			= DB[1].P_GC_M2_D 				* DB(I).FRACT_NPP_CONSUMED_BY_BACT ; ASSUME BACTERIA CONSUME 30 % OF NPP PHYTO
	DB(I).A_GC_M2_D				= DB(I).C_GC_M2_D					* DB(I).ASSIM_EFF

	DB(I).P_GC_M2_D 			= DB(I).A_GC_M2_D 				* DB(I).NGE_D

	DB(I).R_GC_M2_D 			= DB(I).A_GC_M2_D					* (1.0 - DB(I).NGE_D)

	DB(I).B_GC_M2   			= DB(I).P_GC_M2_D					/	DB(I).Growth_d

	DB(I).R_FRACT_OF_ASSIM= 1.0 										- DB(I).NGE_D

	DB(I).GGE_D 					= DB(I).P_GC_M2_D					/	DB(I).C_GC_M2_D
	DB(I).UN_ASSIM_GC_M2_D=	DB(I).C_GC_M2_D					* (1.0 - DB(I).ASSIM_EFF)
	DB(I).P2B_D 					= DB(I).P_GC_M2_D 				/ DB(I).B_GC_M2
	DB(I).C2B_D 					= DB(I).C_GC_M2_D 				/ DB(I).B_GC_M2
	DB(I).R2B_D 					= DB(I).R_GC_M2_D 				/ DB(I).B_GC_M2
	DB(I).P2R_D 					= DB(I).P_GC_M2_D 				/ DB(I).R_GC_M2_D

;	===> PER YEAR
	DB(I).B_GWW_M2 				= DB(I).B_GC_M2 					/ DB(I).GC_2GWW
	DB(I).C_GWW_M2_Y 				= DB(I).C_GC_M2_D 			/ DB(I).GC_2GWW *DPY

	DB(I).R_GWW_M2_Y 			= DB(I).R_GC_M2_D 				/ DB(I).GC_2GWW *DPY
	DB(I).P_GWW_M2_Y 			= DB(I).P_GC_M2_D 				/ DB(I).GC_2GWW *DPY

	DB(I).C2B_Y 					= DPY*DB(I).C_GC_M2_D 		/ DB(I).B_GC_M2
	DB(I).P2B_Y 					= DPY*DB(I).P_GC_M2_D 		/ DB(I).B_GC_M2
	DB(I).R2B_Y 					= DPY*DB(I).R_GC_M2_D 		/ DB(I).B_GC_M2
	DB(I).P2R_Y 					= DPY*DB(I).P_GC_M2_D 		/ DB(I).R_GC_M2_D

;	*********
;	NODE RATIOS
	DB(I).B_BACT_2B_PHY_GC_M2_D  	= DB(2).B_GC_M2 		/	DB[1].B_GC_M2
	DB(I).B_BACT_2B_PHY_GWW_M2_Y  = DB(2).B_GWW_M2		/ DB[1].B_GWW_M2

	DB(I).P_BACT_2P_PHY_GC_M2_D  	= DB(2).P_GC_M2_D 	/ DB[1].P_GC_M2_D
	DB(I).P_BACT_2P_PHY_GWW_M2_Y  = DB(2).P_GWW_M2_Y	/  DB[1].P_GWW_M2_Y

;	*********************
;	*** MICROZOO NODE ***
;	*********************
  I=3
	DB(I).TAXA = 'MICROZ'
	DB(I).NODE = I

;	===> FIXED PARAMETERS
;	Annual PB from Pomeroy 2001 plot (centroid = 72)
	DB(I).P2B_D 					= 72.0/DPY
	DB(I).Growth_d 				= DB(I).P2B_D
	DB(I).ASSIM_EFF				= 0.9
	DB(I).B_GC_M2					= 0.13 * DB[1].B_GC_M2
	DB(I).NGE_D						= 0.33

	DB(I).GDW_2GWW			= 0.18
	DB(I).GC_2GDW				= 0.46
;	GDW_2GWW
	DB(I).GC_2GWW 			= 	DB(I).GDW_2GWW 					*	DB(I).GC_2GDW

;	===> CALCULATED PARAMETERS

	DB(I).B_GC_M2   			= DB[1].B_GC_M2						* 0.13 ; ASSUMPTION THAT 13% PHYTO BIOMASS IS MICROZ
	DB(I).P_GC_M2_D				= DB(I).B_GC_M2					 	* DB(I).P2B_D
	DB(I).R_FRACT_OF_ASSIM= 1.0 										- DB(I).NGE_D
	DB(I).R_GC_M2_D 			= (DB(I).P_GC_M2_D				/	DB(I).NGE_D) -  DB(I).P_GC_M2_D

	DB(I).A_GC_M2_D				= DB(I).P_GC_M2_D					+	DB(I).R_GC_M2_D
 	DB(I).C_GC_M2_D 			= DB(I).A_GC_M2_D					/	DB(I).ASSIM_EFF

	DB(I).GGE_D 					= DB(I).P_GC_M2_D					/	DB(I).C_GC_M2_D

	DB(I).P2B_D 					= DB(I).P_GC_M2_D 				/ DB(I).B_GC_M2
	DB(I).C2B_D 					= DB(I).C_GC_M2_D 				/ DB(I).B_GC_M2
	DB(I).R2B_D 					= DB(I).R_GC_M2_D 				/ DB(I).B_GC_M2
	DB(I).P2R_D 					= DB(I).P_GC_M2_D 				/ DB(I).R_GC_M2_D


	DB(I).UN_ASSIM_GC_M2_D=	DB(I).C_GC_M2_D					* (1.0 - DB(I).ASSIM_EFF)
	DB(I).P2B_D 					= DB(I).P_GC_M2_D 				/ DB(I).B_GC_M2
	DB(I).C2B_D 					= DB(I).C_GC_M2_D 				/ DB(I).B_GC_M2
	DB(I).R2B_D 					= DB(I).R_GC_M2_D 				/ DB(I).B_GC_M2
	DB(I).P2R_D 					= DB(I).P_GC_M2_D 				/ DB(I).R_GC_M2_D

;	===> PER YEAR
	DB(I).B_GWW_M2 				= DB(I).B_GC_M2 					/ DB(I).GC_2GWW
	DB(I).C_GWW_M2_Y 			= DB(I).C_GC_M2_D 				/ DB(I).GC_2GWW *DPY
	DB(I).R_GWW_M2_Y 			= DB(I).R_GC_M2_D 				/ DB(I).GC_2GWW *DPY
	DB(I).P_GWW_M2_Y 			= DB(I).P_GC_M2_D 				/ DB(I).GC_2GWW *DPY

	DB(I).C2B_Y 					= DPY*DB(I).C_GC_M2_D 		/ DB(I).B_GC_M2
	DB(I).P2B_Y 					= DPY*DB(I).P_GC_M2_D 		/ DB(I).B_GC_M2
	DB(I).R2B_Y 					= DPY*DB(I).R_GC_M2_D 		/ DB(I).B_GC_M2
	DB(I).P2R_Y 					= DPY*DB(I).P_GC_M2_D 		/ DB(I).R_GC_M2_D


;	*********
;	NODE RATIOS

;	===> PHYTO TO MICROZ
	DB(I).B_MICROZ_2B_PHY_GC_M2_D  	= DB(3).B_GC_M2			/  DB[1].B_GC_M2
	DB(I).P_MICROZ_2P_PHY_GC_M2_D  	= DB(3).P_GC_M2_D		/  DB[1].P_GC_M2_D
	DB(I).B_MICROZ_2B_PHY_GWW_M2_Y  = DB(3).B_GC_M2			/  DB[1].B_GC_M2
	DB(I).P_MICROZ_2P_PHY_GWW_M2_Y  = DB(3).P_GWW_M2_Y	/  DB[1].P_GWW_M2_Y

;	===> BACT TO MICROZ
	DB(I).B_MICROZ_2B_BACT_GC_M2_D  = DB(3).B_GC_M2			/  DB(2).B_GC_M2
	DB(I).B_MICROZ_2B_BACT_GWW_M2_Y = DB(3).B_GWW_M2		/  DB(2).B_GWW_M2

	DB(I).P_MICROZ_2P_BACT_GC_M2_D  = DB(3).P_GC_M2_D		/  DB(2).P_GC_M2_D
	DB(I).P_MICROZ_2P_BACT_GWW_M2_Y = DB(3).P_GWW_M2_Y	/  DB(2).P_GWW_M2_Y


;;;	IF N_ELEMENTS(ALL) EQ 0 THEN ALL = DB(1:3) ELSE ALL = [ALL, db(2:3)]
				ENDFOR
			ENDFOR
		ENDFOR
	ENDFOR


  file = DIR_SAVE+'EMAX-BACT-MICROZOO-'+SUBAREA+'.CSV'
  print, file

	STRUCT_2CSV,file,DB(1:*),/TRANSP


  ENDFOR ; SUBAREAS



  D=STRUCT_COPY(DB,TAGNAMES=['TAXA','NODE','NGE_D','ASSIM_EFF','FRACT_NPP_CONSUMED_BY_BACT','Growth_d','B_GC_M2','P_GC_M2_D','P2B_Y','B_BACT_2B_PHY_GC_M2_D','P_BACT_2P_PHY_GC_M2_D'])
  STRUCT_2CSV,DIR_SAVE+'EMAX-BACT-SENSITIVITY-SHORT.CSV',D


;	===> MAKE AN EVEN SHORTER LIST WITH BIOMASS RATIOS BETWEEN 4 AND 6 AND PROD RATIOS BETWEEN 5 AND 7
	OK = WHERE(D.B_BACT_2B_PHY_GC_M2_D GE 2 AND D.B_BACT_2B_PHY_GC_M2_D LE 7 AND D.P_BACT_2P_PHY_GC_M2_D GE 4 AND D.P_BACT_2P_PHY_GC_M2_D LE 8,COUNT)

	STRUCT_2CSV,DIR_SAVE+'EMAX-BACT-SENSITIVITY-BEST.CSV',D[OK]





	STRUCT_PLOT, D,/PMULTI,X='NGE_D',PSYM=1, XTITLE='NGE_D',YMARGIN=[5,5],XMARGIN=[5,5]
	STRUCT_PLOT, D,/PMULTI,X='FRACT_NPP_CONSUMED_BY_BACT',PSYM=1
	PSPRINT
STOP
	NGE_D 		= [0.20,0.27,0.3]
	ASSIM_EFF = [0.8,0.9,1.0]
	FRACT_NPP_CONSUMED_BY_BACT = [0.2, 0.3, 0.4,0.5]
	Growth_d = [0.2, 0.3, 0.4, 0.5]


  ENDIF
; ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||




; *****************************************************
  IF DO_BAR_CHARTS  GE 1 THEN BEGIN
; *****************************************************
	 	PRINT, 'S T E P:   DO_BAR_CHARTS'
	 	SUBAREAS = ['GOM','GB', 'SNE', 'MAB']
	 	SUBAREAS = ['GOM','MAB']

	 	TYPES = ['XLS','ECON','ECOP']
  	TYPES = 'XLS'

;		LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
	 	FOR _TYPE = 0,N_ELEMENTS(TYPES)-1 DO BEGIN
	 		TYPE=TYPES(_TYPE)
			IF TYPE EQ 'XLS' THEN FILES = DIR_DATA+'*-EMAX10c-XLS-DIET.csv'
			IF TYPE EQ 'ECON' THEN FILES = DIR_DATA+'*-EMAX2006-ECON-DIET.csv
;			IF TYPE EQ 'ECOP' THEN FILES = DIR_DATA+'*-2006-ECOP-DIET.DBF
			IF TYPE EQ 'ECOP' THEN FILES = DIR_DATA+'*-EMAX2006-ECOP-DIET.csv'

			FILES = FILE_SEARCH( FILES)

		;FILES=LAST(FILES)
;		FILES=FILES[1]
		LIST, FILES


;		LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
		FOR _FILES = 0L,N_ELEMENTS(FILES)-1 DO BEGIN
			AFILE = FILES(_FILES)
			PRINT
			PRINT, AFILE
			FN=FILE_PARSE(AFILE)
			W= STRUPCASE(WORDS(FN.FIRST_NAME))

			OK=WHERE_IN(SUBAREAS,W,COUNT)
			IF COUNT NE 1 THEN CONTINUE    ; >>>>>>>>>>>>>>>>
			ASUBAREA = SUBAREAS(OK[0])
			PSFILE = DIR_PLOTS+FN.FIRST_NAME+'.PS'


			IF TYPE EQ 'XLS' OR TYPE EQ 'ECON' OR TYPE EQ 'ECOP' THEN TXT=READ_TXT(AFILE)

GOTO, SKIP

			IF TYPE EQ 'ECOP' THEN BEGIN
				DB=READ_DB(AFILE)
				SETS=WHERE_SETS(DB.MODELNAME )
				ASET=SETS[0]
				SUBS=WHERE_SETS_SUBS(ASET)
				DB=DB(SUBS)
				SETS = WHERE_SETS(DB.GROUPNAME)
				IF SPAN(MINMAX(SETS.N)) NE 0 THEN STOP
				PRINT,'OK'
				ALL = CREATE_STRUCT('GROUP','','NODE','')
				FOR _SETS=0,N_ELEMENTS(SETS)-1 DO BEGIN
					ASET = SETS(_SETS)
					SUBS = WHERE_SETS_SUBS(ASET)
					D = DB(SUBS)
					C=STRUCT_COPY(D,TAGNAMES=['GROUPCOLNA','DIET'])
					C = STRUCT_RENAME(C,['GROUPCOLNA','DIET'],['GROUP',STRTRIM(D[0].GROUPNAME,2)])
					C.GROUP = STRUPCASE(C.GROUP)
					C.GROUP = STRTRIM(STRCOMPRESS(C.GROUP,/REMOVE_ALL),2)

					STOP
					C.GROUP=REPLACE(C.GROUP,'DIETCOMPOSITIONS','DIET')
					C.GROUP=REPLACE(C.GROUP,'PHYTOPLANKTON-PRIMARYPRODUCERS','PHYTO')
					C.GROUP=REPLACE(C.GROUP,'PHYTOPLANKTON-PRIMARY','PHYTO')
					C.GROUP=REPLACE(C.GROUP,'BACTERIA','BACT')
					C.GROUP=REPLACE(C.GROUP,'MICROZOOPLANKTON','MICROZ')
					C.GROUP=REPLACE(C.GROUP,'SMALLCOPEPODS','S_COPEPODS')
					C.GROUP=REPLACE(C.GROUP,'LARGECOPEPODS','L_COPEPODS')
					C.GROUP=REPLACE(C.GROUP,'GELATINOUSZOOPLANKTON','GEL_ZOO')
					C.GROUP=REPLACE(C.GROUP,'MICRONECTO','MICRONECTON')
					C.GROUP=REPLACE(C.GROUP,'MICRONECTON','MICRONECTON')
					C.GROUP=REPLACE(C.GROUP,'MESOPELAGICS','MESOPELAGICS')
					C.GROUP=REPLACE(C.GROUP,'MACROBENTHOS-POLYCHAETES',	'MB_POLY')
					C.GROUP=REPLACE(C.GROUP,'MACROBENTHOS-POLYCHAETE',	'MB_POLY')
					C.GROUP=REPLACE(C.GROUP,'MACROBENTHOS-POLYCHAET',	'MB_POLY')
					C.GROUP=REPLACE(C.GROUP,'MACROBENTHOS-CRUSTACEANS',	'MB_CRUST')
					C.GROUP=REPLACE(C.GROUP,'MACROBENTHOS-CRUSTACEA',		'MB_CRUST')
					C.GROUP=REPLACE(C.GROUP,'MACROBENTHOS-CRUSTACE',		'MB_CRUST')
					C.GROUP=REPLACE(C.GROUP,'MACROBENTHOS-MOLLUSCS',		'MB_MOLLUSCS')
					C.GROUP=REPLACE(C.GROUP,'MACROBENTHOS-OTHER',				'MB_OTHER')
					C.GROUP=REPLACE(C.GROUP,'MEGABENTHOS-FILTERERS',		'MGB_FILTER')
					C.GROUP=REPLACE(C.GROUP,'MEGABENTHOS-OTHER',				'MGB_OTHER')
				 	C.GROUP=REPLACE(C.GROUP,'SHRIMP.','SHRIMP')
					C.GROUP=REPLACE(C.GROUP,'SHRIMPETAL.','SHRIMP')
					C.GROUP=REPLACE(C.GROUP,'SHRIMP.','SHRIMP')
					C.GROUP=REPLACE(C.GROUP,'SHRIMPETAL','SHRIMP')
					C.GROUP=REPLACE(C.GROUP,'LARVAL-JUVFISH-ALL','LARV_JUVFISH')
					C.GROUP=REPLACE(C.GROUP,'SMALLPELAGICS-COMMERCIAL','SM_PEL_COM')
					C.GROUP=REPLACE(C.GROUP,'SMALLPELAGICS-COMMER','SM_PEL_COM')

					C.GROUP=REPLACE(C.GROUP,'SMALLPELAGICS-OTHER','SM_PEL_OTHER')
					C.GROUP=REPLACE(C.GROUP,'SMALLPELAGICS-SQUID','SM_PEL_SQUID')
					C.GROUP=REPLACE(C.GROUP,'SMALLPELAGICS-ANADROMOUS','SM_PEL_ANAD')
					C.GROUP=REPLACE(C.GROUP,'SMALLPELAGICS-ANADRO',			'SM_PEL_ANAD')
					C.GROUP=REPLACE(C.GROUP,'MEDIUMPELAGICS-(PISCIVORES&OTHER)','MED_PEL_PISCIV')
					C.GROUP=REPLACE(C.GROUP,'MEDIUMPELAGICS-(PISC','MED_PEL_PISCIV')



					C.GROUP=REPLACE(C.GROUP,'DEMERSALS-BENTHIVORES','DEM_BENTHIV')
					C.GROUP=REPLACE(C.GROUP,'DEMERSALS-OMNIVORES','DEM_OMNI')
					C.GROUP=REPLACE(C.GROUP,'DEMERSALS-PISCIVORES','DEM_PISCV')
					C.GROUP=REPLACE(C.GROUP,'SHARKS-PELAGICS','SHARKS_PELAGIC')
					C.GROUP=REPLACE(C.GROUP,'SHARKS-COASTAL','SHARKS_COASTAL')
					C.GROUP=REPLACE(C.GROUP,'SHARKS-PELAGIC','SHARKS_PELAGIC')
					C.GROUP=REPLACE(C.GROUP,'"HIGHLYMIGRATORYSPECIES-(TUNA,BILLFISH&SWORDFISH)"','HMS')
					C.GROUP=REPLACE(C.GROUP,'HIGHLYMIGRATORYSPECI','HMS')
					C.GROUP=REPLACE(C.GROUP,'PINNIPEDS','PINNIPEDS')
					C.GROUP=REPLACE(C.GROUP,'BALEEN WHALES','BALEEN_WHALES')
					C.GROUP=REPLACE(C.GROUP,'BALEENWHALES','BALEEN_WHALES')
					C.GROUP=REPLACE(C.GROUP,'ODONTOCETES','ODONTOCETES')
					C.GROUP=REPLACE(C.GROUP,'SEABIRDS','SEABIRDS')
					C.GROUP=REPLACE(C.GROUP,'DETRITUS-POC','DETRITUS')

STOP
					IF N_ELEMENTS(ALL) EQ 0 THEN ALL = C ELSE ALL = STRUCT_JOIN(ALL,C,TAGNAMES = 'GROUP')
				ENDFOR
				STOP
			ENDIF
;			*******************


SKIP:

			TXT=STRUPCASE(TXT)
			OK=WHERE(STRPOS(TXT,'PHYTO') GE 0) 		& FIRST_ROW = OK[0]
			OK=WHERE(STRPOS(TXT,'DETRITUS') GE 0)

		 	IF TYPE EQ 'XLS' OR TYPE EQ 'ECOP' THEN LAST_ROW 	= OK[0]
		 	IF TYPE EQ 'ECON' THEN LAST_ROW 	= OK[1]

			TXT = TXT(FIRST_ROW:LAST_ROW)
			TXT = STRTRIM(STRCOMPRESS(TXT,/REMOVE_ALL),2)

;			===. REMOVE QUOTES AND PRECEDING NODE NUMBERS FOR ECON TYPE
 			IF TYPE EQ 'ECON' THEN BEGIN
 	  		TXT = REPLACE(TXT,'"','')
 	  		TXT[0] = REPLACE(TXT[0],',,','')
 	  		FOR I = 40, 1, -1 DO BEGIN
 	  			ITEM = STRTRIM(I,2)+'-'
 	  			T=REPLACE(TXT,ITEM,'')
 	  			TXT=T
 	  		ENDFOR
 			ENDIF


			TXT=REPLACE(TXT,'DIETCOMPOSITIONS','DIET')
			TXT=REPLACE(TXT,'PHYTOPLANKTON-PRIMARYPRODUCERS','PHYTO')
			TXT=REPLACE(TXT,'PHYTOPLANKTON-PRIMARY','PHYTO')
			TXT=REPLACE(TXT,'BACTERIA','BACT')
			TXT=REPLACE(TXT,'MICROZOOPLANKTON','MICROZ')
			TXT=REPLACE(TXT,'SMALLCOPEPODS','S_COPEPODS')
			TXT=REPLACE(TXT,'LARGECOPEPODS','L_COPEPODS')
			TXT=REPLACE(TXT,'GELATINOUSZOOPLANKTON','GEL_ZOO')
			TXT=REPLACE(TXT,'MICRONECTO','MICRONECTON')
			TXT=REPLACE(TXT,'MICRONECTON','MICRONECTON')
			TXT=REPLACE(TXT,'MESOPELAGICS','MESOPELAGICS')
			TXT=REPLACE(TXT,'MACROBENTHOS-POLYCHAETES',	'MB_POLY')
			TXT=REPLACE(TXT,'MACROBENTHOS-POLYCHAETE',	'MB_POLY')
			TXT=REPLACE(TXT,'MACROBENTHOS-POLYCHAET',	'MB_POLY')
			TXT=REPLACE(TXT,'MACROBENTHOS-CRUSTACEANS',	'MB_CRUST')
			TXT=REPLACE(TXT,'MACROBENTHOS-CRUSTACEA',		'MB_CRUST')
			TXT=REPLACE(TXT,'MACROBENTHOS-CRUSTACE',		'MB_CRUST')
			TXT=REPLACE(TXT,'MACROBENTHOS-MOLLUSCS',		'MB_MOLLUSCS')
			TXT=REPLACE(TXT,'MACROBENTHOS-OTHER',				'MB_OTHER')
			TXT=REPLACE(TXT,'MEGABENTHOS-FILTERERS',		'MGB_FILTER')
			TXT=REPLACE(TXT,'MEGABENTHOS-OTHER',				'MGB_OTHER')
		 	TXT=REPLACE(TXT,'SHRIMP.','SHRIMP')
			TXT=REPLACE(TXT,'SHRIMPETAL.','SHRIMP')
			TXT=REPLACE(TXT,'SHRIMP.','SHRIMP')
			TXT=REPLACE(TXT,'SHRIMPETAL','SHRIMP')
			TXT=REPLACE(TXT,'LARVAL-JUVFISH-ALL','LARV_JUVFISH')
			TXT=REPLACE(TXT,'SMALLPELAGICS-COMMERCIAL','SM_PEL_COM')
			TXT=REPLACE(TXT,'SMALLPELAGICS-COMMER','SM_PEL_COM')

			TXT=REPLACE(TXT,'SMALLPELAGICS-OTHER','SM_PEL_OTHER')
			TXT=REPLACE(TXT,'SMALLPELAGICS-SQUID','SM_PEL_SQUID')
			TXT=REPLACE(TXT,'SMALLPELAGICS-ANADROMOUS','SM_PEL_ANAD')
			TXT=REPLACE(TXT,'SMALLPELAGICS-ANADRO',			'SM_PEL_ANAD')
			TXT=REPLACE(TXT,'MEDIUMPELAGICS-(PISCIVORES&OTHER)','MED_PEL_PISCIV')
			TXT=REPLACE(TXT,'MEDIUMPELAGICS-(PISC','MED_PEL_PISCIV')



			TXT=REPLACE(TXT,'DEMERSALS-BENTHIVORES','DEM_BENTHIV')
			TXT=REPLACE(TXT,'DEMERSALS-OMNIVORES','DEM_OMNI')
			TXT=REPLACE(TXT,'DEMERSALS-PISCIVORES','DEM_PISCV')
			TXT=REPLACE(TXT,'SHARKS-PELAGICS','SHARKS_PELAGIC')
			TXT=REPLACE(TXT,'SHARKS-COASTAL','SHARKS_COASTAL')
			TXT=REPLACE(TXT,'SHARKS-PELAGIC','SHARKS_PELAGIC')
			TXT=REPLACE(TXT,'"HIGHLYMIGRATORYSPECIES-(TUNA,BILLFISH&SWORDFISH)"','HMS')
			TXT=REPLACE(TXT,'HIGHLYMIGRATORYSPECI','HMS')
			TXT=REPLACE(TXT,'PINNIPEDS','PINNIPEDS')
			TXT=REPLACE(TXT,'BALEENWHALES','BALEEN_WHALES')
			TXT=REPLACE(TXT,'ODONTOCETES','ODONTOCETES')
			TXT=REPLACE(TXT,'SEABIRDS','SEABIRDS')
			TXT=REPLACE(TXT,'DETRITUS-POC','DETRITUS')

		  TAGNAMES=WORDS(TXT[0],DELIM=',')


 			IF TYPE EQ 'XLS' OR TYPE EQ 'ECOP' THEN BEGIN
 				TXT=REPLACE(TXT,'Diet Compositions','NODE')
 				TXT=REMOVE(TXT,[0,1])
 				TAGNAMES[0:1] = ['GROUP','NODE']
 			ENDIF
 			IF TYPE EQ 'ECON' THEN BEGIN
 				TXT=REMOVE(TXT,[0])
 				OK=WHERE(TAGNAMES EQ '',COUNT) & IF COUNT GE 1 THEN TAGNAMES= REMOVE(TAGNAMES,OK)
				TAGNAMES= ['NODE','GROUP',TAGNAMES,'_1','_2']
			ENDIF

			DB=TXT_2STRUCT(TXT,TAGNAMES=TAGNAMES)
			IF TYPE EQ 'XLS' OR TYPE EQ 'ECOP' THEN DB=REPLACE(DB,'',0.0)
	 		DB=STRUCT_2NUM(DB,/FLT)


	 		OK=WHERE(STRMID(TAG_NAMES(DB),0,1) EQ '_',COUNT)
	 		IF COUNT GE 1 THEN  DB=STRUCT_COPY(DB,TAGS=OK,/REMOVE)

			IF TYPE EQ 'ECON' THEN BEGIN
				TARGETS = ['DISCARDS','DETRITUS']
				DB=STRUCT_COPY(DB,TAGNAMES=TARGETS,/REMOVE )
			ENDIF

;			===> REMOVE NODE, GROUP AND PHYTOPLANKTON COLUMNS TAGS
		 	D=STRUCT_COPY(DB,TAGS=[0,1,2],/REMOVE )

			ARR= STRUCT_2ARR(D)
			T=TOTAL(ARR,2)
			PRINT, T

			IF TYPE EQ 'ECOP' THEN ARR = 100.0*ARR

;			===> IF ECON THEN THE DATA ARE FLOWS AND MUST BE MADE INTO PERCENTAGES
			IF TYPE EQ 'ECON' THEN BEGIN
				C = N_ELEMENTS(T)
				FOR I=0,C-1 DO BEGIN
		     ARR(I,*)  = 100.0* ARR(I,*)/T(I)
		    ENDFOR
		    PRINT, TOTAL(ARR,2)
			ENDIF



 			D_NAMES = TAG_NAMES(D)
			OK=WHERE_MATCH(DB.GROUP,D_NAMES,COUNT,NCOMPLEMENT=NCOMPLEMENT,COMPLEMENT=COMPLEMENT)
;			IF COUNT NE N_TAGS(D) THEN STOP
			BAR_NODE_NUM = STRTRIM(DB[OK].NODE,2)
			BAR_GROUP   = STRTRIM(DB[OK].GROUP,2)

			TITLE_PAGE = ASUBAREA + '!C!D('+FN.FIRST_NAME+')!N!X'
			PSPRINT,/COLOR,/FULL,FILENAME=PSFILE
			PAL_EMAX,R,G,B

			FONT_TIMES
			ARRAY = TOTAL(ARR,/CUMULATIVE,2)

			SZ=SIZE(ARRAY,/STRUCT)
			COLS = SZ.DIMENSIONS[0]
			ROWS = SZ.DIMENSIONS[1]

;			===> Color assignments
			colors_array = INTARR(COLS,ROWS)
			colors_legend = INTARR(ROWS)
;			START = 1 & INC = 1 & FOR I = 0, ROWS-1 DO colors[*,I]=(INC*I)+START

;			LLLLLLLLLLLLLLLLLLLLLLLLLL
			FOR I = 0, ROWS-1 DO BEGIN
		 	 OK=WHERE(COLOR_CODES.NAME EQ DB(I).GROUP,COUNT)
		 	 IF COUNT NE 1 THEN STOP
			 	colors_array[*,I]= COLOR_CODES[OK].COLOR
			 	colors_LEGEND[I]= COLOR_CODES[OK].COLOR
			ENDFOR

 ;		===> Scale range to accommodate the total bar lengths:
			!Y.RANGE = [0, MAX(array)]
			!P.CHARSIZE=0.75
			!X.CHARSIZE = 1.5
			!Y.CHARSIZE = 1.75
			!X.OMARGIN=[2,25]
			!Y.OMARGIN=[2,15]
			!X.MARGIN=[9,0]
			XTITLE = 'Node'
			YTITLE = 'Diet (%)'

			base = INTARR(COLS)


;			LLLLLLLLLLLLLLLLLLLLLLLLLLL
			FOR I = 0, rows-1 DO BEGIN ; SKIP PHYTO
	 			BAR_PLOTS, array[*,I], COLORS=colors_array[*,I], BACKGROUND=255, $
	    		BASELINES=BASE, BARWIDTH=0.75, BARSPACE=0.25,  OVER=(I GT 0), /OUTLINE,$
	    		XTITLE=XTITLE,YTITLE=YTITLE,BARNAMES=BAR_NODE_NUM,XTICKLEN=0.001
	 			BASE = array[*,I]
	 			IF I EQ ROWS-1 THEN BEGIN
	 				XX = FINDGEN(COLS)+1
	 				XX = XX*.96 -0.25
	 				YY = REPLICATE(101,COLS)
	 				XYOUTS,XX,YY,BAR_GROUP,ORIENTATION=60,/DATA;,ALIGN=0.5
	 			ENDIF
			ENDFOR


;			===> LEGEND
			LEG_SPACING = 1.03
			LEG_PSPACING = 2
			LEG_MARGIN   = [0.7,0.7]
			LEG_CHARSIZE=0.75
			LINESTYLE = 0
			THICKS = 21
			XPOS = 0.79
			YPOS = 0.075
			YPOS = 0.0625

			_GROUP = DB.GROUP;REVERSE(DB.GROUP)

	   	LEGEND,position =[XPOS ,YPOS],/BOTTOM,/LEFT,/NORM,_GROUP,COLORS=COLORS_LEGEND,  LINESTYLE=LINESTYLE,$
    				 PSPACING=LEG_PSPACING,SPACING=LEG_SPACING,MARGIN=LEG_MARGIN,THICK=THICKS,$
    				  /BOX,/CLEAR,BACKGROUND_COLOR=BACKGROUND_COLOR,CHARSIZE=LEG_CHARSIZE

;			===> DIET label above legend box
			XPOS = 0.88 & YPOS = 0.53*N_ELEMENTS(_GROUP)/31
			XYOUTS,XPOS,YPOS,'Diet',ORIENTATION=0,/normal,ALIGN=0.5,charsize=1.75

;			===> title page
			XYOUTS,0.5,0.95,TITLE_PAGE,/NORMAL,CHARSIZE=2,ALIGN=0.5
			PSPRINT

 		IMAGE_TRIM,PSFILE,DPI=600


 		INDX = STRTRIM(SINDGEN(10),2)
 		FILES_DELETE = FILELIST(DIR_PLOTS+'*-PS_'+INDX+'.PNG')
 		OK = WHERE(FILES_DELETE NE MISSINGS(FILES_DELETE),COUNT)
 		IF COUNT GE 1 THEN FILE_DELETE,FILES_DELETE[OK]
 		FILES_KEEP = FILELIST(DIR_PLOTS+'*-PS_*-trim.PNG')
 		FILE_RENAME, FILES_KEEP, NAME_CHANGE=['-PS_1-trim','']

		ENDFOR ; FILES
		ENDFOR ; TYPE



	ENDIF ; DO_BAR_CHARTS


DONE:
PRINT,'END OF EMAX_MAIN.PRO'


END; #####################  End of Routine ################################
