; $ID:	READ_NC_DEMO.PRO,	2020-07-01-12,	USER-KJWH	$
;+
; ######################################################################### 
  PRO READ_NC_DEMO

;  PURPOSE:  THIS IS A READ_NC_DEMO FOR A ROUTINE INVOLVING SEVERAL SEQUENTIAL PROCESSING STEPS

; CATEGORY: READ_NC_DEMOS
  
; 

; NOTES:
; HAS GOVERNS WHICH PROCESSING STEPS TO DO AND WHAT TO DO IN THE STEP
; '' NULL STRING   = (DO NOT DO THE STEP)
; ANY ONE OR COMBINATION OF THESE LETTERS[IN ANY ORDER] :  Y, O, V, R, S, E, F
; WHERE:
; ANY LETTER WILL DO THE STEP
; Y = YES DO THE STEP
; O = OVERWRITE ANY OUTPUT
; V = VERBOSE [ALLOW PRINT STATEMENTS]
; R = REVERSE THE PROCESSING ORDER OF FILES IN THE STEP
; S = STOP IN THE STEP AND STEP THROUGH EACH COMMAND IN THE STEP
; F = PROCESS ONLY THE FIRST FOUR FILES
;###################################################################################


; MODIFICATION HISTORY:
;     OCT 15, 2004 WRITTEN BY: J.E. O'REILLY
;     NOV 13, 2014 -  JOR: Revised with new alpha switches which allow for more flexible control of the processing and future expansion of switch codes
;     NOV 20, 2014 -  JOR: Implemented switches function suggested by K. HYDE
;     DEC  9, 2014 -  JOR: Replaced SWITCHES with HAS
;     AUG  6, 2015 - KJWH: Added L2, L3B AND L3M examples
;     AUG 08, 2015 -  JOR: Added SWITCHES, (INFO SWITCH NOW WORKS ) [CHANGED INFO TO INF IN  READ_NC]
;     SEP 29, 2015 -  JOR: Added step DO_MANY_READS [ FROM KIM'S JUNK_READ_NC]
;     AUG 25, 2016 - KJWH: Updated and added several examples to test the recently updated READ_NC
;     AUG 26, 2016 - KJWH: Removed MANY_READS step (not necessary)
;-
; #########################################################################

;******************************
  ROUTINE_NAME  = 'READ_NC_DEMO'
;******************************
  SL = PATH_SEP()
  DIR_DEMO = !S.DEMO + ROUTINE_NAME + SL

;===> #####   SWITCHES 
  DO_HDF5_NC       = '' ; Compare the output and time between using the NETCDF vs HDF5 code to read the file
  DO_L2_HDF5       = ''
  DO_L2_HDF5_DATA  = ''
  DO_L2_HDF5_NAME  = ''
  DO_L2_HDF5_INFO  = ''
  DO_L2_HDF5_LOOK  = ''
  DO_L3B_HDF5 	   = 'Y'
  DO_L3B_HDF5_DATA = ''
  DO_L3B_HDF5_NAME = ''
  DO_L3B_HDF5_INFO = ''
  DO_L3B_HDF5_LOOK = ''
  DO_AVHRR_NC      = ''
  DO_MUR           = 'Y'
  DO_L3M           = ''
    
  INFO = 0
  VERBOSE = 0  
;|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||


;*******************************
  IF KEY(DO_HDF5_NC) THEN BEGIN
;*******************************
    SWITCHES,DO_HDF5_NC,STOPP=STOPP,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,INIT=INIT,R_FILES=R_FILES,R_DATASETS=R_DATASETS
    IF STOPP THEN STOP
    FILE = FIRST(FLS(!S.FILES + '*AVHRR*.nc*'))
    FILE = FIRST(FLS(!S.FILES + 'A2006089175500.L2_LAC_SUB_OC'))
    FILE = FIRST(FLS(!S.FILES + 'A2006089.L3B2_DAY_CHL.nc'))
  
    TIC
    PRINT, 'Reading the file with HDF5 code'
    S = READ_NC(FILE,PRODS=['GLOBAL','SD'],VERBOSE=VERBOSE,/HDF5)
    ST, S.SD
    ST, S.GLOBAL
    PRINT, 'Number of SD elements: ' + ROUNDS(N_ELEMENTS(TAG_NAMES(S.SD)))
    PRINT, 'Number of GLOBAL elements: ' + ROUNDS(N_ELEMENTS(TAG_NAMES(S.GLOBAL)))
    TOC
    IF STOPP THEN STOP
    
    TIC
    PRINT, 'Reading the file with NETCDF code'
    S = READ_NC(FILE,PRODS=['GLOBAL','SD'],VERBOSE=VERBOSE)
    ST, S.SD
    ST, S.GLOBAL
    PRINT, 'Number of SD elements: ' + ROUNDS(N_ELEMENTS(TAG_NAMES(S.SD)))
    PRINT, 'Number of GLOBAL elements: ' + ROUNDS(N_ELEMENTS(TAG_NAMES(S.GLOBAL))) 
    TOC
    IF STOPP THEN STOP
  ENDIF ; IF DO_HDF5_NC GE 1 THEN BEGIN



;*******************************
  IF KEY(DO_L2_HDF5) THEN BEGIN
;*******************************
    SWITCHES,DO_L2_HDF5,STOPP=STOPP,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,INIT=INIT,R_FILES=R_FILES,R_DATASETS=R_DATASETS
    IF STOPP THEN STOP
    FILE = FIRST(FLS(!S.FILES + 'A2006089175500.L2_LAC_SUB_OC'))
    S = READ_NC(FILE,PRODS=['CHLOR_A','GLOBAL','LATITUDE','LONGITUDE'],VERBOSE=VERBOSE)
    ST, S 
    ST, S.SD
    ST, S.GLOBAL
    IF STOPP THEN STOP
    S = READ_NC(FILE,PRODS=['SD'],VERBOSE=VERBOSE) ; Using SD as a prod returns all products
    ST, S.SD
    IF STOPP THEN STOP
    S = READ_NC(FILE,VERBOSE=VERBOSE) ; Providing no prods returns all SD products and the GLOBAL structure
    ST, S.SD
    IF STOPP THEN STOP
  ENDIF ; IF DO_L2_HDF5 GE 1 THEN BEGIN


;***************************
  IF KEY(DO_L2_HDF5_DATA) THEN BEGIN
 ;***************************
    SWITCHES,DO_L2_HDF5_DATA,STOPP=STOPP,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,INIT=INIT,R_FILES=R_FILES,R_DATASETS=R_DATASETS
    IF STOPP THEN STOP
    FILE = FIRST(FLS(!S.FILES + 'A2006089175500.L2_LAC_SUB_OC'))
    S = READ_NC(FILE,PRODS=['CHLOR_A','GLOBAL','LATITUDE','LONGITUDE'],/DATA,VERBOSE=VERBOSE,INFO=INFO) ; Returns an ERROR because more than one prod was provided
    PRINT, S
    IF STOPP THEN STOP
    S = READ_NC(FILE,PRODS=['CHLOR_A','GLOBAL'],/DATA,STRUCT=STRUCT,VERBOSE=VERBOSE,INFO=INFO) ; Works, but does not return any of the global information
    HELP, S
    ST, STRUCT
    IF STOPP THEN STOP
    S = READ_NC(FILE,PRODS='CHLOR_A',GLOBAL=GLOBAL,/DATA) ; Returns the GLOBAL information as a separate variable
    ST, GLOBAL
    IF STOPP THEN STOP
  ENDIF ; IF DO_L2 GE 1 THEN BEGIN


;*******************************
  IF KEY(DO_L2_HDF5_NAME) THEN BEGIN
;*******************************
    SWITCHES,DO_L2_HDF5_NAME,STOPP=STOPP,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,INIT=INIT,R_FILES=R_FILES,R_DATASETS=R_DATASETS
    IF STOPP THEN STOP
    FILE = FIRST(FLS(!S.FILES + 'A2006089175500.L2_LAC_SUB_OC'))
    S = READ_NC(FILE,PRODS=['CHLOR_A','GLOBAL','LATITUDE','LONGITUDE'],/NAMES,VERBOSE=VERBOSE)
    LI, S
    IF STOPP THEN STOP
  ENDIF ; IF DO_L2_HDF5 GE 1 THEN BEGIN
    

;*******************************
  IF KEY(DO_L2_HDF5_INFO) THEN BEGIN
;*******************************
    SWITCHES,DO_L2_HDF5_INFO,STOPP=STOPP,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,INIT=INIT,R_FILES=R_FILES,R_DATASETS=R_DATASETS
    IF STOPP THEN STOP
    FILE = FIRST(FLS(!S.FILES + 'A2006089175500.L2_LAC_SUB_OC'))
    S = READ_NC(FILE,/INFO,VERBOSE=VERBOSE)
    ST, S
    ST, S.GEOPHYSICAL_DATA
    IF STOPP THEN STOP
  ENDIF ; IF DO_L2_HDF5_INFO GE 1 THEN BEGIN
    
;*******************************
  IF KEY(DO_L2_HDF5_LOOK) THEN BEGIN
;*******************************
    SWITCHES,DO_L2_HDF5_LOOK,STOPP=STOPP,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,INIT=INIT,R_FILES=R_FILES,R_DATASETS=R_DATASETS
    IF STOPP THEN STOP
    FILE = FIRST(FLS(!S.FILES + 'A2006089175500.L2_LAC_SUB_OC'))
    S = READ_NC(FILE,PRODS=['CHLOR_A','LATITUDE','LONGITUDE'],/LOOK,VERBOSE=VERBOSE) ; NOTE: Only returns geophysical data so there will be no LAT/LON info returned
    ST, S
    ST, S.(0)
    IF STOPP THEN STOP
    S = READ_NC(FILE,/LOOK,VERBOSE=VERBOSE)
    ST, S
    IF STOPP THEN STOP
  ENDIF ; IF DO_L2_HDF5_INFO GE 1 THEN BEGIN    
    
;||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||| 

;***************************
  IF KEY(DO_L3B_HDF5) THEN BEGIN
;***************************
    SWITCHES,DO_L3B_HDF5,STOPP=STOPP,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,INIT=INIT,R_FILES=R_FILES,R_DATASETS=R_DATASETS    
    IF STOPP THEN STOP    
    FILE = FIRST(FLS(!S.FILES + 'A2006089.L3B2_DAY_CHL.nc'))
    S = READ_NC(FILE,PRODS= ['CHLOR_A','GLOBAL'],VERBOSE=VERBOSE)
    ST, S 
    ST, S.GLOBAL
    ST, S.SD
    IF STOPP THEN STOP
  ENDIF ; IF DO_L3B GE 1 THEN BEGIN
    
;***************************
  IF KEY(DO_L3B_HDF5_DATA) THEN BEGIN
;***************************
    SWITCHES,DO_L3B_HDF5_DATA,STOPP=STOPP,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,INIT=INIT,R_FILES=R_FILES,R_DATASETS=R_DATASETS
    IF STOPP THEN STOP
    FILE = FIRST(FLS(!S.FILES + 'A2006089.L3B2_DAY_CHL.nc'))
    S = READ_NC(FILE,PRODS= ['CHLOR_A','GLOBAL'],/DATA,VERBOSE=VERBOSE)
    ST, S
    IF STOPP THEN STOP
  ENDIF ; IF DO_L3B DO_L3B_HDF5_DATA 1 THEN BEGIN


;***************************
  IF KEY(DO_L3B_HDF5_NAME) THEN BEGIN
;***************************
    SWITCHES,DO_L3B_HDF5_NAME,STOPP=STOPP,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,INIT=INIT,R_FILES=R_FILES,R_DATASETS=R_DATASETS
    IF STOPP THEN STOP
    FILE = FIRST(FLS(!S.FILES + 'A2006089.L3B2_DAY_CHL.nc'))
    S = READ_NC(FILE,/NAMES,VERBOSE=VERBOSE)
    LI, S
    IF STOPP THEN STOP
  ENDIF ; IF DO_L3B_HDF5_NAME GE 1 THEN BEGIN


;***************************
  IF KEY(DO_L3B_HDF5_INFO) THEN BEGIN
;***************************
    SWITCHES,DO_L3B_HDF5_INFO,STOPP=STOPP,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,INIT=INIT,R_FILES=R_FILES,R_DATASETS=R_DATASETS
    IF STOPP THEN STOP
    FILE = FIRST(FLS(!S.FILES + 'A2006089.L3B2_DAY_CHL.nc'))
    S = READ_NC(FILE,/INFO,VERBOSE=VERBOSE)
    ST, S
    IF STOPP THEN STOP
  ENDIF ; IF DO_L3B_HDF5_INFO GE 1 THEN BEGIN


;***************************
  IF KEY(DO_L3B_HDF5_LOOK) THEN BEGIN
;***************************
    SWITCHES,DO_L3B_HDF5_LOOK,STOPP=STOPP,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,INIT=INIT,R_FILES=R_FILES,R_DATASETS=R_DATASETS
    IF STOPP THEN STOP
    FILE = FIRST(FLS(!S.FILES + 'A2006089.L3B2_DAY_CHL.nc'))
    S = READ_NC(FILE,PRODS=['CHLOR_A','LATITUDE','LONGITUDE'],/LOOK,VERBOSE=VERBOSE) ; NOTE: Only returns geophysical data so there will be no LAT/LON info returned
    ST, S
    ST, S.(0)
    IF STOPP THEN STOP
    S = READ_NC(FILE,/LOOK,VERBOSE=VERBOSE)
    ST, S
    IF STOPP THEN STOP
  ENDIF ; IF DO_L3B_HDF5_LOOK GE 1 THEN BEGIN
    
;***************************
  IF KEY(DO_AVHRR_NC) THEN BEGIN
;***************************
    SWITCHES,DO_AVHRR_NC,STOPP=STOPP,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,INIT=INIT,R_FILES=R_FILES,R_DATASETS=R_DATASETS
    IF STOPP THEN STOP
    FILE = FIRST(FLS(!S.FILES + '2006*AVHRR*.nc'))
    S = READ_NC(FILE,VERBOSE=VERBOSE)
    ST,S
    IF STOPP THEN STOP
  ENDIF ; IF DO_AVHRR_NC GE 1 THEN BEGIN


;***************************
  IF KEY(DO_MUR) THEN BEGIN
;***************************
    SWITCHES,DO_MUR,STOPP=STOPP,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,INIT=INIT,R_FILES=R_FILES,R_DATASETS=R_DATASETS
    IF STOPP THEN STOP
    FILE = FIRST(FLS(!S.FILES + '2015*MUR*.nc'))
    S = READ_NC(FILE,STRUCT=STRUCT,VERBOSE=VERBOSE,INFO=INFO)
    ST, S
    IF STOPP THEN STOP
  ENDIF ; IF DO_L3M GE 1 THEN BEGIN

  
;***************************
  IF KEY(DO_L3M) THEN BEGIN
;***************************
  SWITCHES,DO_L3M,STOPP=STOPP,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,INIT=INIT,R_FILES=R_FILES,R_DATASETS=R_DATASETS    
  IF STOPP THEN STOP
  FILES = FLS(!S.FILES + 'O1997128.L3m*.nc')& PL,FILES
    ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
    FOR NTH = 0,N_ELEMENTS(FILES)-1 DO BEGIN
      FILE = FILES[NTH]
      S = READ_NC(FILE,PRODS= ['CHLOR_A','GLOBAL','SD'],STRUCT=STRUCT,VERBOSE=VERBOSE,INFO=INFO)
      IF KEY(INFO) THEN PL, S ELSE HELP, S 
    ENDFOR;FOR NTH = 0,N_ELEMENTS(FILES)-1 DO BEGIN
    ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
  ENDIF ; IF DO_L3M GE 1 THEN BEGIN

  



END; #####################  END OF ROUTINE ################################
