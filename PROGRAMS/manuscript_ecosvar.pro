; $ID:	MANUSCRIPT_ECOSVAR.PRO,	2020-07-08-15,	USER-KJWH	$

	PRO MANUSCRIPT_ECOSVAR

;+
; NAME:
;		MANUSCRIPT_ECOSVAR
;
; PURPOSE:;
;		This procedure creates figures for the ECOSVAR manuscript
;
; CATEGORY:
;		PLOTTING
;
; OUTPUTS:
;		This procedure returns figures for the ECOSVAR manuscript
;
;
;	NOTES:
;
;
; MODIFICATION HISTORY:
;			Written Sep 11, 2009 by K.J.W.Hyde, 28 Tarzwell Drive, NMFS, NOAA 02882 (kimberly.hyde@noaa.gov)
;-
;	****************************************************************************************************
	ROUTINE_NAME = 'MANUSCRIPT_ECOSVAR'

;	===> Initialize ERROR to a null string. If errors are encountered ERROR will be set to a message.
;			 The calling routine can check error (e.g.IF ERROR NE 0 then there was a problem and do this or that)
	ERROR = ''

  DO_FIG_1         = 0
  DO_BATHY_FIG     = 0
  DO_POLYGONS      = 2
  DO_PERIODOGRAM   = 0
  DO_CHL_TS        = 0  
  DO_SPAN          = 0
  DO_MEANS         = 0
  DO_TRENDS        = 2
  DO_STD_VAR       = 0
  DO_MON_MAXMIN    = 0
  DO_LNP_PROB      = 0
  
  DIR_IMAGES = 'D:\IDL\IMAGES\'
  
  COMPUTER = GET_COMPUTER()
  DIR = 'T'                                                                                      ; DEFAULT DRIVE LETTER FOR THE PROJECTS DIRECTORY ON THE SERVERS
  IF COMPUTER EQ 'HALIBUT'   THEN DIR = 'D'                                                      ; PROJECTS DRIVE ON KIM'S LAPTOP
   
  DIR_BROWSE = DIR + ':\PROJECTS\ECOSVAR\BROWSE\'
  DIR_FIGS   = DIR + ':\PROJECTS\ECOSVAR\FIGURES\'
  DIR_DATA   = DIR + ':\PROJECTS\ECOSVAR\DATA\'
  DIR_PLOTS  = DIR + ':\PROJECTS\ECOSVAR\PLOTS\'
  
; **************************************
  IF DO_FIG_1 GE 1 THEN BEGIN
; **************************************
    OVERWRITE = DO_FIG_1 GT 1
    BATHYFILE = 'D:\IDL\IMAGES\SRTM30-EC-PXY_1024_1024-BATHY-SMOOTH_5.SAVE' & FP = PARSE_IT(BATHYFILE)
  ;  STRUCT_SD_2PNG,BATHYFILE,DIR_OUT=DIR_BROWSE,/ADD_COLORBAR,PAL='PAL_BATHY',/ADD_COAST,OVERWRITE=OVERWRITE
    PAL_BATHY,R,G,B
    LAND  = READ_LANDMASK(MAP='EC',/STRUCT)
    IMAGE = BYTARR(1024,1024)
    IMAGE(LAND.OCEAN) = 255
    IMAGE(LAND.LAND)  = 252
    IMAGE(LAND.COAST) = 0
    IMAGE = MAP_ADD_BATHY(IMAGE, MAP='EC', BATHS=['40'], COLOR=255, THICK=.5,_EXTRA=_extra)
    IMAGE = MAP_ADD_BATHY(IMAGE, MAP='EC', BATHS=['60'], COLOR=255, THICK=.5,_EXTRA=_extra,LINESTYLE=2)
    IMAGE = MAP_ADD_BATHY(IMAGE, MAP='EC', BATHS=['200'], COLOR=0, THICK=.5,_EXTRA=_extra)
    IMAGE = MAP_ADD_BATHY(IMAGE, MAP='EC', BATHS=['2000'],COLOR=0, THICK=2,_EXTRA=_extra,LINESTYLE=2)
    CHARSIZE = 2.5
    CHARTHICK = 2
    IMAGE = MAP_ADD_TXT(IMAGE,0.06, 0.35,'SAB', ALIGN=-0.1,  CHARSIZE=CHARSIZE, COLOR=0, CHARTHICK=CHARTHICK,/NORMAL,FONT='HELVETICA')
    IMAGE = MAP_ADD_TXT(IMAGE,0.27, 0.53,'CH',  ALIGN=-0.1,  CHARSIZE=CHARSIZE, COLOR=0, CHARTHICK=CHARTHICK,/NORMAL,FONT='HELVETICA')
    IMAGE = MAP_ADD_TXT(IMAGE,0.31, 0.66,'MAB', ALIGN=-0.1,  CHARSIZE=CHARSIZE, COLOR=0, CHARTHICK=CHARTHICK,/NORMAL,FONT='HELVETICA')
    IMAGE = MAP_ADD_TXT(IMAGE,0.48, 0.87,'GOM', ALIGN=-0.1,  CHARSIZE=CHARSIZE, COLOR=0, CHARTHICK=CHARTHICK,/NORMAL,FONT='HELVETICA')
    IMAGE = MAP_ADD_TXT(IMAGE,0.54, 0.77,'GB',  ALIGN=-0.1,  CHARSIZE=CHARSIZE, COLOR=0, CHARTHICK=CHARTHICK,/NORMAL,FONT='HELVETICA')
    IMAGE = MAP_ADD_TXT(IMAGE,0.75, 0.90,'SS',  ALIGN=-0.1,  CHARSIZE=CHARSIZE, COLOR=0, CHARTHICK=CHARTHICK,/NORMAL,FONT='HELVETICA')
    IMAGE = MAP_ADD_TXT(IMAGE,0.43, 0.75,'NS',  ALIGN=-0.1,  CHARSIZE=CHARSIZE, COLOR=0, CHARTHICK=CHARTHICK,/NORMAL,FONT='HELVETICA')
       
    WRITE_PNG,DIR_FIGS + 'FIGURE_1-EC-LANDMASK-LABELS.PNG', IMAGE, R,G,B
    OLDDEVICE= !D.NAME
    MAP_EC
    PS_IMAGE, FILES=DIR_FIGS + 'FIGURE_1-EC-LANDMASK-LABELS.PNG',DIR_OUT=DIR_FIGS, /COLOR,FULL=full,/NO_CLOSE,SCALE=2,XOFFSET=2,YOFFSET=3
    !P.FONT = 0
    LATS = [20,25,30,35,40,45,50]     & LATNAMES = STRTRIM(LATS, 2)
    LONS = [-85,-80,-75,-70,-65,-60,-55] & LONNAMES = STRTRIM(LONS, 2)    
    MAP_GRID, LABEL=1, LATS=LATS, LATNAMES=LATNAMES, LONS=LONS, LONNAMES=LONNAMES, GLINESTYLE=0, CHARSIZE=0.75,/BOX_AXES,COLOR=0  
    DEVICE,/CLOSE
    SET_PLOT,OLDDEVICE
    IMAGE_TRIM,DIR_FIGS + 'FIGURE_1-EC-LANDMASK-LABELS.PS', DIR_OUT=DIR_PLOTS, DPI=600, BACKGROUND=BACKGROUND,GRACE=[40,40,40,40], /OVERWRITE    
 STOP   
  ENDIF  ; DO_FIG_1  
  
; **************************************
  IF DO_BATHY_FIG GE 1 THEN BEGIN
; **************************************
    OVERWRITE = DO_BATHY_FIG GT 1
    BATHYFILE = 'D:\IDL\IMAGES\SRTM30-EC-PXY_1024_1024-BATHY-SMOOTH_5.SAVE' & FP = PARSE_IT(BATHYFILE)
    PAL_BATHY,R,G,B
    STRUCT_SD_2PNG,BATHYFILE,DIR_OUT=DIR_BROWSE,PAL='PAL_BATHY',/ADD_COAST,OVERWRITE=OVERWRITE,/ADD_LAND, LAND_COLOR=255
    
    LEVELS   = ['40','60','200','2000']
    C_COLORS = [253,253,0,0]
    C_THICK  = [2.5,2.5,1.5,3]
    C_LINESTYLE = [0,2,0,2] 
    C_LABELS=[0,0,0,0]
    IMAGE=STRUCT_SD_CONTOUR(BATHYFILE,LEVELS=levels,C_colors=C_colors, C_thick=C_thick,C_LINESTYLE=C_LINESTYLE,MIN_VALUE=MIN_VALUE, MIN_PTS=MIN_PTS,$
                     C_LABELS=C_LABELS,/ADD_LAND,/ADD_COAST,LAND_COLOR=255,ADD_EXTRA=ADD_EXTRA,/CONFILE,MED=MED,C_CHARSIZE=0.75,PAL='PAL_BATHY')
    CHARSIZE = 2.5
    IMAGE = MAP_ADD_TXT(IMAGE,0.06, 0.35,'SAB', ALIGN=-0.1, CHARSIZE=CHARSIZE, COLOR=0, CHARTHICK=1,/NORMAL,FONT='HELVETICA')
    IMAGE = MAP_ADD_TXT(IMAGE,0.27, 0.53,'CH',  ALIGN=-0.1,  CHARSIZE=CHARSIZE, COLOR=0, CHARTHICK=CHARTHICK,/NORMAL,FONT='HELVETICA')
    IMAGE = MAP_ADD_TXT(IMAGE,0.31, 0.66,'MAB', ALIGN=-0.1, CHARSIZE=CHARSIZE, COLOR=0, CHARTHICK=1,/NORMAL,FONT='HELVETICA')
    IMAGE = MAP_ADD_TXT(IMAGE,0.48, 0.87,'GOM', ALIGN=-0.1, CHARSIZE=CHARSIZE, COLOR=0, CHARTHICK=1,/NORMAL,FONT='HELVETICA')
    IMAGE = MAP_ADD_TXT(IMAGE,0.54, 0.77,'GB',  ALIGN=-0.1,  CHARSIZE=CHARSIZE, COLOR=0, CHARTHICK=1,/NORMAL,FONT='HELVETICA')
    IMAGE = MAP_ADD_TXT(IMAGE,0.75, 0.90,'SS',  ALIGN=-0.1,  CHARSIZE=CHARSIZE, COLOR=0, CHARTHICK=1,/NORMAL,FONT='HELVETICA')
    IMAGE = MAP_ADD_TXT(IMAGE,0.43, 0.75,'NS',  ALIGN=-0.1,  CHARSIZE=CHARSIZE, COLOR=0, CHARTHICK=1,/NORMAL,FONT='HELVETICA')                     
    WRITE_PNG,DIR_FIGS + 'FIGURE_1A-' + FP.NAME + '-40_60_200_2000.PNG', IMAGE, R,G,B
    IMAGE = MAP_EC_MASK_DIAGONAL(IMAGE, BACKGROUND=background,ERROR = error)
    WRITE_PNG,DIR_FIGS + 'FIGURE_1A-' + FP.NAME + '-40_60_200_2000-DIAGONAL_MASK.PNG', IMAGE, R,G,B        
    
    IMAGE = READ_PNG(DIR_BROWSE + FP.NAME + '.PNG',R,G,B)
    IMAGE = MAP_ADD_BATHY(IMAGE, MAP='EC', BATHS=['50'], COLOR=253, THICK=2.5,_EXTRA=_extra)    
    IMAGE = MAP_ADD_BATHY(IMAGE, MAP='EC', BATHS=['200'], COLOR=0, THICK=1.5,_EXTRA=_extra)
    IMAGE = MAP_ADD_BATHY(IMAGE, MAP='EC', BATHS=['2000'],COLOR=0, THICK=3,_EXTRA=_extra,LINESTYLE=2)
        
    CHARSIZE = 2.5
    IMAGE = MAP_ADD_TXT(IMAGE,0.06, 0.35,'SAB', ALIGN=-0.1, CHARSIZE=CHARSIZE, COLOR=0, CHARTHICK=1,/NORMAL,FONT='HELVETICA')
    IMAGE = MAP_ADD_TXT(IMAGE,0.31, 0.49,'CH',  ALIGN=-0.1, CHARSIZE=CHARSIZE, COLOR=0, CHARTHICK=1,/NORMAL,FONT='HELVETICA')
    IMAGE = MAP_ADD_TXT(IMAGE,0.31, 0.66,'MAB', ALIGN=-0.1, CHARSIZE=CHARSIZE, COLOR=0, CHARTHICK=1,/NORMAL,FONT='HELVETICA')
    IMAGE = MAP_ADD_TXT(IMAGE,0.48, 0.87,'GOM', ALIGN=-0.1, CHARSIZE=CHARSIZE, COLOR=0, CHARTHICK=1,/NORMAL,FONT='HELVETICA')
    IMAGE = MAP_ADD_TXT(IMAGE,0.54, 0.77,'GB',  ALIGN=-0.1, CHARSIZE=CHARSIZE, COLOR=0, CHARTHICK=1,/NORMAL,FONT='HELVETICA')
    IMAGE = MAP_ADD_TXT(IMAGE,0.75, 0.90,'SS',  ALIGN=-0.1, CHARSIZE=CHARSIZE, COLOR=0, CHARTHICK=1,/NORMAL,FONT='HELVETICA')
    IMAGE = MAP_ADD_TXT(IMAGE,0.43, 0.75,'NS',  ALIGN=-0.1, CHARSIZE=CHARSIZE, COLOR=0, CHARTHICK=1,/NORMAL,FONT='HELVETICA')
    WRITE_PNG,DIR_FIGS + 'FIGURE_1A-' + FP.NAME + '-50_200_2000.PNG', IMAGE, R,G,B
    IMAGE = MAP_EC_MASK_DIAGONAL(IMAGE, BACKGROUND=background,ERROR = error)
    WRITE_PNG,DIR_FIGS + 'FIGURE_1A-' + FP.NAME + '-50_200_2000-DIAGONAL_MASK.PNG', IMAGE, R,G,B
    
    OLDDEVICE= !D.NAME
    MAP_EC
    PS_IMAGE, FILES=DIR_FIGS + 'FIGURE_1A-' + FP.NAME + '-50_200_2000.PNG',DIR_OUT=DIR_FIGS, /COLOR,FULL=full,/NO_CLOSE,SCALE=2,XOFFSET=2,YOFFSET=3
    !P.FONT = 0
    LATS = [20,25,30,35,40,45,50]     & LATNAMES = STRTRIM(LATS, 2)
    LONS = [-85,-80,-75,-70,-65,-60,-55] & LONNAMES = STRTRIM(LONS, 2)    
    MAP_GRID, LABEL=1, LATS=LATS, LATNAMES=LATNAMES, LONS=LONS, LONNAMES=LONNAMES, GLINESTYLE=0, CHARSIZE=0.75,/BOX_AXES,COLOR=0  
    LEG=COLOR_BAR_SCALE(PROD='BATHY',POSITION=[0.02, 0.96,0.45, 0.98],CHARSIZE=0.75,/BOTTOM,TITLE=TITLE,/NO_UNIT,SPECIAL_SCALE=SPECIAL_SCALE,PAL='PAL_BATHY')
    DEVICE,/CLOSE
    SET_PLOT,OLDDEVICE
    IMAGE_TRIM,DIR_FIGS + 'FIGURE_1A-' + FP.NAME + '-50_200_2000.PS', DIR_OUT=DIR_FIGS, DPI=600, BACKGROUND=BACKGROUND,GRACE=[40,40,40,40], /OVERWRITE 
    
 STOP   
  ENDIF  ; DO_BATHY_FIG


; **************************************
  IF DO_POLYGONS GE 1 THEN BEGIN
; **************************************
    OVERWRITE = DO_POLYGONS GT 1
    
    POLYS = READ_CSV(DIR_DATA + 'ECOSVAR_SUBAREAS.CSV')
    COLORS = [4,12,18,22]
    
    MAP = 'EC'
    LANDMASK = READ_LANDMASK(MAP='EC',/STRUCT)
    IMAGE    = READ_LANDMASK(MAP='EC')
    ZWIN, IMAGE
    OLDDEVICE= !D.NAME
    MAP_EC
    PAL_36,R,G,B

    SETS = WHERE_SETS(POLYS.SUBAREA)
    FOR NTH = 0L, N_ELEMENTS(SETS)-1 DO BEGIN
      SUBS = WHERE_SETS_SUBS(SETS[NTH])
      SET = POLYS(SUBS)
      IF NTH EQ 0 THEN POLYGONS = SET[0].SUBAREA ELSE POLYGONS = [POLYGONS, SET[0].SUBAREA]
      IF NTH EQ 0 THEN NAMES    = SET[0].NAME    ELSE NAMES    = [NAMES,    SET[0].NAME]
      LON  = SET.LON
      LAT  = SET.LAT      
      IM = MAP_DEG2IMAGE(IMAGE,LON,LAT,X=x,Y=y,AROUND=0)
      POLYFILL, X, Y, COLOR=COLORS[NTH], /DEVICE
    ENDFOR
    
    IM_SUBS = TVRD()    
    IM=MAP_ADD_BATHY(IMAGE,BATHS=[50,200],COLOR=34,MAP='EC')
    TV,IM
    IM_BATH=TVRD()
    IM=MAP_ADD_BATHY_LABEL(IMAGE, MAP='EC', BATHS=[50,200],COLOR=22)
    TV,IM
    IM_LABEL=TVRD()
    ZWIN

    OK_IMAGE = WHERE(IMAGE NE 0)
    IM_SUBS(OK_IMAGE) = IMAGE(OK_IMAGE)
    MASK = IM_SUBS
    IMAGE(LANDMASK.OCEAN) = 36
    OK = WHERE(IM_SUBS NE 0)
    IMAGE[OK] = IM_SUBS[OK]
    OK = WHERE(IM_BATH NE 0)
    IMAGE[OK] = IM_BATH[OK]
    OK = WHERE(IM_LABEL NE 0)
    IMAGE[OK] = 0

    IMAGE(LANDMASK.LAND)  = 32
    IMAGE(LANDMASK.COAST) = 0

    OK = WHERE(MASK NE 0)
    IM_SUBS[OK] = MASK[OK]

    EDITFILE = DIR_IMAGES + 'MASK_SUBAREA-NEC-PXY_1024_1024-ECOSVAR_POLYGONS-TO_BE_EDITED.PNG' & WRITE_PNG, EDITFILE, IM_SUBS, R,G,B
    MASKFILE = DIR_IMAGES + 'MASK_SUBAREA-NEC-PXY_1024_1024-ECOSVAR_POLYGONS.PNG'
    PNGFILE  = DIR_IMAGES + 'MASK_SUBAREA-NEC-PXY_1024_1024-ECOSVAR_POLYGONS-DISPLAY.PNG' & WRITE_PNG, PNGFILE, IMAGE, R,G,B
    CSVFILE  = DIR_IMAGES + 'MASK_SUBAREA-NEC-PXY_1024_1024-ECOSVAR_POLYGONS.CSV'
    SAVEFILE = DIR_IMAGES + 'MASK_SUBAREA-NEC-PXY_1024_1024-ECOSVAR_POLYGONS.SAVE'


    STRUCT1=CREATE_STRUCT('SUBAREA_CODE','','SUBAREA_NAME','','NICKNAME','')
    STRUCT1=REPLICATE(STRUCT1,3)
    STRUCT1[0].SUBAREA_CODE =0  & STRUCT1[0].SUBAREA_NAME = 'OCEAN'     & STRUCT1[0].NICKNAME='OCEAN'
    STRUCT1[1].SUBAREA_CODE =1  & STRUCT1[1].SUBAREA_NAME = 'COAST'     & STRUCT1[1].NICKNAME='COAST'
    STRUCT1(2).SUBAREA_CODE =2  & STRUCT1(2).SUBAREA_NAME = 'LAND'      & STRUCT1(2).NICKNAME='LAND'

    STRUCT=CREATE_STRUCT('SUBAREA_CODE','','SUBAREA_NAME','','NICKNAME','')
    STRUCT=REPLICATE(STRUCT,N_ELEMENTS(POLYGONS))
    STRUCT.SUBAREA_CODE = INDGEN(N_ELEMENTS(POLYGONS))+5
    STRUCT.SUBAREA_NAME = STRUPCASE(POLYGONS)
    STRUCT.NICKNAME     = STRUPCASE(NAMES)

    CSV = STRUCT_CONCAT(STRUCT1,STRUCT)

    INFILE=MASKFILE
    NOTES='MASK_SUBAREA'

;     ===> Write the Struct to a csv
    STRUCT_2CSV,CSVFILE,CSV
    OK=WHERE(CSV.SUBAREA_CODE NE MISSINGS(CSV.SUBAREA_CODE))
    SUBAREA_CODE= CSV[OK].SUBAREA_CODE
    SUBAREA_NAME= CSV[OK].SUBAREA_NAME
    DATA = READ_PNG(MASKFILE)

    STRUCT_SD_WRITE,SAVEFILE, IMAGE=DATA, PROD=PROD,  MAP=MAP, $
      MISSING_CODE=missing_code, MISSING_NAME=missing_name, $
      SUBAREA_CODE=SUBAREA_CODE,SUBAREA_NAME=subarea_name,$
      SCALING='LINEAR',  INTERCEPT=0.0,  SLOPE=1.0,TRANSFORMATION=TRANSFORMATION,$
      DATA_UNITS='',PERIOD=PERIOD, $
      INFILE=INFILE,$
      NOTES='MASK_SUBAREA', OVERWRITE=OVERWRITE, ERROR=ERROR
    
    
    
  ENDIF ; DO_POLYGONS  

  
; **************************************
  IF DO_PERIODOGRAM GE 1 THEN BEGIN
; **************************************
    OVERWRITE = DO_PERIODOGRAM GT 1  
  
    PSFILE   = DIR_PLOTS + 'LNP_FREQUENCY.PS'                                                      ; OUTPUT FILE 
    CHL      = READALL(DIR_DATA + '!D-MASK_SUBAREA-EC-PXY_1024_1024-LNP-SEA_AQU-CHLOR_A.CSV')      ; OUTPUT FROM TS_SUBAREAS, USING CHLOR_A DAILY AVERAGES AND THE MASK :MASK_SUBAREA-EC-PXY_1024_1024-LNP.PNG  
    BSET     = WHERE_SETS(CHL.SUBAREA_CODE)                                                        ; FIND THE NUMBER OF SUBAREA CODES
    
    PSPRINT,FILENAME=PSFILE,/COLOR,/FULL,/TIMES                                                    ; CREATE THE POSTSCRIPT DEVICE FOR THE PLOTS
    !P.MULTI = [0,1,N_ELEMENTS(BSET)]                                                              ; CREATE A FIGURE WITH ONE PLOT PER CODE
    XTITLE   = 'Frequency ' + UNITS('FREQ_Y')                                                      ; XTITLE FOR PLOTS
    YTITLE   = 'LNP Peak Height'                                                                   ; YTITLE FOR PLOTS
    XMARGIN  = [8,2]                                                                               ; XMARGIN FOR PLOTS
    YMARGIN  = [2,2]                                                                               ; YMARGIN FOR PLOTS
    MIN_GOOD = 20                                                                                  ; EACH CODE MUST HAVE AT MORE THAN 20 OBSERVATIONS
  
  ; ***** Loop through each subarea and create a PERIODOGRAM *****
    FOR N = 0L, N_ELEMENTS(BSET)-1 DO BEGIN
      SUBS = WHERE_SETS_SUBS(BSET(N))                                                              ; GET THE SUBSCRIPTS FOR THE SUBAREA CODE
      SET  = CHL(SUBS)                                                                             ; CREATE A SUBSET OF DATA FOR THE SUBAREA CODE
      OK   = WHERE(SET.GMEAN NE MISSINGS(SET.GMEAN),COUNT)                                         ; FIND THE NUMBER OF NON-MISSING DATA
      IF COUNT LE MIN_GOOD THEN CONTINUE                                                           ; IF THERE ARE LESS THAN 20 OBSERVATIONS, GOTO NEXT SUBAREA CODE
      FP   = PARSE_IT(SET[OK].FIRST_NAME,/ALL)                                                     ; PARSE THE FILE NAMES
      YF   = YRFRA(FP.DATE_START)                                                                  ; GENERATE A YEAR-FRACTION DATE (YF)    
      DATA = FLOAT(SET[OK].GMEAN)                                                                  ; CONVERT MEAN DATA TO FLOAT
      SUBAREA_NAME = SET[0].SUBAREA_NAME                                                           ; SUBAREA_NAME
      SUBAREA_CODE = SET[0].SUBAREA_CODE                                                           ; SUBAREA_CODE                  
      
      DATA = DEMEAN(DATA,DMEAN=DMEAN)                                                              ; DEMEAN THE DATA (TO REMOVE THE ZERO FREQUENCY FOR THE LNP [SEE>PRESS ET. AL.])
      S    = STATS2(YF,DATA,MODEL='LSY',/QUIET)                                                    ; DO THE TREND CALCULATION ON THE DEMEANED DATA        
      LNP  = LNP_TEST(YF,DATA,WK1=WK1,WK2=WK2,JMAX=JMAX)                                           ; RUN THE LNP ON THE DEMEANED DATA - RETURNS A 2-ELEMENT VECTOR CONTAINING THE 
                                                                                                   ; MAXIMUM PEAK IN THE LOMB NORMALIZED PERIODOGRAM AND ITS SIGNIFICANCE. 
                                                                                                   ; THE SIGNIFICANCE IS A VALUE IN THE INTERVAL [0.0, 1.0]
                                                                                                   ; A SMALL VALUE INDICATES THAT A SIGNIFICANT PERIODIC SIGNAL IS PRESENT.
      PEAK = LNP[0]
      PROB = LNP[1]
      PRINT,'SUBAREA ',SUBAREA_NAME,'     MAX PEAK=',NUM2STR(PEAK,DECIMALS=2),'    PERIOD OF MAX=', NUM2STR(WK1(JMAX),DECIMALS=2)
      YRANGE = [0,PEAK+1.]                                                                         ; GIVE SOME ROOM ABOVE THE PEAK
      XRANGE = [0.1,20]
      
      IF N MOD 2 EQ 0            THEN _YTITLE = YTITLE ELSE _YTITLE = ' '                          ; ONLY WRITE THE YTITLE ON EVERY OTHER PLOT
      IF N EQ N_ELEMENTS(BSET)-1 THEN _XTITLE = XTITLE ELSE _XTITLE = ' '                          ; ONLY WRITE THE XTITLE ON THE LAST PLOT
      
      PLOT,WK1,WK2,LINESTYLE=0,THICK=2,CHARSIZE=1.5,$                                              ; PLOT THE RESULTS OF THE LNP TEST
          XRANGE=XRANGE,XTITLE=_XTITLE,XCHARSIZE=1.5,XTICKS=4,XMINOR=3 ,XSTYLE=9,XMARGIN=XMARGIN,XTICKLEN=-0.2,/XLOG,XTICKV=[0.1,0.3,1.0,3.0,10.0],$
          YRANGE=YRANGE,YTITLE=_YTITLE,YCHARSIZE=1.5,YTICKS=0,YMINOR=1,YSTYLE=9,YMARGIN=YMARGIN,YTICKLEN=-0.01 
      XYOUTS,5,0.8*PEAK, SUBAREA_NAME,/DATA ,CHARSIZE=1.25                                         ; ADD THE SUBAREA NAME
    ENDFOR ; FOR N = 0L, N_ELEMENTS(BSET)-1 DO BEGIN
  
    PSPRINT                                                                                        ; CLOSE THE POSTSCRIPT DEVICE
    IMAGE_TRIM,PSFILE,DIR_OUT=DIR_OUT,DPI=600,BACKGROUND=255,GRACE=[10,10,10,10],/OVERWRITE        ; CONVERT THE POSTSCRIPT TO A PNG
     
  ENDIF ; DO_PERIODOGRAM
  
  
; **************************************
  IF DO_CHL_TS GE 1 THEN BEGIN
; **************************************
    OVERWRITE = DO_CHL_TS GT 1  
  
    PSFILE   = DIR_PLOTS + 'CHL_TIMEPLOTS.PS'                                                      ; OUTPUT FILE 
    CHL      = READALL(DIR_DATA + '!D-MASK_SUBAREA-EC-PXY_1024_1024-LNP-SEA_AQU-CHLOR_A.CSV')      ; OUTPUT FROM TS_SUBAREAS, USING CHLOR_A DAILY AVERAGES AND THE MASK :MASK_SUBAREA-EC-PXY_1024_1024-LNP.PNG  
    BSET     = WHERE_SETS(CHL.SUBAREA_CODE)                                                        ; FIND THE NUMBER OF SUBAREA CODES
    
    PSPRINT,FILENAME=PSFILE,/COLOR,/FULL,/TIMES                                                    ; CREATE THE POSTSCRIPT DEVICE FOR THE PLOTS
    !P.MULTI = [0,1,N_ELEMENTS(BSET)]                                                              ; CREATE A FIGURE WITH ONE PLOT PER CODE
    X  = DATE_2JD([19970901,20091231])                                                             ; DATE RANGE FOR PLOTS
    AX  = DATE_AXIS(X,/MONTH, STEP_SIZE=4)                                                         ; CREATE DATE AXIS INFORMATION
    AX.TICKNAME[0] = 'S'
    YTITLE   = 'Chlorophyll ' + UNITS('CHLOR_A',/NO_NAME)                                          ; YTITLE FOR PLOTS
    YTITLE2  = 'Demeaned !CChlorophyll ' + UNITS('CHLOR_A',/NO_NAME)                               ; YTITLE FOR PLOTS
    XTITLE   = ' '                                                                                 ; XTITLE FOR PLOTS
    XMARGIN  = [8,2]                                                                               ; XMARGIN FOR PLOTS
    YMARGIN  = [2,2]                                                                               ; YMARGIN FOR PLOTS
    YRANGE   = [0.1,10]
    YRANGE2  = [-5,5]
    XRANGE   = AX.JD
  
  ; ***** Loop through each subarea *****
    FOR N = 0L, N_ELEMENTS(BSET)-1 DO BEGIN
      SUBS = WHERE_SETS_SUBS(BSET(N))                                                              ; GET THE SUBSCRIPTS FOR THE SUBAREA CODE
      SET  = CHL(SUBS)                                                                             ; CREATE A SUBSET OF DATA FOR THE SUBAREA CODE
      OK   = WHERE(SET.GMEAN NE MISSINGS(SET.GMEAN),COUNT)                                         ; FIND THE NUMBER OF NON-MISSING DATA
      FP   = PARSE_IT(SET[OK].FIRST_NAME,/ALL)                                                     ; PARSE THE FILE NAMES
      JD   = DATE_2JD(FP[OK].DATE_START)                                                           ; CONVERT THE DATE TO JD    
      DATA = FLOAT(SET[OK].GMEAN)                                                                  ; CONVERT MEAN DATA TO FLOAT
      SUBAREA_NAME = SET[0].SUBAREA_NAME                                                           ; SUBAREA_NAME
      SUBAREA_CODE = SET[0].SUBAREA_CODE                                                           ; SUBAREA_CODE                      
      DDATA = DEMEAN(DATA,DMEAN=DMEAN)                                                             ; DEMEAN THE DATA (TO REMOVE THE ZERO FREQUENCY FOR THE LNP [SEE>PRESS ET. AL.])
  
      IF N MOD 2 EQ 0 THEN _YTITLE = YTITLE ELSE _YTITLE = ' '                                     ; ONLY WRITE THE YTITLE ON EVERY OTHER PLOT
      PLOT,  AX.JD,YRANGE,/YLOG,CHARSIZE=1.75,/NODATA,$ 
             YTITLE=_YTITLE,YRANGE=YRANGE,YSTYLE=9,YMARGIN=YMARGIN,YTICKS=YTICKS,YMINOR=YMINOR,$
             XTITLE=_XTITLE,XRANGE=XRANGE,XSTYLE=8,XMARGIN=XMARGIN,XTICKS=AX.TICKS,XMINOR=2,XTICKNAME=AX.TICKNAME,XTICKV=AX.TICKV,XTICK_GET=XTICK_GET             
      OPLOT, JD,DATA,THICK=3,COLOR=0
      XYOUTS,DATE_2JD(20070101),5, SUBAREA_NAME,/DATA ,CHARSIZE=1.0                                ; ADD THE SUBAREA NAME
    ENDFOR ; FOR N = 0L, N_ELEMENTS(BSET)-1 DO BEGIN
  
    ; ***** Loop through each subarea *****
    FOR N = 0L, N_ELEMENTS(BSET)-1 DO BEGIN
      SUBS = WHERE_SETS_SUBS(BSET(N))                                                              ; GET THE SUBSCRIPTS FOR THE SUBAREA CODE
      SET  = CHL(SUBS)                                                                             ; CREATE A SUBSET OF DATA FOR THE SUBAREA CODE
      OK   = WHERE(SET.GMEAN NE MISSINGS(SET.GMEAN),COUNT)                                         ; FIND THE NUMBER OF NON-MISSING DATA
      FP   = PARSE_IT(SET[OK].FIRST_NAME,/ALL)                                                     ; PARSE THE FILE NAMES
      JD   = DATE_2JD(FP[OK].DATE_START)                                                           ; CONVERT THE DATE TO JD    
      DATA = FLOAT(SET[OK].GMEAN)                                                                  ; CONVERT MEAN DATA TO FLOAT
      SUBAREA_NAME = SET[0].SUBAREA_NAME                                                           ; SUBAREA_NAME
      SUBAREA_CODE = SET[0].SUBAREA_CODE                                                           ; SUBAREA_CODE                       
      DDATA = DEMEAN(DATA,DMEAN=DMEAN)                                                             ; DEMEAN THE DATA (TO REMOVE THE ZERO FREQUENCY FOR THE LNP [SEE>PRESS ET. AL.])
 
      IF N MOD 2 EQ 0 THEN _YTITLE = YTITLE2 ELSE _YTITLE = ' '                                    ; ONLY WRITE THE YTITLE ON EVERY OTHER PLOT      
      PLOT,  AX.JD,YRANGE,CHARSIZE=1.75,/NODATA,$
             YTITLE=_YTITLE,YRANGE=YRANGE2,YSTYLE=9,YMARGIN=YMARGIN,YTICKS=YTICKS,YMINOR=YMINOR,$
             XTITLE=_XTITLE,XRANGE=XRANGE, XSTYLE=8,XMARGIN=XMARGIN,XTICKS=AX.TICKS,XMINOR=2,XTICKNAME=AX.TICKNAME,XTICKV=AX.TICKV,XTICK_GET=XTICK_GET             
      OPLOT, AX.JD,[0,0],THICK=1,COLOR=33
      OPLOT, JD,DDATA,THICK=3,COLOR=0
      XYOUTS,DATE_2JD(20070101),5, SUBAREA_NAME,/DATA ,CHARSIZE=1.0                                ; ADD THE SUBAREA NAME
    ENDFOR ; FOR N = 0L, N_ELEMENTS(BSET)-1 DO BEGIN
    PSPRINT                                                                                        ; CLOSE THE POSTSCRIPT DEVICE
STOP    
    IMAGE_TRIM,PSFILE,DIR_OUT=DIR_OUT,DPI=600,BACKGROUND=255,GRACE=[10,10,10,10],/OVERWRITE        ; CONVERT THE POSTSCRIPT TO A PNG
     
  ENDIF ; DO_CHL_TS
  
; **************************************
  IF DO_SPAN GE 1 THEN BEGIN
; **************************************
    OVERWRITE = DO_SPAN GT 1   
    YFILE = 'D:\PROJECTS\ECOSVAR\DATA\stats\!YEAR-SEA_AQU-LAC-EC-CHLOR_A-SPAN_RATIO.SAVE'
    MFILE = 'D:\PROJECTS\ECOSVAR\DATA\stats\!ANNUAL-SEA_AQU-LAC-EC-CHLOR_A-SPAN_RATIO.SAVE'                   
    RFILE = DIR_DATA + '!YEAR-!ANNUAL-SEA_AQU-LAC-EC-CHLOR_A-SPAN-RATIO.SAVE'
    MAKE_ANOM_SAVES,DIR_OUT=DIR_DATA,SAVEFILE=RFILE,FILEA=YFILE,FILEB=MFILE,ANOM='RATIO',OVERWRITE=OVERWRITE
    MAP_COMPOSITE, YFILE, COLS=1,ROWS=1 ,SKIP=0, DIR_OUT=DIR_FIGS,/ADD_BATHY,BATHS=100,BATHY_COLOR = 251,BATHY_THICK =2,NO_WATER_BLANK=NO_WATER_BLANK,OVERWRITE=OVERWRITE
    MAP_COMPOSITE, MFILE, COLS=1,ROWS=1 ,SKIP=0, DIR_OUT=DIR_FIGS,/ADD_BATHY,BATHS=100,BATHY_COLOR = 251,BATHY_THICK =2,NO_WATER_BLANK=NO_WATER_BLANK,OVERWRITE=OVERWRITE
    MAP_COMPOSITE, [YFILE,MFILE,RFILE], COLS=3,ROWS=1 ,SKIP=0, DIR_OUT=DIR_FIGS,/ADD_BATHY,BATHS=100,BATHY_COLOR = 251,BATHY_THICK =2,NO_WATER_BLANK=NO_WATER_BLANK,OVERWRITE=OVERWRITE,/ADD_LABEL
  ENDIF ; DO_SPAN
          
; **************************************
  IF DO_MEANS GE 1 THEN BEGIN
; **************************************
    OVERWRITE = DO_MEANS GT 1
    FILES = ['D:\PROJECTS\ECOSVAR\DATA\stats\!ANNUAL-SEA_AQU-LAC-EC-CHLOR_A-MIN.SAVE',$
             'D:\PROJECTS\ECOSVAR\DATA\stats\!ANNUAL-SEA_AQU-LAC-EC-CHLOR_A-MEAN.SAVE',$
             'D:\PROJECTS\ECOSVAR\DATA\stats\!ANNUAL-SEA_AQU-LAC-EC-CHLOR_A-MAX.SAVE']          
    MAP_COMPOSITE, FILES[1], COLS=1,ROWS=1 ,SKIP=0, DIR_OUT=DIR_FIGS,/ADD_BATHY,BATHS=100,BATHY_COLOR=254,BATHY_THICK=0.5,NO_WATER_BLANK=NO_WATER_BLANK,OVERWRITE=OVERWRITE,$
                   C_LABELS=0, CONTOURS=[1],C_COLOR=[0],C_THICK=3, CONTOUR_MED=7,/ADD_CONTOUR,C_ANNOTATION='',/ADD_LABEL, LABEL_TEXT='1998-2007',/SMALL_COLORBAR
    MAP_COMPOSITE, FILES, COLS=3,ROWS=1 ,SKIP=0, DIR_OUT=DIR_FIGS,/ADD_BATHY,BATHS=100,BATHY_COLOR=254,BATHY_THICK=0.5,NO_WATER_BLANK=NO_WATER_BLANK,OVERWRITE=OVERWRITE,$
                   C_LABELS=0, CONTOURS=[1],C_COLOR=[0],C_THICK=3, CONTOUR_MED=7,/ADD_CONTOUR,C_ANNOTATION=''         

    FILES = FILE_SEARCH('D:\PROJECTS\ECOSVAR\DATA\STATS\!Y_*-SEA_AQU-LAC-EC-CHLOR_A-MEAN.SAVE')    
    MAP_COMPOSITE, FILES, COLS=6,ROWS=2 ,SKIP=0, DIR_OUT=DIR_FIGS,/ADD_BATHY,BATHS=100,BATHY_COLOR=254,BATHY_THICK=0.5,NO_WATER_BLANK=NO_WATER_BLANK,OVERWRITE=OVERWRITE,/ADD_PERIOD,$
                   C_LABELS=0, CONTOURS=[1],C_COLOR=[0],C_THICK=5, CONTOUR_MED=7,/ADD_CONTOUR,C_ANNOTATION=''                  
  ENDIF ; DO_MEANS    
  
; **************************************
  IF DO_TRENDS GE 1 THEN BEGIN
; **************************************
    OVERWRITE = DO_TRENDS GT 1     
    FILES = 'D:\PROJECTS\ECOSVAR\DATA\PSTATS_ALL_R5\!DD_19970904_20081113-SEA_AQU-LAC-EC-CHLOR_A-SLOPE_D.SAVE'
    MAP_COMPOSITE, FILES, COLS=1,ROWS=1 ,SKIP=0, DIR_OUT=DIR_FIGS,/ADD_BATHY,BATHS=100,BATHY_COLOR = 251,BATHY_THICK =2,NO_WATER_BLANK=NO_WATER_BLANK,OVERWRITE=OVERWRITE,/SMALL_COLORBAR      
  ENDIF  ; DO_TRENDS
  
; **************************************
  IF DO_STD_VAR GE 1 THEN BEGIN
; **************************************
    OVERWRITE = DO_STD_VAR GT 1
    YFILE = 'D:\PROJECTS\ECOSVAR\DATA\stats\!YEAR-SEA_AQU-LAC-EC-CHLOR_A-STD.SAVE'
    MFILE = 'D:\PROJECTS\ECOSVAR\DATA\stats\!ANNUAL-SEA_AQU-LAC-EC-CHLOR_A-STD.SAVE'
    RFILE = DIR_DATA + '!YEAR-!ANNUAL-SEA_AQU-LAC-EC-CHLOR_A-STD-RATIO.SAVE'
    MAP_COMPOSITE, [MFILE,YFILE], COLS=2,ROWS=1 ,SKIP=0, DIR_OUT=DIR_FIGS,/ADD_BATHY,BATHS=100,BATHY_COLOR=251,BATHY_THICK=2,NO_WATER_BLANK=NO_WATER_BLANK,OVERWRITE=OVERWRITE,/ADD_LABEL    
    MAKE_ANOM_SAVES,DIR_OUT=DIR_DATA,SAVEFILE=RFILE,FILEA=YFILE,FILEB=MFILE,ANOM='RATIO',OVERWRITE=OVERWRITE    
    MAP_COMPOSITE, RFILE, COLS=1,ROWS=1 ,SKIP=0, DIR_OUT=DIR_FIGS,/ADD_BATHY,BATHS=100,BATHY_COLOR=251,BATHY_THICK=2,NO_WATER_BLANK=NO_WATER_BLANK,OVERWRITE=OVERWRITE,/ADD_LABEL
    MAP_COMPOSITE, [YFILE,MFILE,RFILE], COLS=3,ROWS=1 ,SKIP=0, DIR_OUT=DIR_FIGS,/ADD_BATHY,BATHS=100,BATHY_COLOR=251,BATHY_THICK=2,NO_WATER_BLANK=NO_WATER_BLANK,OVERWRITE=OVERWRITE,/ADD_LABEL       
  ENDIF  ; DO_STD_VAR
  
; **************************************
  IF DO_MON_MAXMIN GE 1 THEN BEGIN
; **************************************
    OVERWRITE = DO_MON_MAXMIN GT 1
    
    DO_FILTER = 0
    
    IF DO_FILTER GE 1 THEN BEGIN   
      FILES = FILE_SEARCH('D:\PROJECTS\ECOSVAR\DATA\PSTATS_ALL\!DD_*-TS_IMAGES-SEA_AQU-LAC-EC-CHLOR_A-JD_MAX.SAVE') 
      FOR NTH =0L, N_ELEMENTS(FILES)-1 DO BEGIN
        DATA = READALL(FILES[NTH],STRUCT=STRUCT) & FP = PARSE_IT(FILES[NTH])
        IMAGE = MEDIAN(DATA.(0).IMAGE,3)
        DATA.(0).IMAGE = IMAGE
        FILENAME = REPLACE(FP.FULLNAME,'JD_MAX.SAVE','JD_MAX-MED_SMOOTH_3.SAVE')
        SAVE, FILENAME=FILENAME,DATA,/COMPRESS 
      ENDFOR
      FILES = FILE_SEARCH('D:\PROJECTS\ECOSVAR\DATA\PSTATS_ALL\!DD_*-TS_IMAGES-SEA_AQU-LAC-EC-CHLOR_A-JD_MIN.SAVE') 
      FOR NTH =0L, N_ELEMENTS(FILES)-1 DO BEGIN
        DATA = READALL(FILES[NTH],STRUCT=STRUCT) & FP = PARSE_IT(FILES[NTH])
        IMAGE = MEDIAN(DATA.(0).IMAGE,3)
        DATA.(0).IMAGE = IMAGE
        FILENAME = REPLACE(FP.FULLNAME,'JD_MIN.SAVE','JD_MIN-MED_SMOOTH_3.SAVE')
        SAVE, FILENAME=FILENAME,DATA,/COMPRESS 
      ENDFOR    
    ENDIF  
    
    FILES = FILE_SEARCH('D:\PROJECTS\ECOSVAR\DATA\pstats_ALL\!DD_19970904_20081113-SEA_AQU-LAC-EC-CHLOR_A-MONTH_JD_M*-MED_SMOOTH_3.SAVE')
    MAP_COMPOSITE, FILES, COLS=2,ROWS=1 ,SKIP=0, DIR_OUT=DIR_FIGS,/ADD_BATHY,BATHS=100,BATHY_COLOR=251,BATHY_THICK=2,NO_WATER_BLANK=NO_WATER_BLANK,OVERWRITE=OVERWRITE                
    FILES = FILE_SEARCH('D:\PROJECTS\ECOSVAR\DATA\PSTATS_ALL\!DD_*-TS_IMAGES-SEA_AQU-LAC-EC-CHLOR_A-JD_MAX-MED_SMOOTH_3.SAVE')
    MAP_COMPOSITE, FILES, COLS=6,ROWS=2 ,SKIP=0, DIR_OUT=DIR_FIGS,/ADD_BATHY,BATHS=100,BATHY_COLOR = 251,BATHY_THICK =2,NO_WATER_BLANK=NO_WATER_BLANK,OVERWRITE=OVERWRITE,/ADD_PERIOD    
    FILES = FILE_SEARCH('D:\PROJECTS\ECOSVAR\DATA\PSTATS_ALL\!DD_*-TS_IMAGES-SEA_AQU-LAC-EC-CHLOR_A-JD_MIN-MED_SMOOTH_3.SAVE')
    MAP_COMPOSITE, FILES, COLS=6,ROWS=2 ,SKIP=0, DIR_OUT=DIR_FIGS,/ADD_BATHY,BATHS=100,BATHY_COLOR = 251,BATHY_THICK =2,NO_WATER_BLANK=NO_WATER_BLANK,OVERWRITE=OVERWRITE,/ADD_PERIOD    
  ENDIF  ; DO_MON_MAXMIN
  
  
; **************************************
  IF DO_LNP_PROB GE 1 THEN BEGIN
; **************************************
    OVERWRITE = DO_LNP_PROB GT 1
    
    ROWS = 1
    COLS = 1
    DIFFERENT = 0
    PX = 1024
    PY = 1024
    FILE  = 'D:\PROJECTS\ECOSVAR\DATA\PSTATS_ALL_R5\!ANNUAL-SEA_AQU-LAC-EC-CHLOR_A-PSERIES_4377-LNP_MAX_YP.SAVE'
    TAGNAMES= [ 'MAP','PERIOD_CODE','PROD',   'STAT',      'USE_PROD','SPECIAL_SCALE','LEG_NAME',                  'LEG_UNITS','LEG_CHAR','DT_TXT','PAL',    'XOFF','YOFF','XSHIFT','YSHIFT','XGRACE','YGRACE','DT_X','DT_Y','DT_CHAR']
    PARAM   = [ 'EC', '!ANNUAL',    'CHLOR_A','LNP_MAX_YP','TEN2ONE', ' ',            'Chlorophyll Cyles per Year','',          '2',      ' ',     'PAL_SW3','50',  '460', '511',   '1024',  '10',    '10',    '0.60','0.13','5.0']
    P = ARR_2STRUCT(PARAM,TAGNAMES=TAGNAMES)
    IF DIFFERENT EQ 0 THEN _LEG_PY = 80 ELSE _LEG_PY = 130
    BACKGROUND = 255
    XPAGE = LONG(P.XGRACE*2)  + LONG(P.XSHIFT)        + (LONG(P.XSHIFT)           + LONG(P.XGRACE))*COLS
    YPAGE =(LONG(P.YSHIFT)    + LONG(P.YGRACE))*ROWS  +  LONG(_LEG_PY*2)*DIFFERENT  + LONG(P.YGRACE)
    IF COLS EQ 1 AND ROWS GE 2 THEN YPAGE = FIX(YPAGE - FLOAT(ROWS)*(FLOAT(P.YSHIFT)*0.21)) + P.YGRACE*3
    PAGE = REPLICATE(BACKGROUND,XPAGE,YPAGE)
    _COLS = 0
    _ROWS = 0
    PAGE_XPOS = P.XGRACE + (LONG(P.XSHIFT) + LONG(P.XGRACE))*_COLS
    PAGE_YPOS = YPAGE -    ((_ROWS+1)* LONG(_LEG_PY*(DIFFERENT EQ 1))  + LONG((P.YSHIFT )* (_ROWS+1) )    + LONG(P.YGRACE)*_ROWS)
    
    DATA  = STRUCT_SD_READ(FILE,STRUCT=STRUCT)
    IMAGE = STRUCT_SD_2IMAGE(STRUCT,/ADD_COAST,/ADD_LAND,LAND_COLOR=255,/ADD_BATHY,BATHS=100,BATHY_COLOR=251,BATHY_THICK=1.25)    
    BOXES = READ_CSV('D:\IDL\IMAGES\MASK_SUBAREA-EC-PXY_1024_1024-LNP.CSV')
    NUM = BOXES.SUBAREA_CODE    
    PSYM = 6
    ZWIN, IMAGE
    TV, IMAGE
    FOR NTH = 0L, N_ELEMENTS(NUM) -1 DO BEGIN
      XP = BOXES[NTH].XP
      YP = BOXES[NTH].YP
      WIDTH = (BOXES[NTH].WIDTH/2)-1
      X = [XP-WIDTH,XP+WIDTH,XP+WIDTH,XP-WIDTH,XP-WIDTH]
      Y = [YP-WIDTH,YP-WIDTH,YP+WIDTH,YP+WIDTH,YP-WIDTH]      
      PLOTS,X,Y,COLOR=0,THICK=3,/DEVICE
      XYOUTS,XP+8,YP-5,NUM[NTH],COLOR=0,CHARSIZE=1.5,CHARTHICK=3,/DEVICE
    ENDFOR
    IM = TVRD()
    ZWIN
    ZWIN,IM
    ERASE,BACKGROUND
;   ===> Determine Subscripts for blanking over the WATER
    X = [P.XOFF, PX,    PX, P.XOFF]
    Y = [0,   PY-P.XOFF, 0,   0]
    POLYFILL, X , Y, COLOR=1,/DEVICE
    NEW = TVRD()
    ZWIN
    OK_WATER_REMOVE = WHERE(NEW EQ 1,COUNT_WATER_REMOVE)
    IM(OK_WATER_REMOVE) = BACKGROUND    
    PAGE=IMAGE_PASTE(PAGE,IM,X=PAGE_XPOS,Y=PAGE_YPOS,BACKGROUND=BACKGROUND,/TRANSPARENT)
    
    LEG_TITLE = 'Chlorophyll Cycles per Year'    
    WIDTH = 1
    LEG=COLOR_BAR_SCALE(PROD=P.USE_PROD,PX=2200,PY=_LEG_PY*5,XTITLE=LEG_TITLE,CHARSIZE=P.LEG_CHAR*3.5,POS=[.055,.041,.95,.13],TRIM=2,SPECIAL_SCALE=P.SPECIAL_SCALE,PAL=P.PAL)   
    PAGE = IMAGE_WELD(PAGE,LEG)
    PNGFILE = DIR_FIGS + 'ANNUAL-SEA_AQU-EC-CHLOR_A-LNP_MAX_YP-LEG.PNG'
    PAL_SW3,R,G,B
    WRITE_PNG,PNGFILE,PAGE,R,G,B
    STOP
    
  ENDIF  ; DO_LNP_PROB             

 
END; #####################  End of Routine ################################
