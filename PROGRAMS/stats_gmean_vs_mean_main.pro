; $ID:	STATS_GMEAN_VS_MEAN_MAIN.PRO,	2020-07-08-15,	USER-KJWH	$
  ; $ID:	STATS_GMEAN_VS_MEAN_MAIN.PRO,	SEPTEMBER 22,2013 	$
;#############################################################################################################
	PRO STATS_GMEAN_VS_MEAN_MAIN,DATA
	
;  PRO STATS_GMEAN_VS_MEAN_MAIN
;+
; NAME:
;		STATS_GMEAN_VS_MEAN_MAIN
;
; PURPOSE: A MAIN FOR SOLVIONG LAMBDA, 
;          THE OPTIMAL BOX-COX COEFFICIENT THAT BEST NORMALIZES AN ARRAY
;
; CATEGORY:
;		STATISTICS
;		 
;
; CALLING SEQUENCE: STATS_GMEAN_VS_MEAN_MAIN
;
; INPUTS: DATA:  THE DATA ARRAY TO BE NORMALIZED
;		
;		
; OPTIONAL INPUTS:
;		NONE:	
;		
; KEYWORD PARAMETERS:
;		
;; EXAMPLES: STATS_GMEAN_VS_MEAN_MAIN
;
; MODIFICATION HISTORY: 
;			WRITTEN SEP 19,2013 J.O'REILLY	
;			SEP 29,2013 COPIED FROM BOX_COX_MAIN
;#################################################################################
;-
;*****************************
ROUTINE_NAME  = 'STATS_GMEAN_VS_MEAN_MAIN'
;*****************************
;STATS_NORMAL  SAVEFILE

;CCCCCCCC    CONSTANTS    CCCCCCCC
PARAMS = [0,1,3,7,8,14,15]
CHARSIZE_ABOVE = 1.15
!Y.MARGIN = [4,4]
FILE_AQUA = '!D_20020909-SMI-AQUA-CHLOR_A.SAVE' & PFILE,FILE_AQUA,/X
FILE_GB_S_FLANK = 'C:\SMI\TS\TS_GB_S_FLANK-SMI-PXY_4320_2160-LONLAT_-66.250000_41.250000-XYP_1365_1575-PSERIES_1191.SAVE/
;SSSSSSSSSS     SWITCHES     SSSSSSSSSS

D0_BZ2_2SAVE                = 0
DO_GLOBAL_RAW_VS_LOG        = 0
GLOBAL_RAW_VS_LOG_QUANTILES = 0
DO_NORMAL_RAW_VS_LOG        = 0

DO_MAKE_LAMBDAS_STATS       = 0
DO_PLOT_LAMBDAS             = 0
DO_FIND_BEST_LAMBDA         = 0
DO_USE_BEST_LAMBDA          = 0
DO_LOGS                     = 0
DO_ALOGS                    = 0

DO_GB_S_FLANK_RAW_VS_LOG    = 1
;SSSSSSSSSS     SWITCHES     SSSSSSSSSS

;********************************
IF D0_BZ2_2SAVE GE 1 THEN BEGIN
;********************************
;===> GET THE BEST AQUA COVERAGE [2002252]
  SMI_MISSING_CODE = -32767.0
  IDL_MISSING_CODE = MISSINGS(0.0)
  
  DIR = GET_DIRS()
  FILE = FILE_SEARCH(DIR.BZ2, 'A2002252*.L3m_DAY_CHL_chlor_a_9km.bz2') & PFILE,FILE,/X
  
  D=READHDF(FILE) & ST,D
  
  DATA =D.L3M_DATA * D.SLOPE[0]+ D.INTERCEPT[0]
  HDF_DATA_MINIMUM = D.DATA_MINIMUM
  HDF_DATA_MAXIMUM = D.DATA_MAXIMUM
  
  OK = WHERE(DATA NE SMI_MISSING_CODE,COUNT)
  IF COUNT GE 1 THEN BEGIN
    DATA_MINIMUM = MIN(DATA[OK])
    DATA_MAXIMUM = MAX(DATA[OK])
  ENDIF;IF COUNT GE 1 THEN BEGIN
  
  OK=WHERE(DATA EQ SMI_MISSING_CODE ,COUNT)
  IF COUNT GE 1 THEN DATA[OK] = IDL_MISSING_CODE
  OK = WHERE(DATA NE MISSINGS(DATA),COUNT)
  IF COUNT GE 1 THEN DATA=DATA[OK]
  FN = FILE_PARSE(FILE)
  SAVEFILE = FILE_AQUA
  SAVE,FILENAME = SAVEFILE,DATA,/COMPRESS & PFILE,NAME
  ,'D0_BZ2_2SAVE'

ENDIF;IF D0_BZ2_2SAVE GE 1 THEN BEGIN
;||||||||||||||||||||||||||||||||||||


;***************************
IF DO_GLOBAL_RAW_VS_LOG GE 1 THEN BEGIN
;***************************
  ;===> GET THE BEST AQUA COVERAGE [2002252]
  IF N_ELEMENTS(DATA) EQ 0 THEN DATA = IDL_RESTORE('!D_20020909-SMI-AQUA-CHLOR_A.SAVE')
  GOTO,SKIP2
  DIR = GET_DIRS()
  FILE = FILE_SEARCH(DIR.BZ2, 'A2002252*.L3m_DAY_CHL_chlor_a_9km.bz2') & PFILE,FILE,/X
  
  D=READHDF(FILE)
  
  DATA =D.L3M_DATA * D.SLOPE[0]+ D.INTERCEPT[0]
  HDF_DATA_MINIMUM = D.DATA_MINIMUM
  HDF_DATA_MAXIMUM = D.DATA_MAXIMUM
  
  OK = WHERE(DATA NE SMI_MISSING_CODE,COUNT)
  IF COUNT GE 1 THEN BEGIN
    DATA_MINIMUM = MIN(DATA[OK])
    DATA_MAXIMUM = MAX(DATA[OK])
  ENDIF;IF COUNT GE 1 THEN BEGIN
  
  OK=WHERE(DATA EQ SMI_MISSING_CODE ,COUNT)
  IF COUNT GE 1 THEN DATA[OK] = IDL_MISSING_CODE
  OK = WHERE(DATA NE MISSINGS(DATA),COUNT)  
 IF COUNT GE 1 THEN DATA=DATA[OK]
  
  SKIP2:
  PAGE_TITLE = 'GLOBAL CHL  AQUA:'+ DATE_FORMAT(SATDATE_2DATE('A2002252'),/YMD)
  
  SET_PMULTI,2
  ;===> PLOT DATA
  PSFILE = GET_DIR() + ROUTINE_NAME + '-DO_GLOBAL_RAW_VS_LOG.PS'
  PAL_36
  FONT_HELVETICA
  PSPRINT,FILENAME = PSFILE,/COLOR,/FULL
  TITLE = 'DATA' &   XTITLE = TITLE  
   
  HISTPLOT,DATA,BINSIZE=0.1,XTICKS=10,XRANGE = [-5,5],BAR_THICK=1,BAR_COLOR=13,CUM_THICK = 7,CUM_COLOR = 6,TITLE = TITLE,XTITLE = XTITLE,STATS_CHARSIZE = 2,PARAMS = PARAMS,DECIMALS = 2;,XTITLE = UNITS('CHLOR_A')
  
  S=STATS(DATA) & M=S.MEAN & ABOVE = WHERE(DATA GE M,COUNT_ABOVE)& BELOW = WHERE(DATA LT M,COUNT_BELOW) & PCT_ABOVE = ROUNDS(100.0*COUNT_ABOVE/N_ELEMENTS(DATA),2)& PCT_BELOW = ROUNDS(100.0*COUNT_BELOW/N_ELEMENTS(DATA),2)
  PCT_ABOVE = '% ABOVE MEAN:  ' + PCT_ABOVE & PCT_BELOW = '% BELOW MEAN:  ' + PCT_BELOW
  TXT = PCT_ABOVE + '!C'+ PCT_BELOW
  XY = COORD_2PLOT(0.8,0.8,/TO_DATA)
  XYOUTS,XY.X,XY.Y,/DATA,TXT,CHARSIZE = CHARSIZE_ABOVE,ALIGN = 0.5
  S=STATS_NORMAL(DATA) &  TXT ='XSQ  =  !C'+ROUNDS(S.XSQ)
  S=STATS_NORMAL(ALOG(DATA)) &  TXT ='XSQ  =  !C'+ROUNDS(S.XSQ)
  ;######
  ;===> PLOT ALOG (DATA)
  TITLE = 'ALOG(DATA)' &   XTITLE = TITLE
  
  
  HISTPLOT,ALOG(DATA),BINSIZE=0.1,XTICKS=10,XRANGE=[-5,5],BAR_THICK=1,BAR_COLOR=13,CUM_THICK = 7,CUM_COLOR = 6,TITLE = TITLE,XTITLE = XTITLE,STATS_CHARSIZE = 2,PARAMS = PARAMS,DECIMALS = 2;,XTITLE = UNITS('CHLOR_A')  
  S=STATS(ALOG(DATA)) & M=S.MEAN & ABOVE = WHERE(ALOG(DATA) GE M,COUNT_ABOVE) & BELOW = WHERE(ALOG(DATA) LT M,COUNT_BELOW) & PCT_ABOVE = ROUNDS(100.0*COUNT_ABOVE/N_ELEMENTS(DATA),2)& PCT_BELOW = ROUNDS(100.0*COUNT_BELOW/N_ELEMENTS(DATA),2)
  PCT_ABOVE = '% ABOVE MEAN:  ' + PCT_ABOVE & PCT_BELOW = '% BELOW MEAN:  ' + PCT_BELOW
  TXT = PCT_ABOVE + '!C'+ PCT_BELOW
  XY = COORD_2PLOT(0.8,0.8,/TO_DATA)
  XYOUTS,XY.X,XY.Y,/DATA,TXT,CHARSIZE = CHARSIZE_ABOVE,ALIGN = 0.5  
  XYOUTS,0.5,0.999,/NORMAL,PAGE_TITLE,CHARSIZE = 2,ALIGN = 0.5
  
  PSPRINT  & PFILE,PSFILE
  
  
  
ENDIF;IF DO_GLOBAL_RAW_VS_LOG GE 1 THEN BEGIN
;|||||||||||||||||||||||||||||||||

;********************************
IF GLOBAL_RAW_VS_LOG_QUANTILES GE 1 THEN BEGIN
  ;********************************
  ,'GLOBAL_RAW_VS_LOG_QUANTILES'
  PSFILE = 'GLOBAL_RAW_VS_LOG_QUANTILES.PS'
  SET_PMULTI,3
  PSPRINT,FILENAME = PSFILE,/COLOR,/FULL  & FONT_HELVETICA  & PAL_36
  FN = FILE_PARSE(FILE_AQUA)

  DATA = IDL_RESTORE(FILE_AQUA) & PRINT,'DATA:   ',MM(DATA)
  
  ;===> RAW DATA
  _DATA = DATA

  R = STATS_NORMAL(_DATA,EXOB=EXOB)
  RSQ = (CORRELATE(_DATA,EXOB.EXPECTED))^2
  TITLE = 'RAW DATA ' + '!C  N = '+STR_COMMA(ROUNDS(R.N)) + '!CRSQ = ' + ROUNDS(RSQ,5)
  XTITLE = 'OBSERVED QUANTILES'
  YTITLE = 'EXPECTED QUANTILES'    
  Q = QUANTILE(_DATA,EXOB.EXPECTED,CHARSIZE = 1.5,$
  ONE_COLOR=32,$
  ONE_THICK=21,$
  ONE_LINESTYLE=0,$
  GRIDS_LINESTYLE = 1,$
  GRIDS_COLOR=0,$
  GRIDS_THICK = 1,$
  Q_COLOR = 26,$
  Q_THICK = 11,$
  Q_LINESTYLE = 0,$
  XTITLE = XTITLE,YTITLE = YTITLE)
  XY = COORD_2PLOT(0.4,0.4,/TO_DATA)  
  XYOUTS,XY.X,XY.Y,/DATA,TITLE,CHARSIZE = 2,ALIGN = 0.5


  TXT = DATE_FORMAT(PERIOD_2DATE(FN.NAME),/YMD) + 'AQUA - CHLOR_A'
  XYOUTS,0.5,0.98,/NORMAL,TXT,CHARSIZE = 3,ALIGN = 0.5
  
  ;===> LOG-TRANSFORMED
  _DATA = ALOG(DATA)
  R = STATS_NORMAL(_DATA,EXOB=EXOB)
  RSQ = (CORRELATE(_DATA,EXOB.EXPECTED))^2
  TITLE = 'LOG DATA ' + '!C  N = '+STR_COMMA(ROUNDS(R.N)) + '!CRSQ = ' + ROUNDS(RSQ,5)
  XTITLE = 'OBSERVED QUANTILES'
  YTITLE = 'EXPECTED QUANTILES'
  Q = QUANTILE(_DATA,EXOB.EXPECTED,CHARSIZE = 1.5,$
    ONE_COLOR=32,$
    ONE_THICK=21,$
    ONE_LINESTYLE=0,$
    GRIDS_LINESTYLE = 1,$
    GRIDS_COLOR=0,$
    GRIDS_THICK = 1,$
    Q_COLOR = 26,$
    Q_THICK = 11,$
    Q_LINESTYLE = 0,$
    XTITLE = XTITLE,YTITLE = YTITLE )
    TXT = DATE_FORMAT(PERIOD_2DATE(FN.NAME),/YMD) + 'AQUA - CHLOR_A'
    XY = COORD_2PLOT(0.4,0.85,/TO_DATA)

    XYOUTS,XY.X,XY.Y,/DATA,TITLE,CHARSIZE = 2,ALIGN = 0.5
    XYOUTS,0.5,0.98,/NORMAL,TXT,CHARSIZE = 3,ALIGN = 0.5
  
;    ===> BOX_COX-TRANSFORMED
    LAMBDA = -0.2
    _DATA   = BOX_COX(DATA,  LAMBDA)
    R = STATS_NORMAL(_DATA,EXOB=EXOB)
    RSQ = (CORRELATE(_DATA,EXOB.EXPECTED))^2
    TITLE = 'BOX_COX DATA LAMBDA = -0.2' + '!C  N = '+STR_COMMA(ROUNDS(R.N)) + '!CRSQ = ' + ROUNDS(RSQ,5)
    XTITLE = 'OBSERVED QUANTILES'
    YTITLE = 'EXPECTED QUANTILES'
    Q = QUANTILE(_DATA,EXOB.EXPECTED,CHARSIZE = 1.5,$
      ONE_COLOR=32,$
      ONE_THICK=21,$
      ONE_LINESTYLE=0,$
      GRIDS_LINESTYLE = 1,$
      GRIDS_COLOR=0,$
      GRIDS_THICK = 1,$
      Q_COLOR = 26,$
      Q_THICK = 11,$
      Q_LINESTYLE = 0,$
      XTITLE = XTITLE,YTITLE = YTITLE )
      TXT = DATE_FORMAT(PERIOD_2DATE(FN.NAME),/YMD) + 'AQUA - CHLOR_A'
      XY = COORD_2PLOT(0.4,0.85,/TO_DATA)
    
    XYOUTS,XY.X,XY.Y,/DATA,TITLE,CHARSIZE = 2,ALIGN = 0.5
    XYOUTS,0.5,0.98,/NORMAL,TXT,CHARSIZE = 3,ALIGN = 0.5

  
  
  
  PSPRINT & PFILE,PSFILE
  
  ,'GLOBAL_RAW_VS_LOG_QUANTILES'
  
ENDIF;IF GLOBAL_RAW_VS_LOG_QUANTILES GE 1 THEN BEGIN
;|||||||||||||||||||||||||||||||||||||











;**************************************
IF DO_MAKE_LAMBDAS_STATS GE 1  THEN BEGIN
;**************************************
  IF N_ELEMENTS(DATA) EQ 0 THEN DATA = IDL_RESTORE('!D_20020909-SMI-AQUA-CHLOR_A.SAVE')
  PRINT,'MINMAX  DATA: ',MINMAX(DATA)
  LAMBDAS = INTERVAL([-3,3],0.01)

  ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
  FOR _LAMBDA = 0,N_ELEMENTS(LAMBDAS) -1L DO BEGIN
    LAMBDA= LAMBDAS(_LAMBDA)
    IF LAMBDA EQ 0. THEN CONTINUE
    POF,_LAMBDA,LAMBDAS
    TRANSFORMED   = BOX_COX(DATA,  LAMBDA)
    S=STATS(TRANSFORMED)
    L= CREATE_STRUCT('LAMBDA',LAMBDA)
    IF FINITE(S.MEAN) THEN BEGIN
      R = STATS_NORMAL(TRANSFORMED) & PROB = R.XSQ_PROB  & XSQ = R.XSQ
    ENDIF ELSE BEGIN
      PROB =0.0D
    ENDELSE;IF FINITE(S.MEAN) THEN BEGIN
    X = CREATE_STRUCT('XSQ',XSQ)
    P = CREATE_STRUCT('PROB',PROB)
    D = STRUCT_MERGE(S,L,X,P)
    IF N_ELEMENTS(DB) EQ 0 THEN DB = D ELSE DB = [DB,D]
  ENDFOR;FOR _LAMBDA = 0,N_ELEMENTS(LAMBDAS) -1L DO BEGIN
  ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
  
  
SAVEFILE = GET_DIR() + ROUTINE_NAME + '.SAVE'  & PFILE,SAVEFILE,/W
SAVE,FILENAME = SAVEFILE,DB,/COMPRESS


;??????????????
ENDIF;IF N_ELEMENTS(DATA) EQ 0 THEN BEGIN


;################################################################################

;**********************************
IF DO_PLOT_LAMBDAS GE 1 THEN BEGIN
;**********************************
  ,'DO_PLOT_LAMBDAS'
  SAVEFILE = GET_DIR() + ROUTINE_NAME + '.SAVE'  & PFILE,SAVEFILE,/R
  DB = IDL_RESTORE(SAVEFILE) & PN,DB
  STOP
  ;DB(300).LAMBDA = '0.000'  ;EDIT  LAMBDA = 0
  PSFILE = ROUTINE_NAME +'-DO_PLOT_LAMBDAS.PS'
  PSPRINT, FILENAME = PSFILE,/COLOR,/HALF
  SET_PMULTI,0
  PAL_36
  PLOTXY,DB.LAMBDA,DB.STD,XTITLE = 'LAMBDA',YTITLE = 'STD', CHARSIZE = 1.6,REG_NONE = 1,COLOR = 0,/STATS_NONE,LINESTYLE = 0,THICK = 5
  PLOTXY,DB.LAMBDA,DB.MEAN,XTITLE = 'LAMBDA',YTITLE = 'MEAN', CHARSIZE = 1.6,REG_NONE = 1,COLOR = 0,/STATS_NONE,LINESTYLE = 0,THICK = 5
  PLOTXY,DB.LAMBDA,DB.MED,XTITLE = 'LAMBDA',YTITLE = 'MED', CHARSIZE = 1.6,REG_NONE = 1,COLOR = 0,/STATS_NONE,LINESTYLE = 0,THICK = 5
  PLOTXY,DB.LAMBDA,DB.SKEW,XTITLE = 'LAMBDA',YTITLE = 'SKEW', CHARSIZE = 1.6,REG_NONE = 1,COLOR = 0,/STATS_NONE,LINESTYLE = 0,THICK = 5
  PLOTXY,DB.STD,DB.SKEW,XTITLE = 'STD',YTITLE = 'SKEW', CHARSIZE = 1.6,REG_NONE = 1,COLOR = 0,/STATS_NONE,LINESTYLE = 0,THICK = 5
  PLOTXY,DB.LAMBDA,DB.PROB,XTITLE = 'LAMBDA',YTITLE = 'PROB', CHARSIZE = 1.6,REG_NONE = 1,COLOR = 0,/STATS_NONE,LINESTYLE = 0,THICK = 5
  PLOTXY,DB.LAMBDA,DB.XSQ,XTITLE = 'LAMBDA',YTITLE = 'XSQ', CHARSIZE = 1.6,REG_NONE = 1,COLOR = 0,/STATS_NONE,LINESTYLE = 0,THICK = 5
  PSPRINT
  PFILE,PSFILE,/W
  ,'DO_PLOT_LAMBDAS'
ENDIF;IF DO_PLOT_LAMBDAS GE 1 THEN BEGIN
;||||||||||||||||||||||||||||||||||||||||


;*************************************
IF DO_FIND_BEST_LAMBDA GE 1 THEN BEGIN
;*************************************
  SAVEFILE = GET_DIR() + ROUTINE_NAME + '.SAVE'  & PFILE,SAVEFILE,/R
  DATA = IDL_RESTORE(SAVEFILE)
  ST,DB
  OK = WHERE_ZERO(DB.SKEW,COUNT,TOL = 1E-1)
  IF COUNT GE 1 THEN BEGIN
    
   D=DB[OK]
   PLIST,'LAMBDA  :'+ STRTRIM(D.LAMBDA,2)+'  SKEW  :'+ STRTRIM(D.SKEW,2)
   M = MIN(D.SKEW,/NAN,SUB)
   PRINT,'MIN SKEW:   ',M
   REPORT,'BEST LAMBDA:    '+ STRTRIM(D(SUB).LAMBDA,2)+ '      FOR ' + 'A2002252*.L3m_DAY_CHL_chlor_a_9km.bz2'
  ENDIF ELSE BEGIN
    MESSAGE,'NO SKEWS NEAR ZERO WERE FOUND'
  ENDELSE;IF COUNT GE 1 THEN BEGIN
  
ENDIF;IF DO_FIND_BEST_LAMBDA GE 1 THEN BEGIN
;|||||||||||||||||||||||||||||||||||||||||||

;*************************************
IF DO_USE_BEST_LAMBDA GE 1 THEN BEGIN
;*************************************
  ,'DO_USE_BEST_LAMBDA'
    SAVEFILE = FILE_AQUA
  DATA = IDL_RESTORE(SAVEFILE)
  PRINT,'DATA:   ',MM(DATA)
  LAMBDA = -0.20D
  TRANSFORMED = BOX_COX(DATA,LAMBDA)
  PRINT,'TRANSFORMED:   ',MM(TRANSFORMED)
  STOP
  ST,STATS_NORMAL(TRANSFORMED)
  S=STATS(TRANSFORMED)
  PSFILE = GET_DIR() + ROUTINE_NAME  +'.PS'
  
  PSPRINT,FILENAME = PSFILE,/COLOR,/HALF
  TITLE='LAMBDA = ' + STRTRIM(LAMBDA,2) + '!C CHLOR_A'
  HISTPLOT,(TRANSFORMED),BINSIZE=0.1,XTICKS=10,XRANGE=[-5,5],BAR_THICK=1,BAR_COLOR=13,CUM_THICK = 7,CUM_COLOR = 6,TITLE = TITLE,XTITLE = XTITLE,STATS_CHARSIZE = 2,PARAMS = PARAMS,DECIMALS = 2;,XTITLE = UNITS('CHLOR_A')
  PSPRINT
  S=STATS_NORMAL(TRANSFORMED) & ST,S
  STOP
  ,'DO_USE_BEST_LAMBDA'
ENDIF;IF DO_USE_BEST_LAMBDA GE 1 THEN BEGIN
;|||||||||||||||||||||||||||||||||||||||||||


;*************************************
IF DO_LOGS GE 1 THEN BEGIN
;*************************************
  ,'DO_LOGS'
  LOGS = ['LOG','LOG10','LOG2']
  SET_PMULTI,4
  !Y.MARGIN = [4,4]
  PSFILE = GET_DIR() + ROUTINE_NAME  +'-DO_LOGS.PS'
  PAL_36
  PSPRINT,FILENAME = PSFILE,/COLOR,/FULL

  ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
  FOR _LOG = 0,N_ELEMENTS(LOGS) -1 DO BEGIN
    ANLOG = LOGS(_LOG)
 
      SAVEFILE = FILE_AQUA  & DATA = IDL_RESTORE(SAVEFILE) & PRINT,'DATA:   ',MM(DATA)
    
    IF ANLOG EQ 'LOG' THEN TRANSFORMED = ALOG(DATA)
    IF ANLOG EQ 'LOG2' THEN TRANSFORMED = ALOG2(DATA)
    IF ANLOG EQ'LOG10' THEN TRANSFORMED = ALOG10(DATA)
    PRINT,'TRANSFORMED:   ',MM(TRANSFORMED)
    S=STATS(TRANSFORMED)
    PSFILE = GET_DIR() + ROUTINE_NAME  +'-DO_LOGS.PS'
    TITLE=ANLOG+ '!C CHLOR_A'
    HISTPLOT,(TRANSFORMED),BINSIZE=0.1,XTICKS=10,XRANGE=[-5,5],BAR_THICK=1,BAR_COLOR=13,CUM_THICK = 7,CUM_COLOR = 6,TITLE = TITLE,XTITLE = XTITLE,STATS_CHARSIZE = 2,PARAMS = PARAMS,DECIMALS = 2;,XTITLE = UNITS('CHLOR_A')
    S=STATS_NORMAL(TRANSFORMED) &  TXT ='XSQ  =  !C'+ROUNDS(S.XSQ)
    XY = COORD_2PLOT(0.7,0.4,/TO_DATA)
    XYOUTS,XY.X,XY.Y,/DATA,TXT,CHARSIZE = 2,ALIGN = 0.5,COLOR = 26

  ENDFOR;FOR _LOG = 0,N_ELEMENTS(LOGS) -1 DO BEGIN
;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
  PSPRINT
  ,'DO_LOGS'
ENDIF;IF DO_LOGS GE 1 THEN BEGIN
;|||||||||||||||||||||||||||||||||||||||||||


;*************************************
IF DO_ALOGS GE 1 THEN BEGIN
  ;*************************************
  ,'DO_ALOGS'
  LOGS = [0,2,3,4,5,10]
  SET_PMULTI,N_ELEMENTS(LOGS)
  !Y.MARGIN = [4,4]
  PSFILE = GET_DIR() + ROUTINE_NAME  +'-DO_ALOGS.PS'
  PAL_36
  PSPRINT,FILENAME = PSFILE,/COLOR,/FULL
  
  ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
  FOR _LOG = 0,N_ELEMENTS(LOGS) -1 DO BEGIN
    ANLOG = LOGS(_LOG)
    
    SAVEFILE = FILE_AQUA
    DATA = IDL_RESTORE(SAVEFILE)
    PRINT,'DATA:   ',MM(DATA)
    IF ANLOG EQ 0 THEN TRANSFORMED = ALOG(DATA) ELSE TRANSFORMED = ALOGS(DATA,ANLOG)
   
    PRINT,'TRANSFORMED:   ',MM(TRANSFORMED)
    S=STATS(TRANSFORMED)
    PSFILE = GET_DIR() + ROUTINE_NAME  +'-DO_ALOGS.PS'
    XTITLE = 'LOG'+STRTRIM(ANLOG,2)+UNITS('CHLOR_A')
    IF ANLOG EQ 0 THEN   XTITLE = 'LOG'+UNITS('CHLOR_A')
    TITLE='LOG'+STRTRIM(ANLOG,2)
     IF ANLOG EQ 0 THEN  TITLE='LN'
     PARAMS = [0,1,3,7,8,16,14,15]

    HISTPLOT,(TRANSFORMED),BINSIZE=0.1,XTICKS=10,XRANGE=[-5,5],BAR_THICK=1,BAR_COLOR=13,CUM_THICK = 7,CUM_COLOR = 6,XTITLE = XTITLE,TITLE = TITLE,STATS_CHARSIZE = 2,PARAMS = PARAMS,DECIMALS = 2,CHARSIZE = 1.6
    S=STATS_NORMAL(TRANSFORMED) &  TXT ='XSQ  =  !C'+ROUNDS(S.XSQ)
    XY = COORD_2PLOT(0.7,0.4,/TO_DATA)
;    XYOUTS,XY.X,XY.Y,/DATA,TXT,CHARSIZE = 2,ALIGN = 0.5,COLOR = 26
    
  ENDFOR;FOR _LOG = 0,N_ELEMENTS(LOGS) -1 DO BEGIN
  ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
  PSPRINT
  ,'DO_ALOGS'
ENDIF;IF DO_ALOGS GE 1 THEN BEGIN
;|||||||||||||||||||||||||||||||||||||||||||

DONE:
;***************************************
IF DO_NORMAL_RAW_VS_LOG GE 1 THEN BEGIN
;***************************************
  
  IF N_ELEMENTS(DATA) EQ 0 THEN DATA = IDL_RESTORE('!D_20020909-SMI-AQUA-CHLOR_A.SAVE')
  P,MM(DATA) & WAIT,1
  S=STATS_NORMAL(DATA) & ST,S
  S=STATS_NORMAL(ALOG(DATA))  & ST,S
  S=STATS_NORMAL(ALOG2(DATA))  & ST,S
  S=STATS_NORMAL(ALOG10(DATA))  & ST,S
  S=STATS_NORMAL(ALOGS(DATA,2))  & ST,S

  stop
ENDIF;IF DO_NORMAL_RAW_VS_LOG GE 1 THEN BEGIN

 ;***************************
IF DO_GB_S_FLANK_RAW_VS_LOG GE 1 THEN BEGIN
  ;***************************
  ;===> GET THE BEST AQUA COVERAGE [2002252]
  IF N_ELEMENTS(DATA) EQ 0 THEN DATA = STRUCT_SD_READ(FILE_GB_S_FLANK,STRUCT=STRUCT)
  DATE_RANGE =DATE_FORMAT(JD_2DATE(MM(STRUCT.TIME)),/YMD)
  PAGE_TITLE = 'GB_S_FLANK '+ DATE_RANGE[0] + 'To ' + DATE_RANGE[1]
  
  SET_PMULTI,2
  ;===> PLOT DATA
  PSFILE = GET_DIR() + ROUTINE_NAME + '-DO_GB_S_FLANK_RAW_VS_LOG.PS'
  PAL_36
  FONT_HELVETICA
  PSPRINT,FILENAME = PSFILE,/COLOR,/FULL
  TITLE = 'DATA' &   XTITLE = TITLE
  
  HISTPLOT,DATA,BINSIZE=0.1,XTICKS=10,XRANGE = [-5,5],BAR_THICK=1,BAR_COLOR=13,CUM_THICK = 7,CUM_COLOR = 6,TITLE = TITLE,XTITLE = XTITLE,STATS_CHARSIZE = 2,PARAMS = PARAMS,DECIMALS = 2;,XTITLE = UNITS('CHLOR_A')
  
  S=STATS(DATA) & M=S.MEAN & ABOVE = WHERE(DATA GE M,COUNT_ABOVE)& BELOW = WHERE(DATA LT M,COUNT_BELOW) & PCT_ABOVE = ROUNDS(100.0*COUNT_ABOVE/N_ELEMENTS(DATA),2)& PCT_BELOW = ROUNDS(100.0*COUNT_BELOW/N_ELEMENTS(DATA),2)
  PCT_ABOVE = '% ABOVE MEAN:  ' + PCT_ABOVE & PCT_BELOW = '% BELOW MEAN:  ' + PCT_BELOW
  TXT = PCT_ABOVE + '!C'+ PCT_BELOW
  XY = COORD_2PLOT(0.8,0.8,/TO_DATA)
  XYOUTS,XY.X,XY.Y,/DATA,TXT,CHARSIZE = CHARSIZE_ABOVE,ALIGN = 0.5
  S=STATS_NORMAL(DATA) &  TXT ='XSQ  =  !C'+ROUNDS(S.XSQ)
  P,PSFILE
  EMPTY
  P
  
  ;######
  ;===> PLOT ALOG (DATA)
  TITLE = 'ALOG(DATA)' &   XTITLE = TITLE
  DATA = ALOG(DATA)
  S=STATS_NORMAL(DATA) &  TXT ='XSQ  =  !C'+ROUNDS(S.XSQ)

  HISTPLOT,(DATA),BINSIZE=0.1,XTICKS=10,XRANGE=[-5,5],BAR_THICK=1,BAR_COLOR=13,CUM_THICK = 7,CUM_COLOR = 6,TITLE = TITLE,XTITLE = XTITLE,STATS_CHARSIZE = 2,PARAMS = PARAMS,DECIMALS = 2;,XTITLE = UNITS('CHLOR_A')
  S=STATS((DATA)) & M=S.MEAN & ABOVE = WHERE((DATA) GE M,COUNT_ABOVE) & BELOW = WHERE((DATA) LT M,COUNT_BELOW) & PCT_ABOVE = ROUNDS(100.0*COUNT_ABOVE/N_ELEMENTS(DATA),2)& PCT_BELOW = ROUNDS(100.0*COUNT_BELOW/N_ELEMENTS(DATA),2)
  PCT_ABOVE = '% ABOVE MEAN:  ' + PCT_ABOVE & PCT_BELOW = '% BELOW MEAN:  ' + PCT_BELOW
  TXT = PCT_ABOVE + '!C'+ PCT_BELOW
  XY = COORD_2PLOT(0.8,0.8,/TO_DATA)
  XYOUTS,XY.X,XY.Y,/DATA,TXT,CHARSIZE = CHARSIZE_ABOVE,ALIGN = 0.5
  XYOUTS,0.5,0.999,/NORMAL,PAGE_TITLE,CHARSIZE = 2,ALIGN = 0.5
  
  PSPRINT  & PFILE,PSFILE
  
  
  
ENDIF;IF DO_GB_S_FLANK_RAW_VS_LOG GE 1 THEN BEGIN
;|||||||||||||||||||||||||||||||||
 
  
  


END; #####################  END OF ROUTINE ################################
