; $ID:	MINMAX.PRO,	2020-06-26-15,	USER-KJWH	$
;############################################################################
FUNCTION MINMAX,DATA, SUBS=SUBS,FIN=FIN, MISSING=MISSING
;+
;NAME:
;   MINMAX
;
;PURPOSE:
;		COMPUTE THE MINIMUM, MAXIMUM (AND SUBSCRIPTS OF THE MINIMUM AND MAXIMUM)
;
;CATEGORY:
;	MATH
;
;INPUTS:
;		DATA:	NUMERICAL DATA
;
;KEYWORDS:
;		SUBS: 	SUBSCRIPTS OF THE MINIMUM AND MAXIMUM DATA VALUES
;		FIN:		EXCLUDE DATA MATCHING NAN AND INFINITY DATA FROM THE MINMAX
;		MISSING: EXCLUDE DATA MATCHING THE MISSING VALUE FROM THE MINMAX
;
;EXAMPLES:
;		PRINT, MINMAX(FINDGEN(11))
;		PRINT, MINMAX(FINDGEN(11),SUBS=SUBS) & PRINT, SUBS
;		X=[1,2,-9,3,!VALUES.F_INFINITY] & PRINT, MINMAX(X,SUBS=SUBS) & PRINT, SUBS
;		X=[1,2,-9,3,!VALUES.F_INFINITY] & PRINT, MINMAX(X,SUBS=SUBS,/FIN) & PRINT, SUBS;
;		X=[1,2,-9,3,!VALUES.F_INFINITY] & PRINT, MINMAX(X,SUBS=SUBS,MISSING= -9) & PRINT, SUBS
;		X=[1,2,-9,3,!VALUES.F_INFINITY] & PRINT, MINMAX(X,SUBS=SUBS,/FIN,MISSING= -9) & PRINT, SUBS
;   X=[1,2,-9,3,!VALUES.F_NAN] 			& PRINT, MINMAX(X,SUBS=SUBS,/FIN,MISSING= -9) & PRINT, SUBS
;		X=[1,2,-9,3,!VALUES.F_NAN]      & PRINT, MINMAX(X,SUBS=SUBS,MISSING= -999) & PRINT, SUBS
;
;HISTORY:
; 	OCT 6, 2003,	WRITTEN BY:	J.E. O'REILLY
; 	APR 9,2014,JOR:MODIFIED LOGIC FOR IF IDLTYPE(DATA) EQ 'STRING' THEN BEGIN

;-
;#################################################################################################

; *******************************
  ROUTINE_NAME='MINMAX'
  ; *******************************
  
  IF IDLTYPE(DATA)EQ 'STRING' THEN BEGIN
    L = LINDGEN(N_ELEMENTS(DATA))
    S = SORT(DATA) & _DATA = DATA(S)
    SUBS = [FIRST(L),LAST(L)]
  RETURN,[[FIRST(_DATA),LAST(_DATA)]]
  ENDIF;IF IDLTYPE(DATA)EQ 'STRING' THEN BEGIN
  _DATA = DATA

	GOOD=REPLICATE(1B,N_ELEMENTS(_DATA))


	IF N_ELEMENTS(MISSING) EQ 1 THEN BEGIN
		OK=WHERE(_DATA EQ MISSING,COUNT)
		IF COUNT GE 1 THEN GOOD[OK] = 0
	ENDIF

	IF KEYWORD_SET(FIN) EQ 1 THEN BEGIN
		OK=WHERE(FINITE(_DATA) EQ 0,COUNT)
		IF COUNT GE 1 THEN GOOD[OK] = 0
	ENDIF

;	===> NOW FIND JUST THE GOOD VALUES
	OK=WHERE(GOOD EQ 1,COUNT)

	IF COUNT GE 1 THEN BEGIN
		MAXIMUM = MAX( _DATA[OK], SUB_MAX,MIN= MINIMUM, SUBSCRIPT_MIN=SUB_MIN)
		 SUB_MAX = OK[SUB_MAX]
		 SUB_MIN = OK[SUB_MIN]
	ENDIF ELSE BEGIN
		SUB_MIN	= -1L
		SUB_MAX = -1L
		MINIMUM = !VALUES.F_NAN
		MAXIMUM = !VALUES.F_NAN
	ENDELSE


	SUBS = [SUB_MIN,SUB_MAX]
  RETURN, [MINIMUM,MAXIMUM]

END; #####################  END OF ROUTINE ################################
