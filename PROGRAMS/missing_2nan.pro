; $ID:	MISSING_2NAN.PRO,	2020-06-26-15,	USER-KJWH	$
;#####################################################################3
FUNCTION MISSING_2NAN,DATA, MISSING=MISSING
;+
; NAME:
;       MISSING_2NAN
;
; PURPOSE:
;       CONVERT SYSTEM MISSING CODES (INFINITY FOR FLOAT AND DOUBLE)
;       INTO NAN
;
; CATEGORY:
;
;
; CALLING SEQUENCE:
;       RESULT = MISSING_2NAN(A)
;
; INPUTS:
;   DATA [MAY BE A STRUCTURE]
;
;
; KEYWORD PARAMETERS:
;   MISSING - MISSING DATA CODE
; OUTPUTS:
;   SAME AS INPUT DATA EXCEPT MISSINGS() CHANGED TO NANS
;
; SIDE EFFECTS:
;       NONE.
;
; MODIFICATION HISTORY:
;       WRITTEN BY:  J.E.O'REILLY, JUNE 25,1999
;       JUN 2,2014,JOR, FORMATTING, FIXED -NAN:
;       OK = WHERE(COPY EQ _MISSING OR FINITE(COPY)EQ 0,COUNT)

;       
;       
;       
;############################################################################
;       
;-
;****************************
ROUTINE_NAME = 'MISSING_2NAN'
;****************************
  COPY = DATA  ; DO NOT CHANGE INPUT DATA
  TYPE = IDLTYPE(COPY,/CODE)

;===> STRUCTURES ?
  IF TYPE EQ 8 THEN BEGIN
    NTAGS = N_TAGS(COPY)
    ;FFFFFFFFFFFFFFFFFFFFFFFFFFF
    FOR N = 0L, NTAGS-1L DO BEGIN
      ATYPE = IDLTYPE(COPY.(N),/CODE)
      IF N_ELEMENTS(MISSING) NE 1 THEN _MISSING = MISSINGS(COPY.(N)) ELSE _MISSING = MISSING
      IF IDLTYPE(COPY.(N)) NE 'STRING' THEN BEGIN
        OK = WHERE(COPY.(N) EQ _MISSING  OR FINITE(COPY.(N)) EQ 0,COUNT)
        IF COUNT GE 1 THEN BEGIN
          IF ATYPE EQ 4 THEN COPY[OK].(N) = !VALUES.F_NAN
          IF ATYPE EQ 5 THEN COPY[OK].(N) = !VALUES.D_NAN
        ENDIF;IF COUNT GE 1 THEN BEGIN
      ENDIF;IF IDLTYPE(COPY.(N)) NE 'STRING' THEN BEGIN
     
    ENDFOR;FOR N = 0L, NTAGS-1L DO BEGIN
    ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF

  ENDIF
;===> FLOAT OR DOUBLE ?
  IF TYPE EQ 4 OR TYPE EQ 5 THEN BEGIN
      IF N_ELEMENTS(MISSING) NE 1 THEN _MISSING = MISSINGS(COPY) ELSE _MISSING = MISSING
      OK = WHERE(COPY EQ _MISSING OR FINITE(COPY) EQ 0,COUNT)
      IF COUNT GE 1 THEN BEGIN
        IF TYPE EQ 4 THEN COPY[OK] = !VALUES.F_NAN
        IF TYPE EQ 5 THEN COPY[OK] = !VALUES.D_NAN
      ENDIF;IF COUNT GE 1 THEN BEGIN
  ENDIF;IF TYPE EQ 4 OR TYPE EQ 5 THEN BEGIN

    RETURN, COPY

END; #####################  END OF ROUTINE ################################
