; $ID:	STATS2.PRO,	2020-07-09-08,	USER-KJWH	$
;##########################################################################################
FUNCTION STATS2, X, Y,$
 								 MODEL = MODEL,$
 								 LABEL=LABEL,$
                 XMISSING=XMISSING, YMISSING=YMISSING,$
                 PARAMS=PARAMS,  		DECIMALS=DECIMALS,$
                 ALPHA = ALPHA,$
                 FILE=FILE,$
                 APPEND=APPEND,$
                 NO_HEADING=NO_HEADING,$

                 DOUBLE_SPACE=DOUBLE_SPACE,$
                 SHOW=SHOW,$
                 NAMES=NAMES,$
                 _EXTRA=_EXTRA

;+   RMA
; NAME:
;		STATS2
;
; PURPOSE:
;		COMPUTES REGRESSION STATISTICS:
;			N
; 		INTERCEPT
;			SLOPE
;			STD_INT [STD_INTERCEPT]
;			STD_SLOPE
;			R (CORRELATION COEFFICIENT)
;			RSQ (R SQUARED)
;			COV (COVARIANCE)
;			RMSE (ROOT MEAN SQUARED ERROR)
;			BIAS
;			PER_BIAS (PERCENT BIAS)
;			MEAN_X
;			MEAN_Y
; 		Y_ABSDEV
;
;			USING NASA GSFC PROGRAM SIXLIN.PRO
;			FOR 6 LINEAR REGRESSION MODELS, PLUS IDL PROGRAM LADFIT ("ROBUST" LEAST ABSOLUTE DEVIATION METHOD)::
;		 	AND RETURNS THE RESULTS IN A STRUCTURE FOR SUBSEQUENT USE
;
; CATEGORY:
; 	STATISTICS
;
; CALLING SEQUENCE:
;		X = FINDGEN(21) & Y=  X + RANDOMU(SEED,21) & RESULT = STATS2(X,Y)
;	
;
; EXAMPLES:
;   PL,STATS2(/NAMES); USE NAMES TO HELP DETERMINE WHAT PARAMS YOU WANT TO APPEAR IN THE STATSTRING
;   ST, STATS2(FINDGEN(11),FINDGEN(11),MODEL = 'RMA')
;   ST,STATS2(FINDGEN(11),FINDGEN(11),MODEL = 'RMA', PARAMS=[0,5,6,7,11],DECIMALS=3) ;(NUMBERS IN TAG STATSTRING HAVE 3 DECIMAL PLACES)
;
; INPUTS:
;		AN X AND Y ARRAY OF SAME SIZE
;
; KEYWORD PARAMETERS:
;
;		          XMISSING:	VALUE FOR MISSING X DATA (THIS VALUE WILL BE EXCLUDED FROM THE STATISTICS).
;             YMISSING:	VALUE FOR MISSING Y DATA (THIS VALUE WILL BE EXCLUDED FROM THE STATISTICS).
;
;             MODEL: THE REGRESSION MODEL(S) 
;             MODEL: NARROWS THE STATISTICAL OUTPUT TO A PARTICULAR MODEL
;                    E.G. MODEL='LSY', OR MODEL='RMA' OR MODEL = ['LSY','RMA']
;
;			          LSY:	LEAST SQUARES Y
;			          LSX:	LEAST SQUARES X
;			          LSB:	LEAST SQUARES BISECTOR
;			          ORMA:	ORTHOGONAL REDUCED MAJOR AXIS
;			          RMA:	REDUCED MAJOR AXIS (FUNCTIONAL REGRESSION)
;			          MLS:	MEAN LEAST SQUARES
;			          RLAD:	ROBUST LEAST ABSOLUTE DEVIATION (IDL'S LADFIT.PRO)

;      		PARAMS:	A VECTOR INDICATING WHICH STATISTICAL RESULTS
;      						WILL BE PLACED INTO THE TAG STRING VARIABLE: STATSTRING
;                 FOR SUBSEQUENT USE BY THE PROGRAM CALLING STATS2
;                 (NOTE THE USER MAY SPECIFY VALUES FOR PARAMS IN ANY ORDER):
;_______________________________________________________________________________           
;           #            VALUE         
;           0     :      MODEL_NAME
;           1     :      MODEL
;           2     :      MODEL_NUM
;           3     :      DATE
;           4     :      LABEL
;           5     :      N
;           6     :      INT
;           7     :      SLOPE
;           8     :      STD_INT
;           9     :      STD_SLOPE
;          10     :      R
;          11     :      RSQ
;          12     :      COV
;          13     :      RMSE
;          14     :      BIAS
;          15     :      PER_BIAS
;          16     :      MEAN_X
;          17     :      MEAN_Y
;          18     :      Y_ABSDEV
;          19     :      SLOPE_T_VAL
;          20     :      SLOPE_SIG
;          21     :      STATSTRING
;|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
;;
;		    DECIMALS:	 NUMBER OF DESIRED DECIMAL PLACES TO USE IN MAKING THE STATSTRING TAG.
;        	             TAG STATSTRING IS USEFUL WHEN COMBINED WITH AN XYOUTS COMMAND.
;          		         DECIMALS ONLY APPLIES TO THE FORMATTING OF THE STATISTICS IN STATSTRING.
;							         (THE STATISTICS IN THE RETURNED STRUCTURE HAVE FULL PRECISION)
;
;		       FILE:	FULL NAME OF THE FILE TO WRITE ALL STATISTICAL RESULTS
;
;        APPEND:	APPENDS (WRITES) STATISTICS TO EXISTING FILE
;
;	   NO_HEADING:	SUPRESSES HEADING
;
;		      LABEL:	USER MAY ADD TEXT STRING IDENTIFYING SUBSET OR ANY OTHER IDENTIFIER WHICH WILL BE ADDED TO
;						         EACH RECORD (LINE) OF THE STATISTICAL OUTPUT
;
;
;	DOUBLE_SPACE:	PLACES AN EXTRA LINE SPACE BETWEEN FORMATTED STATISTICS IN STATSTRING.
;
;		       SHOW:	PRINTS STATISTICS TO THE STANDARD IDL COMMAND LOG OUTPUT WINDOW
;
;
; OUTPUTS:
;		A STRUCTURE CONTAINING THE VARIOUS STATISTICS:
;			N = NUMBER OF X,Y,PAIRS
;			INTERCEPTS,SLOPES,STANDARD DEVIATIONS OF INTERCEPTS AND SLOPE COEFFICIENTS
;			CORRELATION COEFFICIENT SQUARED, COVARIANCE,RMSE (ROOT MEAN SQUARE ERROR)
;			
;
;
; RESTRICTIONS:
;		THE DEFAULT FOR THE FORMAT USED IN THIS ROUTINE TO MAKE THE STATSTRING IS	5 SIGNIFICANT DIGITS.
;		(FORMAT='(G-0.5)').  YOU MAY OBTAIN MORE PRECISION BY USING THE KEYWORD DECIMALS (E.G. DECIMALS=7)
;		THIS PROGRAM PREVENTS DECIMALS FROM EXCEEDING 14 (A REASONABLE PRECISION FOR DOUBLE-PRECISION DATA)
;
;		LABEL MAY NOT HAVE ANY COMMAS.  THIS ROUTINE SUBSTITUTES ANY COMMAS IN THE LABEL WITH ';'.
;
; ====================>
; OTHER PROGRAMS CALLED:
; 	NASA GSFC SIXLIN.PRO IS CALLED TO OBTAIN REGRESSION INTERCEPTS,SLOPES,SIGA,SIGB
; 	NOAA NARR RMSE.PRO    IS CALLED TO OBTAIN ROOT MEAN SQUARED ERROR
; 	NOAA NARR STATS.PRO  IS CALLED TO OBTAIN MEANS
; 	IDL PROGRAM CORRELATE.PRO IS CALLED TO OBTAIN CORRELATION COEFFICIENT AND COVARIANCE
;
;   MODIFICATION HISTORY:
;	WRITTEN AUGUST 6,1996, J.E. O'REILLY, NOAA, NARRAGANSETT, RI
;	AUG 8,1996  JOR ADDED PARAMS
;	JAN 6,1997, JOR ADDED IDL'S LADFIT.PRO (ROBUST LEAST ABSOLUTION DEVIATION)
;	JAN 9, 1997,JOR ADDED BIAS
;	AUG  26,1998,JOR ADDED CORRELATION COEFFICIENT
;	SEP 14,1998,JOR  ADDED KEYWORD DOUBLE_SPACE
;	JAN 3, 2007 JOR ELIMINATED KEYWORD QUIET, NOW USING SHOW.
;														CHANCED TAGNAME "TYPE_" TO "MODEL"
;														NOW USE MODEL NAMES TO SPECIFY MODELS, NOT NUMBERS
; JUN 21,2013, - JEOR:   STANDARD ERROR OF SLOPE FOR LSY MODEL AFTER WEARDEN 'STATISTICS FOR RESEARCH,  PAGES 215-221
;                        THE STRUCT RESULT NOW INCLUDES THE PROBABILITY OF THE SLOPE NOT BEING ZERO [SLOPE_SIGROB]
;                        FOLLOWING  S.DOWDY & S.WEARDEN(1983) STATISTICS FOR RESEARCH  PAGES 215-221
; JUL 6,2013, - JEOR:  REMOVED TEMPORARY PRINTS OF SLOPE_SIGROB
; JUL 28,2013, - JEOR: NOW USING T_PDF(T_VALUE, DF) FOR SLOPE_SIGROB
;                      IF DF LE 0 THEN STATS2_.SLOPE_SIGROB = MISSINGS(0.0)ELSE STATS2_.SLOPE_SIGROB = T_PDF(T_VALUE, DF)
; AUG 2,2013, - JEOR:  ADDED R_PROB TO STATS2 [FORMULA FROM S.DOWDY & S.WEARDEN(1983) STATISTICS FOR RESEARCH  PAGE 232-235
; AUG 7,2013, - JEOR:  CHANGED DATE TO DATE_FORMAT(DATE_NOW(),/YMD)  FOR READABILITY
; AUG 7,2013, - JEOR:  FINILIZED R_PROB
; JUL 21,2014, - JEOR: ADDED KIM'S T_TEST_SLOPE 
; JUL 31,2014, - JEOR: REPLACED ALL S.DOWDY & S.WEARDEN CODE WITH T_TEST_SLOPE
;                      REPLACED TAG SLOPE_SIGROB WITH SLOPE_SIG
;                      REPLACED TAG R_PROB WITH T_VAL
; AUG 3,2014,  - JEOR: ADDED KEYWORD ALPHA [DEFAULT = 0.01] 
; SEP 3,2014,  - JEOR: FIXED PROBLEM WITH STATSTRING        
; MAY 19, 2015 - KJWH: ADDED RMSE AND CHANGED RMS FUNCTION CALL TO REFLECT CHANGES MADE TO RMS  
; MAY 21, 2015 - KJWH: ADDED PERCENT BIAS 
; FEB 20, 2016 - JEOR: RETURN,ERROR STRING IN CATCH BLOCK
;                      IF NONE(ABSDEV) THEN ABSDEV = MISSINGS(XARRAY)  [WORKAROUND TO AVOID ERROR]
; AUG 17,2016, - JEOR: REMOVED ALL FROM CALL TO STR_CAP
; SEP 06,2016  - JEOR: REPLACED FAULTY [RMS] PROGRAM WITH RMSE, REMOVED RMS FROM OUTPUT STRUCT
; SEP 07,2016  - JEOR: IF NONE(DECIMALS) THEN DECIMALS = 5; OVERHAULED STATSTRING; NOW USING TAGNAMES FOR PROGRAM CLARITY
; NOV 20,2016 -  JEOR: REVISED DOCUMENTATON ON STATSTRING PARAMS ,ADDED KEY NAMES [TO OUTPUT PARAMS]
;                      FIXED SUBSCRIPT ISSUE NAME = TAGNAMES(_PARAM)
;                      STREAMLINED STATS2_.STATSTRING CODE [NO LONGER LOOPING],NOW USING STRUCT_INFO;REMOVED KEY FAST AND RELATED CODE
; JAN 21, 2017 - JEOR: IF NONE(MODEL) THEN MODEL = 'RMA'
; MAR 03, 2017 - KJWH: Changed DATE_FORMAT(/YMD) to DATE_FORMAT(/DAY)
; JUN 19, 2017 - KJWH: Added IF N_ELEMENTS(X) GE 3 THEN BEGIN ; Must have at least 3 valid points to run T_TEST_SLOPE   
; JAN 02, 2020 - KJWH: Now looping through STATS2 models in the T_TEST significance step
;                      Removed default model of RMA
; 
;-
;#############################################################################################################

;************************
  ROUTINE = 'STATS2'
;************************  
;===> DEFAULTS
ERROR = ''

;===> CHECK KEYWORD DECIMALS
; ===> DEFAULT FORMAT FOR STATSTRING IS 5 SIGNIFICANT DIGITS
IF NONE(DECIMALS) THEN DECIMALS = 5
; ===> LINESPACE: NORMALLY EACH STATISTIC IN STATSTRING WILL BE PLOTTED ON ITS OWN LINE (WHEN USING THE XYOUTS)
IF KEYWORD_SET(DOUBLE_SPACE) THEN LINESPACE = '!C!C' ELSE LINESPACE = '!C' 


; ===>DEFINE MISSING VALUE FOR DOUBLE PRECISION DATA (!VALUES.D_INFINITY)
  MISSING = MISSINGS(0.0D)
; ===> DEFAULT ALPHA FOR T-TEST OF SIGNIFICANCE OF SLOPE
 IF NONE(ALPHA) THEN ALPHA = 0.01D
;	===> GET EPS (PRECISION OF DOUBLE-PRECISION VALUES)
  SS=MACHAR() & EPS=SS.EPS


;	===> USER PROVIDED LABEL ARE ADDED TO THE STATS STRUCURE
	IF N_ELEMENTS(LABEL) EQ 1 THEN _LABEL = LABEL ELSE _LABEL = ''

; ===> MAKE A STRUCTURE TO HOLD THE STATISTICAL RESULTS
  STATS2_ = {MODEL_NAME:'',$
  					MODEL:'',$
            MODEL_NUM:0,$
            DATE:'',$
            LABEL: _LABEL,$
            N:0, $
            INT:MISSING,$
            SLOPE:MISSING,$
            STD_INT:MISSING,$
            STD_SLOPE:MISSING,$
            R:MISSING,$
            RSQ:MISSING,$
            COV:MISSING,$
            RMSE:MISSING,$
            BIAS:MISSING, $
            PER_BIAS:MISSING, $
            MEAN_X:MISSING,$
            MEAN_Y:MISSING,$
            Y_ABSDEV:MISSING,$
            SLOPE_T_VAL:MISSING,$
            SLOPE_SIG:'',$            
            STATSTRING:''}

          TAGNAMES=TAG_NAMES(STATS2_)
          IF KEYWORD_SET(NAMES) THEN RETURN,TAGNAMES

;	*********************************
;	*** C A T C H    E R R O R S  ***
;	*********************************
	CATCH, ERROR_STATUS
   IF ERROR_STATUS NE 0 THEN BEGIN
    ERROR = !ERROR_STATE.MSG
   	CATCH, /CANCEL
   	RETURN,ERROR
   ENDIF
 
; ===> X AND Y MUST BE PRESENT AND BE THE SAME SIZE
  IF N_ELEMENTS(X) NE N_ELEMENTS(Y) OR N_ELEMENTS(X) LE 1 THEN BEGIN
    ERROR = 'ERROR: X AND Y ARRAYS MUST EACH BE 2 OR MORE ELEMENTS AND MUST BE THE SAME SIZE'
    RETURN,STATS2_
  ENDIF

	
  NTAGS = N_ELEMENTS(TAGNAMES)

;	===> REPLACE ANY '_' IN THE TAGNAMES WITH SPACE
	TAGNAMES_CAP = REPLACE(TAGNAMES,'_',' ')

;	===> CAPITALIZE FIRST LETTERS OF ALL WORDS
  TAGNAMES_CAP = STR_CAP(TAGNAMES_CAP,DELIM = '_')
  TAGNAMES_CAP = STR_CAP(TAGNAMES)


; ===> COPY X AND Y (THIS KEEPS ORIGINAL INPUT ARRAYS UNCHANGED)
  XARRAY= X
  YARRAY= Y

; ===> CHECK KEYWORD XMISSING (NOT PROVIDED THEN XMISSING = !VALUES.D_INFINITY
  IF N_ELEMENTS(XMISSING) EQ 0 THEN BEGIN
    XMISSING = MISSING  ; INFINITY (DOUBLE PRECISION)
  ENDIF ELSE BEGIN
    XMISSING = DOUBLE(XMISSING)
  ENDELSE

; ===> CHECK KEYWORD YMISSING (NOT PROVIDED THEN YMISSING = !VALUES.D_INFINITY
  IF N_ELEMENTS(YMISSING) EQ 0 THEN BEGIN
    YMISSING = MISSING  ; INFINITY (DOUBLE PRECISION)
  ENDIF ELSE BEGIN
    YMISSING = DOUBLE(YMISSING)
  ENDELSE

; ===> FIND GOOD DATA VALUES (NOT EQUAL TO MISSING VALUES OR INFINITY OR NAN)
  OK	= WHERE(XARRAY NE XMISSING  AND FINITE(XARRAY) $
  			AND YARRAY NE YMISSING  	AND FINITE(YARRAY),COUNT)

;	===> MUST HAVE AT LEAST 2 PAIRS
  IF COUNT GE 2 THEN BEGIN
    XARRAY =  XARRAY[OK]
    YARRAY =  YARRAY[OK]
  ENDIF ELSE BEGIN
		ERROR = 'ERROR: X AND Y ARRAYS DO NOT HAVE TWO OR MORE NON-MISSING VALUES'
    RETURN,STATS2_
	ENDELSE



;
   
; ********************************
;	*** FILL THE STATS STRUCTURE ***
; ********************************

;	===> REPLICATE STATS STRUCTURE TO HOLD RESULTS FROM THE 7 REGRESSION MODELS
  STATS2_ = REPLICATE(STATS2_,7)

  STATS2_.MODEL = ['LSY','LSX','LSB','ORMA','RMA','MLS','RLAD']

	STATS2_.MODEL_NUM = ['0','1','2','3','4','5','6']

	STATS2_.MODEL_NAME = ['LEAST SQUARES Y', 'LEAST SQUARES X', 'LEAST SQUARES BISECTOR',$
												'ORTHOGONAL REDUCED MAJOR AXIS', 'REDUCED MAJOR AXIS',$
												'MEAN LEAST SQUARES', 'ROBUXT LAD FIT']

	STATS2_.DATE = DATE_FORMAT(DATE_NOW(),/DAY)


  N = N_ELEMENTS(XARRAY)
  S = SIZE(XARRAY)
  IF  N EQ 1 AND S[0] EQ 0 THEN  N = 0
	IF  N EQ 1 AND XARRAY[0] EQ MISSING THEN BEGIN
  	N = 0
   	STATS2_.N = N
  ENDIF



; **********************************************************************
; IF NOT TOO MANY POINTS THEN PROCEED HERE

  CASE 1 OF
    (N GE 2): BEGIN      ; SIXLIN MUST HAVE AT LEAST 2 X Y PAIRS
     STATS2_.N = N

;    ===> GET THE MEAN X AND MEAN Y
     XX = XARRAY & YY = YARRAY
     STATSX = STATS(XX,LABEL='X: '+_LABEL,SHOW=SHOW)
     STATSY = STATS(YY,LABEL='Y: '+_LABEL,SHOW=SHOW)

     STATS2_.MEAN_X = STATSX.MEAN
     STATS2_.MEAN_Y = STATSY.MEAN

;    ===> CALL CORRELATE
     R   =  CORRELATE(XARRAY,YARRAY)

     STATS2_.R   = R
     STATS2_.RSQ = R^2

;    ===> CALL CORRELATE AGAIN TO GET COVARIANCE
     COV = CORRELATE(XARRAY,YARRAY,/COVARIANCE)
     STATS2_.COV = COV

;    ===>  RMSE PROGRAM
     STATS2_.RMSE = RMSE(XARRAY,YARRAY)

;    ===> COMPUTE BIAS
     STATS2_.BIAS= TOTAL(YARRAY-XARRAY)/N
     
;    ===> COMPUTE PERCENT BIAS
     STATS2_.PER_BIAS = (TOTAL(YARRAY-XARRAY)/N)/MEAN(XARRAY)*100     

;    ===> CALL NASA GSFC SIXLIN
     SIXLIN,XARRAY,YARRAY,INTERCEPT,SIGA,SLOPE,SIGB


;    ===> CALL IDL'S LADFIT
;		 LADFIT HANGS IF XARRAY AND YARRAY ARE IDENTICAL OR IDENTICALLY PROPORTIONAL
		 IF R GE (1.D - 2*EPS) OR R LE (1.D + 2*EPS) THEN BEGIN ; ALL INTERCEPTS AND SLOPES ARE SAME IF CORRELATION = 1.000000000
		 	LAD = [INTERCEPT[0],SLOPE[0]] & ABSDEV = 0.0
		 ENDIF ELSE BEGIN
     	LAD = LADFIT(XARRAY,YARRAY, ABSDEV=ABSDEV,/DOUBLE)
     	IF NONE(ABSDEV) THEN ABSDEV = MISSINGS(XARRAY)
		 ENDELSE

;    ===> FILL THE STATS STRUCTURE WITH RESULTS FROM ALL REGRESSION MODELS IN SIXLIN AND RESULTS FROM LATFIT
     STATS2_(0:5).INT				= INTERCEPT(*)
     STATS2_(0:5).SLOPE   	= SLOPE(*)
     STATS2_(0:5).STD_INT		=	SIGA(*)
     STATS2_(0:5).STD_SLOPE	=	SIGB(*)
     STATS2_(6).INT      		= LAD[0]
     STATS2_(6).SLOPE    		= LAD[1]
     STATS2_(6).Y_ABSDEV 		= ABSDEV

     ENDCASE

    ( N LT 2): BEGIN
      STATS2_.N = N
      ERROR = 'N IS LESS THAN 2'
     ENDCASE

   ENDCASE


;	===> SUBSET STATS2_ FOR THE STATISTICAL MODELS (MODEL) CHOOSEN
 	IF N_ELEMENTS(MODEL) GE 1  THEN BEGIN
 		OK_MODEL = WHERE(STATS2_.MODEL EQ STRUPCASE(MODEL),COUNT_MODEL)
 		IF COUNT_MODEL GE 1 THEN STATS2_ = STATS2_(OK_MODEL)
	ENDIF ; ELSE INCORRECT MODEL NAMES AND ALL 7 MODELS WILL REMAIN IN THE STATS2_


;	===> DEFAULT IS TO FILL THE STATSTRING WITH ALL STATISTICAL RESULTS
  IF N_ELEMENTS(PARAMS) EQ 0 THEN BEGIN
  	PARAMS=INDGEN(NTAGS)
	ENDIF ELSE BEGIN
;		===> FIND ALL BUT STATSTRING
    OK = WHERE(PARAMS GE 0 AND PARAMS LE (NTAGS-2),COUNT)
    IF COUNT GE 1 THEN PARAMS = PARAMS[OK] ELSE PARAMS=INDGEN(NTAGS-1)
  ENDELSE
  ;&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
;###### PROB OF T-VALUE FOR  REGRESSION SLOPE    #####
;' FORMULA FROM:  ##### S.DOWDY & S.WEARDEN(1983) STATISTICS FOR RESEARCH  PAGES 215-221  #####'

;YY= STATS2_.INT + STATS2_.SLOPE * X   
;Y_Y_HAT = Y-YY 
;Y_Y_HAT_SQ = Y_Y_HAT^2 
;Y_Y_HAT_SQ_SUM = TOTAL(Y_Y_HAT_SQ) 
;SYX =Y_Y_HAT_SQ_SUM/(N_ELEMENTS(X)-2) 
;STD_SLOPE  =SQRT(SYX)/ SQRT(N_ELEMENTS(X)*2)
;T_VALUE = ROUNDS((STATS2_.SLOPE -0.0)/STD_SLOPE,2) 
;DF= N_ELEMENTS(X) -2
;;T_PDF: DEGREES OF FREEDOM MUST BE POSITIVE.
;IF DF LE 0 THEN STATS2_.SLOPE_SIGROB = MISSINGS(0.0) ELSE STATS2_.SLOPE_SIGROB = T_PDF(T_VALUE, DF) 
;;|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||


;&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
;###### PROB OF  CORRELATION COEFFICIENT    #####
;' FORMULA FROM:  ##### S.DOWDY & S.WEARDEN(1983) STATISTICS FOR RESEARCH  PAGE 232-235  #####'
;
;T_VALUE = STATS2_.R/((SQRT( (1-STATS2_.R^2)/(N_ELEMENTS(X)-2))))
;DF= N_ELEMENTS(X) -2
;ZR = ALOG(SQRT((1+STATS2_.R)/(1-STATS2_.R)))
;Z = (ZR) /1/SQRT(N-3)
;R_PROB = GAUSS_PDF(Z)
;IF DF LE 0 THEN STATS2_.R_PROB = MISSINGS(0.0)ELSE STATS2_.R_PROB = R_PROB

;||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
;&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
;#########################################################

;===> KIM'S T_TEST_SLOPE TO DETERMINE IF REG SLOPE IS SIGNIFICANT BASED ON T-VAL
  
  FOR N=0, N_ELEMENTS(STATS2_)-1 DO BEGIN
    IF N_ELEMENTS(X) GE 3 THEN BEGIN ; Must have at least 3 valid points to run T_TEST_SLOPE
      T = T_TEST_SLOPE(X=X,Y=Y,ALPHA=ALPHA,MODEL=STATS2_(N).MODEL, STAT=STATS2_(N),SLOPE_SIG=SLOPE_SIG)    
      STATS2_(N).SLOPE_T_VAL = T[0]
      STATS2_(N).SLOPE_SIG = SLOPE_SIG
    ENDIF ; T_TEST_SLOPE 
  ENDFOR  
;|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

;	===> PREPARE THE HEADING FOR PRINTED OUTPUT
	DELIM=","
;	TARGETS = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]
;	NAMES = [TAGNAMES_CAP(TARGETS),_LABEL]
;  NAMES = [TAGNAMES(TARGETS),_LABEL]
   NAMES = TAGNAMES
	NAMES = STRJOIN(NAMES+DELIM)
;########################################################
; ===> OPEN A FILE FOR WRITING STATISTICAL RESULTS
  IF KEYWORD_SET(FILE) THEN BEGIN
;   IF KEYWORD APPEND IS SET THEN ADD TO THE FILE
;   OTHERWISE, OPEN A NEW FILE (REWRITE)
    IF KEYWORD_SET(APPEND) THEN OPENU,LUN,FILE,/GET_LUN,/APPEND ELSE $
                                OPENW,LUN,FILE,/GET_LUN

		IF NOT KEYWORD_SET(NO_HEADING) THEN PRINTF,LUN,NAMES

;		LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
    FOR I = 0,N_ELEMENTS(STATS2_) -1 DO BEGIN
		 PRINTF,LUN,	STATS2_(I).(0),DELIM, $
		 							STATS2_(I).(1),DELIM, $
	                 STATS2_(I).(2),DELIM, $
	                 STATS2_(I).(3),DELIM, $
	                 STATS2_(I).(4),DELIM, $
	                 STATS2_(I).(5),DELIM, $
	                 STATS2_(I).(6),DELIM, $
	                 STATS2_(I).(7),DELIM, $
	                 STATS2_(I).(8),DELIM, $
	                 STATS2_(I).(9),DELIM, $
	                 STATS2_(I).(10),DELIM, $
	                 STATS2_(I).(11),DELIM, $
	                 STATS2_(I).(12),DELIM, $
	                 STATS2_(I).(13),DELIM, $
	                 STATS2_(I).(14),DELIM, $
	                 STATS2_(I).(15),DELIM, $
	                 STATS2_(I).(16),DELIM, $
	                 STATS2_(I).(17),DELIM, $
                 FORMAT='(A4,A,I10,A,17(G16.8,A),A,A)'
  ;               
                 
    ENDFOR
    CLOSE,LUN
    FREE_LUN,LUN
  ENDIF

 IF KEYWORD_SET(SHOW) THEN BEGIN
;   IF KEYWORD APPEND IS SET THEN ADD TO THE FILE
;   OTHERWISE, OPEN A NEW FILE (REWRITE)

		IF NOT KEYWORD_SET(NO_HEADING) THEN PRINT,NAMES

;		LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
    FOR I = 0,N_ELEMENTS(STATS2_) -1 DO BEGIN
			 PRINT,			STATS2_(I).(0),DELIM, $
		 							STATS2_(I).(1),DELIM, $
	                 STATS2_(I).(2),DELIM, $
	                 STATS2_(I).(3),DELIM, $
	                 STATS2_(I).(4),DELIM, $
	                 STATS2_(I).(5),DELIM, $
	                 STATS2_(I).(6),DELIM, $
	                 STATS2_(I).(7),DELIM, $
	                 STATS2_(I).(8),DELIM, $
	                 STATS2_(I).(9),DELIM, $
	                 STATS2_(I).(10),DELIM, $
	                 STATS2_(I).(11),DELIM, $
	                 STATS2_(I).(12),DELIM, $
	                 STATS2_(I).(13),DELIM, $
	                 STATS2_(I).(14),DELIM, $
	                 STATS2_(I).(15),DELIM, $
	                 STATS2_(I).(16),DELIM, $
	                 STATS2_(I).(17),DELIM, $
                 FORMAT='(A4,A,I10,A,15(G16.8,A),A,A)'
    ENDFOR

  ENDIF
 ;STOP
  ;===> GET THE VALUES FROM THE STATS_ STRUCTURE THEN THE VALS FOR THE PARAMS
  VALS = STRUCT_2ARR(STATS2_)
  VALS = VALS(PARAMS)
  TAGNAMES_CAP = TAGNAMES_CAP(PARAMS)
  ;===> FIND TYPES INT OR LONG AND ROUND TO WHOLE NUMBERS THE OTHERS ROUND TO DECIMALS
  TYPES = (STRUCT_INFO(STATS2_)).TYPE
  TYPES = TYPES(PARAMS)
  OK = WHERE(TYPES EQ 2 OR TYPES EQ 4,COUNT)
  IF COUNT GE 1 THEN VALS[OK] = STRTRIM(ROUNDS(VALS[OK]),2)
  OK = WHERE(TYPES EQ 2 OR TYPES EQ 4 OR TYPES EQ 7,NCOMPLEMENT = NCOMP,COMPLEMENT = COMP,COUNT)
  IF COUNT GE 1 THEN VALS[OK] = VALS[OK]
  IF NCOMP GE 1 THEN VALS(COMP) = ROUNDS(VALS(COMP),DECIMALS)
  
  STATS2_.STATSTRING  = STRJOIN(LINESPACE + TAGNAMES_CAP +': ' + VALS ) 
 
RETURN, STATS2_

END; #####################  END OF ROUTINE ################################

