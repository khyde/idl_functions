; $ID:	LME_BOUNDARIES_MAIN.PRO,	2020-07-08-15,	USER-KJWH	$

PRO LME_BOUNDARIES_MAIN

;+
;	This Program Reads the vecter outlines for lme files
; SYNTAX:
;	LME_BOUNDARIES_MAIN, Param1, Param2 [,/KEY1] [,/KEY2] [KEY3=KEY3] )
;	Result = LME_BOUNDARIES_MAIN(Param1, Param2 [,/KEY1] [,/KEY2] [KEY3=KEY3] )
; OUTPUT:
; ARGUMENTS:
; 	Parm1:
; 	Parm2:
; KEYWORDS:
;	KEY1:
;	KEY2:
;	KEY3:
; EXAMPLE:
; CATEGORY:
;
; NOTES:

; VERSION:
;		Jan 22,2002
; HISTORY:
;		Jan 22,2002	Written by:	J.E. O'Reilly, NOAA, 28 Tarzwell Drive, Narragansett, RI 02882
;-
; *************************************************************************
  ROUTINE_NAME='LME_BOUNDARIES_MAIN'



	;file='d:\idl\lme\NORTHEAST_US.txt'
;	FILE=DIR_OUT+'lme-2001.e00'

  BINS= 4320; Number of bins in Level 3 seawifs bined product

;
; ***************************************************************
; *** Create the project folders if they do not already exist ***
; ***************************************************************

  COMPUTER=GET_COMPUTER()
	PRINT, COMPUTER


  IF COMPUTER EQ 'BELKIN2' THEN DISK = 'C:'
  IF COMPUTER EQ 'LOLIGO' or COMPUTER EQ 'LAPSANG' THEN DISK = 'D:'
  DELIM= PATH_SEP()
	PROJECT = 'LME'
  FOLDERS = ['FILES','DATA','DOC','BROWSE','PLOTS','SAVE']

  FILE_PROJECT, DISK=DISK, PROJECT=PROJECT, FOLDERS=FOLDERS


	DO_MAP_OFFSHORE_SEGMENTS 							= 0
	DO_CHECK_LME_OFFSHORE_BOUNDS_FILE 		= 0
	DO_EXTRACT_NAMES 											= 0
	DO_EXTRACT_OFFSHORE_SEGMENTS 					= 0
	DO_MERGE_OFFSHORE_SEGMENTS_TXT_FILES 	= 0
	DO_MAP_OFFSHORE_E16 									= 0

	DO_CHECK_LME 													=	0

	DO_MAP_GRID_2SUBAREA									= 2
	DO_CHECK_OLD_LME_MAP_AGAINST_NEW_BOUNDS = 0

; *********************************************
  IF DO_MAP_OFFSHORE_SEGMENTS GE 1 THEN BEGIN
; *********************************************
	  FILE = DIR_OUT+'lme2001-off.e00'

	  LINE = ''
	  HEADER = ''
	  TXT=''
	  TEXT=''
	  HEADER=''
	  ALAT=0D & ALON=0D & BLAT=0D & BLON = 0D
	  LME_LOOKUPS = ''
	  LABEL_SEG = 1

   	PX = 4*bins & PY = PX/2

	  ZWIN,[PX,PY]
	  SETCOLOR,255
	  ERASE,255
	 ; MAP_GLOBAL_EQUIDISTANT
	 ; MAP='MAP_GLOBAL_EQUIDISTANT'
	  MAP='map_lambert_azimuthal_equal_area'
	  map_lambert_azimuthal_equal_area,/SOUTH
	  MAP_CONTINENTS,/HIRES,COLOR=0,THICK=3
	  PAL_SW3,R,G,B

	  OPENR,LUN,FILE,/GET_LUN
	  READF,LUN,LINE
	  READF,LUN,LINE

		AGAIN_SEG:

	  READF,LUN,LINE &
	  HEADER = [HEADER,LINE]
	  TXT = STRSPLIT(STRTRIM(STRCOMPRESS(LINE),2),' ',/EXTRACT,/PRESERVE_NULL)
	  IF TXT[0] EQ -1 THEN GOTO, SKIP
	  IF N_ELEMENTS(TXT) EQ 7 THEN BEGIN
	    SEGMENT=TXT[0] & F1=TXT[1] & F2=TXT(2) & F3=TXT(3) & LME_LOOKUP=TXT(4) & LME_ADJACENT=TXT(5) & NPOINTS=TXT(6)
	    LME_LOOKUPS = [TEMPORARY(LME_LOOKUPS),LME_LOOKUP]

	    LINES_FULL = NPOINTS/2 & LINES_LAST = NPOINTS MOD 2
	    LONGITUDE = 0D
	    LATITUDE  = 0D
			FOR NTH = 0L, LINES_FULL -1L DO BEGIN
	  		READF,LUN,ALON,ALAT,BLON,BLAT,FORMAT='(4G14)'
	    	LONGITUDE = [TEMPORARY(LONGITUDE),ALON]
	      LATITUDE = 	[TEMPORARY(LATITUDE),ALAT]
	    	LONGITUDE = [TEMPORARY(LONGITUDE),BLON]
	    	LATITUDE = 	[TEMPORARY(LATITUDE),BLAT]
			ENDFOR
			IF LINES_LAST NE 0 THEN BEGIN
			  READF,LUN,ALON,ALAT,FORMAT='(2G14)'
	    	LONGITUDE = [TEMPORARY(LONGITUDE),ALON]
	      LATITUDE = [TEMPORARY(LATITUDE),ALAT]
			ENDIF
	 		 PLOTS, LONGITUDE(1:*),LATITUDE(1:*) ,COLOR=SEGMENT,THICK=3
	     IF LABEL_SEG EQ 1 THEN BEGIN
	       IF SEGMENT MOD 2 EQ 0 THEN CHARSIZE = 1.6 ELSE CHARSIZE = 4
	       pt = N_ELEMENTS(LONGITUDE(1:*))/2
	       XYOUTS, LONGITUDE(PT),LATITUDE(PT),STRTRIM(SEGMENT,2),ALIGN=0.5,COLOR=SEGMENT,CHARSIZE=CHARSIZE
	     ENDIF
	  ENDIF

		GOTO, AGAIN_SEG ;  >>>>>>>>>>>>>>>>>>>>>>>



		SKIP:
		CLOSE,LUN & FREE_LUN,LUN
		IMAGE = TVRD()
		ZWIN
		IF MAP EQ 'map_lambert_azimuthal_equal_area' THEN BEGIN
		  PNGFILE=DIR_OUT+ROUTINE_NAME+'_'+NUM2STR(PX)+'_'+NUM2STR(PY)+'_ARCTIC.PNG'
		ENDIF ELSE BEGIN
		  PNGFILE=DIR_OUT+ROUTINE_NAME+'_'+NUM2STR(PX)+'_'+NUM2STR(PY)+'.PNG'
		ENDELSE
		WRITE_PNG,PNGFILE,IMAGE,R,G,B

		TXTFILE = DIR_OUT+ROUTINE_NAME+'.TXT'
		WRITE_TXT,TXTFILE,HEADER

	ENDIF
;	/////



; ****************************************************
  IF DO_CHECK_LME_OFFSHORE_BOUNDS_FILE GE 1 THEN BEGIN
; ****************************************************
	  DB = READALL(DIR_OUT+'lme_names.csv')
	    SEGMENTS=0
	  FOR N=0,N_ELEMENTS(DB)-1 DO BEGIN
	    SEGMENTS = [SEGMENTS, STRSPLIT(DB(N).SEGMENTS,';',/EXTRACT,/PRESERVE_NULL)]
	  ENDFOR
	  SEGMENTS = SEGMENTS(1:*)
	  OK = WHERE(SEGMENTS NE 0,COUNT)
	  SEGMENTS=SEGMENTS[OK]
	  S=SORT(SEGMENTS) & SEGMENTS=SEGMENTS(S) & U=UNIQ(SEGMENTS) & SEGMENTS=SEGMENTS(u)
	  FOR N=0,255 DO BEGIN
	    OK = WHERE(SEGMENTS EQ N,COUNT)
	    IF COUNT NE 1 THEN PRINT, 'MISSING SEGMENT: '+NUM2STR(N)
	  ENDFOR
	ENDIF
;	/////


; **************************************
  IF DO_EXTRACT_NAMES GE 1 THEN BEGIN
; **************************************
  	NAMES_file = DIR_OUT+'LME_NAMES.TXT'
	  LINES = READALL(NAMES_FILE)

	  OK = WHERE( STRLEN(LINES) GT 70  AND ( STRMATCH(LINES,"*a*",/fold_case)     or STRMATCH(LINES,"*u*",/fold_case)   or STRMATCH(LINES,"*i*",/fold_case)    or STRMATCH(LINES,"*o*",/fold_case) ))
	  txt = ''

	  first_lines=LINES[OK]
	  second_lines = LINES(OK+1)
	  LME_NAMES = FIRST_LINES+SECOND_LINES
	  LME_NAMES=STRCOMPRESS(LME_NAMES)
	  LME_NUM = STRARR(N_ELEMENTS(LME_NAMES))
	  LMES = STRARR(N_ELEMENTS(LME_NAMES))
	  S=CREATE_STRUCT('LME','','LME_NUM',0)
	  S=STRUCT_2MISSINGS(S)
	  S=REPLICATE(S,N_ELEMENTS(LME_NAMES))
	  FOR N=0L,N_ELEMENTS(LME_NAMES)-1 DO BEGIN
	    TXT = STRSPLIT(LME_NAMES(N),' ',/EXTRACT,/PRESERVE_NULL)
	    TXT = TXT + ' '
	    TEMP= STR2NUM(LME_NAMES(N))
	    S(N).LME_NUM = LAST(TEMP)
	    S(N).LME = STRJOIN(TXT(5:*))
	  ENDFOR
	ENDIF
;	/////


; ************************************************
  IF DO_EXTRACT_OFFSHORE_SEGMENTS GE 1 THEN BEGIN
; ************************************************
	  FILE = DIR_OUT+'lme2001-off.e00'
	  LINE = ''
	  OPENR,LUN,FILE,/GET_LUN
	  READF,LUN,LINE & PRINT, LINE
	  READF,LUN,LINE & PRINT, LINE

	  TXT=''
	  TEXT=''
	  HEADER=''
	  ALAT=0D & ALON=0D & BLAT=0D & BLON = 0D
	  LME_LOOKUPS = ''

	  AGAIN_EXTRACT_OFFSHORE_BOUNDS:

	  READF,LUN,LINE &
	  HEADER = [HEADER,LINE]

	  TXT = STRSPLIT(STRTRIM(STRCOMPRESS(LINE),2),' ',/EXTRACT,/PRESERVE_NULL)
	  IF TXT[0] EQ -1 THEN GOTO, SKIP_AGAIN_EXTRACT_OFFSHORE_BOUNDS
	  IF N_ELEMENTS(TXT) EQ 7 THEN BEGIN
	    SEGMENT=TXT[0] & F1=TXT[1] & F2=TXT(2) & F3=TXT(3) & LME_LOOKUP=TXT(4) & LME_ADJACENT=TXT(5) & NPOINTS=TXT(6)
	    LME_LOOKUPS = [TEMPORARY(LME_LOOKUPS),LME_LOOKUP]

	    LINES_FULL = NPOINTS/2 & LINES_LAST = NPOINTS MOD 2
	    LONGITUDE = 0D
	    LATITUDE  = 0D
			FOR NTH = 0L, LINES_FULL -1L DO BEGIN
	  		READF,LUN,ALON,ALAT,BLON,BLAT,FORMAT='(4G14)'
	    	LONGITUDE = [TEMPORARY(LONGITUDE),ALON]
	      LATITUDE = 	[TEMPORARY(LATITUDE),ALAT]
	    	LONGITUDE = [TEMPORARY(LONGITUDE),BLON]
	    	LATITUDE = 	[TEMPORARY(LATITUDE),BLAT]
			ENDFOR
			IF LINES_LAST NE 0 THEN BEGIN
			  READF,LUN,ALON,ALAT,FORMAT='(2G14)'
	    	LONGITUDE = [TEMPORARY(LONGITUDE),ALON]
	      LATITUDE = [TEMPORARY(LATITUDE),ALAT]
			ENDIF
			LONGITUDE=LONGITUDE(1:*)
			LATITUDE=LATITUDE(1:*)
		SEG_FILE = DIR_OUT+'OFFSHORE_'+NUM2STR(SEGMENT)+'.TXT'
		OPENW,LUN_SEG,SEG_FILE,/GET_LUN

	 	PRINTF,LUN_SEG,DOUBLE(N_ELEMENTS(LONGITUDE)),SEGMENT,FORMAT='(2E16.8)'
		FOR N=0L,N_ELEMENTS(LONGITUDE)-1L DO BEGIN
		  PRINTF,LUN_SEG,LONGITUDE(N),LATITUDE(N),FORMAT='(2E16.8)'
		ENDFOR
		CLOSE, LUN_SEG
		FREE_LUN,LUN_SEG
	  ENDIF

		GOTO,AGAIN_EXTRACT_OFFSHORE_BOUNDS

		SKIP_AGAIN_EXTRACT_OFFSHORE_BOUNDS:
	ENDIF
;	/////





; *******************************************************
  IF DO_MERGE_OFFSHORE_SEGMENTS_TXT_FILES GE 1 THEN BEGIN
; *******************************************************
	  DB = READALL(DIR_OUT+'lme_names.csv')
	  OFFSHORE_TXT_FILES = FILELIST(DIR_OUT + 'OFFSHORE_*.TXT')
	  FN=PARSE_IT(OFFSHORE_TXT_FILES)
	  NAMES = FN.FIRST_NAME
	  FOR N=0L,N_ELEMENTS(DB)-1L DO BEGIN
	    SEGMENTS=STRSPLIT(DB(N).SEGMENTS,';',/EXTRACT,/PRESERVE_NULL)

	    E16_NAME= DIR_OUT+'OFFSHORE_'+REPLACE(STRTRIM(DB(N).NAME,2),' ','_')+'_'+NUM2STR(DB(N).CODE)+'.E16'
	    TEXT = ''
	    FOR _SEG = 0L,N_ELEMENTS(SEGMENTS)-1L DO BEGIN
	      ASEG = NUM2STR(SEGMENTS(_SEG))
	      TARGET = '_'+ASEG+'.TXT'
	      OK = WHERE(STRPOS(OFFSHORE_TXT_FILES,TARGET) GE 0,COUNT)
	      IF COUNT EQ 1 THEN BEGIN

	      PRINT, ASEG + ' ' +  ' READING '  + OFFSHORE_TXT_FILES(OK[0])
	        TEXT = [TEXT, READALL(OFFSHORE_TXT_FILES(OK[0]))]
	      ENDIF
	      IF COUNT GT 1 THEN STOP

	    ENDFOR
	    OK = WHERE(STRPOS(TEXT,'E') GE 0,COUNT)

	    IF COUNT GE 1 THEN WRITE_TXT,E16_NAME,TEXT[OK]
	  ENDFOR
	  STOP
	ENDIF
;	/////



; *********************************************
  IF DO_MAP_OFFSHORE_E16 GE 1 THEN BEGIN
; *********************************************
		PX = BINS*4 & PY = PX/2

		ZWIN,[PX,PY]
		SETCOLOR,255
		ERASE,255
		LOADCT,31
		TVLCT,R,G,B,/GET
		R(254) = 192 & G(254) = 192 & B(254) = 192
		R[0] = 0 & G[0] = 0 & B[0] = 0
		TVLCT,R,G,B

		MAP_GLOBAL_EQUIDISTANT
		MAP_CONTINENTS,/HIRES,COLOR=254,THICK=1,/COASTS,/FILL_CONTINENTS
		MAP_CONTINENTS,/HIRES,COLOR=0,THICK=1,/COASTS


		TVLCT,R,G,B,/GET
		FILES = FILELIST(DIR_OUT + 'OFFSHORE_*.E16')
		FOR N=0,N_ELEMENTS(FILES)-1L DO BEGIN
		  AFILE = FILES(N)
		  FN=PARSE_IT(AFILE)

		  COLOR= LAST(STRSPLIT(FN.NAME,'_',/EXTRACT,/PRESERVE_NULL))
		  PLOTDEG,FILES=AFILE,COLOR=COLOR,thick=1
		  print,color
		ENDFOR
		IMAGE = TVRD()
		ZWIN
		PNGFILE = DIR_OUT+'LME_OFFSHORE'+NUM2STR(PX)+'_'+NUM2STR(PY)+'.PNG'
		WRITE_PNG,PNGFILE, IMAGE,R,G,B
	ENDIF
; /////






;	*********************************
	IF DO_CHECK_LME GE 1 THEN BEGIN
;	*********************************
;		leg=color_bar_scale(minval=0,maxval=255,xticks=16,xtitle=' ',charsize=2,px=2048,py=100)
;		i(8000,0) = leg
		pal_lme,r,g,b



;		IMAGE=read_png('d:\idl\lme\LME_MASK_17280_8640.png',r,g,b)
;		IMAGE=READ_PNG('d:\idl\LME\MASK_SUBAREA-GEQ-PXY_17280_8640-LME.png')
		IMAGE=READ_PNG('D:\IDL\LME\LME_MASK_17280_8640.png')
		H=HISTOGRAM(IMAGE,MIN=0,MAX=255)
		PLOT,H,YLOG=1
		STOP

		SZ=SIZE(IMAGE,/STRUCT)
		PX=SZ.DIMENSIONS[0]& PY = SZ.DIMENSIONS[1]

		OK = WHERE(IMAGE GE 64 AND IMAGE LT 254)
		WINDOW,0,XSIZE=1000,YSIZE=500
		ONE2TWO,OK,IMAGE,IX,IY
		PLOT, [0,PX],[0,PY],XMARGIN=[0,0],YMARGIN=[0,0],/NODATA,XSTYLE=4,YSTYLE=4
		PLOTS,IX,IY,PSYM=1, SYMSIZE = 0.25,COLOR=18
		STOP


		PAL_36
		SETCOLOR,0
		FOR N=1,64 DO BEGIN
		  OK = WHERE(IMAGE EQ N,COUNT)
		  WINDOW,0,XSIZE=1000,YSIZE=500
		    ONE2TWO,OK,IMAGE,IX,IY
		  PLOT, [0,PX],[0,PY],XMARGIN=[0,0],YMARGIN=[0,0],/NODATA,XSTYLE=4,YSTYLE=4
		  PLOTS,IX,IY,PSYM=1, SYMSIZE = 0.25,COLOR=TC(18)
		  STOP
		ENDFOR
	ENDIF
;	/////


;	***************************************
	IF DO_MAP_GRID_2SUBAREA GE 1 THEN BEGIN
;	***************************************
		MAP_GRID_2SUBAREA, 'D:\IDL\IMAGES\MASK_SUBAREA-GEQ-PXY_8192_4096-LME.SAVE', DIR_OUT=DIR_OUT
	ENDIF
;	/////


;	***********************************************************
	IF DO_CHECK_OLD_LME_MAP_AGAINST_NEW_BOUNDS GE 1 THEN BEGIN
;	***********************************************************
	DATA = STRUCT_SD_READ('D:\IDL\IMAGES\MASK_SUBAREA-GEQ-PXY_8192_4096-LME.SAVE',STRUCT=STRUCT)
 	FILE = !DIR_DATA+'lme2006.txt'
	TEXT = READ_TXT(FILE)
	OK = WHERE(STRLEN(TEXT) EQ 36)
	TEXT = TEXT[OK]

	ZWIN,DATA
	MAP_GEQ
	TV,DATA
	FOR NTH=0L,N_ELEMENTS(TEXT)-1L DO BEGIN
		LL = STRSPLIT(TEXT[NTH],' ',/EXTRACT)
		PLOTS, LL[0],LL[1],PSYM=3,COLOR=128
	ENDFOR
	IMAGE=TVRD()
	ZWIN
	PAL_IDL31,R,G,B & WRITE_PNG,'JUNK.PNG',IMAGE,R,G,B
STOP



	ENDIF





END; #####################  End of Routine ################################
