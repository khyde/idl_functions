; $ID:	ECOAP_MAIN.PRO,	2021-04-15-17,	USER-KJWH	$
;+
; :Author: kimberly.hyde
;-

	PRO ECOAP_MAIN

;+
; NAME:
;		ECOAP_MAIN
;
; PURPOSE:;
;		This procedure is the MAIN program for EcoAP projects
;
; CATEGORY:
;		CATEGORY
;
; CALLING SEQUENCE:
;		NO KEYWORDS
;
; INPUTS:
;
; OPTIONAL INPUTS:
;
; KEYWORD PARAMETERS:
;
;	NOTES:
;
;
; MODIFICATION HISTORY:
;			Written Mar 24, 2009 by K.J.W.Hyde, 28 Tarzwell Drive, NMFS, NOAA 02882 (kimberly.hyde@noaa.gov)
;-
;	****************************************************************************************************
	ROUTINE_NAME = 'ECOAP_MAIN'

;	===> Initialize ERROR to a null string. If errors are encountered ERROR will be set to a message.
;			 The calling routine can check error (e.g.IF ERROR NE 0 then there was a problem and do this or that)
	ERROR = ''

	
	DIR_PROJECTS = FIX_PATH(!S.PROJECTS + 'ECOAP\') 
	DIR_DATASETS = !S.DATASETS
	SL = DELIMITER(/PATH)
  
  DO_NETCDF_2SAVE     = 0 ; Added 07/11/13
  DO_HDF_MAKE         = 0 ; Added 01/12/12  
  DO_DAILY_COMPARE    = 0 ; Added 11/25/13 - To compare daily MODIS and SeaWiFS products
  DO_SPR_COMPOSITES   = 0 ; Added 3/19/14 - Create monthly composites of Chlorophyll and SST images 
  DO_SUBAREA_MAP      = 0
  DO_TS_SUBAREAS      = 0 
  DO_SIZE_PLOTS       = 0 ; Added 12/18/12
  DO_2012_RETREAT     = 0 ; Added 12/13/12 
  DO_REGION_SERIES    = 0 ; Added 12/17/12
  DO_GOM_DATA         = 0
	DO_COMPOSITES  			= 0
	DO_MOVIES           = 0
	DO_WS_BLOOM				  = 0
	DO_NEW_PROD         = 0
	DO_NEW_PROD_CAR     = 0
	DO_NET_CHL          = 0
	DO_PHYTO_CARBON     = 0
	DO_LINE_PLOTS       = 0	
	DO_STATS			  		= 0
	DO_DATA_EXTRACT   	= 0
	DO_FROMM_EXTRACT    = 0
	DO_FRIED_EXTRACT  	= 0
	DO_GOOGLE_IMAGES    = 0
	DO_WEBSITE_IMAGES   = 0
	DO_WEBSITE_MOVIES   = 0
	DO_COLORBARS        = 0
	DO_SST_SATSHIP      = 0 ; Added 04/12/2013 - To compare satellite SST data with temperatures collected as part of the NOAA Observer Program
	


  NO3_PLOTS      = DIR_PROJECTS + 'NEWPROD\PLOTS\GOM_NO3_PLOTS.PS'
	LINE_PLOTS     = DIR_PROJECTS + 'PLOTS\ECOAP_SEASONAL_PLOTS.PS'
	SAT_PLOTS      = DIR_PROJECTS + 'PLOTS\NEC_EXTRACT_PLOTS.PS'

; *******************************************************
	IF DO_NETCDF_2SAVE GE 1 THEN BEGIN
; *******************************************************
	  OVERWRITE = DO_NETCDF_2SAVE GE 2
	  
	  DIR        = FIX_PATH(!S.PROJECTS+'SABA_EOF\NITRATE\')
	  DIR_NETCDF = FIX_PATH(DIR + 'NETCDF\')
	  DIR_SAVE   = FIX_PATH(DIR + 'SAVE\')
	  DIR_PNG    = FIX_PATH(DIR + 'BROWSE\')
	  DIR_HDF    = FIX_PATH(DIR + 'HDF\')
	  FILES      = FILE_SEARCH(DIR_NETCDF + '*NITRATE*.nc')
	  BUFFER     = 1
	  
	  FOR N=0L, N_ELEMENTS(FILES)-1 DO BEGIN
	    MTIME = GET_MTIME(FILES(N))
	    FP = FILE_PARSE(FILES(N))
	    NAMES = STRSPLIT(FP.NAME,'_',/EXTRACT)	    
	    SENSOR = NAMES[0]
	    DEPTH = NAMES(-1)
	    REFRESH = 1	  
	    DATA = READ_NETCDF_2STRUCT(FILES(N),PRODUCTS=['DATES','LAT','LON','NITRATEANOMALY','GLOBAL'])
	    LONS = DATA.SD.LON.IMAGE
	    LATS = DATA.SD.LAT.IMAGE
	    DATES = DATA.SD.DATES.IMAGE
	    NO3 = DATA.SD.NITRATEANOMALY.IMAGE
	    OK = WHERE(FINITE(NO3) EQ 0,COUNT)
	    NO3[OK] = MISSINGS(NO3) 
	    SZ = SIZE(NO3)
      
      FOR D=0, N_ELEMENTS(DATES)-1 DO BEGIN
        YEAR = STRMID(NUM2STR(DATES(D)),0,4)
        SEA  = STRMID(NUM2STR(DATES(D)),5,2)
        CASE SEA OF 
          '00': SEASON = 'WINTER'
          '25': SEASON = 'SPRING'
          '50': SEASON = 'SUMMER'
          '75': SEASON = 'FALL'
        ENDCASE
        LABEL = YEAR + '_' + SEASON + '-' + SENSOR + '-NEC-DEPTH_' +DEPTH + 'M-NO3_ANOM'
        SAVEFILE = DIR_SAVE + LABEL + '.SAVE'
        PNGFILE  = DIR_PNG  + LABEL + '.PNG'
        HDFFILE  = DIR_HDF  + LABEL + '.HDF'
        IF GET_MTIME(SAVEFILE) GT MTIME AND GET_MTIME(PNGFILE) GT MTIME AND GET_MTIME(HDFFILE) GT MTIME AND NOT KEYWORD_SET(OVERWRITE) THEN CONTINUE
	  	  IMG = NO3(*,*,D)
	  	  IMG = REFORM(IMG) ;& IMG = ROTATE(IMG,3)
        IMG = MAP_REMAP(IMG,MAP_IN='LONLAT',MAP_OUT='NEC',PX_OUT=1024,PY_OUT=1024,REFRESH=REFRESH,CONTROL_LONS=LONS,CONTROL_LATS=LATS,/CENTER_PIXEL)
        REFRESH = 0
  
    	  OUT_PROD = 'NO3'
    	  OUT_MATH = 'DIF'
    	  OUT_STAT = 'MEAN'
    	  SPECIAL_SCALE = '4'
    	  PAL = 'PAL_DIF_BWR'
    	  
	      PRINT, 'Writing: ' + SAVEFILE	       
        STRUCT=STRUCT_SD_MAKE(IMG, FILE_NAME=SAVEFILE, MAP='NEC',PROD=OUT_PROD, AMATH=OUT_MATH, ASTAT=OUT_STAT, GLOBAL=DATA.GLOBAL,$
          SCALE_FACTOR=1.0,MISSING_CODE=MISSINGS(IMG), SCALING='LINEAR', INTERCEPT=0.0,  SLOPE=1.0, DATA_UNITS=UNITS(OUT_PROD),INFILE=FILES(N), NOTES=NOTES,ERROR=ERROR, HELP=HELP, _EXTRA=_extra)        
        SAVE,FILENAME=SAVEFILE,STRUCT,/COMPRESS
        STRUCT_SD_2HDF, SAVEFILE,DIR_OUT=DIR_OUT,OUTFILE=HDFFILE,/LONLAT,/MAP_ATTRIBUTES,OVERWRITE=OVERWRITE
    	  BIMAGE = STRUCT_SD_2IMAGE_NG(STRUCT.(0),MAP_OUT='NEC',PAL=PAL,USE_PROD='DIF',SPECIAL_SCALE='4',COLORBAR_TITLE='NO!D3!N Anomaly',/ADD_LAND,/NO_LAKES,/ADD_MASK,MASK_SUBS=MASK_SUBS,MASK_COLOR=MASK_COLOR,/ADD_COLORBAR,REFRESH=REFRESH,BUFFER=BUFFER)
    	  BIMAGE.SAVE,PNGFILE,RESOLUTION=300
    	  BIMAGE.CLOSE
    	ENDFOR
   ENDFOR 	  


  ENDIF ; DO_NETCDF_2SAVE
; *******************************************************
  IF DO_HDF_MAKE GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_HDF_MAKE GE 2
       
    DATASETS = ['SST-AVHRR-4','SST-MODIS-4','OC-SEAWIFS-MLAC','OC-MODIS-LAC']
    PRODS    = ['SST',        'SST-N_11UM', 'CHLOR_A-PAN',    'CHLOR_A-PAN']
    DATERANGE = ['19980101','20131231']
    FOR NTH=0L, N_ELEMENTS(DATASETS)-1 DO BEGIN 
	   ; FOR PTH = 0L, N_ELEMENTS(PRODS)-1 DO BEGIN
	      APROD = PRODS[NTH]
	      DIR_OUT = FIX_PATH(!S.DATASETS + DATASETS[NTH]+'\NEC\HDF\'+APROD+'\')       & DIR_TEST,DIR_OUT
	      DIR_BR = FIX_PATH(!S.DATASETS + DATASETS[NTH]+'\NEC\STATS_BROWSE\'+APROD+'\')       & DIR_TEST,DIR_BR
	      FILES = FILE_SEARCH(FIX_PATH(!S.DATASETS + DATASETS[NTH]+'\NEC\STATS\'+APROD+'\') + 'M_*MEAN.SAVE')
	      FILES = DATE_SELECT(FILES,DATERANGE[0],DATERANGE[1])
	      STRUCT_SD_2PNG_NG,FILES,DIR_OUT=DIR_BR,/ADD_LAND,/ADDDATE,/ADD_COLORBAR,/ADD_COAST,RESOLUTION=100    
	      STRUCT_SD_2HDF, FILES,DIR_OUT=DIR_OUT,/LONLAT,/MAP_ATTRIBUTES,OVERWRITE=OVERWRITE
	     stop         	        	      
	   ; ENDFOR    
    ENDFOR
STOP      
  ENDIF  


; *******************************************************
  IF DO_DAILY_COMPARE GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_DAILY_COMPARE GE 2
    
    BUFFER = 0
    
    DIR       = DIR_PROJECTS + 'NAFO' + SL + 'STATS' + SL
    DIR_PLOTS = DIR_PROJECTS + 'NAFO' + SL + 'PLOTS' + SL
    
    DATE_RANGE = DATE_2JD(['19970101','20131231'])
    SUBAREAS   = ['ESTUARY_SHELF_LME','ECOREGIONS_FULL_NO_ESTUARIES']
    DATASETS   = ['OC-SEAWIFS-MLAC','OC-MODIS-LAC']
    SUBPER     = 'A_ANNUAL_M_MANNUAL_MONTH'
    TS_SUB     = 'STATS'
    PERIODS    = 'M'    
    CODES      = ['NE US Shelf (0-200m)','MID-ATLANTIC BIGHT','GEORGES BANK','GULF OF MAINE','SCOTIAN SHELF']
    DATES      = ['1997-2013']
    
    PY = [0,100]
    WIDTH = 6
    
    
    PY = [0,100]
    WIDTH = 6
    CFILES = []
    FOR D=0, N_ELEMENTS(DATASETS)-1 DO BEGIN
      FOR S=0, N_ELEMENTS(SUBAREAS)-1 DO CFILES = [CFILES,FILE_SEARCH(!S.DATASETS+DATASETS(D)+SL+'NEC'+SL+'TS_SUBAREAS-'+TS_SUB+SL+SUBPER+'*MASK_SUBAREA-NEC-PXY_1024_1024-'+SUBAREAS(S)+'*-MULTI_PRODS.SAVE')]
    ENDFOR
    OK = WHERE(CFILES NE '') & CFILES=CFILES[OK]
    CDATA = STRUCT_2MISSINGS(CREATE_STRUCT('SENSOR',''))
    FOR S=0, N_ELEMENTS(CFILES)-1 DO CDATA = STRUCT_CONCAT(CDATA,IDL_RESTORE(CFILES(S)))
    TEMP = STRUCT_2MISSINGS(CREATE_STRUCT('N_CHLOR_A_OC',0L,'MIN_CHLOR_A_OC',0.0,'MAX_CHLOR_A_OC',0.0,'MED_CHLOR_A_OC',0.0,'MEAN_CHLOR_A_OC',0.0,$
      'GMEAN_CHLOR_A_OC',0.0,'AMEAN_CHLOR_A_OC',0.0,'SUM_CHLOR_A_OC',0.0,'VAR_CHLOR_A_OC',0.0,'STD_CHLOR_A_OC',0.0,'GSTD_CHLOR_A_OC',0.0,'ASTD_CHLOR_A_OC',0.0,'CV_CHLOR_A_OC',0.0))
    CDATA = STRUCT_CONCAT(CDATA,TEMP)
    TEMP_TAGS = TAG_NAMES(TEMP)
    TAGS = TAG_NAMES(CDATA)
    FOR T=0, N_ELEMENTS(TEMP_TAGS)-1 DO BEGIN
      TPOS = WHERE(TAGS EQ TEMP_TAGS(T))
      SPOS = WHERE(TAGS EQ REPLACE(TEMP_TAGS(T),'OC','OC4'))
      MPOS = WHERE(TAGS EQ REPLACE(TEMP_TAGS(T),'OC','OC3M'))
      OK = WHERE(CDATA.(SPOS) NE MISSINGS(CDATA.(SPOS)),COUNT)
      IF COUNT GE 1 THEN CDATA[OK].(TPOS) = CDATA[OK].(SPOS)
      OK = WHERE(CDATA.(MPOS) NE MISSINGS(CDATA.(MPOS)),COUNT)
      IF COUNT GE 1 THEN CDATA[OK].(TPOS) = CDATA[OK].(MPOS)
    ENDFOR
    OK = WHERE(STRPOS(CDATA.FIRST_NAME_CHLOR_A_OC4,'SEAWIFS') GE 0 OR STRPOS(CDATA.FIRST_NAME_CHLOR_A_PAN,'SEAWIFS'))
    CDATA[OK].SENSOR = 'SEAWIFS'
    OK = WHERE(STRPOS(CDATA.FIRST_NAME_CHLOR_A_OC3M,'MODIS') GE 0 OR STRPOS(CDATA.FIRST_NAME_CHLOR_A_PAN,'MODIS') GE 0)
    CDATA[OK].SENSOR = 'MODIS'
    OK = WHERE(CDATA.PERIOD NE MISSINGS(CDATA.PERIOD))
    CDATA = CDATA[OK]
    CDATA = CDATA[WHERE(PERIOD_2JD(CDATA.PERIOD) GE DATE_RANGE[0] AND PERIOD_2JD(CDATA.PERIOD) LE DATE_RANGE[1])]
    
    FOR N=0, N_ELEMENTS(CODES)-1 DO BEGIN
      PNGFILE = FIX_PATH(!S.PROJECTS + 'ECOAP/PLOTS/'+PERIODS+'_'+TS_SUB+'-NEC-TIMESERIES-'+CODES(N)+'.PNG')
      IF GET_MTIME(PNGFILE) GT MIN(GET_MTIME(CFILES)) AND NOT KEYWORD_SET(OVERWRITE) THEN CONTINUE
      W = WINDOW(DIMENSIONS=[1400,1000])
      D = TEXT(0.5,0.96,DATES[0]+'!C'+CODES(N),FONT_SIZE=14,ALIGNMENT=0.5)
      
      AXMON = DATE_AXIS([20200101,20201231],/MONTH,/MID,/FYEAR)
      AXA = DATE_AXIS([19970101,20130101],/YEAR,/YY)
      AXM = DATE_AXIS([19970101,20131231],/MONTH,STEP=4,MAX_LABELS=70)
      MYRANGE = LIST([0,3.0],[0,3.0],[0,60],[0,0.3])
      
      TOP    = [0.95, 0.725, 0.5,.275]
      LEFT   = 0.05
      RIGHT  = 0.95
      PLDIF  = 0.17
      SPACE  = 0.05
      
      PRODS = ['CHLOR_A_OC','CHLOR_A_PAN','PAR','A_CDOM_443_MAN_MLR']
      YTITLE = UNITS(['CHLOR_A','CHLOR_A','PAR','A_CDOM_443'])
      FOR P=0, N_ELEMENTS(PRODS)-1 DO BEGIN
        IF PRODS(P) EQ 'PAR' THEN POS = WHERE(TAGS EQ 'MEAN_'+PRODS(P)) ELSE POS = WHERE(TAGS EQ 'GMEAN_'+PRODS(P))
        MPOS = [LEFT, TOP(P)-PLDIF,RIGHT, TOP(P)]
        
        OKS = WHERE(CDATA.SENSOR EQ 'SEAWIFS' AND CDATA.PERIOD_CODE EQ PERIODS AND CDATA.SUBAREA_NAME EQ CODES(N))
        OKM = WHERE(CDATA.SENSOR EQ 'MODIS'   AND CDATA.PERIOD_CODE EQ PERIODS AND CDATA.SUBAREA_NAME EQ CODES(N))
        PANS = PLOT(PERIOD_2JD(CDATA(OKS).PERIOD),CDATA(OKS).(POS),XRANGE=AXM.JD,XTICKVALUES=AXM.TICKV,XTICKNAME=AXM.TICKNAME,XMINOR=3,YMINOR=2,XTICKLEN=0.04,YTICKLEN=0.01,YRANGE=MYRANGE(P),POSITION=MPOS,$
          YTITLE=YTITLE(P),THICK=4,COLOR='RED', BUFFER=BUFFER,/CURRENT)
        PANM = PLOT(PERIOD_2JD(CDATA(OKM).PERIOD),CDATA(OKM).(POS),XRANGE=AXM.JD,YRANGE=MYRANGE(P),YMINOR=2,YTICKLEN=0.01,THICK=2,  COLOR='BLUE',BUFFER=BUFFER,/CURRENT,/OVERPLOT)
        
        STXT = TEXT(0.07,0.93,'SeaWiFS',FONT_SIZE=12,COLOR='RED')
        MTXT = TEXT(0.07,0.91,'MODIS',  FONT_SIZE=12,COLOR='BLUE')
        
      ENDFOR
      W.SAVE,PNGFILE,RESOLUTION=300
      W.CLOSE
    ENDFOR
    STOP
  ENDIF ; DO_DAILY_COMPARE


; *******************************************************
  IF DO_SPR_COMPOSITES GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_SPR_COMPOSITES GE 2
    
    BUFFER = 1
    VERBOSE = 1
    
    DIR_PLOTS = DIR_PROJECTS + 'COMPOSITES' + SL
    MAP_IN  = ['NEC','NEC']
    MAP_OUT = ['NEC','GOMN']
    
    DATASETS = ['OC-SEAWIFS-MLAC','OC-MODIS-LAC','SST-AVHRR-4','SST-PAT-4', 'SST-MODIS-4','SST-MUR-1KM']
    PRODS    = ['CHLOR_A-PAN',    'CHLOR_A-PAN', 'SST',        'SST-N_11UM','SST-N_11UM', 'SST']
    PROD_LABEL = ['SEAWIFS_CHL_PAN','MODIS_CHL_PAN','AVHRR_SST','PAT_SST','SST-MODIS','SST-MUR-1KM']
    SBAR_TITLE = UNITS(['CHLA','CHLA','TEMP','TEMP','TEMP','TEMP'])
    ABAR_TITLE = [REPLICATE('Chlorophyll Anomaly (ratio)',2),REPLICATE('Temperature Anomaly ' + UNITS('SST',/NO_NAME),4)];, 'Temperature Anomaly ' + UNITS('SST',/NO_NAME)]
    STAT_SS = ['.03_50','.03_50','','','','']
    ANOM_SS = ['4','4','5','5','5','5']
    STAT_UP = ['CHLOR_A','CHLOR_A','SST','SST','SST','SST']
    ANOM_UP = ['RATIO',  'RATIO',  'DIF','DIF','DIF','DIF'] 
    
    
    DATA_TYPE = ['STATS','ANOMS']    
    PERIOD_TYPE = ['M_','M_*MONTH_*']
    PAL = ['PAL_SW3','PAL_ANOM_GREY']
    
    YEARS = YEAR_RANGE('1998','2012',/STRING)
    MONTHS = ['01','02','03','04','05','06']
    NAMES = MONTH_NAMES(MONTHS)
    DATE_RANGE = ['19980101','20120701']
    
    FOR M=0, N_ELEMENTS(MAP_OUT)-1 DO BEGIN
      FOR D=0, N_ELEMENTS(DATASETS)-1 DO BEGIN
        DATASET = DATASETS(D)
        FOR T=0, N_ELEMENTS(DATA_TYPE)-1 DO BEGIN            
          FILES = FILE_SEARCH(!S.DATASETS + DATASET + SL + MAP_IN(M) + SL + DATA_TYPE(T) + SL + PRODS(D) + SL + PERIOD_TYPE(T)+'*MEAN*.SAVE')
          IF N_ELEMENTS(FILES) EQ 1 THEN CONTINUE
          FILES = DATE_SELECT(FILES,DATE_RANGE[0],DATE_RANGE[1])      
          IF DATASET EQ 'OC-SEAWIFS-MLAC' THEN BEGIN
            MFILES = FILE_SEARCH(!S.DATASETS + 'OC-MODIS-LAC' + SL + MAP_IN(M) + SL + DATA_TYPE(T) + SL + PRODS(D) + SL + PERIOD_TYPE(T)+'*MEAN*.SAVE')
            FP = PARSE_IT(MFILES)
            OK = WHERE_MATCH(FP.PERIOD,'M_'+['200801','200802','200803','200905'])
            FILES = [FILES,MFILES[OK]]
            MFILES = DATE_SELECT(MFILES,'20110101','20120631')
            FILES = [FILES,MFILES]              
          ENDIF
          FP = PARSE_IT(FILES)      
          FILES = FILES[WHERE(FP.MONTH_END LE '06')]
          FP = PARSE_IT(FILES)
          FILES = FILES[SORT(FP.MONTH_END+FP.YEAR_START)]          
          PNGFILE = DIR_PLOTS + MIN(FP.YEAR_START) + '_' + MAX(FP.YEAR_START) + '-SPRING_COMPOSITE-'+MAP_OUT(M)+'-'+PROD_LABEL(D)+'-'+DATA_TYPE(T)+'.PNG'
          IF UPDATE_CHECK(INFILES=FILES,OUTFILE=PNGFILE) EQ 0 AND NOT KEYWORD_SET(OVERWRITE) THEN CONTINUE
          
          XDIM    = 128    & YDIM    = 128
          IF DATA_TYPE(T) EQ 'STATS' THEN BEGIN & SS = STAT_SS & CBAR_TITLE = SBAR_TITLE & USE_PRODS = STAT_UP & ENDIF
          IF DATA_TYPE(T) EQ 'ANOMS' THEN BEGIN & SS = ANOM_SS & CBAR_TITLE = ABAR_TITLE & USE_PRODS = ANOM_UP & ENDIF
                    
          MONTHLY_COMPOSITES, FILES, MAP_OUT=MAP_OUT(M), DIR_OUT=DIR_PLOTS, OUT_FILE=PNGFILE, DATE_RANGE=DATE_RANGE, $
            USE_PROD=USE_PRODS(D), SPECIAL_SCALE=SS(D), PAL=PAL(T), COLORBAR_TITLE=CBAR_TITLE(D),$
            XDIM=XDIM, YDIM=YDIM, NROWS=NROWS, NCOLS=NCOLS, TOP=TOP, BOTTOM=BOTTOM, LEFT=LEFT, RIGHT=RIGHT, NO_COLORBAR=NO_COLORBAR, SPACE=SPACE,$
            BUFFER=BUFFER, VERBOSE=VERBOSE, ERROR=ERROR

;          SPACE   = 10
;          ROWS    = 6      & COLS    = 15
;          XNSPACE = COLS-1 & YNSPACE = ROWS-1
;          TOP     = 30     & BOTTOM  = 70
;          LEFT    = 20     & RIGHT   = 20
;          XDIM    = 128    & YDIM    = 128
;          WIDTH   = LEFT   + COLS*XDIM + XNSPACE*SPACE + RIGHT
;          HEIGHT  = BOTTOM + ROWS*YDIM + YNSPACE*SPACE + TOP

;          W = WINDOW(DIMENSIONS=[WIDTH,HEIGHT],BUFFER=BUFFER)
;          FOR F=0, N_ELEMENTS(FILES)-1 DO BEGIN
;            C = F MOD COLS
;            XPOS = LEFT + C*XDIM + C*SPACE
;            IF C EQ 0 THEN R = F/COLS ELSE R = 0
;            IF C EQ 0 THEN YPOS = HEIGHT - TOP - R*YDIM - R*SPACE ELSE YPOS = YPOS
;            POS = [XPOS,YPOS-YDIM,XPOS+XDIM,YPOS]     
;            DATA = STRUCT_SD_READ(FILES(F),STRUCT=STRUCT,MAP_OUT=MAP_OUT(M))
;            PRINT, 'Adding ' + FILES(F)
;            SENSOR = STRMID(STRUCT.SENSOR,0,1)         
;            IF C EQ 0 THEN TC = TEXT(LEFT/2,POS[1]+YDIM/2,MONTH_NAMES(DATE_2MONTH(PERIOD_2DATE(STRUCT.PERIOD))),ALIGNMENT=0.5,FONT_STYLE='BOLD',FONT_SIZE=14,/DEVICE,VERTICAL_ALIGNMENT=0.5,ORIENTATION=90)
;            IF DATE_2MONTH(PERIOD_2DATE(STRUCT.PERIOD)) EQ '01' THEN TR = TEXT(POS[0]+XDIM/2,POS(3)+5,DATE_2YEAR(PERIOD_2DATE(STRUCT.PERIOD)), ALIGNMENT=0.5,FONT_STYLE='BOLD',FONT_SIZE=14,/DEVICE)
;            IM = STRUCT_SD_2IMAGE_NG(STRUCT,IMG_POSITION=POS,USE_PROD=USE_PRODS(D),SPECIAL_SCALE=SS(D),/ADD_LAND,/ADD_COAST,/DEVICE,/CURRENT,PAL=PAL(T))  
;            IF DATASET EQ 'OC-SEAWIFS-MLAC' THEN TS = TEXT(POS[0]+2,POS(3)-15,SENSOR,/DEVICE,FONT_STYLE='BOLD',FONT_SIZE=12)              
;          ENDFOR         
;          CBAR = COLOR_BAR_SCALE_NG(PROD=USE_PRODS(D),SPECIAL_SCALE=SS(D),PX=WIDTH/4,PY=BOTTOM-30,CHARSIZE=10,BACKGROUND=255,XDIM=WIDTH/2,YDIM=20,PAL=PAL(T),$
;            TITLE=CBAR_TITLE(D),HORIZONTAL=1,BOTTOM=1,FONT='HELVETICA',/CURRENT)        
;          PRINT, 'Writing ' + PNGFILE
;          W.SAVE, PNGFILE, RESOLUTION=600
;          W.CLOSE            
        ENDFOR
     ENDFOR
   ENDFOR
   STOP  
  ENDIF ; DO_SPR_COMPOSITES  
  
; *******************************************************
  IF DO_SUBAREA_MAP GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_SUBAREA_MAP GE 2
    
    PAL_36,R,G,B
    OLDDEVICE= !D.NAME
    DIR_IMAGES = !S.IMAGES
    LANDMASK   = DIR_IMAGES + 'MASK_LAND-NEC-PXY_1024_1024.PNG'
    LANDMASK = READ_LANDMASK(MAP='NEC',/STRUCT)
        
    ECOREGION_FILE     = DIR_PROJECTS + 'ECOREGIONS\POLYGONS\ECOREGION_POLYGON_OUTLINES.CSV'
    DATA               = READALL(ECOREGION_FILE)
    ECOREGIONS         = WHERE_SETS(DATA.ECOREGION)        
    ECOREGION_OUTNAMES = ['TEST','NESLME_US','NESLME','ALL_NO_ESTUARIES','FULL_NO_ESTUARIES','FULL_WITH_ESTUARIES','CORE']
    ECOREGION_TYPES    = ['TEST','NES','NES','ALL','FULL','FULL','CORE']
 
    FOR NTH = 0L, N_ELEMENTS(ECOREGION_TYPES)-1 DO BEGIN
      IMG    = READ_LANDMASK(MAP='NEC')
      OTHER_IMAGE = IMG
      ECOREGION_TYPE = ECOREGION_TYPES[NTH]
      ECOREGION_OUTNAME = ECOREGION_OUTNAMES[NTH]      
      ECOREGION_NAMES = ['Georges Bank','Gulf of Maine','Mid-Atlantic Bight','Scotian Shelf']
      IF ECOREGION_TYPE NE 'ALL' THEN NICKNAMES = ['GB','GOM','MAB','SS'] + ECOREGION_TYPE ELSE BEGIN
        OK = WHERE(STRPOS(STRUPCASE(ECOREGIONS.VALUE),'FULL') EQ -1,COUNT) 
        NICKNAMES = ECOREGIONS[OK].VALUE
        ECOREGION_NAMES = ['Georges Bank Core','Georges Bank Shelf','Gulf of Maine Core','Gulf of Maine Shore','Mid-Atlantic Bight Core','Mid-Atlantic Bight Shelf','Mid-Atlantic Bight Shore','Scotian Shelf Core','Scotian Shelf Shore']        
      ENDELSE 
      IF ECOREGION_TYPE EQ 'NES' THEN NICKNAMES = ['NES']
      IF ECOREGION_OUTNAME EQ 'NESLME_US' THEN ECOREGION_NAMES = ['NES_US']          
      IF ECOREGION_OUTNAME EQ 'NESLME'    THEN ECOREGION_NAMES = ['NES_LME']      
      IF ECOREGION_OUTNAME EQ 'TEST' THEN BEGIN
        ECOREGION_NAMES = ['TEST']
        NICKNAMES = 'TEST'
      ENDIF  
      
      COLORS    = INDGEN(N_ELEMENTS(NICKNAMES))+5
            
      EDITFILE = DIR_IMAGES + 'MASK_SUBAREA-NEC-PXY_1024_1024-ECOREGIONS_'+ECOREGION_OUTNAME+'-TO_BE_EDITED.PNG' 
      MASKFILE = DIR_IMAGES + 'MASK_SUBAREA-NEC-PXY_1024_1024-ECOREGIONS_'+ECOREGION_OUTNAME+'.PNG'
      DISFILE  = DIR_IMAGES + 'MASK_SUBAREA-NEC-PXY_1024_1024-ECOREGIONS_'+ECOREGION_OUTNAME+'-DISPLAY.PNG' 
      CSVFILE  = DIR_IMAGES + 'MASK_SUBAREA-NEC-PXY_1024_1024-ECOREGIONS_'+ECOREGION_OUTNAME+'.CSV'
      SAVEFILE = DIR_IMAGES + 'MASK_SUBAREA-NEC-PXY_1024_1024-ECOREGIONS_'+ECOREGION_OUTNAME+'.SAVE' 
      
      IF TOTAL(FILE_TEST([MASKFILE,DISFILE,CSVFILE,SAVEFILE])) EQ 4 AND OVERWRITE EQ 0 THEN CONTINUE            
      
      ZWIN, IMG      
      MAP_NEC
      IF FILE_TEST(MASKFILE) EQ 1 AND OVERWRITE EQ 0 THEN BEGIN 
        IM_SUBS = READ_PNG(MASKFILE,R,G,B)
        OK = WHERE(IM_SUBS LT MIN(COLORS))
        IM_SUBS[OK] = 0  
        SET = WHERE_SETS(IM_SUBS) & SET = SET[WHERE(SET.VALUE GT 0)]
        CODE = 4
        IMG(LANDMASK.OCEAN) = 36
        FOR _SET = 0L, N_ELEMENTS(SET)-1 DO BEGIN          
          SUBS = WHERE_SETS_SUBS(SET(_SET))
          IM_SUBS(SUBS) = CODE+_SET
          IMG(SUBS) = COLORS(_SET)
        ENDFOR  
      ENDIF ELSE BEGIN      
        FOR ETH = 0, N_ELEMENTS(NICKNAMES)-1 DO BEGIN
          IF NICKNAMES(ETH) EQ 'TEST' THEN BEGIN
            LON = [-70,-69,-69,-70,-70]
            LAT = [42,42,43,43,42]
            IM   = MAP_DEG2IMAGE(IMG,LON,LAT, X=x, Y=y,AROUND=0) & POLYFILL, X, Y, COLOR=COLORS(ETH), /DEVICE
          ENDIF ELSE BEGIN  
            OK = WHERE(STRUPCASE(ECOREGIONS.VALUE) EQ STRUPCASE(NICKNAMES(ETH)),COUNT)
            IF COUNT EQ 0 THEN CONTINUE
            SUBS = WHERE_SETS_SUBS(ECOREGIONS[OK])
            ECOSET  = DATA(SUBS)
            POLYS = WHERE_SETS(ECOSET.POLYGON)
            FOR PTH =0, N_ELEMENTS(POLYS)-1 DO BEGIN
              SUBS = WHERE_SETS_SUBS(POLYS(PTH))
              POLYSET = ECOSET(SUBS)
              LON  = [POLYSET.LON,POLYSET[0].LON]      
              LAT  = [POLYSET.LAT,POLYSET[0].LAT]
              IM   = MAP_DEG2IMAGE(IMG,LON,LAT, X=x, Y=y,AROUND=0) & POLYFILL, X, Y, COLOR=COLORS(ETH), /DEVICE
            ENDFOR
          ENDELSE    
        ENDFOR        
      IM_SUBS = TVRD()
      ENDELSE      
    ;  IM=MAP_ADD_BATHY(OTHER_IMAGE,BATHS=[10,50,200],COLOR=[6,12,22],MAP='NEC') & TV,IM & IM_BATH=TVRD()
    ;  IM=MAP_ADD_BATHY_LABEL(OTHER_IMAGE, MAP='NEC', BATHS=[50,200],COLOR=[22]) & TV,IM & IM_LABEL=TVRD()
      ZWIN
   
      OK_IMAGE = WHERE(IMG NE 0) & IM_SUBS(OK_IMAGE) = IMG(OK_IMAGE) & MASK = IM_SUBS            
      OK = WHERE(IM_SUBS NE 0)  & IMG[OK] = IM_SUBS[OK]
   ;   OK = WHERE(IM_BATH  EQ 12 OR IM_BATH  EQ 22) & IMG(OK)   = 34      
   ;   OK = WHERE(IM_LABEL EQ 22) & IMG(OK)   = 0
      IMG(LANDMASK.LAND)  = 32
      IMG(LANDMASK.COAST) = 0
      OK = WHERE(MASK NE 0) & IM_SUBS[OK] = MASK[OK]  
      IM_SUBS(LANDMASK.LAND) = LANDMASK.LAND_CODE
      IM_SUBS(LANDMASK.COAST) = LANDMASK.COAST_CODE

      IF FILE_TEST(MASKFILE) EQ 0 OR OVERWRITE EQ 1 THEN WRITE_PNG, EDITFILE, IM_SUBS, R,G,B
      WRITE_PNG, DISFILE, IMG, R,G,B
      
      STRUCT1=CREATE_STRUCT('SUBAREA_CODE','','SUBAREA_NAME','','NICKNAME','')
      STRUCT1=REPLICATE(STRUCT1,3)
      STRUCT1[0].SUBAREA_CODE ='0'  & STRUCT1[0].SUBAREA_NAME = 'OCEAN'     & STRUCT1[0].NICKNAME='OCEAN'
      STRUCT1[1].SUBAREA_CODE ='1'  & STRUCT1[1].SUBAREA_NAME = 'COAST'     & STRUCT1[1].NICKNAME='COAST'
      STRUCT1(2).SUBAREA_CODE ='2'  & STRUCT1(2).SUBAREA_NAME = 'LAND'      & STRUCT1(2).NICKNAME='LAND'
  
      STRUCT=CREATE_STRUCT('SUBAREA_CODE','','SUBAREA_NAME','','NICKNAME','')
      STRUCT=REPLICATE(STRUCT,N_ELEMENTS(NICKNAMES))
      STRUCT.SUBAREA_CODE = NUM2STR(INDGEN(N_ELEMENTS(NICKNAMES))+5,DECIMALS=0)
      STRUCT.SUBAREA_NAME = STRUPCASE(ECOREGION_NAMES)
      STRUCT.NICKNAME     = STRUPCASE(NICKNAMES)
  
      CSV = STRUCT_CONCAT(STRUCT1,STRUCT)

;     ===> Write the Struct to a csv
      STRUCT_2CSV,CSVFILE,CSV
      OK=WHERE(CSV.SUBAREA_CODE NE MISSINGS(CSV.SUBAREA_CODE))
      SUBAREA_CODE= CSV[OK].SUBAREA_CODE
      SUBAREA_NAME= CSV[OK].SUBAREA_NAME
      
      IF FILE_TEST(MASKFILE) EQ 0 THEN CONTINUE 
      STRUCT_SD_WRITE,SAVEFILE, IMAGE=IM_SUBS, PROD='SUBAREA',  MAP='NEC',SUBAREA_CODE=SUBAREA_CODE,SUBAREA_NAME=subarea_name,$
        SCALING='LINEAR',SLOPE=1,INTERCEPT=0, INFILE=[ECOREGION_FILE,MASKFILE],NOTES='MASK_SUBAREA', OVERWRITE=OVERWRITE, ERROR=ERROR
    ENDFOR    

  ENDIF   ; DO_SUBAREA_MAP
  

; *******************************************************
  IF DO_TS_SUBAREAS GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_TS_SUBAREAS GE 2
    
    PERIODS       = ['W','WEEK','M','MONTH','A','ANNUAL','Y','YEAR'] ; 'DOY'       
PERIODS = 'ANNUAL'    
    DIR_SUBAREA   = !S.IMAGES
    SUBAREAS      = ['INNER_OUTER_SHELF','ECOREGIONS_FULL_NO_ESTUARIES','ECOREGIONS_ALL_NO_ESTUARIES','ECOREGIONS_CORE','ECOREGIONS_FULL_WITH_ESTUARIES']
    SUBAREA_FILES = DIR_SUBAREA + 'MASK_SUBAREA-NEC-PXY_1024_1024-'+SUBAREAS+'.SAVE'
    SUBAREA_CODES = ['1,2,3,4,5,6,7,8,9,10,11','5,6,7,8','5,6,7,8','5,6,7,8','5,6,7,8,9,10,11,12,13']
    PRODS    = ['PPD-OPAL',    'CHLOR_A-OC4',     'SST',      'CHLOR_A-OC3',  'PAR',             'PAR']
    DATASETS = ['PP-SA-N4AT-9_4/NEC','OC-SEAWIFS-9-NEC','SST-4-NEC','OC-AQUA-4-NEC','OC-SEAWIFS-9-NEC','OC-AQUA-4-NEC']
    
    FOR SUB = 0L, N_ELEMENTS(SUBAREA_FILES)-1 DO BEGIN
      SUBAREA_FILE = SUBAREA_FILES(SUB)
      SUBAREA_CODE = FIX(STRSPLIT(SUBAREA_CODES(SUB),',',/EXTRACT))
      FOR PTH = 0L, N_ELEMENTS(PRODS)-1 DO BEGIN
        APROD    = PRODS(PTH)
        DATASET  = FIX_PATH(DATASETS(PTH))      
        DIR_OUT  = FIX_PATH(DIR_DATASETS + DATASET +'\TS_SUBAREAS\SAVE\')  
        IF FILE_TEST(DIR_OUT,/DIR) EQ 0 THEN FILE_MKDIR, DIR_OUT
        SAVEFILES = []
        FOR PER = 0, N_ELEMENTS(PERIODS)-1 DO BEGIN
          IF PERIODS(PER) EQ 'D' THEN DIR_DATA  = FIX_PATH(DIR_DATASETS + DATASET + '\SAVE\'  + APROD + '\') $
                                 ELSE DIR_DATA  = FIX_PATH(DIR_DATASETS + DATASET + '\STATS\' + APROD + '\')
          IF PERIODS(PER) EQ 'D' THEN SAVEFILES = [SAVEFILES,FILE_SEARCH(DIR_DATA+PERIODS(PER)+'_*'+APROD+'*.SAVE')] $
                                 ELSE SAVEFILES = [SAVEFILES,FILE_SEARCH(DIR_DATA+PERIODS(PER)+'_*'+APROD+'*-MEAN.SAVE')] 
        ENDFOR          
        SAVEFILES = SAVEFILES[WHERE(SAVEFILES NE '')] & IF SAVEFILES[0] EQ '' THEN CONTINUE
        TS_SUBAREAS, SAVEFILES,SUBAREA_FILE=SUBAREA_FILE, SUBAREA_CODES=SUBAREA_CODE,DIR_OUT=DIR_OUT,/CSV,OVERWRITE=overwrite
      ENDFOR
    ENDFOR
  ENDIF ; DO_TS_SUBAREAS


; *******************************************************
  IF DO_2012_RETREAT GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_2012_RETREAT GE 2
    
    BUFFER = 0
    
    SUBAREA_MAPS   = LIST('ESTUARY_SHELF_LME','ECOREGIONS_FULL_NO_ESTUARIES','ECOREGIONS_ALL_NO_ESTUARIES')
    SUBAREA_CODES  = LIST('32',                 ['7','5','6','8'],           ['9','10','11','5','6','7','8','12','13'])
    SUBAREA_TITLES = LIST('Northeast Shelf LME',['Mid-Atlantic Bight','Georges Bank','Gulf of Maine','Scotian Shelf'],$
                    ['Mid-Atlantic Core','Mid-Atlantic Shelf','Mid-Atlantic Shore','Georges Bank Core','Georges Bank Shelf','Gulf of Maine Core','Gulf of Maine Shore','Scotian Shelf Core','Scotian Shelf Shore'])
    COLORS = LIST(['BLUE','RED'],['BLUE','CYAN','RED','SPRING_GREEN'],['BLUE','CYAN','RED','SPRING_GREEN','GOLD','TEAL','PURPLE','DARK_GREEN','DEEP_SKY_BLUE'])
    CRANGE = LIST([0.25,1.5],[0.0,1.5],[0.0,3.0])
    PRANGE = LIST([0.0,1.6],[0.0,2.0],[0.0,3.0])
    ORANGE = LIST([0.0,1.2],[0.0,1.5],[0.0,1.5])  
    MRANGE = LIST([0.0,1.25],[0.0,1.35],[0.0,2.0])
    DATE_RANGE = ['19970101','20111201']
    
    DO_DATASET = [0,0,1,1]
    DATASETS = ['OC-SEAWIFS-MLAC','OC-SEAWIFS-MLAC','PP-SEAWIFS_PAN-AVHRR-MLAC','PP-SEAWIFS-AVHRR-MLAC']
    PROD_TAGS = ['MICRO_PAN','CHLOR_A_PAN','PPD_OPAL','PPD_OPAL']
    PRODS = ['CHLOROPHYLL','CHLOROPHYLL','PRIMARY_PRODUCTION','PRIMARY_PRODUCTION']
    
    FOR D=0, N_ELEMENTS(DATASETS)-1 DO BEGIN  
      IF DO_DATASET(D) EQ 0 THEN CONTINUE
      DIR = !S.DATASETS + DATASETS(D) + SL + 'NEC' + SL + 'TS_SUBAREAS' + SL
      PROD = 'MEAN_'+PROD_TAGS(D) & NAME = 'FIRST_NAME_'+PROD_TAGS(D) & N = 'N_'+PROD_TAGS(D) & MIN = 'MIN_'+PROD_TAGS(D) & MAX = 'MAX_'+PROD_TAGS(D) & STD = 'STD_'+PROD_TAGS(D)
      CASE PROD_TAGS(D) OF 
        'MICRO_PAN': YRANGES = MRANGE
        'CHLOR_A_PAN': YRANGES = CRANGE
        'PPD_VGPM2': YRANGES = PRANGE
        'PPD_OPAL': YRANGES = ORANGE
      ENDCASE 
      FOR N=0L, 0 DO BEGIN
        CODES   = SUBAREA_CODES(N)        
        ACOLOR  = ['DEEP_PINK','VIOLET','DARK_BLUE','DEEP_SKY_BLUE','BLUE','DARK_CYAN','CYAN','SPRING_GREEN','ORANGE','SALMON','RED','MAROON','CHOCOLATE','DARK_GREEN']
        YRANGE  = YRANGES(N) 
        DATAFILE = FILE_SEARCH(DIR + 'MULTI_PERIODS-*' + SUBAREA_MAPS(N) + '*.SAVE')
        IF DATAFILE[0] EQ '' THEN CONTINUE
        PNGFILE = FIX_PATH(DIR_PROJECTS + 'RETREAT_2012\PLOTS\INTERANNUAL_VARIABILITY-'+DATASETS(D)+'-'+PROD_TAGS(D)+'-'+SUBAREA_MAPS(N)+'.PNG') 
        IF GET_MTIME(PNGFILE) GT GET_MTIME(DATAFILE) AND OVERWRITE EQ 0 THEN CONTINUE
        COMBO  = IDL_RESTORE(DATAFILE) & TAGS = TAG_NAMES(COMBO)      
        CDATA   = COMBO[WHERE(STRMID(COMBO.PERIOD,0,2) EQ 'W_' AND COMBO.(WHERE(TAGS EQ NAME)) NE '')]                      
        POS    = WHERE(TAGS EQ PROD) 
        TITLE = UNITS(PRODS(D))      
        AX = DATE_AXIS([20200101,20201231],/MONTH,/FYEAR,/MID)
        XRANGE = DATE_2JD([20200101,20201231])                
        FOR C=0, N_ELEMENTS(CODES)-1 DO BEGIN                                
          OK = WHERE(CDATA.SUBAREA_CODE EQ CODES(C) AND CDATA.(POS) NE MISSINGS(0.0),COUNT)     
          IF COUNT LE 1 THEN CONTINUE 
          DATA = CDATA[OK]
          FP   = PARSE_IT(DATA.(WHERE(TAGS EQ NAME)))
          SET = WHERE_SETS(FP.YEAR_START)
          FOR S=0, N_ELEMENTS(SET)-1 DO BEGIN
            _TITLE = NUM2STR(SET(S).VALUE)
            SUBS = WHERE_SETS_SUBS(SET(S))
            _DATA = DATA(SUBS)            
            IF N_ELEMENTS(_DATA) LE 6 THEN WIDTH = 3 ELSE WIDTH = 6
            FP   = PARSE_IT(_DATA.(WHERE(TAGS EQ NAME)))
            _DATA = _DATA[SORT(DATE_2DOY(FP.DATE_START))]    
            IF S EQ 0 THEN BEGIN
              P = PLOT(AX.JD,YRANGE,YTITLE=TITLE,XRANGE=AX.JD,TITLE='Northeast Shelf LME',FONT_SIZE=14,XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XTICKLEN=0.0,/NODATA)
              XTICKV = P.XTICKVALUES     
            ENDIF   
      ;      P0 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(_DATA.PERIOD))),_DATA.(POS),XRANGE=AX.JD,YRANGE=YRANGE,XMINOR=0,LINESTYLE=6,/OVERPLOT,COLOR=ACOLOR(S),SYMBOL='CIRCLE',SYM_SIZE=0.4, /SYM_FILLED)            
            P1 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(_DATA.PERIOD))),LOWESS(DATE_2DOY(PERIOD_2DATE(_DATA.PERIOD)),_DATA.(POS),WIDTH=WIDTH),XRANGE=AX.JD,YRANGE=YRANGE,THICK=2,/OVERPLOT,COLOR=ACOLOR(S))            
            IF S GE 7 THEN BEGIN & XX = 0.22 & XY = S-7 & ENDIF ELSE BEGIN & XX = 0.15 & XY = S & ENDELSE
            T = TEXT(XX,0.85-(XY*.04),_TITLE,COLOR=ACOLOR(S),FONT_SIZE=12,/NORMAL,TARGET=P1)  
          ENDFOR ;FOR S=0, N_ELEMENTS(SET)-1 DO BEGIN
          P.SAVE, PNGFILE, RESOLUTION=300, BIT_DEPTH=2      
          P.CLOSE   
        ENDFOR ; FOR C=0, N_ELEMENTS(CODES)-1 DO BEGIN
      ENDFOR  
        
      FOR N=0L, N_ELEMENTS(SUBAREA_MAPS)-1 DO BEGIN
        CODES   = SUBAREA_CODES(N)        
        TITLES  = SUBAREA_TITLES(N)
        ACOLOR  = COLORS(N)
        YRANGE  = YRANGES(N) 
        DATAFILE = FILE_SEARCH(DIR + 'MULTI_PERIODS-*' + SUBAREA_MAPS(N) + '*.SAVE')
        IF DATAFILE[0] EQ '' THEN CONTINUE
        COMBO = IDL_RESTORE(DATAFILE) & TAGS = TAG_NAMES(COMBO)
        COMBO = COMBO[WHERE(STRMID(COMBO.PERIOD,0,2) EQ 'W_' AND COMBO.(WHERE(TAGS EQ NAME)) NE '')]      
        FP   = PARSE_IT(COMBO.(WHERE(TAGS EQ NAME)))         
        SETS = WHERE_SETS(FP.YEAR_START)
        FOR S=0, N_ELEMENTS(SETS)-1 DO BEGIN
          PNGFILE = FIX_PATH(DIR_PROJECTS + 'RETREAT_2012\PLOTS\'+SETS(S).VALUE+'_VARIABILITY-'+DATASETS(D)+'-'+PROD_TAGS(D)+'-'+SUBAREA_MAPS(N)+'.PNG')
          IF GET_MTIME(PNGFILE) GT GET_MTIME(DATAFILE) AND OVERWRITE EQ 0 THEN CONTINUE
          SUBS = WHERE_SETS_SUBS(SETS(S))
          DATA = COMBO(SUBS)
          CDATA = DATA[WHERE(STRMID(DATA.PERIOD,0,6) EQ 'W_'+SETS(S).VALUE AND DATA.(WHERE(TAGS EQ NAME)) NE '')]                      
          POS    = WHERE(TAGS EQ PROD) 
          TITLE = UNITS(PRODS(D))      
          AX = DATE_AXIS([20200101,20201231],/MONTH,/FYEAR,/MID)
          XRANGE = DATE_2JD([20200101,20201231])       
          FOR C=0, N_ELEMENTS(CODES)-1 DO BEGIN                                
            OK = WHERE(CDATA.SUBAREA_CODE EQ CODES(C) AND CDATA.(POS) NE MISSINGS(0.0))          
            _DATA = CDATA[OK]
            IF N_ELEMENTS(_DATA) LE 6 THEN WIDTH = 3 ELSE WIDTH = 6
            FP   = PARSE_IT(_DATA.(WHERE(TAGS EQ NAME)))
            _DATA = _DATA[SORT(DATE_2DOY(FP.DATE_START))]    
            IF C EQ 0 THEN BEGIN
              P = PLOT(AX.JD,YRANGE,YTITLE=TITLE,XRANGE=AX.JD,TITLE=SETS(S).VALUE,FONT_SIZE=14,XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XTICKLEN=0.0,/NODATA)
              XTICKV = P.XTICKVALUES     
            ENDIF   
            P0 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(_DATA.PERIOD))),_DATA.(POS),XRANGE=AX.JD,YRANGE=YRANGE,XMINOR=0,LINESTYLE=6,/OVERPLOT,COLOR=ACOLOR(C),SYMBOL='CIRCLE',SYM_SIZE=0.4, /SYM_FILLED)            
            P1 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(_DATA.PERIOD))),LOWESS(DATE_2DOY(PERIOD_2DATE(_DATA.PERIOD)),_DATA.(POS),WIDTH=WIDTH),XRANGE=AX.JD,YRANGE=YRANGE,THICK=2,/OVERPLOT,COLOR=ACOLOR(C))            
         ;   IF S GE 7 THEN BEGIN & XX = 0.22 & XY = S-7 & ENDIF ELSE BEGIN & XX = 0.15 & XY = S & ENDELSE
            T = TEXT(.15,0.85-(C*.04),TITLES(C),COLOR=ACOLOR(C),FONT_SIZE=12,/NORMAL,TARGET=P1)  
          ENDFOR ; FOR C=0, N_ELEMENTS(CODES)-1 DO BEGIN
          P.SAVE, PNGFILE, RESOLUTION=300, BIT_DEPTH=2      
          P.CLOSE 
        ENDFOR  
      ENDFOR ; FOR N=0L, N_ELEMENTS(SUBAREA_MAPS)-1 DO BEGIN      
      
      IF PROD_TAGS(D) EQ 'MICRO_PAN' THEN BEGIN
        FOR N=0L, N_ELEMENTS(SUBAREA_MAPS)-1 DO BEGIN
          CODES   = SUBAREA_CODES(N)
          TITLES  = SUBAREA_TITLES(N)
          ACOLOR  = COLORS(N)      
          YRANGE  = YRANGES(N) 
          DATAFILE = FILE_SEARCH(DIR + 'MULTI_PERIODS-*' + SUBAREA_MAPS(N) + '*.SAVE')
          IF DATAFILE[0] EQ '' THEN CONTINUE
          
          GROUPS = ['MICRO','NANO','PICO']
          SCOLORS = ['DARK_BLUE','ORANGE_RED','SPRING_GREEN']
          LGD = ['Microplankton','Nanoplankton','Picoplankton']     
          
          COMBO  = IDL_RESTORE(DATAFILE) & TAGS = TAG_NAMES(COMBO)      
          CDATA   = COMBO[WHERE(STRMID(COMBO.PERIOD,0,4) EQ 'WEEK' AND COMBO.(WHERE(TAGS EQ 'FIRST_NAME_CHLOR_A_PAN')) NE '')]  
                           
          CPOS = WHERE(TAGS EQ 'MEAN_CHLOR_A_PAN') 
         
          TITLE = UNITS(PRODS(D))      
          AX = DATE_AXIS([20200101,20201231],/MONTH,/FYEAR,/MID)
          XRANGE = DATE_2JD([20200101,20201231])
          PY = [0,100]        
          WIDTH = 6
          FOR C=0, N_ELEMENTS(CODES)-1 DO BEGIN  
            OK = WHERE(CDATA.SUBAREA_CODE EQ CODES(C) AND CDATA.(CPOS) NE MISSINGS(0.0))          
            DATA = CDATA[OK]            
            DATA = DATA[SORT(DATE_2DOY(PERIOD_2DATE(DATA.PERIOD)))] 
            PNGFILE = FIX_PATH(DIR_PROJECTS + 'RETREAT_2012\PLOTS\SIZE_CLASSES-'+DATASETS(D)+'-'+PROD_TAGS(D)+'-'+SUBAREA_MAPS(N)+'-'+DATA[0].SUBAREA_NAME+'.PNG')           
            IF GET_MTIME(PNGFILE) GT GET_MTIME(DATAFILE) AND OVERWRITE EQ 0 THEN CONTINUE
            XDATES = YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(DATA.PERIOD)))
            BOTTOM = 0
            PER1 = REPLICATE(0,N_ELEMENTS(XDATES))
            TOT = DATA.MEAN_MICRO_PAN + DATA.MEAN_NANO_PAN + DATA.MEAN_PICO_PAN            
            FOR NTH = 0L, N_ELEMENTS(GROUPS)-1 DO BEGIN
              GROUP = GROUPS[NTH]
              POS = WHERE(TAGS EQ 'MEAN_' + GROUP + '_PAN')                                         
              IF NTH EQ 0 THEN BEGIN                     
;                P = PLOT(AX.JD,YRANGE,YTITLE=TITLE,XRANGE=AX.JD,FONT_SIZE=11,YRANGE=YRANGE,AXIS_STYLE=1,XSTYLE=1,XTICKNAME=AX.TICKNAME,/NODATA,BUFFER=BUFFER)               
                P = PLOT(AX.JD,YRANGE,YTITLE=TITLE,XRANGE=AX.JD,TITLE=TITLES(C),FONT_SIZE=14,XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XTICKLEN=0.0,/NODATA)
                XTICKV = P.XTICKVALUES
      ;          P0 = PLOT(XDATES,TOT,XRANGE=AX.JD,YRANGE=YRANGE,XMINOR=0,LINESTYLE=6,/OVERPLOT,COLOR='BLACK',SYMBOL='CIRCLE',SYM_SIZE=0.4, /SYM_FILLED)
      ;          P1 = PLOT(XDATES,LOWESS(XDATES,TOT,WIDTH=WIDTH),XRANGE=AX.JD,YRANGE=YRANGE,THICK=2,/OVERPLOT,COLOR='BLACK')
              ENDIF
              P2 = PLOT(XDATES,DATA.(POS),XRANGE=AX.JD,YRANGE=YRANGE,XMINOR=0,LINESTYLE=6,/OVERPLOT,COLOR=SCOLORS[NTH],SYMBOL='CIRCLE',SYM_SIZE=0.4, /SYM_FILLED)
              P3 = PLOT(XDATES,LOWESS(XDATES,DATA.(POS),WIDTH=WIDTH),XRANGE=AX.JD,YRANGE=YRANGE,THICK=2,/OVERPLOT,COLOR=SCOLORS[NTH])
              T = TEXT(.15,0.85-(NTH*.04),LGD[NTH],COLOR=SCOLORS[NTH],FONT_SIZE=12,/NORMAL,TARGET=P1)
            ENDFOR                      
       ;     FOR SY=0, N_ELEMENTS(LGD)-1 DO S = SYMBOL(XPOS(SY),YPOS,'SQUARE',SYM_SIZE=1.5,SYM_COLOR='WHITE',SYM_FILL_COLOR=PL(COLORS(SY)),/SYM_FILLED,LABEL_STRING=LGD(SY),LABEL_FONT_SIZE=10,LABEL_POSITION='R',/NORMAL)
       ;     FOR SY=0, N_ELEMENTS(XSTATION)-1 DO S=SYMBOL(XSTATION(SY),TOT(SY),0,LABEL_STRING=NUM2STR(STATION(SY)),LABEL_COLOR='BLACK',LABEL_FONT_SIZE=9,LABEL_POSITION='C',/DATA)
            P.SAVE, PNGFILE, RESOLUTION=300, BIT_DEPTH=2      
            P.CLOSE 
          ENDFOR
          
          FOR C=0, N_ELEMENTS(CODES)-1 DO BEGIN  
            OK = WHERE(CDATA.SUBAREA_CODE EQ CODES(C) AND CDATA.(CPOS) NE MISSINGS(0.0))          
            DATA = CDATA[OK]            
            DATA = DATA[SORT(DATE_2DOY(PERIOD_2DATE(DATA.PERIOD)))] 
            
            
            
            
            
            PNGFILE = FIX_PATH(DIR_PROJECTS + 'RETREAT_2012\PLOTS\SIZE_CLASSES-'+DATASETS(D)+'-'+PROD_TAGS(D)+'-'+SUBAREA_MAPS(N)+'-'+DATA[0].SUBAREA_NAME+'.PNG')           
            IF GET_MTIME(PNGFILE) GT GET_MTIME(DATAFILE) AND OVERWRITE EQ 0 THEN CONTINUE
            XDATES = YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(DATA.PERIOD)))
            BOTTOM = 0
            PER1 = REPLICATE(0,N_ELEMENTS(XDATES))
            TOT = DATA.MEAN_MICRO_PAN + DATA.MEAN_NANO_PAN + DATA.MEAN_PICO_PAN            
            FOR NTH = 0L, N_ELEMENTS(GROUPS)-1 DO BEGIN
              GROUP = GROUPS[NTH]
              POS = WHERE(TAGS EQ 'MEAN_' + GROUP + '_PAN')                                         
              IF NTH EQ 0 THEN BEGIN                     
;                P = PLOT(AX.JD,YRANGE,YTITLE=TITLE,XRANGE=AX.JD,FONT_SIZE=11,YRANGE=YRANGE,AXIS_STYLE=1,XSTYLE=1,XTICKNAME=AX.TICKNAME,/NODATA,BUFFER=BUFFER)               
                P = PLOT(AX.JD,YRANGE,YTITLE=TITLE,XRANGE=AX.JD,TITLE=TITLES(C),FONT_SIZE=14,XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XTICKLEN=0.0,/NODATA)
                XTICKV = P.XTICKVALUES
      ;          P0 = PLOT(XDATES,TOT,XRANGE=AX.JD,YRANGE=YRANGE,XMINOR=0,LINESTYLE=6,/OVERPLOT,COLOR='BLACK',SYMBOL='CIRCLE',SYM_SIZE=0.4, /SYM_FILLED)
      ;          P1 = PLOT(XDATES,LOWESS(XDATES,TOT,WIDTH=WIDTH),XRANGE=AX.JD,YRANGE=YRANGE,THICK=2,/OVERPLOT,COLOR='BLACK')
              ENDIF
              P2 = PLOT(XDATES,DATA.(POS),XRANGE=AX.JD,YRANGE=YRANGE,XMINOR=0,LINESTYLE=6,/OVERPLOT,COLOR=SCOLORS[NTH],SYMBOL='CIRCLE',SYM_SIZE=0.4, /SYM_FILLED)
              P3 = PLOT(XDATES,LOWESS(XDATES,DATA.(POS),WIDTH=WIDTH),XRANGE=AX.JD,YRANGE=YRANGE,THICK=2,/OVERPLOT,COLOR=SCOLORS[NTH])
              T = TEXT(.15,0.85-(NTH*.04),LGD[NTH],COLOR=SCOLORS[NTH],FONT_SIZE=12,/NORMAL,TARGET=P1)
            ENDFOR                      
       ;     FOR SY=0, N_ELEMENTS(LGD)-1 DO S = SYMBOL(XPOS(SY),YPOS,'SQUARE',SYM_SIZE=1.5,SYM_COLOR='WHITE',SYM_FILL_COLOR=PL(COLORS(SY)),/SYM_FILLED,LABEL_STRING=LGD(SY),LABEL_FONT_SIZE=10,LABEL_POSITION='R',/NORMAL)
       ;     FOR SY=0, N_ELEMENTS(XSTATION)-1 DO S=SYMBOL(XSTATION(SY),TOT(SY),0,LABEL_STRING=NUM2STR(STATION(SY)),LABEL_COLOR='BLACK',LABEL_FONT_SIZE=9,LABEL_POSITION='C',/DATA)
            P.SAVE, PNGFILE, RESOLUTION=300, BIT_DEPTH=2      
            P.CLOSE 
          ENDFOR
          
        ENDFOR
      
        FOR N=0L, N_ELEMENTS(SUBAREA_MAPS)-1 DO BEGIN
          CODES   = SUBAREA_CODES(N)
          TITLES  = SUBAREA_TITLES(N)
          ACOLOR  = COLORS(N)      
          YRANGE  = YRANGES(N) 
          DATAFILE = FILE_SEARCH(DIR + 'MULTI_PERIODS-*' + SUBAREA_MAPS(N) + '*.SAVE')
          IF DATAFILE[0] EQ '' THEN CONTINUE
          
          GROUPS = ['MICRO','NANO','PICO']
          SCOLORS = ['DARK_BLUE','ORANGE_RED','YELLOW']
          
          COMBO  = IDL_RESTORE(DATAFILE) & TAGS = TAG_NAMES(COMBO)      
          CDATA   = COMBO[WHERE(STRMID(COMBO.PERIOD,0,4) EQ 'WEEK' AND COMBO.(WHERE(TAGS EQ 'FIRST_NAME_CHLOR_A_PAN')) NE '')]  
                           
          CPOS = WHERE(TAGS EQ 'MEAN_CHLOR_A_PAN') 
         
          TITLE = UNITS(PRODS(D))      
          AX = DATE_AXIS([20200101,20201231],/MONTH,/FYEAR,/MID)
          XRANGE = DATE_2JD([20200101,20201231])
          PY = [0,100]        
          WIDTH = 6
          FOR C=0, N_ELEMENTS(CODES)-1 DO BEGIN  
            OK = WHERE(CDATA.SUBAREA_CODE EQ CODES(C) AND CDATA.(CPOS) NE MISSINGS(0.0))          
            DATA = CDATA[OK]            
            DATA = DATA[SORT(DATE_2DOY(PERIOD_2DATE(DATA.PERIOD)))] 
            PNGFILE = FIX_PATH(DIR_PROJECTS + 'RETREAT_2012\PLOTS\SIZE_CLASS_PERCENTAGES-'+DATASETS(D)+'-'+PROD_TAGS(D)+'-'+SUBAREA_MAPS(N)+'-'+DATA[0].SUBAREA_NAME+'.PNG')           
            IF GET_MTIME(PNGFILE) GT GET_MTIME(DATAFILE) AND OVERWRITE EQ 0 THEN CONTINUE
            XDATES = YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(DATA.PERIOD)))
            BOTTOM = 0
            PER1 = REPLICATE(0,N_ELEMENTS(XDATES))
            TOT = DATA.MEAN_MICRO_PAN + DATA.MEAN_NANO_PAN + DATA.MEAN_PICO_PAN
            FOR NTH = 0L, N_ELEMENTS(GROUPS)-1 DO BEGIN
              GROUP = GROUPS[NTH]
              POS = WHERE(TAGS EQ 'MEAN_' + GROUP + '_PAN')  
              PER = (DATA.(POS)/TOT)*100             
              OK = WHERE(PER EQ MISSINGS(PER),COUNT) & IF COUNT GE 1 THEN PER[OK] = 0.0
              IF NTH EQ 0 THEN BEGIN                     
                P = PLOT(XDATES,REPLICATE(0,N_ELEMENTS(DATA)),YTITLE='Percent Composition (%)',XRANGE=AX.JD,$
                    FONT_SIZE=11,YRANGE=[0,100],AXIS_STYLE=1,XSTYLE=1,XTICKNAME=AX.TICKNAME,/NODATA,BUFFER=BUFFER)
                BOT = REPLICATE(0, N_ELEMENTS(DATA))
                YY = [PER,BOT]
                XX = [XDATES,REVERSE(XDATES)]
                POLY = POLYGON(XX,YY,FILL_COLOR=SCOLORS[NTH],/FILL_BACKGROUND,TARGET=P,/DATA,LINESTYLE=6,YRANGE=[0,100])
              ENDIF
              PER1 = PER + PER1
              YY = [PER1,REVERSE(BOTTOM)]
              XX = [XDATES,REVERSE(XDATES)]
              IF NTH GE 1 THEN POLY = POLYGON(XX,YY,FILL_COLOR=SCOLORS[NTH],/FILL_BACKGROUND,TARGET=P,/DATA,LINESTYLE=6,YRANGE=[0,100]);COLOR=PL(COLORS[NTH])) ;POLYFILL, XX, YY, COLOR = COLORS[NTH]
              BOTTOM = PER1
            ENDFOR  
            P2 = PLOT(XDATES,TOT,XRANGE=AX.JD,COLOR='GREY',THICK=3,LINESTYLE=0,/CURRENT,AXIS_STYLE=0,XSTYLE=1,MARGIN=[0.1,0.2,0.1,0.05],XSHOWTEXT=1)      
            A1 = AXIS('Y',TARGET=P2,LOCATION=[MAX(XDATES),0,0],TEXTPOS=1,TITLE=YTITLE2,TICKFONT_SIZE=11,TEXT_COLOR='BLACK') ;AXIS,YAXIS=1,YRANGE=[0,300],/SAVE, YTITLE=YTITLE2,CHARSIZE=CHARSIZE,COLOR=0
            A2 = AXIS('X',TARGET=P,LOCATION=[MIN(XDATES),100,0],MAJOR=0,MINOR=0)           
            LGD = ['Microplankton','Nanoplankton','Picoplankton']        
            XPOS = [0.2,0.44,0.69]
            YPOS = 0.04
       ;     FOR SY=0, N_ELEMENTS(LGD)-1 DO S = SYMBOL(XPOS(SY),YPOS,'SQUARE',SYM_SIZE=1.5,SYM_COLOR='WHITE',SYM_FILL_COLOR=PL(COLORS(SY)),/SYM_FILLED,LABEL_STRING=LGD(SY),LABEL_FONT_SIZE=10,LABEL_POSITION='R',/NORMAL)
       ;     FOR SY=0, N_ELEMENTS(XSTATION)-1 DO S=SYMBOL(XSTATION(SY),TOT(SY),0,LABEL_STRING=NUM2STR(STATION(SY)),LABEL_COLOR='BLACK',LABEL_FONT_SIZE=9,LABEL_POSITION='C',/DATA)
            P.SAVE, PNGFILE, RESOLUTION=300, BIT_DEPTH=2      
            P.CLOSE 
          ENDFOR
        ENDFOR
      ENDIF    
     
     
    
      DIR = !S.DATASETS + DATASETS(D) + SL + 'NEC' + SL + 'TS_SUBAREAS' + SL
      PROD = 'MEAN_'+PROD_TAGS(D) & NAME = 'FIRST_NAME_'+PROD_TAGS(D) & N = 'N_'+PROD_TAGS(D) & MIN = 'MIN_'+PROD_TAGS(D) & MAX = 'MAX_'+PROD_TAGS(D) & STD = 'STD_'+PROD_TAGS(D)
      IF D EQ 0 THEN YRANGES = CRANGE ELSE YRANGES = PRANGE
      FOR N=0L, N_ELEMENTS(SUBAREA_MAPS)-1 DO BEGIN
        CODES   = SUBAREA_CODES(N)
        TITLES  = SUBAREA_TITLES(N)
        ACOLOR  = COLORS(N)      
        YRANGE  = YRANGES(N) 
        DATAFILE = FILE_SEARCH(DIR + 'MULTI_PERIODS-*' + SUBAREA_MAPS(N) + '*.SAVE')
        IF DATAFILE[0] EQ '' THEN CONTINUE
        PNGFILE = FIX_PATH(DIR_PROJECTS + 'RETREAT_2012\PLOTS\SPATIAL_VARIABILITY-'+DATASETS(D)+'-'+PROD_TAGS(D)+'-'+SUBAREA_MAPS(N)+'.PNG')
        IF GET_MTIME(PNGFILE) GT GET_MTIME(DATAFILE) AND OVERWRITE EQ 0 THEN CONTINUE 
        COMBO  = IDL_RESTORE(DATAFILE) & TAGS = TAG_NAMES(COMBO)      
        CDATA   = COMBO[WHERE(STRMID(COMBO.PERIOD,0,4) EQ 'WEEK' AND COMBO.(WHERE(TAGS EQ NAME)) NE '')]                      
        POS    = WHERE(TAGS EQ PROD) 
        TITLE = UNITS(PRODS(D))      
        AX = DATE_AXIS([20200101,20201231],/MONTH,/FYEAR,/MID)
        XRANGE = DATE_2JD([20200101,20201231])        
        WIDTH = 6
        FOR C=0, N_ELEMENTS(CODES)-1 DO BEGIN                                
          OK = WHERE(CDATA.SUBAREA_CODE EQ CODES(C) AND CDATA.(POS) NE MISSINGS(0.0))          
          DATA = CDATA[OK]
          FP   = PARSE_IT(DATA.(WHERE(TAGS EQ NAME)))
          DATA = DATA[SORT(DATE_2DOY(FP.DATE_START))]            
          IF C EQ 0 THEN BEGIN
            P = PLOT(AX.JD,YRANGE,YTITLE=TITLE,XRANGE=AX.JD,FONT_SIZE=14,XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XTICKLEN=0.0,/NODATA)
            XTICKV = P.XTICKVALUES     
          ENDIF   
            P0 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(DATA.PERIOD))),DATA.(POS),XRANGE=AX.JD,YRANGE=YRANGE,XMINOR=0,LINESTYLE=6,/OVERPLOT,COLOR=ACOLOR(C),SYMBOL='CIRCLE',SYM_SIZE=0.4, /SYM_FILLED)            
            P1 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(DATA.PERIOD))),LOWESS(DATE_2DOY(PERIOD_2DATE(DATA.PERIOD)),DATA.(POS),WIDTH=WIDTH),XRANGE=AX.JD,YRANGE=YRANGE,THICK=2,/OVERPLOT,COLOR=ACOLOR(C))            
            T = TEXT(0.15,0.85-(C*.04),TITLES(C),COLOR=ACOLOR(C),FONT_SIZE=12,/NORMAL,TARGET=P0)  
          ENDFOR ; FOR C=0, N_ELEMENTS(CODES)-1 DO BEGIN
          P.SAVE, PNGFILE, RESOLUTION=300, BIT_DEPTH=2      
          P.CLOSE             
      ENDFOR     ; FOR N=0L, N_ELEMENTS(SUBAREA_MAPS)-1 DO BEGIN      
    ENDFOR  
      
    
    
    STOP
    
  ENDIF ; DO_2012_RETREAT  

; *******************************************************  
  IF DO_REGION_SERIES GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_REGION_SERIES GE 2 

    SUBAREA_MAPS   = LIST('ESTUARY_SHELF_LME','ECOREGIONS_FULL_NO_ESTUARIES')
    SUBAREA_CODES  = LIST('32',                 ['7','5','6','8'])
    SUBAREA_TITLES = LIST('Northeast Shelf LME',['Mid-Atlantic Bight','Georges Bank','Gulf of Maine','Scotian Shelf'])
    WTITLE = ['OC Algorithms','Pan Algorithm','','']
    DATE_RANGE = ['19970101','20121201']
    
    MARGIN = [0.1,0.11,0.08,0.11]
    
    PROD_TAGS = ['CHLOR_A_OC','CHLOR_A_PAN','A_CDOM_443_GSM','PAR']
    PRODS = ['CHLOROPHYLL','CHLOROPHYLL','A_CDOM','PAR']
    YRANGE  = LIST([0,3],[0,3],[0,0.5],[0,80])
    Y2RANGE = LIST([0.8,1.6],[0.4,1.2],[0,0.5],[0,80])
    COLORS = LIST('GREY',['BLUE','CYAN','RED','YELLOW_GREEN'])
    DO_M     = [1,0,0,0]
    DO_A     = [0,0,0,0]
    DO_MONTH = [0,0,0,0]
    DO_DOY   = [0,0,0,0]
    DO_WEEK  = [0,0,0,0]
    DO_DAY   = [0,0,0,0]
    DIR_S = !S.DATASETS + 'OC-SEAWIFS-MLAC'  + SL + 'NEC' + SL + 'TS_SUBAREAS' + SL
    DIR_M = !S.DATASETS + 'OC-MODIS-LAC'     + SL + 'NEC' + SL + 'TS_SUBAREAS' + SL  
    DIR_C = !S.DATASETS + 'OC-SEA_AQU-LAC'   + SL + 'NEC' + SL + 'TS_SUBAREAS' + SL      
    
    FOR R =0L, N_ELEMENTS(PRODS)-1 DO BEGIN
      APROD = PRODS(R)
      IF PROD_TAGS(R) EQ 'CHLOR_A_OC' THEN BEGIN & SPROD = 'MEAN_CHLOR_A_OC4'   & SNAME = 'FIRST_NAME_CHLOR_A_OC4'   & SN = 'N_CHLOR_A_OC4'   & SMIN = 'MIN_CHLOR_A_OC4'   & SMAX = 'MAX_CHLOR_A_OC4'   & SSTD = 'STD_CHLOR_A_OC4'    & $
                                                   MPROD = 'MEAN_CHLOR_A_OC3M'  & MNAME = 'FIRST_NAME_CHLOR_A_OC3M'  & MN = 'N_CHLOR_A_OC3M'  & MMIN = 'MIN_CHLOR_A_OC3M'  & MMAX = 'MAX_CHLOR_A_OC3M'  & MSTD = 'STD_CHLOR_A_OC3M'   & $
                                                   CPROD = 'MEAN_CHLOR_A_OC'    & CNAME = 'FIRST_NAME_CHLOR_A_OC'    & CN = 'N_CHLOR_A_OC'    & CMIN = 'MIN_CHLOR_A_OC'    & CMAX = 'MAX_CHLOR_A_OC'    & CSTD = 'STD_CHLOR_A_OC'     & ENDIF ELSE BEGIN $
                                                   SPROD = 'MEAN_'+PROD_TAGS(R) & SNAME = 'FIRST_NAME_'+PROD_TAGS(R) & SN = 'N_'+PROD_TAGS(R) & SMIN = 'MIN_'+PROD_TAGS(R) & SMAX = 'MAX_'+PROD_TAGS(R) & SSTD = 'MEAN_'+PROD_TAGS(R) & $
                                                   MPROD = 'MEAN_'+PROD_TAGS(R) & MNAME = 'FIRST_NAME_'+PROD_TAGS(R) & MN = 'N_'+PROD_TAGS(R) & MMIN = 'MIN_'+PROD_TAGS(R) & MMAX = 'MAX_'+PROD_TAGS(R) & MSTD = 'MEAN_'+PROD_TAGS(R) & $
                                                   CPROD = 'MEAN_'+PROD_TAGS(R) & CNAME = 'FIRST_NAME_'+PROD_TAGS(R) & CN = 'N_'+PROD_TAGS(R) & CMIN = 'MIN_'+PROD_TAGS(R) & CMAX = 'MAX_'+PROD_TAGS(R) & CSTD = 'MEAN_'+PROD_TAGS(R) & ENDELSE  
      
      IF DO_DAY(R) GE 1 THEN FOR N=0, N_ELEMENTS(SUBAREA_MAPS)-1 DO BEGIN      
        CODES   = SUBAREA_CODES(N)
        TITLES  = SUBAREA_TITLES(N)
        SEAWIFS = IDL_RESTORE(FILE_SEARCH(DIR_S + '*D_DOY*' + SUBAREA_MAPS(N) + '*.SAVE')) & STAGS = TAG_NAMES(SEAWIFS)
        MODIS   = IDL_RESTORE(FILE_SEARCH(DIR_M + '*D_DOY*' + SUBAREA_MAPS(N) + '*.SAVE')) & MTAGS = TAG_NAMES(MODIS)
        COMBO   = IDL_RESTORE(FILE_SEARCH(DIR_C + '*D_DOY*' + SUBAREA_MAPS(N) + '*.SAVE')) & CTAGS = TAG_NAMES(COMBO) 
      
        SDATA   = SEAWIFS[WHERE(STRMID(SEAWIFS.PERIOD,0,6) EQ 'D_2010' AND SEAWIFS.(WHERE(STAGS EQ SPROD)) NE MISSINGS(0.0))] 
        MDATA   = MODIS[WHERE(STRMID(MODIS.PERIOD,0,6)     EQ 'D_2010' AND MODIS.(WHERE(MTAGS EQ MPROD))   NE MISSINGS(0.0))]             
        CDATA   = COMBO[WHERE(STRMID(COMBO.PERIOD,0,6)     EQ 'D_2010' AND COMBO.(WHERE(CTAGS EQ CPROD))   NE MISSINGS(0.0))]     
        
        SPOS    = WHERE(STAGS EQ SPROD)
        MPOS    = WHERE(MTAGS EQ MPROD)
        CPOS    = WHERE(CTAGS EQ CPROD)
        
        SNUM    = SDATA.(WHERE(STAGS EQ SN))
        MNUM    = MDATA.(WHERE(MTAGS EQ MN))
        CNUM    = CDATA.(WHERE(CTAGS EQ CN))
        
        YTITLE = UNITS(APROD)         
        AX = DATE_AXIS(['20100101','20110101'],/MONTH)
        PAL_SW3,RED,GREEN,BLUE      
        IF N EQ 0 THEN BEGIN 
          W = WINDOW(DIMENSIONS=[1024,1024],WINDOW_TITLE=WTITLE(R))
   ;       P = PLOT(AX.JD,YRANGE(R),YTITLE=YTITLE,FONT_SIZE=14,XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,LAYOUT=[2,2,1],/NODATA,/CURRENT)
   ;       XTICKV = P.XTICKVALUES & OK = WHERE(JD_2MONTH(XTICKV) EQ '01',COUNT)
   ;       FOR G=1,COUNT-1 DO GR = PLOT([XTICKV(OK(G)),XTICKV(OK(G))],YRANGE(R),COLOR='GREY',/OVERPLOT,XRANGE=AX.JD,YRANGE=YRANGE(R))
   ;       T = TEXT(0.18,0.96,TITLES,COLOR='BLACK',FONT_SIZE=12,/NORMAL,TARGET=P)          
   ;       OK = WHERE(SDATA.SUBAREA_CODE EQ CODES[0]) & P1 = PLOT(PERIOD_2JD(SDATA[OK].PERIOD),SDATA[OK].(SPOS),XRANGE=AX.JD,YRANGE=[0,10],/OVERPLOT,COLOR='BLUE' ,SYMBOL='CIRCLE',SYM_SIZE=0.65,NAME='SeaWiFS')
   ;       OK = WHERE(MDATA.SUBAREA_CODE EQ CODES[0]) & P2 = PLOT(PERIOD_2JD(MDATA[OK].PERIOD),MDATA[OK].(MPOS),XRANGE=AX.JD,YRANGE=[0,10],/OVERPLOT,COLOR='RED'  ,SYMBOL='CIRCLE',SYM_SIZE=0.65,NAME='MODIS')
   ;       OK = WHERE(CDATA.SUBAREA_CODE EQ CODES[0]) & P3 = PLOT(PERIOD_2JD(CDATA[OK].PERIOD),CDATA[OK].(CPOS),XRANGE=AX.JD,YRANGE=[0,10],/YLOG,/OVERPLOT,COLOR='GREEN',SYMBOL='CIRCLE',SYM_SIZE=0.4, NAME='Merged',/SYM_FILLED)        
   ;       L = LEGEND(TARGET=[P1,P2,P3],POSITION=[.785,.97],/NORMAL,FONT_SIZE=9,SAMPLE_WIDTH=.075,VERTICAL_SPACING=0.004)
        ENDIF ELSE BEGIN  
          FOR C=0, N_ELEMENTS(CODES)-1 DO BEGIN        
            P = PLOT(AX.JD,YRANGE(R),YTITLE=YTITLE,FONT_SIZE=14,XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,LAYOUT=[2,2,C+1],/NODATA,/CURRENT)
            XTICKV = P.XTICKVALUES & OK = WHERE(JD_2MONTH(XTICKV) EQ '01',COUNT)
            FOR G=1,COUNT-1 DO GR = PLOT([XTICKV(OK(G)),XTICKV(OK(G))],YRANGE(R),COLOR='GREY',/OVERPLOT,XRANGE=AX.JD,YRANGE=YRANGE(R))
            ;T = TEXT(0.18,0.96-(.2*(C+1)),TITLES(C),COLOR='BLACK',FONT_SIZE=12,/NORMAL,TARGET=P)            
    ;        OK = WHERE(SDATA.SUBAREA_CODE EQ CODES(C)) & P1 = PLOT(PERIOD_2JD(SDATA[OK].PERIOD),SDATA[OK].(SPOS),XRANGE=AX.JD,YRANGE=[0,10],/OVERPLOT,COLOR='BLUE' ,SYMBOL='CIRCLE',SYM_SIZE=0.65,NAME='SeaWiFS')
    ;        OK = WHERE(MDATA.SUBAREA_CODE EQ CODES(C)) & P2 = PLOT(PERIOD_2JD(MDATA[OK].PERIOD),MDATA[OK].(MPOS),XRANGE=AX.JD,YRANGE=[0,10],/OVERPLOT,COLOR='RED'  ,SYMBOL='CIRCLE',SYM_SIZE=0.65,NAME='MODIS')              
                        
            OK = WHERE(CDATA.SUBAREA_CODE EQ CODES(C) AND (FLOAT(CNUM)/CDATA.N_SUBAREA) GT .01)
            CPER = SD_SCALES((FLOAT(CNUM[OK])/CDATA[OK].N_SUBAREA)*100,PROD='NUM',SPECIAL_SCALE='100',/DATA2BIN)
            VC = BYTARR(3,N_ELEMENTS(CPER))            
            FOR RR=0,N_ELEMENTS(CPER)-1 DO VC(0,RR) = RED(CPER(RR))
            FOR GG=0,N_ELEMENTS(CPER)-1 DO VC(1,GG) = GREEN(CPER(GG))
            FOR BB=0,N_ELEMENTS(CPER)-1 DO VC(2,BB) = BLUE(CPER(BB))
            P3 = PLOT(PERIOD_2JD(CDATA[OK].PERIOD),CDATA[OK].(CPOS),TITLE=TITLES(C),XRANGE=AX.JD,YRANGE=[0.1,100],/YLOG,XMINOR=0,/OVERPLOT,COLOR='GREY',THICK=0.75)            
            P3 = PLOT(PERIOD_2JD(CDATA[OK].PERIOD),CDATA[OK].(CPOS),TITLE=TITLES(C),XRANGE=AX.JD,YRANGE=[0.1,15],/YLOG,XMINOR=0,/OVERPLOT,VERT_COLORS=VC,RGB_TABLE=PAL,SYM_TRANSPARENCY=25,LINESTYLE=6,SYMBOL='CIRCLE',SYM_SIZE=0.5, NAME='Merged',/SYM_FILLED)                     
          ENDFOR
          BAR = COLOR_BAR_SCALE_NG(PROD='NUM',SPECIAL_SCALE='100',PX=312,PY=510,CHARSIZE=12,BACKGROUND=BACKGROUND,XDIM=400,YDIM=20,PAL='PAL_SW3',TITLE='Percent Subarea Pixels',/HORIZONTAL,/BOTTOM)
        ENDELSE          
      ENDFOR     
      
      IF DO_WEEK(R) GE 1 THEN FOR N=0L, N_ELEMENTS(SUBAREA_MAPS)-1 DO BEGIN
        CODES   = SUBAREA_CODES(N)
        TITLES  = SUBAREA_TITLES(N)
        ACOLOR  = COLORS(N)        
        COMBO   = IDL_RESTORE(FILE_SEARCH(DIR_C + 'MULTI_PERIODS-*' + SUBAREA_MAPS(N) + '*.SAVE')) & CTAGS = TAG_NAMES(COMBO)
        CDATA   = COMBO[WHERE(COMBO.PERIOD_CODE EQ 'WEEK' AND COMBO.(WHERE(CTAGS EQ CNAME)) NE '')]         
        ;CDATA = CDATA[SORT(DATE_2DOY(CFP.DATE_START))] 
        CFP = PARSE_IT(CDATA.(WHERE(CTAGS EQ CNAME))) & CPOS    = WHERE(CTAGS EQ CPROD)   
        SETS = WHERE_SETS(CFP.DATE_START)
        FOR STH = 0, N_ELEMENTS(SETS)-1 DO BEGIN
          IF SETS(STH).N EQ 1 THEN CONTINUE
          SUBS = WHERE_SETS_SUBS(SETS(STH))
          OK = WHERE(CFP(SUBS).DATE_END EQ MIN(CFP(SUBS).DATE_END),COUNT)
          CDATA(SUBS[OK]).(CPOS) = MISSINGS(0.0)          
        ENDFOR  
        YTITLE = UNITS(APROD)         
        AX = DATE_AXIS([20200101,20201227],/MONTH,/FYEAR,/MID)
        WT = 5      
        IF N EQ 0 THEN BEGIN 
          W = WINDOW(DIMENSIONS=[1024,1024],WINDOW_TITLE=WTITLE(R))
          P = PLOT(AX.JD,YRANGE(R),YTITLE=YTITLE,FONT_SIZE=14,XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,/NODATA,/CURRENT,LAYOUT=[1,2,1])          
          XTICKV = P.XTICKVALUES 
          FOR G=0,N_ELEMENTS(XTICKV)-1 DO GR = PLOT([JD_ADD(XTICKV(G),-15,/DAY),JD_ADD(XTICKV(G),-15,/DAY)],YRANGE(R),COLOR='GREY',/OVERPLOT,XRANGE=AX.JD,YRANGE=YRANGE(R))                       
          OK = WHERE(CDATA.SUBAREA_CODE EQ CODES[0] AND CDATA.(CPOS) NE MISSINGS(0.0))
          P0 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(CDATA[OK].PERIOD))),CDATA[OK].(CPOS),XRANGE=AX.JD,YRANGE=YRANGE(R),XMINOR=0,LINESTYLE=6,/OVERPLOT,COLOR=ACOLOR,SYMBOL='CIRCLE',SYM_SIZE=0.4, NAME='Merged',/SYM_FILLED)
          PS = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(CDATA[OK].PERIOD))),SMOOTH_DOY(DATE_2DOY(PERIOD_2DATE(CDATA[OK].PERIOD)),CDATA[OK].(CPOS),WIDTH=WIDTH,/SMO),XRANGE=AX.JD,YRANGE=YRANGE(R),THICK=2,/OVERPLOT,COLOR='RED')        
          PM = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(CDATA[OK].PERIOD))),SMOOTH_DOY(DATE_2DOY(PERIOD_2DATE(CDATA[OK].PERIOD)),CDATA[OK].(CPOS),WIDTH=WIDTH,/MED),XRANGE=AX.JD,YRANGE=YRANGE(R),THICK=2,/OVERPLOT,COLOR='BLUE')
          PF = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(CDATA[OK].PERIOD))),SMOOTH_DOY(DATE_2DOY(PERIOD_2DATE(CDATA[OK].PERIOD)),CDATA[OK].(CPOS),WIDTH=WIDTH,/FILL),XRANGE=AX.JD,YRANGE=YRANGE(R),THICK=2,/OVERPLOT,COLOR='GREEN')
          PL = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(CDATA[OK].PERIOD))),SMOOTH_DOY(DATE_2DOY(PERIOD_2DATE(CDATA[OK].PERIOD)),CDATA[OK].(CPOS),WIDTH=WIDTH,/LOWE),XRANGE=AX.JD,YRANGE=YRANGE(R),THICK=2,/OVERPLOT,COLOR='PURPLE')
          T = TEXT(0.2,0.92,TITLES,COLOR=ACOLOR,FONT_SIZE=12,/NORMAL,TARGET=P)    
        ENDIF ELSE BEGIN  
;          FOR C=0, N_ELEMENTS(CODES)-1 DO BEGIN                    
;            OK = WHERE(CDATA.SUBAREA_CODE EQ CODES(C))
;            P0 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(CDATA[OK].PERIOD))),CDATA[OK].(CPOS),XRANGE=AX.JD,YRANGE=YRANGE(R),XMINOR=0,LINESTYLE=6,/OVERPLOT,COLOR=ACOLOR(C),SYMBOL='CIRCLE',SYM_SIZE=0.4, NAME='Merged',/SYM_FILLED)            
;            P1 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(CDATA[OK].PERIOD))),MEDIAN(CDATA[OK].(CPOS),WT),XRANGE=AX.JD,YRANGE=YRANGE(R),THICK=2,/OVERPLOT,COLOR=ACOLOR(C))
;            T = TEXT(0.2,0.90-(C*.02),TITLES(C),COLOR=ACOLOR(C),FONT_SIZE=12,/NORMAL,TARGET=P)   
;          ENDFOR
        ENDELSE          
      ENDFOR     
      
      IF DO_DOY(R) GE 1 THEN FOR N=0L, N_ELEMENTS(SUBAREA_MAPS)-1 DO BEGIN
        CODES   = SUBAREA_CODES(N)
        TITLES  = SUBAREA_TITLES(N)
        ACOLOR  = COLORS(N)        
        COMBO   = IDL_RESTORE(FILE_SEARCH(DIR_C + 'MULTI_PERIODS-A_ANNUAL_DOY_M_MONTH_STUDY_W_WEEK_Y_YEAR*' + SUBAREA_MAPS(N) + '*.SAVE')) & CTAGS = TAG_NAMES(COMBO)
        CDATA   = COMBO[WHERE(STRMID(COMBO.PERIOD,0,4)     EQ 'DOY_' AND COMBO.(WHERE(CTAGS EQ CNAME)) NE '')]         
        CFP = PARSE_IT(CDATA.(WHERE(CTAGS EQ CNAME))) & CDATA = CDATA[SORT(DATE_2DOY(CFP.DATE_START))] & CPOS    = WHERE(CTAGS EQ CPROD)               
        YTITLE = UNITS(APROD)         
        AX = DATE_AXIS([20200101,20201227],/MONTH,/FYEAR,/MID)
        WT = 15      
        IF N EQ 0 THEN BEGIN 
          IF DO_WEEK(R) EQ 0 THEN W = WINDOW(DIMENSIONS=[1024,1024],WINDOW_TITLE=WTITLE(R))
          P = PLOT(AX.JD,YRANGE(R),YTITLE=YTITLE,FONT_SIZE=14,XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,/NODATA,/CURRENT,LAYOUT=[1,2,2])          
          XTICKV = P.XTICKVALUES 
          FOR G=0,N_ELEMENTS(XTICKV)-1 DO GR = PLOT([JD_ADD(XTICKV(G),-15,/DAY),JD_ADD(XTICKV(G),-15,/DAY)],YRANGE(R),COLOR='GREY',/OVERPLOT,XRANGE=AX.JD,YRANGE=YRANGE(R))                       
          OK = WHERE(CDATA.SUBAREA_CODE EQ CODES[0])
          P0 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(CDATA[OK].PERIOD))),CDATA[OK].(CPOS),XRANGE=AX.JD,YRANGE=YRANGE(R),XMINOR=0,LINESTYLE=6,/OVERPLOT,COLOR=ACOLOR,SYMBOL='CIRCLE',SYM_SIZE=0.4, NAME='Merged',/SYM_FILLED)
          P1 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(CDATA[OK].PERIOD))),MEDIAN(CDATA[OK].(CPOS),WT),XRANGE=AX.JD,YRANGE=YRANGE(R),THICK=2,/OVERPLOT,COLOR=ACOLOR)        
          T = TEXT(0.2,0.92,TITLES,COLOR=ACOLOR,FONT_SIZE=12,/NORMAL,TARGET=P)    
        ENDIF ELSE BEGIN  
          FOR C=0, N_ELEMENTS(CODES)-1 DO BEGIN                    
            OK = WHERE(CDATA.SUBAREA_CODE EQ CODES(C))
            P0 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(CDATA[OK].PERIOD))),CDATA[OK].(CPOS),XRANGE=AX.JD,YRANGE=YRANGE(R),XMINOR=0,LINESTYLE=6,/OVERPLOT,COLOR=ACOLOR(C),SYMBOL='CIRCLE',SYM_SIZE=0.4, NAME='Merged',/SYM_FILLED)            
            P1 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(CDATA[OK].PERIOD))),MEDIAN(CDATA[OK].(CPOS),WT),XRANGE=AX.JD,YRANGE=YRANGE(R),THICK=2,/OVERPLOT,COLOR=ACOLOR(C))
            T = TEXT(0.2,0.90-(C*.02),TITLES(C),COLOR=ACOLOR(C),FONT_SIZE=12,/NORMAL,TARGET=P)   
          ENDFOR
        ENDELSE          
      ENDFOR           
      
      IF DO_M(R) GE 1 THEN FOR N=0L, N_ELEMENTS(SUBAREA_MAPS)-1 DO BEGIN
        CODES   = SUBAREA_CODES(N)
        TITLES  = SUBAREA_TITLES(N)
        SEAWIFS = IDL_RESTORE(FILE_SEARCH(DIR_S + '*' + SUBAREA_MAPS(N) + '*.SAVE'))
        MODIS   = IDL_RESTORE(FILE_SEARCH(DIR_M + '*' + SUBAREA_MAPS(N) + '*.SAVE'))
        COMBO   = IDL_RESTORE(FILE_SEARCH(DIR_C + '*' + SUBAREA_MAPS(N) + '*.SAVE')) 
      
        SDATA   = SEAWIFS[WHERE(STRMID(SEAWIFS.PERIOD,0,2) EQ 'M_')] & STAGS = TAG_NAMES(SDATA)
        MDATA   = MODIS[WHERE(STRMID(MODIS.PERIOD,0,2) EQ 'M_')]     & MTAGS = TAG_NAMES(MDATA)        
        CDATA   = COMBO[WHERE(STRMID(COMBO.PERIOD,0,2) EQ 'M_')]     & CTAGS = TAG_NAMES(CDATA)
        
        SPOS    = WHERE(STAGS EQ SPROD)
        MPOS    = WHERE(MTAGS EQ MPROD)
        CPOS    = WHERE(CTAGS EQ CPROD)
        
        YTITLE = UNITS(APROD)         
        AX = DATE_AXIS(DATE_RANGE,/MONTH,/YY_YEAR)      
        IF N EQ 0 THEN BEGIN 
          W = WINDOW(DIMENSIONS=[1024,1024],WINDOW_TITLE=WTITLE(R))
          P = PLOT(AX.JD,YRANGE(R),YTITLE=YTITLE,FONT_SIZE=14,XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,MARGIN=MARGIN,/NODATA,/CURRENT,LAYOUT=[1,5,1])
          XTICKV = P.XTICKVALUES & OK = WHERE(JD_2MONTH(XTICKV) EQ '01',COUNT)
          FOR G=1,COUNT-1 DO GR = PLOT([XTICKV(OK(G)),XTICKV(OK(G))],YRANGE(R),COLOR='GREY',/OVERPLOT,XRANGE=AX.JD,YRANGE=YRANGE(R))
          T = TEXT(0.11,0.96,TITLES,COLOR='BLACK',FONT_SIZE=12,/NORMAL,TARGET=P,FONT_STYLE=1)          
          OK = WHERE(SDATA.SUBAREA_CODE EQ CODES[0]) & P1 = PLOT(PERIOD_2JD(SDATA[OK].PERIOD),SDATA[OK].(SPOS),XRANGE=AX.JD,YRANGE=YRANGE(R),/OVERPLOT,COLOR='MEDIUM_BLUE' ,SYMBOL='CIRCLE',SYM_SIZE=0.85,/SYM_FILLED,NAME='SeaWiFS',THICK=2)
          OK = WHERE(MDATA.SUBAREA_CODE EQ CODES[0]) & P2 = PLOT(PERIOD_2JD(MDATA[OK].PERIOD),MDATA[OK].(MPOS),XRANGE=AX.JD,YRANGE=YRANGE(R),/OVERPLOT,COLOR='FIREBRICK',   SYMBOL='CIRCLE',SYM_SIZE=0.85,SYM_THICK=2,NAME='MODIS',THICK=2)
  ;        OK = WHERE(CDATA.SUBAREA_CODE EQ CODES[0]) & P3 = PLOT(PERIOD_2JD(CDATA[OK].PERIOD),CDATA[OK].(CPOS),XRANGE=AX.JD,YRANGE=YRANGE(R),/OVERPLOT,COLOR='GREEN',SYMBOL='CIRCLE',SYM_SIZE=0.4, NAME='Merged',/SYM_FILLED)        
          L = LEGEND(TARGET=[P1,P2],POSITION=[.97,.99],/AUTO_TEXT_COLOR,/NORMAL,FONT_SIZE=11,SAMPLE_WIDTH=.1,VERTICAL_SPACING=0.008)
        ENDIF ELSE BEGIN  
          FOR C=0, N_ELEMENTS(CODES)-1 DO BEGIN        
            P = PLOT(AX.JD,YRANGE(R),YTITLE=YTITLE,FONT_SIZE=14,XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,LAYOUT=[1,5,C+2],MARGIN=MARGIN,/NODATA,/CURRENT)
            XTICKV = P.XTICKVALUES & OK = WHERE(JD_2MONTH(XTICKV) EQ '01',COUNT)
            FOR G=1,COUNT-1 DO GR = PLOT([XTICKV(OK(G)),XTICKV(OK(G))],YRANGE(R),COLOR='GREY',/OVERPLOT,XRANGE=AX.JD,YRANGE=YRANGE(R))
            T = TEXT(0.11,0.96-(.2*(C+1)),TITLES(C),COLOR='BLACK',FONT_SIZE=12,/NORMAL,TARGET=P,FONT_STYLE=1)            
            OK = WHERE(SDATA.SUBAREA_CODE EQ CODES(C)) & P1 = PLOT(PERIOD_2JD(SDATA[OK].PERIOD),SDATA[OK].(SPOS),XRANGE=AX.JD,YRANGE=YRANGE(R),/OVERPLOT,COLOR='MEDIUM_BLUE',SYMBOL='CIRCLE',SYM_SIZE=0.85,/SYM_FILLED,NAME='SeaWiFS',THICK=2)
            OK = WHERE(MDATA.SUBAREA_CODE EQ CODES(C)) & P2 = PLOT(PERIOD_2JD(MDATA[OK].PERIOD),MDATA[OK].(MPOS),XRANGE=AX.JD,YRANGE=YRANGE(R),/OVERPLOT,COLOR='FIREBRICK',  SYMBOL='CIRCLE',SYM_SIZE=0.85,SYM_THICK=2,NAME='MODIS',THICK=2)
   ;         OK = WHERE(CDATA.SUBAREA_CODE EQ CODES(C)) & P3 = PLOT(PERIOD_2JD(CDATA[OK].PERIOD),CDATA[OK].(CPOS),XRANGE=AX.JD,YRANGE=YRANGE(R),/OVERPLOT,COLOR='GREEN',SYMBOL='CIRCLE',SYM_SIZE=0.4, NAME='Merged',/SYM_FILLED)            
          ENDFOR
        ENDELSE          
      ENDFOR     
 ;     W.SAVE,!S.PROJECTS + 'ECOAP' + SL + 'DOC' + SL + 'EcosystemStatusReport-2011' + SL + 'PLOTS' + SL + 'SATELLITE_MONTHLY_TIME_SERIES-'+APROD+'.PNG'       
            
      IF DO_A(R) EQ 1 THEN FOR N=0L, N_ELEMENTS(SUBAREA_MAPS)-1 DO BEGIN
        CODES   = SUBAREA_CODES(N)
        TITLES  = SUBAREA_TITLES(N)
        
        SEAWIFS = IDL_RESTORE(FILE_SEARCH(DIR_S + '*' + SUBAREA_MAPS(N) + '*.SAVE'))
        MODIS   = IDL_RESTORE(FILE_SEARCH(DIR_M + '*' + SUBAREA_MAPS(N) + '*.SAVE'))
        COMBO   = IDL_RESTORE(FILE_SEARCH(DIR_C + '*' + SUBAREA_MAPS(N) + '*.SAVE')) 
      
        SDATA   = SEAWIFS[WHERE(STRMID(SEAWIFS.PERIOD,0,2) EQ 'A_')] & STAGS = TAG_NAMES(SDATA)
        MDATA   = MODIS[WHERE(STRMID(MODIS.PERIOD,0,2) EQ 'A_')]     & MTAGS = TAG_NAMES(MDATA)        
        CDATA   = COMBO[WHERE(STRMID(COMBO.PERIOD,0,2) EQ 'A_')]     & CTAGS = TAG_NAMES(CDATA)
        
        SPOS    = WHERE(STAGS EQ SPROD)
        MPOS    = WHERE(MTAGS EQ MPROD)
        CPOS    = WHERE(CTAGS EQ CPROD)
        
        DATE_RANGE = [19980101,20100605] 
        YTITLE = UNITS(APROD)         
        SYM_SIZE = 1.5
        AX = DATE_AXIS(DATE_RANGE,/YEAR,/YY_YEAR)      
        IF N EQ 0 THEN BEGIN 
          W = WINDOW(DIMENSIONS=[1024,1024])
          P = PLOT(AX.JD,Y2RANGE(R),YTITLE=YTITLE,TITLE=TITLES,FONT_SIZE=14,XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,YMAJOR=5,LAYOUT=[2,2,1],/NODATA,/CURRENT)
          
;          XTICKV = P.XTICKVALUES & OK = WHERE(JD_2MONTH(XTICKV) EQ '01',COUNT)
;          FOR G=1,COUNT-1 DO GR = PLOT([XTICKV(OK(G)),XTICKV(OK(G))],YRANGE(R),COLOR='GREY',/OVERPLOT,XRANGE=AX.JD,YRANGE=YRANGE(R))
;          T  = TEXT(0.18,0.96,TITLES,COLOR='BLACK',FONT_SIZE=12,/NORMAL,TARGET=P)
          T2 = TEXT(0.5,0.98,WTITLE(R),FONT_SIZE=14,/NORMAL,TARGET=W,ALIGNMENT=0.5)          
          OK = WHERE(SDATA.SUBAREA_CODE EQ CODES[0]) & P4 = PLOT(PERIOD_2JD(SDATA[OK].PERIOD),SDATA[OK].(SPOS),XRANGE=P.XRANGE,YRANGE=Y2RANGE(R),/OVERPLOT,COLOR='BLUE' ,SYMBOL='CIRCLE',SYM_SIZE=SYM_SIZE,            NAME='SeaWiFS',XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,YMAJOR=5)
          OK = WHERE(MDATA.SUBAREA_CODE EQ CODES[0]) & P5 = PLOT(PERIOD_2JD(MDATA[OK].PERIOD),MDATA[OK].(MPOS),XRANGE=P.XRANGE,YRANGE=Y2RANGE(R),/OVERPLOT,COLOR='RED'  ,SYMBOL='CIRCLE',SYM_SIZE=SYM_SIZE,            NAME='MODIS',  XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,YMAJOR=5)
          OK = WHERE(CDATA.SUBAREA_CODE EQ CODES[0]) & P6 = PLOT(PERIOD_2JD(CDATA[OK].PERIOD),CDATA[OK].(CPOS),XRANGE=P.XRANGE,YRANGE=Y2RANGE(R),/OVERPLOT,COLOR='GREEN',SYMBOL='CIRCLE',SYM_SIZE=1.0,/SYM_FILLED,NAME='Merged', XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,YMAJOR=5)        
          L = LEGEND(TARGET=[P4,P5,P6],POSITION=[.775,.925],/NORMAL,FONT_SIZE=9,SAMPLE_WIDTH=.2,VERTICAL_SPACING=0.012)
        ENDIF ELSE BEGIN  
          FOR C=0, N_ELEMENTS(CODES)-2 DO BEGIN        
            P = PLOT(AX.JD,Y2RANGE(R),YTITLE=YTITLE,TITLE=TITLES(C),FONT_SIZE=14,XMAJOR=AX.TICKS/2,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,LAYOUT=[2,2,C+2],/NODATA,/CURRENT)
;            XTICKV = P.XTICKVALUES & OK = WHERE(JD_2MONTH(XTICKV) EQ '01',COUNT)
;            FOR G=1,COUNT-1 DO GR = PLOT([XTICKV(OK(G)),XTICKV(OK(G))],YRANGE(R),COLOR='GREY',/OVERPLOT,XRANGE=AX.JD,YRANGE=YRANGE(R))
;            T = TEXT(0.18,0.96-(.2*(C+1)),TITLES(C),COLOR='BLACK',FONT_SIZE=12,/NORMAL,TARGET=P)
            OK = WHERE(SDATA.SUBAREA_CODE EQ CODES(C)) & P4 = PLOT(PERIOD_2JD(SDATA[OK].PERIOD),SDATA[OK].(SPOS),XRANGE=P.XRANGE,YRANGE=Y2RANGE(R),/OVERPLOT,COLOR='BLUE' ,SYMBOL='CIRCLE',SYM_SIZE=SYM_SIZE,            NAME='SeaWiFS',XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,YMAJOR=5)
            OK = WHERE(MDATA.SUBAREA_CODE EQ CODES(C)) & P5 = PLOT(PERIOD_2JD(MDATA[OK].PERIOD),MDATA[OK].(MPOS),XRANGE=P.XRANGE,YRANGE=Y2RANGE(R),/OVERPLOT,COLOR='RED'  ,SYMBOL='CIRCLE',SYM_SIZE=SYM_SIZE,            NAME='MODIS',  XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,YMAJOR=5)
            OK = WHERE(CDATA.SUBAREA_CODE EQ CODES(C)) & P6 = PLOT(PERIOD_2JD(CDATA[OK].PERIOD),CDATA[OK].(CPOS),XRANGE=P.XRANGE,YRANGE=Y2RANGE(R),/OVERPLOT,COLOR='GREEN',SYMBOL='CIRCLE',SYM_SIZE=1.0,/SYM_FILLED,NAME='Merged', XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,YMAJOR=5)            
          ENDFOR
        ENDELSE          
      ENDFOR     
   ;   W.SAVE,!S.PROJECTS + 'ECOAP' + SL + 'DOC' + SL + 'EcosystemStatusReport-2011' + SL + 'PLOTS' + SL + 'SATELLITE_MONTHLY_TIME_SERIES-'+APROD+'.PNG'    
   
      IF DO_MONTH(R) EQ 1 THEN FOR N=0L, N_ELEMENTS(SUBAREA_MAPS)-1 DO BEGIN
        CODES   = SUBAREA_CODES(N)
        TITLES  = SUBAREA_TITLES(N)
        
        SEAWIFS = IDL_RESTORE(FILE_SEARCH(DIR_S + '*' + SUBAREA_MAPS(N) + '*.SAVE'))
        MODIS   = IDL_RESTORE(FILE_SEARCH(DIR_M + '*' + SUBAREA_MAPS(N) + '*.SAVE'))
        COMBO   = IDL_RESTORE(FILE_SEARCH(DIR_C + '*' + SUBAREA_MAPS(N) + '*.SAVE')) 
      
        SDATA   = SEAWIFS[WHERE(STRMID(SEAWIFS.PERIOD,0,6) EQ 'MONTH_')] & STAGS = TAG_NAMES(SDATA)
        MDATA   = MODIS[WHERE(STRMID(MODIS.PERIOD,0,6)     EQ 'MONTH_')] & MTAGS = TAG_NAMES(MDATA)        
        CDATA   = COMBO[WHERE(STRMID(COMBO.PERIOD,0,6)     EQ 'MONTH_')] & CTAGS = TAG_NAMES(CDATA)
        
        SPOS    = WHERE(STAGS EQ SPROD)
        MPOS    = WHERE(MTAGS EQ MPROD)
        CPOS    = WHERE(CTAGS EQ CPROD)
        
        DATE_RANGE = [20200101,20201231] 
        YTITLE = UNITS(APROD)         
        SYM_SIZE = 1.5
        AX = DATE_AXIS(DATE_RANGE,/FYEAR)      
        IF N EQ 0 THEN BEGIN 
          W = WINDOW(DIMENSIONS=[1024,1024])
          P = PLOT(AX.JD,Y2RANGE(R),YTITLE=YTITLE,TITLE=TITLES,FONT_SIZE=14,XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,YMAJOR=5,LAYOUT=[2,2,1],/NODATA,/CURRENT)
          
;          XTICKV = P.XTICKVALUES & OK = WHERE(JD_2MONTH(XTICKV) EQ '01',COUNT)
;          FOR G=1,COUNT-1 DO GR = PLOT([XTICKV(OK(G)),XTICKV(OK(G))],YRANGE(R),COLOR='GREY',/OVERPLOT,XRANGE=AX.JD,YRANGE=YRANGE(R))
;          T  = TEXT(0.18,0.96,TITLES,COLOR='BLACK',FONT_SIZE=12,/NORMAL,TARGET=P)
          T2 = TEXT(0.5,0.98,WTITLE(R),FONT_SIZE=14,/NORMAL,TARGET=W,ALIGNMENT=0.5)          
          OK = WHERE(SDATA.SUBAREA_CODE EQ CODES[0]) & P4 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(SDATA[OK].PERIOD))),SDATA[OK].(SPOS),XRANGE=P.XRANGE,YRANGE=Y2RANGE(R),/OVERPLOT,COLOR='BLUE' ,SYMBOL='CIRCLE',SYM_SIZE=SYM_SIZE,            NAME='SeaWiFS',XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,YMAJOR=5)
          OK = WHERE(MDATA.SUBAREA_CODE EQ CODES[0]) & P5 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(MDATA[OK].PERIOD))),MDATA[OK].(MPOS),XRANGE=P.XRANGE,YRANGE=Y2RANGE(R),/OVERPLOT,COLOR='RED'  ,SYMBOL='CIRCLE',SYM_SIZE=SYM_SIZE,            NAME='MODIS',  XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,YMAJOR=5)
          OK = WHERE(CDATA.SUBAREA_CODE EQ CODES[0]) & P6 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(CDATA[OK].PERIOD))),CDATA[OK].(CPOS),XRANGE=P.XRANGE,YRANGE=Y2RANGE(R),/OVERPLOT,COLOR='GREEN',SYMBOL='CIRCLE',SYM_SIZE=1.0,/SYM_FILLED,NAME='Merged', XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,YMAJOR=5)        
          L = LEGEND(TARGET=[P4,P5,P6],POSITION=[.775,.925],/NORMAL,FONT_SIZE=9,SAMPLE_WIDTH=.2,VERTICAL_SPACING=0.012)
        ENDIF ELSE BEGIN  
          FOR C=0, N_ELEMENTS(CODES)-2 DO BEGIN        
            P = PLOT(AX.JD,Y2RANGE(R),YTITLE=YTITLE,TITLE=TITLES(C),FONT_SIZE=14,XMAJOR=AX.TICKS/2,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,LAYOUT=[2,2,C+2],/NODATA,/CURRENT)
;            XTICKV = P.XTICKVALUES & OK = WHERE(JD_2MONTH(XTICKV) EQ '01',COUNT)
;            FOR G=1,COUNT-1 DO GR = PLOT([XTICKV(OK(G)),XTICKV(OK(G))],YRANGE(R),COLOR='GREY',/OVERPLOT,XRANGE=AX.JD,YRANGE=YRANGE(R))
;            T = TEXT(0.18,0.96-(.2*(C+1)),TITLES(C),COLOR='BLACK',FONT_SIZE=12,/NORMAL,TARGET=P)
            OK = WHERE(SDATA.SUBAREA_CODE EQ CODES(C)) & P4 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(SDATA[OK].PERIOD))),SDATA[OK].(SPOS),XRANGE=P.XRANGE,YRANGE=Y2RANGE(R),/OVERPLOT,COLOR='BLUE' ,SYMBOL='CIRCLE',SYM_SIZE=SYM_SIZE,            NAME='SeaWiFS',XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,YMAJOR=5)
            OK = WHERE(MDATA.SUBAREA_CODE EQ CODES(C)) & P5 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(MDATA[OK].PERIOD))),MDATA[OK].(MPOS),XRANGE=P.XRANGE,YRANGE=Y2RANGE(R),/OVERPLOT,COLOR='RED'  ,SYMBOL='CIRCLE',SYM_SIZE=SYM_SIZE,            NAME='MODIS',  XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,YMAJOR=5)
            OK = WHERE(CDATA.SUBAREA_CODE EQ CODES(C)) & P6 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(CDATA[OK].PERIOD))),CDATA[OK].(CPOS),XRANGE=P.XRANGE,YRANGE=Y2RANGE(R),/OVERPLOT,COLOR='GREEN',SYMBOL='CIRCLE',SYM_SIZE=1.0,/SYM_FILLED,NAME='Merged', XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,YMAJOR=5)            
          ENDFOR
        ENDELSE          
      ENDFOR     
   ;   W.SAVE,!S.PROJECTS + 'ECOAP' + SL + 'DOC' + SL + 'EcosystemStatusReport-2011' + SL + 'PLOTS' + SL + 'SATELLITE_MONTHLY_TIME_SERIES-'+APROD+'.PNG'    
    ENDFOR  
  ENDIF ;DO_REGION_SERIES


; *******************************************************
  IF DO_GOM_DATA GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_GOM_DATA GE 2

    GOM = READALL(DIR_PROJECTS + 'NEWPROD\DATA\GOM_NUT_CHL_DATA.csv')
    SUB = STRUCT_SD_READ('D:\IDL\IMAGES\MASK_SUBAREA-NEC-PXY_1024_1024-GFISH4.SAVE',STRUCT=STRUCT)
    LAND  = READ_LANDMASK(MAP='NEC',/STRUCT)
    IMG = READ_LANDMASK(MAP='NEC')
    IMG(LAND.LAND)  = 252
    IMG(LAND.OCEAN) = 255
    IMG(LAND.COAST) = 0
    OUTLINE = READALL('D:\IDL\IMAGES\MASK_SUBAREA-NEC-PXY_1024_1024-GFISH4-OUTLINE-EDIT.PNG')
    OK_OUTLINE = WHERE(OUTLINE NE 0,COUNT_OUTLINE)

    NEW = REPLICATE(STRUCT_2MISSINGS(CREATE_STRUCT('DATE','','YEAR',0L,'LON',0.0,'LAT',0.0,'SUBAREA_CODE',0L,'SUBAREA_NAME','','BOTTOM_DEPTH',0.0,'SAMPLE_DEPTH',0.0,'RELATIVE_DEPTH','','TEMP',0.0,'SALINITY',0.0,'CHLOR_A',0.0,'NO3_NO2',0.0,$
      'SIOH4',0.0,'PO4',0.0,'PO4_FLAG','')),N_ELEMENTS(GOM))

    ; MAKE DATE
    NEW.DATE = STRTRIM(GOM.YEAR,2) + ADD_STR_ZERO(STRTRIM(GOM.MONTH,2)) + ADD_STR_ZERO(STRTRIM(GOM.DAY,2))
    NEW.YEAR = NAN_2MISSING(STRTRIM(GOM.YEAR,2))
    OK = WHERE(STRLEN(NEW.DATE) NE 8,COUNT)
    IF COUNT GE 1 THEN NEW[OK].DATE = MISSINGS('')

    OK = WHERE(STRTRIM(GOM.LON,2) NE 'NaN')           & NEW[OK].LON           = FLOAT(GOM[OK].LON)
    OK = WHERE(STRTRIM(GOM.LAT,2) NE 'NaN')           & NEW[OK].LAT           = FLOAT(GOM[OK].LAT)
    OK = WHERE(STRTRIM(GOM.BOT_DEPTH,2) NE 'NaN')     & NEW[OK].BOTTOM_DEPTH  = FLOAT(GOM[OK].BOT_DEPTH)
    OK = WHERE(STRTRIM(GOM.SAMPLE_DEPTH,2) NE 'NaN')  & NEW[OK].SAMPLE_DEPTH  = FLOAT(GOM[OK].SAMPLE_DEPTH)
    OK = WHERE(STRTRIM(GOM.TEMP,2) NE 'NaN')          & NEW[OK].TEMP          = FLOAT(GOM[OK].TEMP)
    OK = WHERE(STRTRIM(GOM.SALINITY,2) NE 'NaN')      & NEW[OK].SALINITY      = FLOAT(GOM[OK].SALINITY)
    OK = WHERE(STRTRIM(GOM.CHLOR_A,2) NE 'NaN')       & NEW[OK].CHLOR_A       = FLOAT(GOM[OK].CHLOR_A)
    OK = WHERE(STRTRIM(GOM.NO3_NO2,2) NE 'NaN')       & NEW[OK].NO3_NO2       = FLOAT(GOM[OK].NO3_NO2)
    OK = WHERE(STRTRIM(GOM.SIOH4,2) NE 'NaN')         & NEW[OK].SIOH4         = FLOAT(GOM[OK].SIOH4)
    OK = WHERE(STRTRIM(GOM.PO4,2) NE 'NaN')           & NEW[OK].PO4           = FLOAT(GOM[OK].PO4)
    OK = WHERE(STRTRIM(GOM.PO4_QUALITY_FLAG,2) NE 'NaN') & NEW[OK].PO4_FLAG      = STRTRIM(GOM[OK].PO4_QUALITY_FLAG,2)

    OK = WHERE(NEW.SAMPLE_DEPTH LT 5)
    NEW[OK].RELATIVE_DEPTH = 'SURFACE'

    PAL_SW3,R,G,B
    ZWIN, IMG
    MAP_NEC
    NEW.SUBAREA_CODE  = MAP_DEG2IMAGE(SUB,NEW.LON,NEW.LAT, X=x, Y=y,AROUND=0)
    TV, IMG
    FOR LL=0L, N_ELEMENTS(NEW.LON)-1 DO BEGIN
      CHL=NEW(LL).CHLOR_A
      LON=NEW(LL).LON
      LAT=NEW(LL).LAT
      IF CHL NE MISSINGS(CHL) THEN COLOR = SD_SCALES(CHL,PROD='CHLOR_A',/DATA2BIN,SPECIAL_SCALE='HIGH') ELSE COLOR = 0
      USERSYM,[-0.5,0.5,0.5,-0.5,-0.5],[-0.5,-0.5,0.5,0.5,-0.5],/FILL, COLOR=COLOR
      PLOTS,LON,LAT,PSYM=8, COLOR=COLOR,/NOCLIP,SYMSIZE=0.5, THICK=1.5
    ENDFOR
    PNG = TVRD()
    PNG(OK_OUTLINE) = 0
    ZWIN
    FOR NTH = 0L, N_ELEMENTS(STRUCT.SUBAREA_CODE)-1 DO BEGIN
      OK = WHERE(NEW.SUBAREA_CODE EQ STRUCT.SUBAREA_CODE[NTH],COUNT)
      IF COUNT GE 1 THEN NEW[OK].SUBAREA_NAME = STRUCT.SUBAREA_NAME[NTH]
    ENDFOR


    PAL_36, R,G,B
    !P.MULTI = [0,1,2]
    PARAMS = [2,3,4,8]
    CHARSIZE = 1.25
    XMARGIN = [4,4]
    YMARGIN = [8,8]
    SYM_COLOR = 4
    STATS_CHARSIZE = 1.5
    SYMSIZE = 1
    REG_THICK = 12
    THICK = 2
    FONT = 0
    CIRCLE,32, COLOR=SYM_COLOR, FILL=0
    PSYM = 8
    ONE_COLOR = 0
    ONE_THICK = 5
    ONE_LINESTYLE = 2
    PSPRINT,FILENAME=NO3_PLOTS,/COLOR,/Full,/TIMES

    XTITLE='Temperature (!Uo!NC)'
    YTITLE='NO!U-3!N'
    OK = WHERE(NEW.NO3_NO2 NE MISSINGS(0.0) AND NEW.TEMP NE MISSINGS(0.0) AND NEW.YEAR GT 1997)
    PLOTXY, NEW[OK].TEMP, NEW[OK].NO3_NO2, MODEL='RMA',PSYM=PSYM, SYM_COLOR=SYM_COLOR, SYMSIZE=SYMSIZE, XTITLE=XTITLE, YTITLE=YTITLE,$
      XRANGE=XRANGE,YRANGE=YRANGE,DECIMALS=2,PARAMS=PARAMS,CHARSIZE=CHARSIZE,/ONE2ONE,ONE_COLOR=one_color,ONE_THICK=one_thick, ONE_LINESTYLE=one_linestyle,$
      XMARGIN=XMARGIN,YMARGIN=YMARIN,STATS_CHARSIZE=STATS_CHARSIZE,REG_COLOR=0, REG_THICK=REG_THICK,/GRID_NONE,TITLE='ALL DEPTHS'
    OPLOT, NEW[OK].TEMP, [21.1 - (2.08*NEW[OK].TEMP) + (0.0505*NEW[OK].TEMP^2)], PSYM=2, COLOR=12

    OK = WHERE(NEW.NO3_NO2 NE MISSINGS(0.0) AND NEW.TEMP NE MISSINGS(0.0)  AND NEW.YEAR GT 1997 AND NEW.RELATIVE_DEPTH EQ 'SURFACE')
    PLOTXY, NEW[OK].TEMP, NEW[OK].NO3_NO2, MODEL='RMA',PSYM=PSYM, SYM_COLOR=SYM_COLOR, SYMSIZE=SYMSIZE,XTITLE=XTITLE, YTITLE=YTITLE,$
      XRANGE=XRANGE,YRANGE=YRANGE,DECIMALS=2,PARAMS=PARAMS,CHARSIZE=CHARSIZE,/ONE2ONE,ONE_COLOR=one_color,ONE_THICK=one_thick, ONE_LINESTYLE=one_linestyle,$
      XMARGIN=XMARGIN,YMARGIN=YMARIN,STATS_CHARSIZE=STATS_CHARSIZE,REG_COLOR=0, REG_THICK=REG_THICK,/GRID_NONE,TITLE='NEAR-SURFACE DEPTHS'
    OPLOT, NEW[OK].TEMP, [21.1 - (2.08*NEW[OK].TEMP) + (0.0505*NEW[OK].TEMP^2)], PSYM=2, COLOR=12

    !P.MULTI = [0,2,2]
    FOR NTH = 1L, 6 DO BEGIN
      OK = WHERE(NEW.SUBAREA_CODE EQ NTH AND NEW.NO3_NO2 NE MISSINGS(0.0) AND NEW.TEMP NE MISSINGS(0.0) AND NEW.YEAR GT 1997,COUNT)
      IF COUNT EQ 0 THEN CONTINUE
      PLOTXY, NEW[OK].TEMP, NEW[OK].NO3_NO2, MODEL='RMA',PSYM=PSYM, SYM_COLOR=SYM_COLOR, SYMSIZE=SYMSIZE,XTITLE=XTITLE, YTITLE=YTITLE,$
        XRANGE=XRANGE,YRANGE=YRANGE,DECIMALS=2,PARAMS=PARAMS,CHARSIZE=CHARSIZE,/ONE2ONE,ONE_COLOR=one_color,ONE_THICK=one_thick, ONE_LINESTYLE=one_linestyle,$
        XMARGIN=XMARGIN,YMARGIN=YMARIN,STATS_CHARSIZE=STATS_CHARSIZE,REG_COLOR=0, REG_THICK=REG_THICK,/GRID_NONE,TITLE=NEW(OK[0]).SUBAREA_NAME + ' ALL DEPTHS'
      OK = WHERE(NEW.SUBAREA_CODE EQ NTH AND NEW.NO3_NO2 NE MISSINGS(0.0) AND NEW.TEMP NE MISSINGS(0.0)  AND NEW.YEAR GT 1997 AND NEW.RELATIVE_DEPTH EQ 'SURFACE',COUNT)
      OPLOT, NEW[OK].TEMP, [21.1 - (2.08*NEW[OK].TEMP) + (0.0505*NEW[OK].TEMP^2)], PSYM=2, COLOR=12
      IF COUNT EQ 0 THEN CONTINUE
      PLOTXY, NEW[OK].TEMP, NEW[OK].NO3_NO2, MODEL='RMA',PSYM=PSYM, SYM_COLOR=SYM_COLOR, SYMSIZE=SYMSIZE,XTITLE=XTITLE, YTITLE=YTITLE,$
        XRANGE=XRANGE,YRANGE=YRANGE,DECIMALS=2,PARAMS=PARAMS,CHARSIZE=CHARSIZE,/ONE2ONE,ONE_COLOR=one_color,ONE_THICK=one_thick, ONE_LINESTYLE=one_linestyle,$
        XMARGIN=XMARGIN,YMARGIN=YMARIN,STATS_CHARSIZE=STATS_CHARSIZE,REG_COLOR=0, REG_THICK=REG_THICK,/GRID_NONE,TITLE=NEW(OK[0]).SUBAREA_NAME + ' SURFACE'
      OPLOT, NEW[OK].TEMP, [21.1 - (2.08*NEW[OK].TEMP) + (0.0505*NEW[OK].TEMP^2)], PSYM=2, COLOR=12
    ENDFOR


    PSPRINT

stop
  ENDIF ; DO_GOM_DATA


;	*******************************************************
	IF DO_COMPOSITES GE 1 THEN BEGIN
;	*******************************************************
		OVERWRITE = DO_COMPOSITES GE 2

		PAL = 'PAL_SW3'
		PALANOM = 'PAL_ANOMG'
;		Make Gulf of Maine-North Chlorophyll and SST composites
		DIR_BROWSE = DIR_PROJECTS + 'BROWSE\'
		DIR_COMPS  = DIR_PROJECTS + 'COMPOSITES\'
		MAP_OUT    = 'GOMN'

    DO_ANNUAL  = 0
    DO_YEARLY  = 0
    DO_MONTHLY = 1

    IF DO_ANNUAL GE 1 THEN BEGIN
;  		Annual images

  		CHL  = FILE_SEARCH('S:\OC-SEA_AQU-LAC-NEC\STATS\!YEAR*CHLOR_A*MEAN.SAVE')
  		SST  = FILE_SEARCH('T:\SST-4-NEC\STATS\!YEAR*SST*MEAN.SAVE')
  		PPD  = FILE_SEARCH('T:\PP-N4AT-NEC\stats\!YEAR-SA_N4AT-*PPD-OPAL-MEAN.SAVE')

  		STRUCT_SD_2PNG, CHL,/ADD_COLORBAR,/ADD_LAND,/ADD_COAST,OVERWRITE=OVERWRITE,MAP_OUT=MAP_OUT,DIR_OUT=DIR_BROWSE,/ADD_BATHY,BATHY_COLOR=252,SPECIAL_SCALE='MEDIUM'
  		STRUCT_SD_2PNG, SST,/ADD_COLORBAR,/ADD_LAND,/ADD_COAST,OVERWRITE=OVERWRITE,MAP_OUT=MAP_OUT,DIR_OUT=DIR_BROWSE,/ADD_BATHY,BATHY_COLOR=252
  		STRUCT_SD_2PNG, PPD,/ADD_COLORBAR,/ADD_LAND,/ADD_COAST,OVERWRITE=OVERWRITE,MAP_OUT=MAP_OUT,DIR_OUT=DIR_BROWSE,/ADD_BATHY,BATHY_COLOR=252,SPECIAL_SCALE='NEW'
    ENDIF

    IF DO_YEARLY GE 1 THEN BEGIN
;		 Yearly images

  		CHL  = FILE_SEARCH('S:\OC-SEA_AQU-LAC-NEC\STATS\!Y_*CHLOR_A*MEAN.SAVE')
  		SST  = FILE_SEARCH('T:\SST-4-NEC\STATS\!Y_*SST*MEAN.SAVE')
  		PPD  = FILE_SEARCH('T:\PP-N4AT-NEC\stats\!Y_*-SA_N4AT-*-PPD-OPAL-MEAN.SAVE')
  		ACHL = FILE_SEARCH('S:\OC-SEA_AQU-LAC-NEC\ANOM\SAVE\!Y_*CHLOR_A*MEAN-RATIO.SAVE')
  		ASST = FILE_SEARCH('T:\SST-4-NEC\ANOM\SAVE\!Y_*SST*MEAN-DIF.SAVE')
  		APPD = FILE_SEARCH('T:\PP-N4AT-NEC\ANOM\SAVE\!Y_*-SA_N4AT-*PPD-OPAL-MEAN-RATIO.SAVE')

  		STRUCT_SD_2PNG, CHL, /ADDDATE,/ADD_COLORBAR,/ADD_LAND,/ADD_COAST,OVERWRITE=OVERWRITE,MAP_OUT=MAP_OUT,DIR_OUT=DIR_BROWSE,/ADD_BATHY,BATHY_COLOR=252,SPECIAL_SCALE='MEDIUM'
  		STRUCT_SD_2PNG, SST, /ADDDATE,/ADD_COLORBAR,/ADD_LAND,/ADD_COAST,OVERWRITE=OVERWRITE,MAP_OUT=MAP_OUT,DIR_OUT=DIR_BROWSE,/ADD_BATHY,BATHY_COLOR=252
  		STRUCT_SD_2PNG, PPD, /ADDDATE,/ADD_COLORBAR,/ADD_LAND,/ADD_COAST,OVERWRITE=OVERWRITE,MAP_OUT=MAP_OUT,DIR_OUT=DIR_BROWSE,/ADD_BATHY,BATHY_COLOR=252
  		STRUCT_SD_2PNG, ACHL,/ADDDATE,/ADD_COLORBAR,/ADD_LAND,/ADD_COAST,OVERWRITE=OVERWRITE,MAP_OUT=MAP_OUT,DIR_OUT=DIR_BROWSE,/ADD_BATHY,BATHY_COLOR=252,SPECIAL_SCALE='2',COLORBAR_TITLE='Chlorophyll Anomaly (ratio)',PAL=PALANOM
  		STRUCT_SD_2PNG, ASST,/ADDDATE,/ADD_COLORBAR,/ADD_LAND,/ADD_COAST,OVERWRITE=OVERWRITE,MAP_OUT=MAP_OUT,DIR_OUT=DIR_BROWSE,/ADD_BATHY,BATHY_COLOR=252,SPECIAL_SCALE='6',PAL=PALANOM
  		STRUCT_SD_2PNG, APPD,/ADDDATE,/ADD_COLORBAR,/ADD_LAND,/ADD_COAST,OVERWRITE=OVERWRITE,MAP_OUT=MAP_OUT,DIR_OUT=DIR_BROWSE,/ADD_BATHY,BATHY_COLOR=252,SPECIAL_SCALE='2',COLORBAR_TITLE='PP Anomaly (ratio)',PAL=PALANOM

  		CHL  = FILE_SEARCH(DIR_BROWSE+'!Y_*'+MAP_OUT+'*CHLOR_A*MEAN.PNG')
  		SST  = FILE_SEARCH(DIR_BROWSE+'!Y_*'+MAP_OUT+'*SST*MEAN.PNG')
  		PPD  = FILE_SEARCH(DIR_BROWSE+'!Y_*'+MAP_OUT+'*PPD-OPAL*MEAN.PNG')
  		ACHL = FILE_SEARCH(DIR_BROWSE+'!Y_*'+MAP_OUT+'*CHLOR_A*MEAN-RATIO.PNG')
  		ASST = FILE_SEARCH(DIR_BROWSE+'!Y_*'+MAP_OUT+'*SST*MEAN-DIF.PNG')
  		APPD = FILE_SEARCH(DIR_BROWSE+'!Y_*'+MAP_OUT+'*PPD-OPAL*MEAN-RATIO.PNG')

  		BACKGROUND = 255
  		SPACE = 25
  		ROWS = 4
  		COLS = 3

  		PNGFILE = DIR_COMPS + '!Y-SEA_AQU-'+MAP_OUT+'-CHLOR_A-MEAN-COMPOSITE.PNG'
  		IMAGE_WELD_PAGE,FILES=[CHL],ROWS=ROWS,COLS=COLS,PAL=PAL,PNGFILE=PNGFILE,SPACE=space,PX=px,py=py,BACKGROUND=BACKGROUND,/NOTRIM
  		PNGFILE = DIR_COMPS + '!Y-N4AT-'+MAP_OUT+'-SST-MEAN-COMPOSITE.PNG'
  		IMAGE_WELD_PAGE,FILES=[SST],ROWS=ROWS,COLS=COLS,PAL=PAL,PNGFILE=PNGFILE,SPACE=space,PX=px,py=py,BACKGROUND=BACKGROUND,/NOTRIM
  		PNGFILE = DIR_COMPS + '!Y-'+MAP_OUT+'-PPD-OPAL-MEAN-COMPOSITE.PNG'
  		IMAGE_WELD_PAGE,FILES=[PPD],ROWS=ROWS,COLS=COLS,PAL=PAL,PNGFILE=PNGFILE,SPACE=space,PX=px,py=py,BACKGROUND=BACKGROUND,/NOTRIM
  		PNGFILE = DIR_COMPS + '!Y-SEA_AQU-'+MAP_OUT+'-CHLOR_A-ANOM-COMPOSITE.PNG'
  		IMAGE_WELD_PAGE,FILES=[ACHL],ROWS=ROWS,COLS=COLS,PAL=PALANOM,PNGFILE=PNGFILE,SPACE=space,PX=px,py=py,BACKGROUND=BACKGROUND,/NOTRIM
  		PNGFILE = DIR_COMPS + '!Y-N4AT-'+MAP_OUT+'-SST-ANOM-COMPOSITE.PNG'
  		IMAGE_WELD_PAGE,FILES=[ASST],ROWS=ROWS,COLS=COLS,PAL=PALANOM,PNGFILE=PNGFILE,SPACE=space,PX=px,py=py,BACKGROUND=BACKGROUND,/NOTRIM
  		PNGFILE = DIR_COMPS + '!Y-'+MAP_OUT+'-PPD-OPAL-ANOM-COMPOSITE.PNG'
  		IMAGE_WELD_PAGE,FILES=[APPD],ROWS=ROWS,COLS=COLS,PAL=PALANOM,PNGFILE=PNGFILE,SPACE=space,PX=px,py=py,BACKGROUND=BACKGROUND,/NOTRIM

  		ACHL = [ACHL[1],ACHL(6),ACHL(9)]
  		ASST = [ASST[1],ASST(6),ASST(9)]
  		FILES = [ACHL[0],ASST[0],ACHL[1],ASST[1],ACHL(2),ASST(2)]
  		ROWS = 3
  		COLS = 2
  		PNGFILE = DIR_COMPS + '3Y-SEA_AQU-N4AT-'+MAP_OUT+'-CHLOR_A-SST-ANOM-COMPOSITE.PNG'
  		IMAGE_WELD_PAGE,FILES=FILES,ROWS=ROWS,COLS=COLS,PAL=PALANOM,PNGFILE=PNGFILE,SPACE=space,PX=px,py=py,BACKGROUND=BACKGROUND,/NOTRIM
  		ROWS = 3
  		COLS = 1
  		PNGFILE = DIR_COMPS + '3Y-SEA_AQU-'+MAP_OUT+'-CHLOR_A-ANOM-COMPOSITE.PNG'
  		IMAGE_WELD_PAGE,FILES=ACHL,ROWS=ROWS,COLS=COLS,PAL=PALANOM,PNGFILE=PNGFILE,SPACE=space,PX=px,py=py,BACKGROUND=BACKGROUND,/NOTRIM
  		PNGFILE = DIR_COMPS + '3Y-N4AT-'+MAP_OUT+'-SST-ANOM-COMPOSITE.PNG'
  		IMAGE_WELD_PAGE,FILES=ASST,ROWS=ROWS,COLS=COLS,PAL=PALANOM,PNGFILE=PNGFILE,SPACE=space,PX=px,py=py,BACKGROUND=BACKGROUND,/NOTRIM
    ENDIF

    IF DO_MONTHLY GE 1 THEN BEGIN
;		  Monthly images

  		CHL  = FILE_SEARCH('S:\OC-SEA_AQU-LAC-NEC\STATS\!MONTH*CHLOR_A*MEAN.SAVE') & IF CHL[0] EQ '' THEN CHL = []
  		SST  = FILE_SEARCH('D:\DATASETS\SST-4-NEC\STATS\!MONTH*SST*MEAN.SAVE')     & IF SST[0] EQ '' THEN SST = []
  		PPD  = FILE_SEARCH('T:\PP-N4AT-NEC\stats\!MONTH*N4AT*PPD-OPAL-MEAN.SAVE')  & IF PPD[0] EQ '' THEN PPD = []
  		ACHL = FILE_SEARCH('D:\DATASETS\OC-SEA_AQU-LAC-NEC\ANOM\SAVE\!MONTH*CHLOR_A*MEAN-RATIO.SAVE') & IF ACHL[0] NE '' THEN BEGIN & FC = PARSE_IT(ACHL) & CLABEL = MONTH_NAMES(FC.MONTH_START,/SHORT) & ENDIF ELSE ACHL = []
  		ASST = FILE_SEARCH('T:\SST-4-NEC\ANOM\SAVE\!MONTH*SST*MEAN-DIF.SAVE')                         & IF ASST[0] NE '' THEN BEGIN & FS = PARSE_IT(ASST) & SLABEL = MONTH_NAMES(FS.MONTH_START,/SHORT) & ENDIF ELSE ASST = []
  		APPD = FILE_SEARCH('T:\PP-N4AT-NEC\ANOM\SAVE\!MONTH*N4AT*PPD-OPAL-MEAN-RATIO.SAVE')           & IF APPD[0] NE '' THEN BEGIN & FP = PARSE_IT(APPD) & PLABEL = MONTH_NAMES(FP.MONTH_START,/SHORT) & ENDIF ELSE APPD = []
  ;
  		FOR N=0L, N_ELEMENTS(CHL)-1  DO STRUCT_SD_2PNG, CHL,/ADD_COLORBAR,/ADDDATE,/ADD_LAND,/ADD_COAST,OVERWRITE=OVERWRITE,MAP_OUT=MAP_OUT,DIR_OUT=DIR_BROWSE,/ADD_BATHY, BATHY_COLOR=252,SPECIAL_SCALE='MEDIUM'
  		FOR N=0L, N_ELEMENTS(SST)-1  DO STRUCT_SD_2PNG, SST,/ADDDATE,/ADD_LAND,/ADD_COAST,OVERWRITE=OVERWRITE,MAP_OUT=MAP_OUT,DIR_OUT=DIR_BROWSE,/ADD_BATHY, BATHY_COLOR=252
  		FOR N=0L, N_ELEMENTS(PPD)-1  DO STRUCT_SD_2PNG, PPD,/ADD_COLORBAR,/ADDDATE,/ADD_LAND,/ADD_COAST,OVERWRITE=OVERWRITE,MAP_OUT=MAP_OUT,DIR_OUT=DIR_BROWSE,/ADD_BATHY, BATHY_COLOR=252
  		FOR N=0L, N_ELEMENTS(ACHL)-1 DO STRUCT_SD_2PNG, ACHL(N),/ADD_LAND,/ADD_COAST,OVERWRITE=OVERWRITE,MAP_OUT=MAP_OUT,DIR_OUT=DIR_BROWSE,/ADD_BATHY,BATHY_COLOR=252,SPECIAL_SCALE='4',COLORBAR_TITLE='Chlorophyll Anomaly (ratio)',PAL=PALANOM;,ADD_LABEL=CLABEL(N),/ADD_COLORBAR,
  		FOR N=0L, N_ELEMENTS(ASST)-1 DO STRUCT_SD_2PNG, ASST(N),/ADD_COLORBAR,/ADD_LAND,/ADD_COAST,OVERWRITE=OVERWRITE,MAP_OUT=MAP_OUT,DIR_OUT=DIR_BROWSE,/ADD_BATHY,BATHY_COLOR=252,SPECIAL_SCALE='10',PAL=PALANOM,ADD_LABEL=CLABEL(N)
  		FOR N=0L, N_ELEMENTS(APPD)-1 DO STRUCT_SD_2PNG, APPD(N),/ADD_COLORBAR,/ADD_LAND,/ADD_COAST,OVERWRITE=OVERWRITE,MAP_OUT=MAP_OUT,DIR_OUT=DIR_BROWSE,/ADD_BATHY,BATHY_COLOR=252,SPECIAL_SCALE='4',COLORBAR_TITLE='PP Anomaly (ratio)',PAL=PALANOM,ADD_LABEL=PLABEL(N)

  		CHL  = FILE_SEARCH(DIR_BROWSE+'!MONTH*'+MAP_OUT+'*CHLOR_A*MEAN.PNG')
  		SST  = FILE_SEARCH(DIR_BROWSE+'!MONTH*'+MAP_OUT+'*SST*MEAN.PNG')
  		PPD  = FILE_SEARCH(DIR_BROWSE+'!MONTH*'+MAP_OUT+'*PPD-OPAL*MEAN.PNG')
  		ACHL = FILE_SEARCH(DIR_BROWSE+'!MONTH*'+MAP_OUT+'*CHLOR_A*MEAN-RATIO.PNG')
  		ASST = FILE_SEARCH(DIR_BROWSE+'!MONTH*'+MAP_OUT+'*SST*MEAN-DIF.PNG')
  		APPD = FILE_SEARCH(DIR_BROWSE+'!MONTH*'+MAP_OUT+'*PPD-OPAL*MEAN-RATIO.PNG')

  		BACKGROUND = 255
  		SPACE = 25
  		ROWS = 4
  		COLS = 3

  		PNGFILE = DIR_COMPS + '!MONTH-SEA_AQU-'+MAP_OUT+'-CHLOR_A-MEAN-COMPOSITE.PNG'
  		IF CHL[0] NE '' THEN IMAGE_WELD_PAGE,FILES=[CHL], ROWS=ROWS,COLS=COLS,PAL=PAL,PNGFILE=PNGFILE,SPACE=space,PX=px,py=py,BACKGROUND=BACKGROUND,/NOTRIM
  		PNGFILE = DIR_COMPS + '!MONTH-N4AT-'+MAP_OUT+'-SST-MEAN-COMPOSITE.PNG'
  		IF SST[0] NE '' THEN IMAGE_WELD_PAGE,FILES=[SST], ROWS=ROWS,COLS=COLS,PAL=PAL,PNGFILE=PNGFILE,SPACE=space,PX=px,py=py,BACKGROUND=BACKGROUND,/NOTRIM
  		PNGFILE = DIR_COMPS + '!MONTH-'+MAP_OUT+'-PPD-OPAL-MEAN-COMPOSITE.PNG'
  		IF PPD[0] NE '' THEN IMAGE_WELD_PAGE,FILES=[PPD], ROWS=ROWS,COLS=COLS,PAL=PAL,PNGFILE=PNGFILE,SPACE=space,PX=px,py=py,BACKGROUND=BACKGROUND,/NOTRIM
  		PNGFILE = DIR_COMPS + '!MONTH-SEA_AQU-'+MAP_OUT+'-CHLOR_A-ANOM-COMPOSITE.PNG'
  		IF ACHL[0] NE '' THEN IMAGE_WELD_PAGE,FILES=[ACHL],ROWS=ROWS,COLS=COLS,PAL=PALANOM,PNGFILE=PNGFILE,SPACE=space,PX=px,py=py,BACKGROUND=BACKGROUND,/NOTRIM
  		PNGFILE = DIR_COMPS + '!MONTH-N4AT-'+MAP_OUT+'-SST-ANOM-COMPOSITE.PNG'
  		IF ASST[0] NE '' THEN IMAGE_WELD_PAGE,FILES=[ASST],ROWS=ROWS,COLS=COLS,PAL=PALANOM,PNGFILE=PNGFILE,SPACE=space,PX=px,py=py,BACKGROUND=BACKGROUND,/NOTRIM
  		PNGFILE = DIR_COMPS + '!MONTH-'+MAP_OUT+'-PPD-OPAL-ANOM-COMPOSITE.PNG'
  		IF APPD[0] NE '' THEN IMAGE_WELD_PAGE,FILES=[APPD],ROWS=ROWS,COLS=COLS,PAL=PALANOM,PNGFILE=PNGFILE,SPACE=space,PX=px,py=py,BACKGROUND=BACKGROUND,/NOTRIM

  		CHL = CHL[1:11:2]
  		SST = SST[1:11:2]
  		PNGFILE = DIR_COMPS + '!MONTH-SEA_AQU-N4AT-'+MAP_OUT+'-CHLOR_A-SST-MEAN-COMPOSITE.PNG'
; 		IMAGE_WELD_PAGE,FILES=[CHL,SST],ROWS=ROWS,COLS=COLS,PAL=PAL,PNGFILE=PNGFILE,SPACE=space,PX=px,py=py,BACKGROUND=BACKGROUND,/NOTRIM
		ENDIF
stop
	ENDIF		; DO_COMPOSITES

; *******************************************************
  IF DO_MOVIES GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_MOVIES GE 2

    MAP_OUT = 'NEC'
    PAL = 'PAL_SW3'
    DIR_OUT = DIR_PROJECTS + 'MOVIES\'
    DATE_START = '20080101000000'
    DATE_END   = '20090601235959'
    SOURCE_LABEL = 'NOAA/NMFS!CNarragansett, RI'
    TITLE_FILE_PNG = DIR_OUT+'!ANNUAL-CHL_SST-TITLE_SLIDE.PNG'
;    CHL  = FILE_SEARCH('S:\OC-SEA_AQU-LAC-NEC\TS_IMAGES\SAVE\!D_2008*-SEA_AQU-LAC-NEC-CHLOR_A-INTERP-TS_IMAGES.SAVE') & FA = PARSE_IT(CHL)
;    SST  = FILE_SEARCH('T:\SST-4-NEC\TS_IMAGES\SAVE\!D_200*-N4AT-4-NEC-SST-INTERP-TS_IMAGES.SAVE')                   & FB = PARSE_IT(SST)
;    OK   = WHERE(FA.DATE_START GE DATE_START AND FA.DATE_END LE DATE_END,COUNT) & IF COUNT GE 1 THEN FA=FA[OK]
;    OK   = WHERE(FB.DATE_START GE DATE_START AND FB.DATE_END LE DATE_END,COUNT) & IF COUNT GE 1 THEN FB=FB[OK]
;  ;  PPD  = FILE_SEARCH('T:\PP-N4AT-NEC\SAVE\!D*-SA_N4AT-MLAC-4-NEC-PPD-OPAL.SAVE')
;    STRUCT_SD_2PNG,FA[0].FULLNAME,DIR_OUT=DIR_OUT+'BROWSE\',MAP_OUT='NEC',/ADD_COLORBAR,/ADD_DATEBAR,/ADD_LAND,/ADD_COAST,SPECIAL_SCALE='MEDIUM',/ADD_SOURCE,OVERWRITE=OVERWRITE,SOURCE_LABEL=SOURCE_LABEL,/ADD_BATHY,/BATHY_THICK,BATHY_COLOR=252
;    STRUCT_SD_2PNG,FB[0].FULLNAME,DIR_OUT=DIR_OUT+'BROWSE\',MAP_OUT='NEC',/ADD_COLORBAR,/ADD_DATEBAR,/ADD_LAND,/ADD_COAST,SPECIAL_SCALE='HIGH',/ADD_SOURCE,OVERWRITE=OVERWRITE,SOURCE_LABEL=SOURCE_LABEL,/ADD_BATHY,/BATHY_THICK,BATHY_COLOR=252

    
;    DATA1 = STRUCT_SD_READ('S:\OC-SEA_AQU-LAC-NEC\stats\!ANNUAL-SEA_AQU-LAC-NEC-CHLOR_A-MEAN.SAVE',STRUCT=STRUCT1)
;    DATA2 = STRUCT_SD_READ('T:\SST-4-NEC\stats\!ANNUAL-N4AT-4-NEC-SST-MEAN.SAVE',STRUCT=STRUCT2)
;;
;    IMAGE1=STRUCT_SD_2IMAGE(STRUCT1,/ADD_LAND,/ADD_COAST,SPECIAL_SCALE='',/ADD_BATHY,/BATHY_THICK,BATHY_COLOR=252)
;    IMAGE1 = MAP_ADD_TXT(IMAGE1,0.5, 0.68,   ' Chlorophyll' ,             COLOR=0,charsize=8,CHARTHICK=3,ALIGN=0.5)
;    IMAGE1 = MAP_ADD_TXT(IMAGE1,0.5, 0.50,   ' SeaWiFS/MODIS-Aqua',       COLOR=0,charsize=6.5,CHARTHICK=3,ALIGN=0.5)
;;    IMAGE1 = MAP_ADD_TXT(IMAGE1,0.42,0.3,   ' January 01, 2008 -',       COLOR=0,charsize=6.5,CHARTHICK=3,ALIGN=0.0)
;;    IMAGE1 = MAP_ADD_TXT(IMAGE1,0.38, 0.19,  " Jay O'Reilly, Kimberly ",  COLOR=0,charsize=5.5,CHARTHICK=3,ALIGN=0.0)
;;    IMAGE1 = MAP_ADD_TXT(IMAGE1,0.57,0.10,  ' NOAA/NMFS,',                COLOR=0,charsize=5.5,CHARTHICK=3,ALIGN=0.0)
;;    
;    IMAGE2=STRUCT_SD_2IMAGE(STRUCT2,/ADD_LAND,/ADD_COAST,SPECIAL_SCALE='HIGH',/ADD_BATHY,/BATHY_THICK,BATHY_COLOR=252)         
;    IMAGE2 = MAP_ADD_TXT(IMAGE2,0.5,0.68, ' SST' ,                        COLOR=0,charsize=8,CHARTHICK=3,ALIGN=0.5)
;    IMAGE2 = MAP_ADD_TXT(IMAGE2,0.5,0.50, ' AVHRR/MODIS',                 COLOR=0,charsize=6.5,CHARTHICK=3,ALIGN=0.5)
;    IMAGE2 = MAP_ADD_TXT(IMAGE2,0.44,0.3, '- July 31, 2009',              COLOR=0,charsize=6.5,CHARTHICK=3,ALIGN=1.0)
;    IMAGE2 = MAP_ADD_TXT(IMAGE2,0.59,0.19, ' Hyde & Teresa Ducas',        COLOR=0,charsize=5.5,CHARTHICK=3,ALIGN=1.0)
;    IMAGE2 = MAP_ADD_TXT(IMAGE2,0.46,0.10, ' Narragansett, RI',           COLOR=0,charsize=5.5,CHARTHICK=3,ALIGN=1.0)
;;    
;    WIMAGE = IMAGE_WELD(IMAGE_2TRUE(IMAGE1,PAL='PAL_SW3'),IMAGE_2TRUE(IMAGE2,PAL='PAL_SW3'),BACKGROUND= _background,SPACE=_space,/LANDSCAPE)
;    WRITE_PNG,TITLE_FILE_PNG,WIMAGE,R,G,B  
;        
    FA = FILE_ALL('T:\PROJECTS\ECOAP\MOVIES\BROWSE\!D*SEA_AQU-LAC-NEC*CHLOR_A-INTERP-TS_IMAGES.PNG')
    FB = FILE_ALL('T:\PROJECTS\ECOAP\MOVIES\BROWSE\!D*-N4AT-4-NEC*SST-INTERP-TS_IMAGES.PNG')  
    OK = WHERE(FA.DATE_START GE DATE_START AND FA.DATE_END LE DATE_END,COUNT) & IF COUNT GE 1 THEN FA=FA[OK]
    OK = WHERE(FB.DATE_START GE DATE_START AND FB.DATE_END LE DATE_END,COUNT) & IF COUNT GE 1 THEN FB=FB[OK]
    BLANK=READALL(FA[0].FULLNAME)
    SZ=SIZE(BLANK)
    PX=SZ[1]
    PY=SZ(2)
    BLANK(*,*) = 252
    IF FA[0].PX NE '' AND FA[0].PY NE '' THEN  MAP_TXT = MAP_OUT+'-PXY_'+FA[0].PX+'_'+FA[0].PY ELSE MAP_TXT=MAP_OUT
    FILE_LABEL_C =MAP_TXT+'-CHLOR_A-SST'
    DATE_ALL   = [FA.DATE_START,FB.DATE_START]
    S=SORT(DATE_ALL)
    DATE_ALL = DATE_ALL(S)
    DD='!DD_'+STRMID(FIRST(DATE_ALL),0,8)+'_' +STRMID(LAST(DATE_ALL),0,8)
    UN = UNIQ(DATE_ALL)
    N_IMAGES = NUM2STR(N_ELEMENTS(UN))
    FOR NTH = 0L, N_ELEMENTS(UN)-1L DO BEGIN
      AN = UN[NTH]
      ADATE = DATE_ALL(AN)
      BDATE = STRMID(ADATE,0,8)
      OK1 = WHERE(FA.DATE_START EQ ADATE,COUNT1)
      OK2 = WHERE(FB.DATE_START EQ ADATE,COUNT2)
      PNGFILE=DIR_OUT+'COMBO\!D_'+BDATE+'-'+FILE_LABEL_C+'-'+'TS_IMAGES.PNG'
      FA_PNG=FILE_ALL(PNGFILE)
      IF COUNT1 EQ 1 AND COUNT2 EQ 0 AND FA_PNG.SIZE GT 0 THEN IF FA(OK1).MTIME LT FA_PNG.MTIME AND OVERWRITE EQ 0 THEN CONTINUE
      IF COUNT1 EQ 0 AND COUNT2 EQ 1 AND FA_PNG.SIZE GT 0 THEN IF FA(OK2).MTIME LT FA_PNG.MTIME AND OVERWRITE EQ 0 THEN CONTINUE
      IF COUNT1 EQ 1 AND COUNT2 EQ 1 AND FA_PNG.SIZE GT 0 THEN IF FA(OK1).MTIME LT FA_PNG.MTIME AND FB(OK2).MTIME LT FA_PNG.MTIME AND OVERWRITE EQ 0 THEN CONTINUE
      IF COUNT1 EQ 1 THEN IMAGE1 = READALL(FA(OK1).FULLNAME) ELSE IMAGE1 = BLANK
      IF COUNT2 EQ 1 THEN IMAGE2 = READALL(FB(OK2).FULLNAME) ELSE IMAGE2 = BLANK

      IMAGE1=IMAGE_2TRUE(CONGRID(IMAGE1,512,512),PAL=PAL[0])
      IMAGE2=IMAGE_2TRUE(CONGRID(IMAGE2,512,512),PAL=PAL[0])     
      NEW_RGB = IMAGE_WELD(IMAGE1,IMAGE2,BACKGROUND= _background,SPACE=_space,/LANDSCAPE)
      WRITE_PNG,PNGFILE,NEW_RGB
    ENDFOR ;  FOR NTH = 0L, N_ELEMENTS(UN)-1L DO BEGIN
    
    FILES = FILE_ALL('T:\PROJECTS\ECOAP\MOVIES\COMBO\!D_*-NEC*-CHLOR_A-SST-TS_IMAGES.PNG')
   ; FILES = FILE_ALL('S:\OC-SEA_AQU-LAC-NEC\ts_images\browse\!D_*-SEA_AQU-LAC-NEC-CHLOR_A-INTERP-TS_IMAGES.PNG')
    OK= WHERE(FILES.DATE_START GE DATE_START AND FILES.DATE_END LE DATE_END,COUNT)
    AVI_FILE = DIR_OUT + 'DD_'+STRMID(DATE_START,0,8)+'-'+STRMID(DATE_END,0,8)+'-LIS-PXY_880_360-CHLOR_A-SST.AVI'
    AVI_FILE = DIR_OUT + 'DD_'+STRMID(DATE_START,0,8)+'-'+STRMID(DATE_END,0,8)+'-NEC-PXY_1024_1024-CHLOR_A-SST.AVI'

    

    MAKE_AVI,FILES=FILES[OK].FULLNAME,DIR_OUT=DIR_OUT,PAL=PAL,BITS=BITS,QUALITY=QUALITY,FPS=10,MAP='NEC',YOFFSET=YOFFSET,$
              TITLE_FILE_PNG=TITLE_FILE_PNG,/TITLE_SLIDE,N_TITLE=15,TYPE=TYPE,AVI_FILE=AVI_FILE

STOP

  ENDIF ; DO_MOVIES


;	*******************************************************
	IF DO_WS_BLOOM GE 1 THEN BEGIN
;	*******************************************************
		OVERWRITE = DO_WS_BLOOM GE 2


		CHL  = IDL_RESTORE('S:\OC-SEA_AQU-LAC-NEC\TS_SUBAREAS\save\!D-MASK_SUBAREA-NEC-PXY_1024_1024-GFISH4-SEA_AQU-CHLOR_A.SAVE')
		PPD  = IDL_RESTORE('T:\PP-N4AT-NEC\TS_SUBAREAS\save\!D-MASK_SUBAREA-NEC-PXY_1024_1024-GFISH4-S_N4AT-PPD-VGPM.SAVE')

	;	DO TABLE 3 - BLOOM ANOMALY QUANTIFICATION (INTIATION, TERMINATION, DURATION, MAX, MEAN)

		FPC = PARSE_IT(CHL.FIRST_NAME) & ACH = STRUCT_MERGE(CHL,FPC) & ACH = STRUCT_REMOVE(ACH,'FIRST_NAME$2')
		FPP = PARSE_IT(PPD.FIRST_NAME) & APP = STRUCT_MERGE(PPD,FPP) & APP = STRUCT_REMOVE(APP,'FIRST_NAME$2')
		TAGNAMES = ['DATE_START','DATE_END','SUBAREA_CODE','SUBAREA_NAME']

		STRUCT = STRUCT_JOIN(ACH, APP, TAGNAMES=TAGNAMES)

		CODES = [1,3,4,2]
		REGIONS = ['MAB','SNE','GB','GOM']
		SEASONS = ['WSP','SUM','FAL','TOT']				; WIN-SP=JAN,FEB,MAR,APR,MAY  SUM=JUN,JUL,AUG  FALL=SEP,OCT,NOV,DEC  TOT = ALL MONTHS
		YEARS = ['1998','1999','2000','2001','2002','2003','2004','2005','2006','2007','2008']
		DATES = CREATE_DATE('19971201','20090201')
		NEW = CREATE_STRUCT('YEAR','','SEASON','','SUBAREA_CODE','','SUBAREA_NAME','',$
										    'INITIATION',0L, 'DURATION',0L, 'TERMINATION',0L, 'NDAYS',0L,$
												'CHL_INT_DATE',0L,'CHL_DURATION',0L,'CHL_END_DATE',0L,'CHL_NDAYS',0L,'CHL_NAVG',0L,'CHL_MIN',0.0,'CHL_MAX',0.0,'CHL_MEAN',0.0,$
											  'PROD_INT_DATE',0L,'PROD_DURATION',0L,'PROD_END_DATE',0L,'PROD_NDAYS',0L,'PROD_NAVG',0L,'PROD_MIN',0.0,'PROD_MAX',0.0,'PROD_MEAN',0.0)
		NEW = STRUCT_2MISSINGS(NEW)
		NEW = REPLICATE(NEW, N_ELEMENTS(CODES)*N_ELEMENTS(SEASONS)*N_ELEMENTS(YEARS))
		CT = 0
		FOR CTH = 0L, N_ELEMENTS(CODES)-1 DO BEGIN
			ACODE = CODES(CTH)
			OK = WHERE(STRUCT.SUBAREA_CODE EQ ACODE AND STRUCT.MEAN NE MISSINGS(0.0))
			SUBAREA = STRUCT(OK[0]).SUBAREA_NAME
			CHL = STRUCT[OK]
			CSTATS = STATS(CHL.MEAN,/TRANSFORM)
			CLIMIT = CSTATS.GMEAN
			CY = INTERP_XTEND(DATE_2JD(CHL[OK].DATE_START), CHL.MEAN,  DATE_2JD(DATES))
			CPY = FLTARR(N_ELEMENTS(CY.Y))
			CORP = STRARR(N_ELEMENTS(CY.Y))
			ANOM = STRARR(N_ELEMENTS(CY.Y))
			OK = WHERE(STRUCT.SUBAREA_CODE EQ ACODE AND STRUCT.MEAN$2 NE MISSINGS(0.0))
			PROD = STRUCT[OK]
			PSTATS = STATS(PROD.MEAN,/TRANSFORM)
			PLIMIT = PSTATS.GMEAN
			PY = INTERP_XTEND(DATE_2JD(PROD[OK].DATE_START), PROD.MEAN$2,  DATE_2JD(DATES))
			CPY = FLTARR(N_ELEMENTS(CY.Y))
			CORP = STRARR(N_ELEMENTS(CY.Y))
			ANOM = STRARR(N_ELEMENTS(CY.Y))
			FOR NTH = 0L, N_ELEMENTS(CPY)-1 DO BEGIN
				CPY[NTH] = MAX([CY[NTH].Y,PY[NTH].Y])
				IF CPY[NTH]  EQ CY[NTH].Y THEN CORP[NTH] = 'CHL' ELSE CORP[NTH] = 'PPD'
				IF CORP[NTH] EQ 'CHL' AND CPY[NTH] GE 2 THEN ANOM[NTH] = 'ANOM'
				IF CORP[NTH] EQ 'PPD' AND CPY[NTH] GE 1.75 THEN ANOM[NTH] = 'ANOM'
			ENDFOR
			FOR STH = 0L, N_ELEMENTS(SEASONS)-1 DO BEGIN
				ASEA = SEASONS(STH)
				FOR YTH = 0L, N_ELEMENTS(YEARS)-1 DO BEGIN
					AYEAR = YEARS(YTH)
					IF ASEA EQ 'WSP' THEN BEGIN & SDATE = DATE_2JD(AYEAR + '0101') & EDATE = DATE_2JD(AYEAR + '0531') & ENDIF
					IF ASEA EQ 'SUM' THEN BEGIN & SDATE = DATE_2JD(AYEAR + '0601') & EDATE = DATE_2JD(AYEAR + '0831') & ENDIF
					IF ASEA EQ 'FAL' THEN BEGIN & SDATE = DATE_2JD(AYEAR + '0901') & EDATE = DATE_2JD(AYEAR + '1231') & ENDIF
					IF ASEA EQ 'TOT' THEN BEGIN & SDATE = DATE_2JD(AYEAR + '0101') & EDATE = DATE_2JD(AYEAR + '1231') & ENDIF

					NEW(CT).YEAR = AYEAR
					NEW(CT).SEASON = ASEA
					NEW(CT).SUBAREA_CODE = ACODE
					NEW(CT).SUBAREA_NAME = SUBAREA

					OK = WHERE(CY.X GE SDATE AND CY.X LE EDATE,COUNT)
					NEW(CT).CHL_MIN = MIN(CY[OK].Y)
					NEW(CT).CHL_MAX = MAX(CY[OK].Y)
					NEW(CT).CHL_MEAN = MEAN(CY[OK].Y)
					OK = WHERE(PY.X GE SDATE AND PY.X LE EDATE,COUNT)
					NEW(CT).PROD_MIN = MIN(PY[OK].Y)
					NEW(CT).PROD_MAX = MAX(PY[OK].Y)
					NEW(CT).PROD_MEAN = MEAN(PY[OK].Y)

					OK = WHERE(CY.Y GE CLIMIT AND CY.X GE SDATE AND CY.X LE EDATE,COUNT)
					IF COUNT GE 1 THEN NEW(CT).CHL_INT_DATE = JD_2DOY(MIN(CY[OK].X)) ELSE NEW(CT).CHL_INT_DATE = 0
					IF COUNT GE 1 THEN NEW(CT).CHL_END_DATE = JD_2DOY(MAX(CY[OK].X)) ELSE NEW(CT).CHL_END_DATE = 0
					IF COUNT GE 1 THEN NEW(CT).CHL_DURATION = NEW(CT).CHL_END_DATE - NEW(CT).CHL_INT_DATE + 1 ELSE NEW(CT).CHL_DURATION = 0
					NEW(CT).CHL_NDAYS = COUNT
					OK = WHERE(CY.Y GE 1 AND CY.X GE SDATE AND CY.X LE EDATE,COUNT)
					NEW(CT).CHL_NAVG = COUNT

					OK = WHERE(PY.Y GE PLIMIT AND PY.X GE SDATE AND PY.X LE EDATE,COUNT)
					IF COUNT GE 1 THEN NEW(CT).PROD_INT_DATE = JD_2DOY(MIN(PY[OK].X)) ELSE NEW(CT).PROD_INT_DATE = 0
					IF COUNT GE 1 THEN NEW(CT).PROD_END_DATE = JD_2DOY(MAX(PY[OK].X)) ELSE NEW(CT).PROD_END_DATE = 0
					IF COUNT GE 1 THEN NEW(CT).PROD_DURATION = NEW(CT).PROD_END_DATE - NEW(CT).PROD_INT_DATE + 1 ELSE NEW(CT).PROD_DURATION = 0
					NEW(CT).PROD_NDAYS = COUNT
					OK = WHERE(PY.Y GE 1 AND PY.X GE SDATE AND PY.X LE EDATE,COUNT)
					NEW(CT).PROD_NAVG = COUNT

					OK = WHERE(ANOM EQ 'ANOM' AND PY.X GE SDATE AND PY.X LE EDATE,COUNT)
					IF COUNT GE 1 THEN NEW(CT).INITIATION = JD_2DOY(MIN(PY[OK].X)) ELSE NEW(CT).INITIATION = 0
					IF COUNT GE 1 THEN NEW(CT).TERMINATION = JD_2DOY(MAX(PY[OK].X)) ELSE NEW(CT).TERMINATION = 0
					IF COUNT GE 1 THEN NEW(CT).DURATION = NEW(CT).TERMINATION - NEW(CT).INITIATION + 1 ELSE NEW(CT).DURATION = 0
					NEW(CT).NDAYS = COUNT

					CT = CT + 1
				ENDFOR
			ENDFOR
		ENDFOR
STOP
;		SAVE, FILENAME = 'D:\PROJECTS\MASS_BAY\DOC\Manuscripts\ManuscriptIII\RAW_TABLES\TABLE3_3.SAVE',NEW,/COMPRESS
;		STRUCT_2CSV, 'D:\PROJECTS\MASS_BAY\DOC\Manuscripts\ManuscriptIII\RAW_TABLES\TABLE3_3.CSV',NEW


	ENDIF	;	DO_WS_BLOOM

; *******************************************************
  IF DO_NEW_PROD GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_NEW_PROD GE 2
    
    LME   = IDL_RESTORE(DIR_PROJECTS + 'DATA/!D-MASK_SUBAREA-NEC-PXY_1024_1024-ESTUARY_SHELF_LME-SA_N4AT-PPD-OPAL.SAVE')
    GFISH = IDL_RESTORE(DIR_PROJECTS + 'DATA/!D-MASK_SUBAREA-NEC-PXY_1024_1024-GFISH4-S_N4AT-PPD-OPAL.SAVE')
    
    LME.SUBAREA_CODE = 0
    LME.SUBAREA_NAME = 'Northeast Shelf LME'
    DATA = STRUCT_CONCAT(LME,GFISH)
    FP = PARSE_IT(DATA.FIRST_NAME)
    DATA = STRUCT_MERGE(DATA,FP,STRUCT_2MISSINGS(REPLICATE(CREATE_STRUCT('NICKNAME','','PERCENT_LG',0.0,'PPD_LG',0.0),N_ELEMENTS(DATA))))
    OK = WHERE(DATA.DATE_START GE '199801010000' AND DATA.DATE_START LE '200812312359') & DATA = DATA[OK]
    DATA = STRUCT_RENAME(STRUCT_COPY(DATA,TAGNAMES=['PERIOD','DATE_START','YEAR_START','MONTH_START','SUBAREA_CODE','SUBAREA_NAME','NICKNAME','N_SUBAREA','N','MIN','MAX','MED','MEAN','PERCENT_LG','PPD_LG']),['DATE_START','YEAR_START','MONTH_START','N','MIN','MAX','MED','MEAN'],['DATE','YEAR','MONTH','N_PPD','MIN_PPD','MAX_PPD','MED_PPD','MEAN_PPD'])
    DATA = DATA[SORT(NUM2STR(DATA.SUBAREA_CODE)+DATA.DATE)]    
    FOR NTH = 0L, N_ELEMENTS(DATA)-1 DO BEGIN
      CASE DATA[NTH].SUBAREA_NAME OF
        'Northeast Shelf LME':    DATA[NTH].NICKNAME = 'NE_SHELF
        'Middle Atlantic Bight':  DATA[NTH].NICKNAME = 'MAB'
        'Southern New England':   DATA[NTH].NICKNAME = 'SNE'
        'Georges Bank':           DATA[NTH].NICKNAME = 'GB'
        'Gulf of Maine':          DATA[NTH].NICKNAME = 'GOM'
      ENDCASE  
      DATA[NTH].PERCENT_LG = PERCENT_NET_PRODUCTION(MONTH=DATA[NTH].MONTH,SUBAREA=DATA[NTH].NICKNAME)
    ENDFOR
    DATA.PPD_LG = DATA.MEAN_PPD * DATA.PERCENT_LG 
    
    NAMES = ['NE_SHELF','MAB','SNE','GB','GOM']
    YEARS = ['1998','1999','2000','2001','2002','2003','2004','2005','2006','2007','2008']
    PPD = REPLICATE(STRUCT_2MISSINGS(CREATE_STRUCT('SUBAREA_NAME','','NICKNAME','','YEAR','','PPD',0.0,'PPD_LG',0.0,'PERCENT_LG',0.0)),N_ELEMENTS(NAMES)*N_ELEMENTS(YEARS))
    COUNTER = 0
    FOR NTH = 0L, N_ELEMENTS(NAMES)-1 DO BEGIN
      FOR YTH = 0L, N_ELEMENTS(YEARS)-1 DO BEGIN
        RANGE = CREATE_DATE(YEARS(YTH)+'0101',YEARS(YTH)+'1231')
        OK = WHERE(DATA.NICKNAME EQ NAMES[NTH] AND DATA.YEAR EQ YEARS(YTH))              
        PPD(COUNTER).SUBAREA_NAME = DATA(OK[0]).SUBAREA_NAME
        PPD(COUNTER).NICKNAME     = DATA(OK[0]).NICKNAME
        PPD(COUNTER).YEAR         = DATA(OK[0]).YEAR
        PPD(COUNTER).PPD          = TOTAL(DATA[OK].MEAN_PPD)
        PPD(COUNTER).PPD_LG       = TOTAL(DATA[OK].PPD_LG)
        PPD(COUNTER).PERCENT_LG   = PPD(COUNTER).PPD_LG/PPD(COUNTER).PPD
        COUNTER = COUNTER + 1
      ENDFOR
    ENDFOR  
    SAVE, FILENAME = DIR_PROJECTS + 'NEWPROD\DATA\1998_2008_ESTIMATES_OF_NEW_PRODUCTION_FROM_MARMAP.SAVE', PPD,/COMPRESS 
    SAVE_2CSV,DIR_PROJECTS + 'NEWPROD\DATA\1998_2008_ESTIMATES_OF_NEW_PRODUCTION_FROM_MARMAP.SAVE'
  ENDIF ; DO_NEW_PROD  
  
; *******************************************************
  IF DO_NEW_PROD_CAR GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_NEW_PROD_CAR GE 2
    
    LME   = IDL_RESTORE(DIR_PROJECTS + 'DATA/!D-MASK_SUBAREA-NEC-PXY_1024_1024-ESTUARY_SHELF_LME-SA_N4AT-PPD-OPAL.SAVE')
    GFISH = IDL_RESTORE(DIR_PROJECTS + 'DATA/!D-MASK_SUBAREA-NEC-PXY_1024_1024-GFISH4-S_N4AT-PPD-OPAL.SAVE')
    
    LME.SUBAREA_CODE = 0
    LME.SUBAREA_NAME = 'Northeast Shelf LME'
    DATA = STRUCT_CONCAT(LME,GFISH)
    FP = PARSE_IT(DATA.FIRST_NAME)
    DATA = STRUCT_MERGE(DATA,FP,STRUCT_2MISSINGS(REPLICATE(CREATE_STRUCT('NICKNAME','','PERCENT_LG',0.0,'PPD_LG',0.0),N_ELEMENTS(DATA))))
    OK = WHERE(DATA.DATE_START GE '199801010000' AND DATA.DATE_START LE '200812312359') & DATA = DATA[OK]
    DATA = STRUCT_RENAME(STRUCT_COPY(DATA,TAGNAMES=['PERIOD','DATE_START','YEAR_START','MONTH_START','SUBAREA_CODE','SUBAREA_NAME','NICKNAME','N_SUBAREA','N','MIN','MAX','MED','MEAN','PERCENT_LG','PPD_LG']),['DATE_START','YEAR_START','MONTH_START','N','MIN','MAX','MED','MEAN'],['DATE','YEAR','MONTH','N_PPD','MIN_PPD','MAX_PPD','MED_PPD','MEAN_PPD'])
    DATA = DATA[SORT(NUM2STR(DATA.SUBAREA_CODE)+DATA.DATE)]    
    FOR NTH = 0L, N_ELEMENTS(DATA)-1 DO BEGIN
      CASE DATA[NTH].SUBAREA_NAME OF
        'Northeast Shelf LME':    DATA[NTH].NICKNAME = 'NE_SHELF
        'Middle Atlantic Bight':  DATA[NTH].NICKNAME = 'MAB'
        'Southern New England':   DATA[NTH].NICKNAME = 'SNE'
        'Georges Bank':           DATA[NTH].NICKNAME = 'GB'
        'Gulf of Maine':          DATA[NTH].NICKNAME = 'GOM'
      ENDCASE  
      DATA[NTH].PERCENT_LG = PERCENT_NET_PRODUCTION(MONTH=DATA[NTH].MONTH,SUBAREA=DATA[NTH].NICKNAME,/CARBON)
    ENDFOR
    DATA.PPD_LG = DATA.MEAN_PPD * DATA.PERCENT_LG 
    
    NAMES = ['NE_SHELF','MAB','SNE','GB','GOM']
    YEARS = ['1998','1999','2000','2001','2002','2003','2004','2005','2006','2007','2008']
    PPD = REPLICATE(STRUCT_2MISSINGS(CREATE_STRUCT('SUBAREA_NAME','','NICKNAME','','YEAR','','PPD',0.0,'PPD_LG',0.0,'PERCENT_LG',0.0)),N_ELEMENTS(NAMES)*N_ELEMENTS(YEARS))
    COUNTER = 0
    FOR NTH = 0L, N_ELEMENTS(NAMES)-1 DO BEGIN
      FOR YTH = 0L, N_ELEMENTS(YEARS)-1 DO BEGIN
        RANGE = CREATE_DATE(YEARS(YTH)+'0101',YEARS(YTH)+'1231')
        OK = WHERE(DATA.NICKNAME EQ NAMES[NTH] AND DATA.YEAR EQ YEARS(YTH))              
        PPD(COUNTER).SUBAREA_NAME = DATA(OK[0]).SUBAREA_NAME
        PPD(COUNTER).NICKNAME     = DATA(OK[0]).NICKNAME
        PPD(COUNTER).YEAR         = DATA(OK[0]).YEAR
        PPD(COUNTER).PPD          = TOTAL(DATA[OK].MEAN_PPD)
        PPD(COUNTER).PPD_LG       = TOTAL(DATA[OK].PPD_LG)
        PPD(COUNTER).PERCENT_LG   = PPD(COUNTER).PPD_LG/PPD(COUNTER).PPD
        COUNTER = COUNTER + 1
      ENDFOR
    ENDFOR  
    SAVE, FILENAME = DIR_PROJECTS + 'NEWPROD\DATA\1998_2008_ESTIMATES_OF_NEW_PRODUCTION_FROM_LEHMANN_ROMS_MODEL_PHYTO_CARBON.SAVE', PPD,/COMPRESS 
    SAVE_2CSV,DIR_PROJECTS + 'NEWPROD\DATA\1998_2008_ESTIMATES_OF_NEW_PRODUCTION_FROM_LEHMANN_ROMS_MODEL_PHYTO_CARBON.SAVE'
  ENDIF ; DO_NEW_PROD_CAR
  
; *******************************************************
  IF DO_NET_CHL GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_NET_CHL GE 2
    
    LME   = IDL_RESTORE(DIR_PROJECTS + 'DATA/!D-MASK_SUBAREA-NEC-PXY_1024_1024-ESTUARY_SHELF_LME-SEA_AQU-CHLOR_A.SAVE')
    GFISH = IDL_RESTORE(DIR_PROJECTS + 'DATA/!D-MASK_SUBAREA-NEC-PXY_1024_1024-GFISH4-SEA_AQU-CHLOR_A.SAVE')
    
    LME.SUBAREA_CODE = 0
    LME.SUBAREA_NAME = 'Northeast Shelf LME'
    DATA = STRUCT_CONCAT(LME,GFISH)
    FP = PARSE_IT(DATA.FIRST_NAME)
    DATA = STRUCT_MERGE(DATA,FP,STRUCT_2MISSINGS(REPLICATE(CREATE_STRUCT('NICKNAME','','PERCENT_NET',0.0,'NET_CHL',0.0),N_ELEMENTS(DATA))))
    OK = WHERE(DATA.DATE_START GE '199801010000' AND DATA.DATE_START LE '200812312359') & DATA = DATA[OK]
    DATA = STRUCT_RENAME(STRUCT_COPY(DATA,TAGNAMES=['PERIOD','DATE_START','YEAR_START','MONTH_START','SUBAREA_CODE','SUBAREA_NAME','NICKNAME','N_SUBAREA','N','MIN','MAX','MED','MEAN','PERCENT_NET','NET_CHL']),['DATE_START','YEAR_START','MONTH_START','N','MIN','MAX','MED','MEAN'],['DATE','YEAR','MONTH','N_CHL','MIN_CHL','MAX_CHL','MED_CHL','MEAN_CHL'])
    DATA = DATA[SORT(NUM2STR(DATA.SUBAREA_CODE)+DATA.DATE)]    
    FOR NTH = 0L, N_ELEMENTS(DATA)-1 DO BEGIN
      CASE DATA[NTH].SUBAREA_NAME OF
        'Northeast Shelf LME':    DATA[NTH].NICKNAME = 'NE_SHELF
        'Middle Atlantic Bight':  DATA[NTH].NICKNAME = 'MAB'
        'Southern New England':   DATA[NTH].NICKNAME = 'SNE'
        'Georges Bank':           DATA[NTH].NICKNAME = 'GB'
        'Gulf of Maine':          DATA[NTH].NICKNAME = 'GOM'
      ENDCASE  
      DATA[NTH].PERCENT_NET = PERCENT_NET_CHLOROPHYLL(MONTH=DATA[NTH].MONTH,SUBAREA=DATA[NTH].NICKNAME)
    ENDFOR
    DATA.NET_CHL = DATA.MEAN_CHL * DATA.PERCENT_NET 
    
    NAMES = ['NE_SHELF','MAB','SNE','GB','GOM']
    YEARS = ['1998','1999','2000','2001','2002','2003','2004','2005','2006','2007','2008']
    CHL = REPLICATE(STRUCT_2MISSINGS(CREATE_STRUCT('SUBAREA_NAME','','NICKNAME','','YEAR','','N_MISSING',0L,'MEAN_CHL',0.0,'MEAN_NET_CHL',0.0,'INTERP_SUM_CHL',0.0,'INTERP_SUM_NET_CHL',0.0,'INTERP_MEAN_CHL',0.0,'INTERP_MEAN_NET_CHL',0.0)),N_ELEMENTS(NAMES)*N_ELEMENTS(YEARS))
    COUNTER = 0
    FOR NTH = 0L, N_ELEMENTS(NAMES)-1 DO BEGIN
      FOR YTH = 0L, N_ELEMENTS(YEARS)-1 DO BEGIN
        RANGE = CREATE_DATE(YEARS(YTH)+'0101',YEARS(YTH)+'1231')
        OK = WHERE(DATA.NICKNAME EQ NAMES[NTH] AND DATA.YEAR EQ YEARS(YTH) AND DATA.MEAN_CHL NE MISSINGS(0.0),COUNT)                      
        ITM = INTERP_XTEND(DATE_2JD(DATA[OK].DATE),DATA[OK].MEAN_CHL,DATE_2JD(RANGE))
        ITN = INTERP_XTEND(DATE_2JD(DATA[OK].DATE),DATA[OK].NET_CHL, DATE_2JD(RANGE))                
        CHL(COUNTER).SUBAREA_NAME        = DATA(OK[0]).SUBAREA_NAME
        CHL(COUNTER).NICKNAME            = DATA(OK[0]).NICKNAME
        CHL(COUNTER).YEAR                = DATA(OK[0]).YEAR
        CHL(COUNTER).N_MISSING           = N_ELEMENTS(RANGE) - COUNT
        CHL(COUNTER).INTERP_SUM_CHL      = TOTAL(ITM.Y)        
        CHL(COUNTER).INTERP_SUM_NET_CHL  = TOTAL(ITN.Y)
        CHL(COUNTER).INTERP_MEAN_CHL     = MEAN(ITM.Y)
        CHL(COUNTER).INTERP_MEAN_NET_CHL = MEAN(ITN.Y)
        CHL(COUNTER).MEAN_CHL            = MEAN(DATA[OK].MEAN_CHL)
        CHL(COUNTER).MEAN_NET_CHL        = MEAN(DATA[OK].NET_CHL)
        COUNTER = COUNTER + 1
      ENDFOR
    ENDFOR  
    SAVE, FILENAME = DIR_PROJECTS + 'NEWPROD\DATA\1998_2008_ESTIMATES_OF_NETPHYTOPLANKTON_CHLOROPHYLL_FROM_MARMAP.SAVE', CHL,/COMPRESS 
    SAVE_2CSV,DIR_PROJECTS + 'NEWPROD\DATA\1998_2008_ESTIMATES_OF_NETPHYTOPLANKTON_CHLOROPHYLL_FROM_MARMAP.SAVE'  
  ENDIF ; DO_NET_CHL  
    
; *******************************************************
  IF DO_PHYTO_CARBON GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_PHYTO_CARBON GE 2
    
    DIR_CARBON       = DIR_PROJECTS + 'PHYTO_CARBON\' 
    DIR_NETCDF       = DIR_CARBON   + 'RAW\NETCDF\'
    DIR_DATA         = DIR_CARBON   + 'RAW\SAVE\'
    DIR_SAVE         = DIR_CARBON   + 'SAVE\'
    DIR_PER          = DIR_CARBON   + 'PERCENT\'
    DIR_STATS        = DIR_CARBON   + 'STATS\'
    DIR_BROWSE       = DIR_CARBON   + 'BROWSE\'
    DIR_PER_BROWSE   = DIR_CARBON   + 'PERCENT_BROWSE\'
    DIR_STATS_BROWSE = DIR_CARBON   + 'STATS_BROWSE\'
    DIR_TS_SUBAREAS  = DIR_CARBON   + 'TS_SUBAREAS\'
    
    DO_NETCDF      = 0
    DO_MAKE_SAVES  = 0
    DO_MAKE_PNGS   = 0
    DO_MAKE_STATS  = 0
    DO_STAT_PNGS   = 0
    DO_SUBAREAS    = 1
    
;    right now only surface data, but should the data be integrated?        
;    calculate percent large
;    remap to NEC
;    MONTH means
;    ts_subareas
;    compare lg/sm ratios to MARMAP
;    estimate new prod
; 
    
    
    NETCDF   = FILE_SEARCH(DIR_NETCDF + '*.nc')
    PRODS = ['ocean_time','lat_rho','lon_rho','mask_rho','chlorophyll1','phyto1','phytoC1','chlorophyll2','phyto2','phytoC2','temp','NO3','NH4','zooplankton','zooplanktonC']

;  Convert NETCDF files to IDL save's
    FOR NTH = 0L, N_ELEMENTS(NETCDF)-1 DO BEGIN
      IF NETCDF[NTH] EQ '' OR DO_NETCDF EQ 0 THEN CONTINUE
      FOR PTH = 0L, N_ELEMENTS(PRODS)-1 DO BEGIN
        APROD = PRODS(PTH)       
        DATA = READ_NETCDF_2STRUCT(NETCDF[NTH], PRODUCTS=APROD,ERROR=error, ERR_MSG=err_msg)
        IF APROD EQ 'ocean_time' THEN BEGIN
          DATES = STRMID(JD_2DATE(SECONDS1858_2JD(DATA.SD.OCEAN_TIME.IMAGE)),0,8)
          SAVEFILES = DIR_DATA + '!3D_' + DATES + '-ROMS_LEHMANN-GOMMAB.SAVE'        
          IF TOTAL(FILE_TEST(SAVEFILES)) EQ FLOAT(N_ELEMENTS(SAVEFILES)) AND OVERWRITE EQ 0 THEN GOTO, SKIP
          STRUCT = DATA.SD
        ENDIF ELSE STRUCT = CREATE_STRUCT(STRUCT,DATA.SD)        
      ENDFOR  
      FOR DTH = 0L, N_ELEMENTS(DATES)-1 DO BEGIN
        ADATE = DATES(DTH)
        SAVEFILE = SAVEFILES(DTH)     
        TAGS = TAG_NAMES(STRUCT)   
        FOR PTH = 0L, N_ELEMENTS(PRODS)-1 DO BEGIN
          APROD = STRUPCASE(PRODS(PTH))
          ASTRUCT = STRUCT_REMOVE(STRUCT.(PTH),'IMAGE')          
          IF APROD EQ 'OCEAN_TIME' THEN IMG = JD_2DATE(SECONDS1858_2JD(STRUCT.(PTH).IMAGE(DTH))) 
          IF APROD EQ 'LAT_RHO' OR APROD EQ 'LON_RHO' OR APROD EQ 'MASK_RHO' THEN IMG = STRUCT.(PTH).IMAGE 
          IF APROD NE 'OCEAN_TIME' AND APROD NE 'LAT_RHO' AND APROD NE 'LON_RHO' AND APROD NE 'MASK_RHO' THEN IMG = STRUCT.(PTH).IMAGE(*,*,*,DTH)          
          ASTRUCT = CREATE_STRUCT(ASTRUCT,'IMAGE',IMG)
          IF PTH EQ 0 THEN DATA_STRUCT = CREATE_STRUCT(TAGS(PTH),ASTRUCT) ELSE DATA_STRUCT = CREATE_STRUCT(DATA_STRUCT,TAGS(PTH),ASTRUCT)
        ENDFOR             
      SAVE, FILENAME=SAVEFILE,DATA_STRUCT
      ENDFOR
      SKIP:
    ENDFOR
    
    IF DO_MAKE_SAVES EQ 1 THEN BEGIN
      OVERWRITE = DO_MAKE_SAVES GE 2
      FILES = FILE_SEARCH(DIR_DATA + '!3D_*')
      FOR FTH = 0L, N_ELEMENTS(FILES)-1 DO BEGIN
        DEPTHS = ['35']
        FP = PARSE_IT(FILES(FTH),/ALL)
        DATA = IDL_RESTORE(FP.FULLNAME)
        FOR NTH = 0L, N_ELEMENTS(DEPTHS)-1 DO BEGIN
          PHYTOC_LG = DATA.PHYTOC1.IMAGE(*,*,35)        
          PHYTON_LG = DATA.PHYTO1.IMAGE(*,*,35)
          CHLOR_LG  = DATA.CHLOROPHYLL1.IMAGE(*,*,35)
          PHYTOC_SM = DATA.PHYTOC2.IMAGE(*,*,35)
          PHYTON_SM = DATA.PHYTO2.IMAGE(*,*,35)
          CHLOR_SM  = DATA.CHLOROPHYLL2.IMAGE(*,*,35)
          
          OK_C = WHERE(PHYTOC_LG GT 0.0 AND PHYTOC_SM GT 0.0,COUNT_C)
          OK_N = WHERE(PHYTON_LG GT 0.0 AND PHYTON_SM GT 0.0,COUNT_N)
          OK_CHL = WHERE(CHLOR_LG GT 0.0 AND CHLOR_SM GT 0.0,COUNT_CHL)
          
          PHYTOC = PHYTOC_LG & PHYTOC(*,*) = MISSINGS(0.0) & PHYTOC(OK_C)  = PHYTOC_LG(OK_C)/(PHYTOC_LG(OK_C)  + PHYTOC_SM(OK_C))
          PHYTON = PHYTON_LG & PHYTON(*,*) = MISSINGS(0.0) & PHYTON(OK_N)  = PHYTON_LG(OK_N)/(PHYTON_LG(OK_N)  + PHYTON_SM(OK_N))
          CHLOR  = CHLOR_LG  & CHLOR(*,*)  = MISSINGS(0.0) & CHLOR(OK_CHL) = CHLOR_LG(OK_CHL)/(CHLOR_LG(OK_CHL)+ CHLOR_SM(OK_CHL))          
          
          PHYTOC_LG = MAP_REMAP(PHYTOC_LG,MAP_IN='LONLAT',MAP_OUT='NEC',CONTROL_LONS=DATA.LON_RHO.IMAGE,CONTROL_LATS=DATA.LAT_RHO.IMAGE,PX_OUT=1024,PY_OUT=1024)
          PHYTON_LG = MAP_REMAP(PHYTON_LG,MAP_IN='LONLAT',MAP_OUT='NEC',CONTROL_LONS=DATA.LON_RHO.IMAGE,CONTROL_LATS=DATA.LAT_RHO.IMAGE,PX_OUT=1024,PY_OUT=1024)
          CHLOR_LG  = MAP_REMAP(CHLOR_LG,MAP_IN='LONLAT',MAP_OUT='NEC',CONTROL_LONS=DATA.LON_RHO.IMAGE,CONTROL_LATS=DATA.LAT_RHO.IMAGE,PX_OUT=1024,PY_OUT=1024)
          PHYTOC_SM = MAP_REMAP(PHYTOC_SM,MAP_IN='LONLAT',MAP_OUT='NEC',CONTROL_LONS=DATA.LON_RHO.IMAGE,CONTROL_LATS=DATA.LAT_RHO.IMAGE,PX_OUT=1024,PY_OUT=1024)
          PHYTON_SM = MAP_REMAP(PHYTON_SM,MAP_IN='LONLAT',MAP_OUT='NEC',CONTROL_LONS=DATA.LON_RHO.IMAGE,CONTROL_LATS=DATA.LAT_RHO.IMAGE,PX_OUT=1024,PY_OUT=1024)
          CHLOR_SM  = MAP_REMAP(CHLOR_SM,MAP_IN='LONLAT',MAP_OUT='NEC',CONTROL_LONS=DATA.LON_RHO.IMAGE,CONTROL_LATS=DATA.LAT_RHO.IMAGE,PX_OUT=1024,PY_OUT=1024)                   
          PHYTOC_RATIO = MAP_REMAP(PHYTOC,MAP_IN='LONLAT',MAP_OUT='NEC',CONTROL_LONS=DATA.LON_RHO.IMAGE,CONTROL_LATS=DATA.LAT_RHO.IMAGE,PX_OUT=1024,PY_OUT=1024)
          PHYTON_RATIO = MAP_REMAP(PHYTON,MAP_IN='LONLAT',MAP_OUT='NEC',CONTROL_LONS=DATA.LON_RHO.IMAGE,CONTROL_LATS=DATA.LAT_RHO.IMAGE,PX_OUT=1024,PY_OUT=1024)
          CHLOR_RATIO  = MAP_REMAP(CHLOR,MAP_IN='LONLAT',MAP_OUT='NEC',CONTROL_LONS=DATA.LON_RHO.IMAGE,CONTROL_LATS=DATA.LAT_RHO.IMAGE,PX_OUT=1024,PY_OUT=1024)
                  
          STRUCT_SD_WRITE, DIR_SAVE + FP.PERIOD + '-ROMS_LEHMANN-NEC-PHYTO_C-LARGE.SAVE', PROD='PHYTO_C',IMAGE=PHYTOC_LG,MISSING_CODE=MISSINGS(PHYTOC_LG),SCALING='LINEAR',INTERCEPT=0.0,SLOPE=1.0,$
                           DATA_UNITS='',PERIOD=FP.PERIOD,SENSOR='ROMS',SATELLITE='MODEL',SAT_EXTRA=SAT_EXTRA,MAP='NEC',INFILE=FP.FULLNAME,NOTES=NOTES,ERROR=ERROR,OVERWRITE=OVERWRITE
          STRUCT_SD_WRITE, DIR_SAVE + FP.PERIOD + '-ROMS_LEHMANN-NEC-PHYTO_N-LARGE.SAVE', PROD='PHYTO_N',IMAGE=PHYTON_LG,MISSING_CODE=MISSINGS(PHYTON_LG),SCALING='LINEAR',INTERCEPT=0.0,SLOPE=1.0,$
                           DATA_UNITS='',PERIOD=FP.PERIOD,SENSOR='ROMS',SATELLITE='MODEL',SAT_EXTRA=SAT_EXTRA,MAP='NEC',INFILE=FP.FULLNAME,NOTES=NOTES,ERROR=ERROR,OVERWRITE=OVERWRITE
          STRUCT_SD_WRITE, DIR_SAVE + FP.PERIOD + '-ROMS_LEHMANN-NEC-CHLOR_A-LARGE.SAVE', PROD='CHLOR_A',IMAGE=CHLOR_LG,MISSING_CODE=MISSINGS(CHLOR_LG),SCALING='LINEAR',INTERCEPT=0.0,SLOPE=1.0,$
                           DATA_UNITS='',PERIOD=FP.PERIOD,SENSOR='ROMS',SATELLITE='MODEL',SAT_EXTRA=SAT_EXTRA,MAP='NEC',INFILE=FP.FULLNAME,NOTES=NOTES,ERROR=ERROR,OVERWRITE=OVERWRITE
          STRUCT_SD_WRITE, DIR_SAVE + FP.PERIOD + '-ROMS_LEHMANN-NEC-PHYTO_C-SMALL.SAVE', PROD='PHYTO_C',IMAGE=PHYTOC_SM,MISSING_CODE=MISSINGS(PHYTOC_SM),SCALING='LINEAR',INTERCEPT=0.0,SLOPE=1.0,$
                           DATA_UNITS='',PERIOD=FP.PERIOD,SENSOR='ROMS',SATELLITE='MODEL',SAT_EXTRA=SAT_EXTRA,MAP='NEC',INFILE=FP.FULLNAME,NOTES=NOTES,ERROR=ERROR,OVERWRITE=OVERWRITE
          STRUCT_SD_WRITE, DIR_SAVE + FP.PERIOD + '-ROMS_LEHMANN-NEC-PHYTO_N-SMALL.SAVE', PROD='PHYTO_N',IMAGE=PHYTON_SM,MISSING_CODE=MISSINGS(PHYTON_SM),SCALING='LINEAR',INTERCEPT=0.0,SLOPE=1.0,$
                           DATA_UNITS='',PERIOD=FP.PERIOD,SENSOR='ROMS',SATELLITE='MODEL',SAT_EXTRA=SAT_EXTRA,MAP='NEC',INFILE=FP.FULLNAME,NOTES=NOTES,ERROR=ERROR,OVERWRITE=OVERWRITE
          STRUCT_SD_WRITE, DIR_SAVE + FP.PERIOD + '-ROMS_LEHMANN-NEC-CHLOR_A-SMALL.SAVE', PROD='CHLOR_A',IMAGE=CHLOR_SM,MISSING_CODE=MISSINGS(CHLOR_SM),SCALING='LINEAR',INTERCEPT=0.0,SLOPE=1.0,$
                           DATA_UNITS='',PERIOD=FP.PERIOD,SENSOR='ROMS',SATELLITE='MODEL',SAT_EXTRA=SAT_EXTRA,MAP='NEC',INFILE=FP.FULLNAME,NOTES=NOTES,ERROR=ERROR,OVERWRITE=OVERWRITE
          STRUCT_SD_WRITE, DIR_PER + FP.PERIOD + '-ROMS_LEHMANN-NEC-PHYTO_C-PERCENT_LG.SAVE', PROD='PHYTO_C',MATH='PERCENT',IMAGE=PHYTOC_RATIO,MISSING_CODE=MISSINGS(PHYTOC_RATIO),SCALING='LINEAR',INTERCEPT=0.0,SLOPE=1.0,$
                           DATA_UNITS='',PERIOD=FP.PERIOD,SENSOR='ROMS',SATELLITE='MODEL',SAT_EXTRA=SAT_EXTRA,MAP='NEC',INFILE=FP.FULLNAME,NOTES=NOTES,ERROR=ERROR,OVERWRITE=OVERWRITE
          STRUCT_SD_WRITE, DIR_PER + FP.PERIOD + '-ROMS_LEHMANN-NEC-PHYTO_N-PERCENT_LG.SAVE', PROD='PHYTO_N',MATH='PERCENT',IMAGE=PHYTON_RATIO,MISSING_CODE=MISSINGS(PHYTON_RATIO),SCALING='LINEAR',INTERCEPT=0.0,SLOPE=1.0,$
                           DATA_UNITS='',PERIOD=FP.PERIOD,SENSOR='ROMS',SATELLITE='MODEL',SAT_EXTRA=SAT_EXTRA,MAP='NEC',INFILE=FP.FULLNAME,NOTES=NOTES,ERROR=ERROR,OVERWRITE=OVERWRITE
          STRUCT_SD_WRITE, DIR_PER + FP.PERIOD + '-ROMS_LEHMANN-NEC-CHLOR_A-PERCENT_LG.SAVE', PROD='CHLOR_A',MATH='PERCENT',IMAGE=CHLOR_RATIO,MISSING_CODE=MISSINGS(CHLOR_RATIO),SCALING='LINEAR',INTERCEPT=0.0,SLOPE=1.0,$
                           DATA_UNITS='',PERIOD=FP.PERIOD,SENSOR='ROMS',SATELLITE='MODEL',SAT_EXTRA=SAT_EXTRA,MAP='NEC',INFILE=FP.FULLNAME,NOTES=NOTES,ERROR=ERROR,OVERWRITE=OVERWRITE

        ENDFOR
      ENDFOR  
    ENDIF

    IF DO_MAKE_PNGS GE 1 THEN BEGIN 
      OVERWRITE = DO_MAKE_PNGS GE 2
      STRUCT_SD_2PNG, FILE_SEARCH(DIR_PER  + '*.SAVE'),DIR_OUT=DIR_RATIO_BROWSE,USE_PROD='PERCENT',/ADD_COLORBAR,/ADDDATE,/ADD_PROD,SPECIAL_SCALE=SPECIAL_SCALE,/ADD_LAND,OVERWRITE=OVERWRITE,/QUIET     
      STRUCT_SD_2PNG, FILE_SEARCH(DIR_SAVE + '*.SAVE'),DIR_OUT=DIR_BROWSE,                         /ADD_COLORBAR,/ADDDATE,/ADD_PROD,SPECIAL_SCALE=SPECIAL_SCALE,/ADD_LAND,OVERWRITE=OVERWRITE,/QUIET   
    ENDIF
    
    IF DO_MAKE_STATS GE 1 THEN BEGIN 
      OVERWRITE = DO_MAKE_STATS GE 2
      DATE_RANGE = ['20040701','20080630']
      SD_STATS_ALL, FILE_SEARCH(DIR_SAVE  + '*PHYTO_C-LARGE.SAVE'),     DATE_RANGE=DATE_RANGE,PERIOD_CODE_IN='!3D',PERIOD_CODE_OUT='!M',PROD='PHYTO_C',ALG='LARGE',OUTSENSOR='ROMS',STAT_TYPE='MEAN',DIR_STATS=DIR_STATS,OVERWRITE=OVERWRITE     
      SD_STATS_ALL, FILE_SEARCH(DIR_SAVE  + '*PHYTO_N-LARGE.SAVE'),     DATE_RANGE=DATE_RANGE,PERIOD_CODE_IN='!3D',PERIOD_CODE_OUT='!M',PROD='PHYTO_N',ALG='LARGE',OUTSENSOR='ROMS',STAT_TYPE='MEAN',DIR_STATS=DIR_STATS,OVERWRITE=OVERWRITE     
      SD_STATS_ALL, FILE_SEARCH(DIR_SAVE  + '*CHLOR_A-LARGE.SAVE'),     DATE_RANGE=DATE_RANGE,PERIOD_CODE_IN='!3D',PERIOD_CODE_OUT='!M',PROD='CHLOR_A',ALG='LARGE',OUTSENSOR='ROMS',STAT_TYPE='MEAN',DIR_STATS=DIR_STATS,OVERWRITE=OVERWRITE
      SD_STATS_ALL, FILE_SEARCH(DIR_SAVE  + '*PHYTO_C-SMALL.SAVE'),     DATE_RANGE=DATE_RANGE,PERIOD_CODE_IN='!3D',PERIOD_CODE_OUT='!M',PROD='PHYTO_C',ALG='SMALL',OUTSENSOR='ROMS',STAT_TYPE='MEAN',DIR_STATS=DIR_STATS,OVERWRITE=OVERWRITE     
      SD_STATS_ALL, FILE_SEARCH(DIR_SAVE  + '*PHYTO_N-SMALL.SAVE'),     DATE_RANGE=DATE_RANGE,PERIOD_CODE_IN='!3D',PERIOD_CODE_OUT='!M',PROD='PHYTO_N',ALG='SMALL',OUTSENSOR='ROMS',STAT_TYPE='MEAN',DIR_STATS=DIR_STATS,OVERWRITE=OVERWRITE
      SD_STATS_ALL, FILE_SEARCH(DIR_SAVE  + '*CHLOR_A-SMALL.SAVE'),     DATE_RANGE=DATE_RANGE,PERIOD_CODE_IN='!3D',PERIOD_CODE_OUT='!M',PROD='CHLOR_A',ALG='SMALL',OUTSENSOR='ROMS',STAT_TYPE='MEAN',DIR_STATS=DIR_STATS,OVERWRITE=OVERWRITE
      SD_STATS_ALL, FILE_SEARCH(DIR_PER   + '*PHYTO_C-PERCENT_LG.SAVE'),DATE_RANGE=DATE_RANGE,PERIOD_CODE_IN='!3D',PERIOD_CODE_OUT='!M',PROD='PHYTO_C',FILE_LABEL='ROMS-NEC-PHYTO_C-PERCENT_LG',OUTSENSOR='ROMS',STAT_TYPE='MEAN',DIR_STATS=DIR_STATS,OVERWRITE=OVERWRITE
      SD_STATS_ALL, FILE_SEARCH(DIR_PER   + '*PHYTO_N-PERCENT_LG.SAVE'),DATE_RANGE=DATE_RANGE,PERIOD_CODE_IN='!3D',PERIOD_CODE_OUT='!M',PROD='PHYTO_N',FILE_LABEL='ROMS-NEC-PHYTO_N-PERCENT_LG',OUTSENSOR='ROMS',STAT_TYPE='MEAN',DIR_STATS=DIR_STATS,OVERWRITE=OVERWRITE
      SD_STATS_ALL, FILE_SEARCH(DIR_PER   + '*CHLOR_A-PERCENT_LG.SAVE'),DATE_RANGE=DATE_RANGE,PERIOD_CODE_IN='!3D',PERIOD_CODE_OUT='!M',PROD='CHLOR_A',FILE_LABEL='ROMS-NEC-CHLOR_A-PERCENT_LG',OUTSENSOR='ROMS',STAT_TYPE='MEAN',DIR_STATS=DIR_STATS,OVERWRITE=OVERWRITE
      
      SD_STATS_ALL, FILE_SEARCH(DIR_STATS + '*PHYTO_C-LARGE-MEAN.SAVE'),DATE_RANGE=DATE_RANGE,PERIOD_CODE_IN='!M',PERIOD_CODE_OUT='!MONTH',PROD='PHYTO_C',ALG='LARGE',OUTSENSOR='ROMS',STAT_TYPE='MEAN',DIR_STATS=DIR_STATS,OVERWRITE=OVERWRITE     
      SD_STATS_ALL, FILE_SEARCH(DIR_STATS + '*PHYTO_N-LARGE-MEAN.SAVE'),DATE_RANGE=DATE_RANGE,PERIOD_CODE_IN='!M',PERIOD_CODE_OUT='!MONTH',PROD='PHYTO_N',ALG='LARGE',OUTSENSOR='ROMS',STAT_TYPE='MEAN',DIR_STATS=DIR_STATS,OVERWRITE=OVERWRITE
      SD_STATS_ALL, FILE_SEARCH(DIR_STATS + '*CHLOR_A-LARGE-MEAN.SAVE'),DATE_RANGE=DATE_RANGE,PERIOD_CODE_IN='!M',PERIOD_CODE_OUT='!MONTH',PROD='CHLOR_A',ALG='LARGE',OUTSENSOR='ROMS',STAT_TYPE='MEAN',DIR_STATS=DIR_STATS,OVERWRITE=OVERWRITE
      SD_STATS_ALL, FILE_SEARCH(DIR_STATS + '*PHYTO_C-SMALL-MEAN.SAVE'),DATE_RANGE=DATE_RANGE,PERIOD_CODE_IN='!M',PERIOD_CODE_OUT='!MONTH',PROD='PHYTO_C',ALG='SMALL',OUTSENSOR='ROMS',STAT_TYPE='MEAN',DIR_STATS=DIR_STATS,OVERWRITE=OVERWRITE
      SD_STATS_ALL, FILE_SEARCH(DIR_STATS + '*PHYTO_N-SMALL-MEAN.SAVE'),DATE_RANGE=DATE_RANGE,PERIOD_CODE_IN='!M',PERIOD_CODE_OUT='!MONTH',PROD='PHYTO_N',ALG='SMALL',OUTSENSOR='ROMS',STAT_TYPE='MEAN',DIR_STATS=DIR_STATS,OVERWRITE=OVERWRITE
      SD_STATS_ALL, FILE_SEARCH(DIR_STATS + '*CHLOR_A-SMALL-MEAN.SAVE'),DATE_RANGE=DATE_RANGE,PERIOD_CODE_IN='!M',PERIOD_CODE_OUT='!MONTH',PROD='CHLOR_A',ALG='SMALL',OUTSENSOR='ROMS',STAT_TYPE='MEAN',DIR_STATS=DIR_STATS,OVERWRITE=OVERWRITE
      SD_STATS_ALL, FILE_SEARCH(DIR_STATS + '*PHYTO_C-PERCENT_LG-MEAN.SAVE'),DATE_RANGE=DATE_RANGE,PERIOD_CODE_IN='!M',PERIOD_CODE_OUT='!MONTH',PROD='PHYTO_C',FILE_LABEL='ROMS-NEC-PHYTO_C-PERCENT_LG',OUTSENSOR='ROMS',STAT_TYPE='MEAN',DIR_STATS=DIR_STATS,OVERWRITE=OVERWRITE
      SD_STATS_ALL, FILE_SEARCH(DIR_STATS + '*PHYTO_N-PERCENT_LG-MEAN.SAVE'),DATE_RANGE=DATE_RANGE,PERIOD_CODE_IN='!M',PERIOD_CODE_OUT='!MONTH',PROD='PHYTO_N',FILE_LABEL='ROMS-NEC-PHYTO_N-PERCENT_LG',OUTSENSOR='ROMS',STAT_TYPE='MEAN',DIR_STATS=DIR_STATS,OVERWRITE=OVERWRITE
      SD_STATS_ALL, FILE_SEARCH(DIR_STATS + '*CHLOR_A-PERCENT_LG-MEAN.SAVE'),DATE_RANGE=DATE_RANGE,PERIOD_CODE_IN='!M',PERIOD_CODE_OUT='!MONTH',PROD='CHLOR_A',FILE_LABEL='ROMS-NEC-CHLOR_A-PERCENT_LG',OUTSENSOR='ROMS',STAT_TYPE='MEAN',DIR_STATS=DIR_STATS,OVERWRITE=OVERWRITE            
    ENDIF
    
    IF DO_STAT_PNGS GE 1 THEN BEGIN
      OVERWRITE = DO_STAT_PNGS GE 2
      STRUCT_SD_2PNG, FILE_SEARCH(DIR_STATS + '*PERCENT*MEAN.SAVE'),DIR_OUT=DIR_STATS_BROWSE,USE_PROD='PERCENT',/ADD_COLORBAR,/ADDDATE,/ADD_PROD,SPECIAL_SCALE=SPECIAL_SCALE,/ADD_LAND, OVERWRITE=OVERWRITE,/QUIET     
    ENDIF  
    
    IF DO_SUBAREAS GE 1 THEN BEGIN
      OVERWRITE = DO_SUBAREAS GE 2
      DASH = '-'
      SUBAREA_FILES = ['D:\IDL\IMAGES\MASK_SUBAREA-NEC-PXY_1024_1024-GFISH4.SAVE','D:\IDL\IMAGES\MASK_SUBAREA-NEC-PXY_1024_1024-ESTUARY_SHELF_LME.SAVE']
      PERIODS = ['!M','!MONTH']
      PRODS   = ['PHYTO_C','PHYTO_N','CHLOR_A']
      ALGS    = ['LARGE','SMALL','PERCENT']
      FOR STH = 0L, N_ELEMENTS(SUBAREA_FILES)-1 DO BEGIN
        ASUBAREA = SUBAREA_FILES(STH)      
        IF ASUBAREA EQ 'D:\IDL\IMAGES\MASK_SUBAREA-NEC-PXY_1024_1024-ESTUARY_SHELF_LME.SAVE' THEN SUBAREA_CODES = 32 ELSE SUBAREA_CODES = [1,2,3,4]
        FOR PTH = 0L, N_ELEMENTS(PRODS)-1 DO BEGIN
          FOR ATH = 0L, N_ELEMENTS(ALGS)-1 DO BEGIN
            APROD = PRODS(PTH) + '-' + ALGS(ATH)
            FILES = FILE_SEARCH(DIR_STATS + '*' + APROD + '*MEAN.SAVE') & FP = PARSE_IT(FILES)
            OK = WHERE((FP.DATE_START GE '20040701' AND FP.YEAR_START LE '2008') OR FP.PERIOD_CODE EQ '!MONTH')
            FILE_LABEL='ROMS-'+APROD & PRINT, FILE_LABEL
            TS_SUBAREAS, FILES[OK],SUBAREA_FILE=ASUBAREA,FILE_LABEL=FILE_LABEL,SUBAREA_CODES=SUBAREA_CODES,SUBAREA_PERIOD=['!M','!MONTH'],DIR_OUT=DIR_TS_SUBAREAS,CSV=CSV,OVERWRITE=OVERWRITE
          ENDFOR                     
        ENDFOR                       
      ENDFOR    
    ENDIF
  ENDIF ; DO_PHYTO_CARBON  

;	*******************************************************
	IF DO_LINE_PLOTS GE 1 THEN BEGIN
;	*******************************************************
		OVERWRITE = DO_LINE_PLOTS GE 2

		NEC_LME_CHL    = DIR_PROJECTS + 'DATA/W-MASK_SUBAREA-NEC-PXY_1024_1024-ESTUARY_SHELF_LME-SEA_AQU-CHLOR_A.SAVE'
		NEC_SUBS_CHL   = DIR_PROJECTS + 'DATA/W-MASK_SUBAREA-NEC-PXY_1024_1024-GFISH4-SEA_AQU-CHLOR_A.SAVE'
		NEC_LME_PPD    = DIR_PROJECTS + 'DATA/W-MASK_SUBAREA-NEC-PXY_1024_1024-ESTUARY_SHELF_LME-SA_N4AT-PPD-OPAL.SAVE'
		NEC_SUBS_PPD   = DIR_PROJECTS + 'DATA/W-MASK_SUBAREA-NEC-PXY_1024_1024-GFISH4-S_N4AT-PPD-OPAL.SAVE'
		NEC_LME_SST		 = DIR_PROJECTS + 'DATA/W-MASK_SUBAREA-NEC-PXY_1024_1024-ESTUARY_SHELF_LME-N4AT-SST.SAVE'
		NEC_SUBS_SST   = DIR_PROJECTS + 'DATA/W-MASK_SUBAREA-NEC-PXY_1024_1024-GFISH4-N4AT-SST.SAVE'

		PAL_36,R,G,B

		CTITLE = 'Chlorophyll !8a!7 (mg m!E-3!N)'
		PTITLE = 'Production (gC m!E-2!N d!E-1!N)'
		STITLE = 'Temperature (!Eo!NC)'

		X  = DATE_2JD([19980101,20100101]) & AX  = DATE_AXIS(X,/MONTH, STEP_SIZE=4) & AYR = DATE_AXIS(X,/YEAR)
		X2 = DATE_2JD([20200101,20210101]) & AX2 = DATE_AXIS(X2, /FYEAR)
		XTICKNAMES = REPLICATE(' ',N_ELEMENTS(AX.TICKNAME))
		X2TICKNAME = REPLICATE(' ',N_ELEMENTS(AX2.TICKNAME))
		CHARSIZE = 2.5
		SYMSIZE = 0.45
		THICK = 2
		FONT = 0
		YMARGIN = [0.3,0.3]
		XMARGIN = [4,1]
		CIR = DRAW_CIRCLE(0,0,1,49)
		USERSYM, CIR(0,*),CIR(1,*),THICK=3,/FILL
		PSYM = 8

		PSPRINT,FILENAME=LINE_PLOTS,/COLOR,/Full,/TIMES,/LANDSCAPE
		!P.MULTI = [0,1,2]

		CODES = [32]
		REGIONS = [' Northeast Shelf LME']
		SCODES = [1,2,3,4]
		SREGIONS = ['Middle Atlantic Bight','Southern New England',' Georges Bank','Gulf of Maine']
		COLORS = [5,27,10,12,18,22,29,19,1,7,17]
		SYMSIZE = 0.45
		PRODS = ['CHLOR_A','SST','PPD']
		YEARS = ['1998','1999','2000','2001','2002','2003','2004','2005','2006','2007','2008']
		LEG_POS1 = [0.028 ,0.7,0.045,0.95]
		LEG_POS2 = [0.128 ,0.7,0.145,0.95]
		LEG_POS3 = [0.028 ,0.5,0.045,0.95]
		LEG_POS4 = [0.128 ,0.5,0.145,0.95]
		FOR PTH = 0L, N_ELEMENTS(PRODS)-1 DO BEGIN
			!P.MULTI = [0,1,2]
			IF PRODS(PTH) EQ 'PPD'     THEN BEGIN
				TT = IDL_RESTORE(NEC_LME_PPD)
				TS = IDL_RESTORE(NEC_SUBS_PPD)
				YTITLE = PTITLE
				YRANGE = [0,2]	&  YRANGE2 = [0,3]
				YTICKS = 2			&  YTICKS2 = 3
				YMINOR = 5			&  YMINOR2 = 4
			ENDIF
			IF PRODS(PTH) EQ 'CHLOR_A' THEN BEGIN
				TT = IDL_RESTORE(NEC_LME_CHL)
				TS = IDL_RESTORE(NEC_SUBS_CHL)
				YTITLE = CTITLE
				YRANGE = [0,4]  &  YRANGE2 = [0,6]
				YTICKS = 2 			&  YTICKS2 = 3
				YMINOR = 4			&  YMINOR2 = 4
			ENDIF
			IF PRODS(PTH) EQ 'SST'     THEN BEGIN
				TT = IDL_RESTORE(NEC_LME_SST)
				TS = IDL_RESTORE(NEC_SUBS_SST)
				YTITLE = STITLE
				YRANGE = [0,25]  &  YRANGE2 = [0,30]
				YTICKS = 5 			 &  YTICKS2 = 6
				YMINOR = 5			 &  YMINOR2 = 5
			ENDIF
			OK = WHERE(STRMID(TT.FIRST_NAME,0,2) EQ '!W')
			T = TT[OK]
			TFP = PARSE_IT(T.FIRST_NAME,/ALL)
			WEEK = STRMID(TFP.PERIOD,7,2)
			FOR CTH = 0L, N_ELEMENTS(CODES)-1 DO BEGIN
				OK = WHERE(T.SUBAREA_CODE EQ CODES(CTH) AND TFP.PERIOD_CODE EQ '!W' AND TFP.YEAR_START GE '1998' AND TFP.YEAR_END LE '2008')
				MONS = T[OK]
				MFP = TFP[OK]
				WK = WEEK[OK]
				NEW = CREATE_STRUCT('WEEK_MIN','','WEEK_MAX','','WEEK','','DEPTH',0.0,'DATA_MIN',0.0,'DATA_MAX',0.0,'DATA_MEAN',0.0,$
														'DATA_98',0.0,'DATA_99',0.0,'DATA_00',0.0,'DATA_01',0.0,'DATA_02',0.0,'DATA_03',0.0,$
														'DATA_04',0.0,'DATA_05',0.0,'DATA_06',0.0,'DATA_07',0.0,'DATA_08',0.0)
				NEW = STRUCT_2MISSINGS(NEW)
				TAGS = TAG_NAMES(NEW)
				BSET = WHERE_SETS(WK)
				NEW = REPLICATE(NEW, N_ELEMENTS(BSET))
				FOR BTH = 0L, N_ELEMENTS(BSET)-1 DO BEGIN
					SUBS = WHERE_SETS_SUBS(BSET(BTH))
					WKS = MONS(SUBS)
					WFP = MFP(SUBS)
					NEW(BTH).DEPTH = 0.5
					NEW(BTH).WEEK_MIN = WFP[0].DATE_START
					NEW(BTH).WEEK_MAX = WFP[0].DATE_END
					NEW(BTH).WEEK = NUM2STR(BSET(BTH).VALUE)
					NEW(BTH).DATA_MIN = MIN(WKS.MEAN)
					NEW(BTH).DATA_MAX = MAX(WKS.MEAN)
					NEW(BTH).DATA_MEAN = 10^(MEAN(ALOG10(WKS.MEAN)))
				ENDFOR
				DATE = YDOY_2DATE('2020',DATE_2DOY(NEW.WEEK_MIN)+3)
				YSET = WHERE_SETS(MFP.YEAR_START)
				YSET = YSET[SORT(YSET.VALUE)]
				POS = WHERE(TAGS EQ 'DATA_98')
				CT = 0
				FOR YTH = 0L, N_ELEMENTS(YSET) -1  DO BEGIN
					SUBS = WHERE_SETS_SUBS(YSET(YTH))
					YR = MONS(SUBS)
					YFP = MFP(SUBS)
					WK = STRMID(YFP.PERIOD,7,2)
					OK = WHERE_MATCH(NEW.WEEK,WK,COUNT,VALID=VALID,COMPLEMENT=COMPLEMENT,NCOMPLEMENT=NCOMPLEMENT)
					NEW[OK].(POS+CT) = YR(VALID).MEAN
					CT = CT + 1
				ENDFOR

				IF CTH EQ 0 OR CTH EQ N_ELEMENTS(CODES)-1 THEN _YTITLE = YTITLE ELSE _YTITLE = ' '
				IF CTH EQ N_ELEMENTS(CODES)-1 THEN XTICKNAME = AX2.TICKNAME ELSE XTICKNAME = X2TICKNAME
				!P.MULTI = [0,1,2]
				PLOT, AX2.JD,YRANGE, YTITLE=_YTITLE,YRANGE=YRANGE,/XSTYLE,/YSTYLE,XMARGIN=XMARGIN,YMARGIN=YMARGIN,YTICKS=YTICKS,YMINOR=YMINOR,$
					XTICKS=AX2.TICKS,XTICKNAME=XTICKNAME,XTICKV=AX2.TICKV,XTICK_GET=XTICK_GET,CHARSIZE=CHARSIZE,/NODATA
				YY = [NEW.DATA_MAX,REVERSE(NEW.DATA_MIN)]
				XX = [DATE,REVERSE(DATE)]
				POLYFILL, DATE_2JD(XX), YY, COLOR = 35
				POS = WHERE(TAGS EQ 'DATA_98')
				FOR YTH = 0L, N_ELEMENTS(YEARS)-1  DO BEGIN
					OK = WHERE(NEW.(POS) NE MISSINGS(0.0))
					OPLOT, DATE_2JD(DATE[OK]),NEW[OK].(POS),THICK=3,PSYM=-8,SYMSIZE=SYMSIZE,COLOR=COLORS(YTH)
					YEAR = YEARS(YTH)
					IF YTH EQ 0 THEN TXT = STRTRIM(YEAR,2) ELSE TXT = [TXT,STRTRIM(YEAR,2)]
					POS = POS + 1
				ENDFOR
				TXT = [TXT,'Mean']
				OPLOT, DATE_2JD(DATE),NEW.DATA_MEAN, COLOR = 0, THICK = 8
				IF CTH EQ 0 OR CTH EQ N_ELEMENTS(CODES)-1 THEN BEGIN
					LEG,pos=LEG_POS1,color=[COLORS(0:5)],   label=TXT(0:5), THICK=THICK,LSIZE=1.25,FONT=FONT
					LEG,pos=LEG_POS2,color=[COLORS(6:10),0],label=TXT(6:11),THICK=THICK,LSIZE=1.25,FONT=FONT
				ENDIF
				LABEL = REGIONS(CTH) ;+ '!CMean = ' + STRMID(NUM2STR(NEW[0].ALL_MEAN),0,4) + ' gC m!E-2!N day!E-1!N'
				COOR = COORD_2PLOT(0.62,0.9)
				XYOUTS, COOR.X,COOR.Y,LABEL, ALIGN=-0.1, CHARSIZE=1.5, COLOR=0, CHARTHICK=1
			ENDFOR

			OK = WHERE(STRMID(TS.FIRST_NAME,0,2) EQ '!W')
			T = TS[OK]
			TFP = PARSE_IT(TS.FIRST_NAME,/ALL)
			WEEK = STRMID(TFP.PERIOD,7,2)
			!P.MULTI = [0,1,4]
			FOR STH = 0L, N_ELEMENTS(SCODES)-1 DO BEGIN
				OK = WHERE(T.SUBAREA_CODE EQ SCODES(STH) AND TFP.PERIOD_CODE EQ '!W' AND TFP.YEAR_START GE '1998' AND TFP.YEAR_END LE '2008')
				MONS = T[OK]
				MFP = TFP[OK]
				WK = WEEK[OK]
				NEW = CREATE_STRUCT('WEEK_MIN','','WEEK_MAX','','WEEK','','DEPTH',0.0,'DATA_MIN',0.0,'DATA_MAX',0.0,'DATA_MEAN',0.0,$
														'DATA_98',0.0,'DATA_99',0.0,'DATA_00',0.0,'DATA_01',0.0,'DATA_02',0.0,'DATA_03',0.0,$
														'DATA_04',0.0,'DATA_05',0.0,'DATA_06',0.0,'DATA_07',0.0,'DATA_08',0.0)
				NEW = STRUCT_2MISSINGS(NEW)
				TAGS = TAG_NAMES(NEW)
				BSET = WHERE_SETS(WK)
				NEW = REPLICATE(NEW, N_ELEMENTS(BSET))
				FOR BTH = 0L, N_ELEMENTS(BSET)-1 DO BEGIN
					SUBS = WHERE_SETS_SUBS(BSET(BTH))
					WKS = MONS(SUBS)
					WFP = MFP(SUBS)
					NEW(BTH).DEPTH = 0.5
					NEW(BTH).WEEK_MIN = WFP[0].DATE_START
					NEW(BTH).WEEK_MAX = WFP[0].DATE_END
					NEW(BTH).WEEK = NUM2STR(BSET(BTH).VALUE)
					MOK = WHERE(WKS.MEAN NE MISSINGS(WKS.MEAN),COUNT)
					NEW(BTH).DATA_MIN = MIN(WKS(MOK).MEAN)
					NEW(BTH).DATA_MAX = MAX(WKS(MOK).MEAN)
					NEW(BTH).DATA_MEAN = 10^(MEAN(ALOG10(WKS(MOK).MEAN)))
				ENDFOR
				DATE = YDOY_2DATE('2020',DATE_2DOY(NEW.WEEK_MIN)+3)
				YSET = WHERE_SETS(MFP.YEAR_START)
				YSET = YSET[SORT(YSET.VALUE)]
				POS = WHERE(TAGS EQ 'DATA_98')
				CT = 0
				FOR YTH = 0L, N_ELEMENTS(YSET) -1  DO BEGIN
					SUBS = WHERE_SETS_SUBS(YSET(YTH))
					YR = MONS(SUBS)
					YFP = MFP(SUBS)
					WK = STRMID(YFP.PERIOD,7,2)
					OK = WHERE_MATCH(NEW.WEEK,WK,COUNT,VALID=VALID,COMPLEMENT=COMPLEMENT,NCOMPLEMENT=NCOMPLEMENT)
					NEW[OK].(POS+CT) = YR(VALID).MEAN
					CT = CT + 1
				ENDFOR

				IF STH EQ 0 OR STH EQ N_ELEMENTS(SCODES)-1 THEN _YTITLE = YTITLE ELSE _YTITLE = ' '
				IF STH EQ N_ELEMENTS(SCODES)-1 THEN XTICKNAME = AX2.TICKNAME ELSE XTICKNAME = X2TICKNAME
				PLOT, AX2.JD,YRANGE2, YTITLE=_YTITLE,YRANGE=YRANGE2,/XSTYLE,/YSTYLE,XMARGIN=XMARGIN,YMARGIN=YMARGIN,YTICKS=YTICKS2,YMINOR=YMINOR2,$
					XTICKS=AX2.TICKS,XTICKNAME=XTICKNAME,XTICKV=AX2.TICKV,XTICK_GET=XTICK_GET,CHARSIZE=CHARSIZE,/NODATA
				YY = [NEW.DATA_MAX,REVERSE(NEW.DATA_MIN)]
				XX = [DATE,REVERSE(DATE)]
				POLYFILL, DATE_2JD(XX), YY, COLOR = 35
				POS = WHERE(TAGS EQ 'DATA_98')
				FOR YTH = 0L, N_ELEMENTS(YEARS)-1  DO BEGIN
					OK = WHERE(NEW.(POS) NE MISSINGS(0.0))
					OPLOT, DATE_2JD(DATE[OK]),NEW[OK].(POS),THICK=3,PSYM=-8,SYMSIZE=SYMSIZE,COLOR=COLORS(YTH)
					YEAR = YEARS(YTH)
					IF YTH EQ 0 THEN TXT = STRTRIM(YEAR,2) ELSE TXT = [TXT,STRTRIM(YEAR,2)]
					POS = POS + 1
				ENDFOR
				TXT = [TXT,'Mean']
				OPLOT, DATE_2JD(DATE),NEW.DATA_MEAN, COLOR = 0, THICK = 8
				IF STH EQ 0 OR STH EQ N_ELEMENTS(SCODES)-1 THEN BEGIN
					LEG,pos=LEG_POS3,color=[COLORS(0:5)],   label=TXT(0:5), THICK=THICK,LSIZE=1.25,FONT=FONT
					LEG,pos=LEG_POS4,color=[COLORS(6:10),0],label=TXT(6:11),THICK=THICK,LSIZE=1.25,FONT=FONT
				ENDIF

				LABEL = SREGIONS(STH) ;+ '!CMean = ' + STRMID(NUM2STR(NEW[0].ALL_MEAN),0,4) + ' gC m!E-2!N day!E-1!N'; + '!C Total = ' + TOT + ' gC m!E-2!N'
				COOR = COORD_2PLOT(0.72,0.84)
				XYOUTS, COOR.X,COOR.Y,LABEL, ALIGN=-0.1, CHARSIZE=1.35, COLOR=0, CHARTHICK=1
			ENDFOR
		ENDFOR
		PSPRINT
	ENDIF


;	*******************************************************
	IF DO_STATS GE 1 THEN BEGIN
;	*******************************************************
		OVERWRITE = DO_STATS GE 2

		DATA_SETS=['SST-4-NEC','OC-SEA_AQU-LAC-NEC','PP-N4AT-NEC','FRONTS-CHLOR_A-SEAWIFS-MLAC-NEC','FRONTS-SST-N4AT-4-NEC']
		DISKS = ['T:','S:','T:','T:','T:']
		SENSORS = ['N4AT','SEA_AQU','SA_N4AT','SEAWIFS','N4AT']
		SWITCHES = 'DO_STATS'
		STAT_TYPES = ['MEAN;MIN;MAX;SPAN','MEAN;MIN;MAX;SPAN','MEAN;MIN;MAX;SPAN','MEAN;MIN;MAX;SPAN','MEAN;MIN;MAX;SPAN']
		STATS_TARGETS = ['SST','CHLOR_A','PPD-OPAL','CHLOR_A-OC4-GRAD_MAG_RATIO','SST-GRAD_MAG']
		STAT_PERIOD_CODES_IN = ['!M']
		STAT_PERIOD_CODES_OUT = ['!Y']
		DATE_RANGES = ['19980101:20081231'];,'19980101:20021231','20030101:20071231']
		PERIOD_CODES = '!Y'
		FOR NTH = 0L, N_ELEMENTS(DATA_SETS)-1 DO BEGIN
			DATASET = DATA_SETS[NTH]
			DISK = DISKS[NTH]
			STAT_TARGET = STATS_TARGETS[NTH]
			STAT_TYPE = STAT_TYPES[NTH]
			SENSOR = SENSORS[NTH]
			COVERAGE = VALID_COVERAGES(SENSOR)
			IF SENSOR EQ 'N4AT' THEN DIRS_SAVE=['T:\SST-4-NEC\SAVE\','T:\SST-4-NEC\SAVE_AVHRR\'] ELSE DIRS_SAVE = ''
			FOR DTH = 0L, N_ELEMENTS(DATE_RANGES)-1 DO BEGIN
				DATE_RANGE = STRSPLIT(DATE_RANGES(DTH),':',/EXTRACT)

	 			ANALYSES_MAIN,DATASET               			= DATASET,$
											DISK                   			= DISK,$
											DIRS_SAVE										= DIRS_SAVE,$
											SENSOR											= SENSOR,$
									    PERIOD_CODES           			= PERIOD_CODES,$
									    DATE_RANGE									= DATE_RANGE,$
											STAT_PERIOD_CODES_IN   			= STAT_PERIOD_CODES_IN,$
									    STAT_PERIOD_CODES_OUT  			= STAT_PERIOD_CODES_OUT,$
									    STAT_PERIOD_WIDTH           = STAT_PERIOD_WIDTH,$
									 		STAT_TYPE              			= STAT_TYPE,$
									    STATS_TARGETS          			= STAT_TARGET,$
									    COVERAGE										= COVERAGE,$
									    SWITCHES										= SWITCHES,$
									    OVERWRITE 									= OVERWRITE
			ENDFOR
		ENDFOR
STOP
	ENDIF	; DO_STATS

;	*******************************************************
	IF DO_DATA_EXTRACT GE 1 THEN BEGIN
;	*******************************************************
		OVERWRITE = DO_DATA_EXTRACT GE 2
    SL = DELIMITER(/PATH)
		DIR_OUT = DIR_PROJECTS + 'SATDATA_EXTRACTS\'
    
    MAP = 'NEC'
		TYPE = 'STATS'
		PRODS    = ['CHLOR_A-PAN',    'CHLOR_A-PAN']
	  DATASETS = ['OC-SEAWIFS-MLAC','OC-MODIS-LAC']
		
		YEARS   = YEAR_RANGE('1998','2012',/STRING)
		PERIODS = ['A_','M_']
		OUTNAME = 'CHAVEZ_'
		STAT_TYPES = ['MEAN']

		FOR NTH = 0L,N_ELEMENTS(PRODS)-1 DO BEGIN
			APROD = PRODS[NTH]
			ADIR  = FIX_PATH(!S.DATASETS + DATASETS[NTH] + SL + MAP + SL + TYPE + SL + APROD + SL)
			FOR YTH =0, N_ELEMENTS(YEARS)-1 DO BEGIN
  			FOR PTH = 0L, N_ELEMENTS(PERIODS)-1 DO BEGIN
  				FOR STH = 0L, N_ELEMENTS(STAT_TYPES)-1 DO BEGIN
  				ASTAT = STAT_TYPES(STH)
  				IF PTH EQ 0 AND STH EQ 0 THEN FILES = FILE_SEARCH(ADIR + PERIODS(PTH) + YEARS(YTH) + '*' + APROD+'*-' + ASTAT +'*.SAVE') $
  					              ELSE FILES = [FILES,  FILE_SEARCH(ADIR + PERIODS(PTH) + YEARS(YTH) + '*' + APROD+'*-' + ASTAT +'*.SAVE')]
  				ENDFOR
  			ENDFOR
  			OK = WHERE(FILES NE '', COUNT)
  			IF COUNT GE 1 THEN FILES = FILES[OK] ELSE CONTINUE
  			FP = PARSE_IT(FILES,/ALL)
  			CSVFILE = FIX_PATH(DIR_OUT + OUTNAME + REPLACE(FP[0].NAME,FP[0].PERIOD,YEARS(YTH)) + '-LAT_LON.CSV')
  			IF OVERWRITE EQ 0 AND FILE_TEST(CSVFILE) EQ 1 THEN CONTINUE
  			DATA = MAKE_DATA_LAT_LON(FILES, PROD=FP.PERIOD+'_'+FP.SENSOR+'_'+VALIDS('PRODS',APROD),OVERWRITE=OVERWRITE)
  			STRUCT_2CSV,CSVFILE,DATA
  			GONE, DATA
  	  ENDFOR		
		ENDFOR


STOP
	ENDIF		; DO_DATA_EXTRACT



;	*******************************************************
	IF DO_FROMM_EXTRACT GE 1 THEN BEGIN
;	*******************************************************
		OVERWRITE = DO_FROMM_EXTRACT GE 2

		DO_SPRING = 2
		DO_YEARS  = 2
		DOS = [DO_SPRING,DO_YEARS]

		DIR_FROMM = 'T:\PROJECTS\ECOAP\FROMM_DATA\'
		DIR_STATS = 'S:\OC-SEA_AQU-LAC-NEC\stats\'
		FOR DTH = 0L, N_ELEMENTS(DOS)-1 DO BEGIN
			IF DOS(DTH) EQ 0 THEN CONTINUE
			OVERWRITE = DOS(DTH) GE 2

			IF DTH EQ 0 THEN BEGIN & _DO = 'SPRING' & PERIOD = '!M' & ENDPERIOD = '!MONTH' & ENDIF
			IF DTH EQ 1 THEN BEGIN & _DO = 'YEAR'   & PERIOD = '!Y' & ENDPERIOD = '!YEAR'  & ENDIF
			SAVEFILE = DIR_FROMM+ENDPERIOD+'-SEA_AQU-LAC-NEC-CHLOR_A-STATS-FROMM.SAVE'

			SHIPFILE = DIR_FROMM + 'FROMM_BENTHIC_HABITAT_GRID_COORDINATES.csv'
			LONLAT = READALL(SHIPFILE)
			FILES  = FILE_SEARCH(DIR_STATS + PERIOD + '_*-CHLOR_A-MEAN.SAVE')
			FP = PARSE_IT(FILES)

			IF _DO EQ 'SPRING' THEN BEGIN
				OK = WHERE(FP.MONTH_START GE '03' AND FP.MONTH_START LE '05' AND FP.YEAR_START GE '1998' AND FP.YEAR_START LE '2008')
				FILES = FILES[OK]
				FP = FP[OK]
				BSET = WHERE_SETS(FP.MONTH_START)
			ENDIF ELSE BSET = WHERE_SETS(FP.PERIOD_CODE)

			FOR BTH = 0L, N_ELEMENTS(BSET)-1 DO BEGIN
				SUBS = WHERE_SETS_SUBS(BSET(BTH))
				BFILES = FILES(SUBS)
				BFP = FP(SUBS)
				STRUCT = REPLICATE(CREATE_STRUCT('LAT',0.0,'LON',0.0,'GMEAN',0.0,'GSTD',0.0),N_ELEMENTS(LONLAT))
				STRUCT.LAT = FLOAT(LONLAT.LAT)
				STRUCT.LON = FLOAT(LONLAT.LON)

				IF _DO EQ 'YEAR'   THEN ENDPERIOD = '!YEAR' ELSE ENDPERIOD = '!MONTH_'+BSET(BTH).VALUE
				IF _DO EQ 'SPRING' THEN SAVEFILE = DIR_FROMM+ENDPERIOD+'-SEA_AQU-LAC-NEC-CHLOR_A-STATS-FROMM.SAVE'
				IF OVERWRITE EQ 0 AND FILE_TEST(SAVEFILE) EQ 1 THEN GOTO, MAKE_PNGS
				YMEAN  = FILE_SEARCH(DIR_STATS + ENDPERIOD + '*-CHLOR_A-MEAN.SAVE')
				YSTD   = FILE_SEARCH(DIR_STATS + ENDPERIOD + '*-CHLOR_A-STD.SAVE')

				ZWIN,[1024,1024]
				MAP_NEC
				FOR NTH = 0L, N_ELEMENTS(BFILES)-1 DO BEGIN
					DATA = STRUCT_SD_READ(BFILES[NTH])
					TEMP = REPLICATE(CREATE_STRUCT(BFP[NTH].PERIOD,0.0),N_ELEMENTS(STRUCT))
					CHL  = MAP_DEG2IMAGE(DATA,STRUCT.LON,STRUCT.LAT, X=x, Y=y,AROUND=0)
					TEMP.(0)  = CHL
					STRUCT = STRUCT_MERGE(STRUCT,TEMP)
				ENDFOR
				MDATA = STRUCT_SD_READ(YMEAN)
				SDATA = STRUCT_SD_READ(YSTD)
				STRUCT.GMEAN = MAP_DEG2IMAGE(MDATA,STRUCT.LON,STRUCT.LAT,X=X,Y=Y,AROUND=0)
				STRUCT.GSTD = MAP_DEG2IMAGE(SDATA,STRUCT.LON,STRUCT.LAT,X=X,Y=Y,AROUND=0)

				SAVE,FILENAME=SAVEFILE,STRUCT
				SAVE_2CSV,SAVEFILE
				GONE, STRUCT

				MAKE_PNGS:
				STRUCT = IDL_RESTORE(SAVEFILE)
				ZWIN
				IMG = BYTARR(1024,1024) & IMG(*,*) = 255
				LAND  = READ_LANDMASK(MAP='NEC',/STRUCT)
				IMG(LAND.LAND)  = 252
				IMG(LAND.COAST) = 0
				SPECIAL_SCALE='HIGH'
				PAL_SW3,R,G,B
				FONTS,'HELVETICA'

				TAGS = TAG_NAMES(STRUCT)
				OK = WHERE(TAGS NE 'LAT' AND TAGS NE 'LON' AND TAGS NE 'GSTD',COUNT)
				FOR NTH = 0L, N_ELEMENTS(OK)-1 DO BEGIN
					ATAG = TAGS(OK[NTH])
					CHLOR = STRUCT.(OK[NTH])
					ZWIN,IMG
					MAP_NEC
					TV, IMG
					FOR LL=0, N_ELEMENTS(CHLOR)-1 DO BEGIN
				 	 	CHL=CHLOR(LL)
				 	 	LON=STRUCT(LL).LON
				 	 	LAT=STRUCT(LL).LAT
				 	 	COLOR = SD_SCALES(CHL,PROD='CHLOR_A',/DATA2BIN,SPECIAL_SCALE='HIGH')
				 	 	USERSYM,[-0.5,0.5,0.5,-0.5,-0.5],[-0.5,-0.5,0.5,0.5,-0.5],/FILL, COLOR=COLOR
				   	PLOTS,LON,LAT,PSYM=8, COLOR=COLOR,/NOCLIP,SYMSIZE=0.5, THICK=1.5
			  	ENDFOR
					CHARSIZE = 0.75
					IF ATAG EQ 'GMEAN' THEN TXT = '1998-2008!CMean' ELSE TXT = STRMID(ATAG,3,4)
					XYOUTS, 0.05,0.9,/NORMAL,TXT,COLOR=0,CHARSIZE=8,CHARTHICK=1,ALIGN=ALIGN,_EXTRA=_extra
			  	PNG = TVRD()
			  	ZWIN
			  	IF _DO EQ 'SPRING' THEN IF ATAG EQ 'GMEAN' THEN OUTPNG = DIR_FROMM+PERIOD+'_'+BSET(BTH).VALUE+'-'+TAGS(OK[NTH])+'-SEA_AQU-LAC-NEC-CHLOR_A-MEAN.PNG' ELSE OUTPNG = DIR_FROMM+TAGS(OK[NTH])+'-SEA_AQU-LAC-NEC-CHLOR_A-MEAN.PNG'
			  	IF _DO EQ 'YEAR'   THEN IF ATAG EQ 'GMEAN' THEN OUTPNG = DIR_FROMM+BSET(BTH).VALUE+'-'+TAGS(OK[NTH])+'-SEA_AQU-LAC-NEC-CHLOR_A-MEAN.PNG'            ELSE OUTPNG = DIR_FROMM+TAGS(OK[NTH])+'-SEA_AQU-LAC-NEC-CHLOR_A-MEAN.PNG'
			  	WRITE_PNG,OUTPNG,PNG,R,G,B
				ENDFOR

				IF _DO EQ 'SPRING' THEN PNGFILES = [FILE_SEARCH(DIR_FROMM+PERIOD+'_*'+BSET(BTH).VALUE+'-SEA_AQU-LAC-NEC-CHLOR_A-MEAN.PNG'),DIR_FROMM+PERIOD+'_'+BSET(BTH).VALUE+'-GMEAN-SEA_AQU-LAC-NEC-CHLOR_A-MEAN.PNG']
				IF _DO EQ 'YEAR'   THEN PNGFILES = [FILE_SEARCH(DIR_FROMM+PERIOD+'_*'+'-SEA_AQU-LAC-NEC-CHLOR_A-MEAN.PNG'),                DIR_FROMM+BSET(BTH).VALUE+'-GMEAN-SEA_AQU-LAC-NEC-CHLOR_A-MEAN.PNG']
				ROWS = 4
				COLS = 3
				SPACE = 25
				BACKGROUND = 255
				PNGFILE = DIR_FROMM + ENDPERIOD+'-SEA_AQU-LAC-NEC-CHLOR_A-MEAN-COMPOSITE.PNG'
				IF OVERWRITE EQ 1 OR FILE_TEST(PNGFILE) EQ 0 THEN $
				IMAGE_WELD_PAGE,FILES=PNGFILES,ROWS=ROWS,COLS=COLS,PAL=PALANOM,PNGFILE=PNGFILE,SPACE=space,PX=px,py=py,BACKGROUND=BACKGROUND,/NOTRIM
				PAGE = READ_PNG(PNGFILE,R,G,B)
				SZ=SIZE(PAGE,/STRUCT)
				PX_PAGE = SZ.DIMENSIONS[0]
				PY_PAGE = SZ.DIMENSIONS[1]
				PX_BAR=FIX(PX_PAGE/2)
				PY_BAR=350
				CHARSIZE_BAR=10
				CHARTHICK_BAR=3
				GRACE=5
				IF _DO EQ 'SPRING' THEN TITLE = MONTH_NAMES(BSET(BTH).VALUE) ELSE TITLE = 'Annual'
				TITLE = TITLE + '  Chlorophyll !8a!7'
				BAR=COLOR_BAR_SCALE(PROD='CHLOR_A',PX=PX_BAR,PY=PY_BAR,CHARSIZE=CHARSIZE_BAR,TITLE=TITLE,/NO_UNIT,FONT='HELVETICA',SPECIAL_SCALE=SPECIAL_SCALE,BACKGROUND=BACKGROUND,PAL='PAL_SW3',GRACE=GRACE,CHARTHICK=CHARTHICK_BAR)
				SZ=SIZE(BAR,/STRUCT)
				PX_BAR = SZ.DIMENSIONS[0]
				PY_BAR = SZ.DIMENSIONS[1]
				IM = BYTARR((PX_PAGE - PY_BAR)/2,PY_BAR)
				IM(*,*) = 255
				BAR = [IM,BAR,IM]
				NEW = IMAGE_WELD(BAR,PAGE,BACKGROUND=255,SPACE=10)
				LABEL = " K.Hyde & J.O'Reilly"
				NEW = MAP_ADD_TXT(NEW,0.01,0.0125,LABEL,COLOR=0,charsize=6,CHARTHICK=3)
				LABEL = ' NOAA / NMFS!CNarragansett, RI'
				NEW = MAP_ADD_TXT(NEW,0.865,0.02,LABEL,COLOR=0,charsize=6,CHARTHICK=3)
				FINAL = DIR_FROMM + ENDPERIOD+'-SEA_AQU-LAC-NEC-CHLOR_A-MEAN-COMPOSITE-LEG.PNG'
				WRITE_PNG,FINAL,NEW,R,G,B
			ENDFOR
		ENDFOR
STOP

	ENDIF


;	*******************************************************
	IF DO_FRIED_EXTRACT GE 1 THEN BEGIN
;	*******************************************************
		OVERWRITE = DO_FRIED_EXTRACT GE 2

		DIR_OUT = 'T:\PROJECTS\ECOAP\CHLOR\'

		FILES = FILE_SEARCH('S:\OC-SEA_AQU-LAC-NEC\stats\!Y_*CHLOR_A-MEAN.SAVE')
		FILES = [FILES,FILE_SEARCH('S:\OC-SEA_AQU-LAC-NEC\stats\!W_*CHLOR_A-MEAN.SAVE')]
		FP = PARSE_IT(FILES,/ALL)

		FOR NTH = 0L, N_ELEMENTS(FILES)-1 DO BEGIN

			DATA = MAKE_DATA_LAT_LON(FILES[NTH], DIR_OUT=DIR_OUT, PROD=FP[NTH].PERIOD, OVERWRITE=OVERWRITE)
			LON  = ROUND(DATA.LON)
			LAT  = ROUND(DATA.LAT)
			LONLAT = NUM2STR(LON)+NUM2STR(LAT)
			B    = WHERE_SETS(LONLAT)
			STRUCT = REPLICATE(STRUCT_2MISSINGS(CREATE_STRUCT('LON',0.0,'LAT',0.0,FP[NTH].PERIOD,0.0)),N_ELEMENTS(B))
			FOR BTH = 0L, N_ELEMENTS(B)-1 DO BEGIN
				SUBS = WHERE_SETS_SUBS(B(BTH))
				SET  = DATA(SUBS)
				STAT = STATS(SET.(2),PROD=FP[NTH].PROD)
				STRUCT(BTH).LON  = ROUND(SET[0].LON)
				STRUCT(BTH).LAT  = ROUND(SET[0].LAT)
				STRUCT(BTH).DATA = STAT.MEAN
			ENDFOR
			IF NTH EQ 0 THEN NEW = STRUCT ELSE NEW = STRUCT_JOIN(NEW,STRUCT,TAGNAMES=['LON','LAT'])
		ENDFOR
STOP
	ENDIF	; DO_FRIED_EXTRACT


; *******************************************************
  IF DO_GOOGLE_IMAGES GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_GOOGLE_IMAGES GE 2
    DIR_WEBSITE = 'D:\PROJECTS\EcoAP\GoogleEarth\'
   ; PP  = 'D:\DATASETS\PP-N4AT-NEC\stats\!ANNUAL-SA_N4AT-MLAC-4-NEC-PPD-OPAL-MEAN.SAVE'
    CHL = 'D:\DATASETS\OC-SEAWIFS-MLAC-NEC\TS_IMAGES\save2\'
    SST = 'D:\DATASETS\SST-4-NEC\TS_IMAGES\SAVE\'
;    CFILES = FILE_SEARCH(CHL + 'D*CHLOR_A*.SAVE')
;    STRUCT_SD_2PNG,CFILES,DIR_OUT=DIR_WEBSITE+'CHL\',/ADD_LAND, LAND_COLOR=255,OVERWRITE=OVERWRITE,/ADD_COAST,COAST_COLOR=255,MISS_COLOR=255
    SFILES = FILE_SEARCH(SST + 'D*SST*.SAVE')
    STRUCT_SD_2PNG,SFILES,DIR_OUT=DIR_WEBSITE+'SST\',/ADD_LAND, LAND_COLOR=255,OVERWRITE=OVERWRITE,/ADD_COAST,COAST_COLOR=255,MISS_COLOR=255
    
  ENDIF ; DO_GOOGLE_IMAGES

; *******************************************************
  IF DO_WEBSITE_IMAGES GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_WEBSITE_IMAGES GE 2
    
    DIR_WEBSITE = 'D:\PROJECTS\EcoAP\Website\'
    PP = 'D:\DATASETS\PP-N4AT-NEC\stats\!ANNUAL-SA_N4AT-MLAC-4-NEC-PPD-OPAL-MEAN.SAVE'
    CHL = 'D:\DATASETS\OC-SEAWIFS-MLAC-NEC\stats\!ANNUAL-SEAWIFS-REPRO6-MLAC-NEC-CHLOR_A-OC4-MEAN.SAVE'
    SST = 'D:\DATASETS\SST-4-NEC\STATS\!MONTH_01-N4AT-4-NEC-SST-MEAN.SAVE'
    SPAN = 'D:\DATASETS\SST-4-NEC\STATS\!ANNUAL-N4AT-4-NEC-SST-SPAN.SAVE'
    SFRONT = 'D:\PROJECTS\FRONTS\DATA\SAVE\!ANNUAL-AT-NEC-SST-4UM-GRAD_MAG-MEAN.SAVE'
    CFRONT = 'D:\PROJECTS\FRONTS\DATA\NEC\FRONTS-CHLOR_A-SEAWIFS-MLAC-NEC\STATS\!ANNUAL-SEAWIFS-MLAC-NEC-CHLOR_A-OC4-GRAD_MAG_RATIO-MEAN.SAVE'
    CMONTHS = FILE_SEARCH('D:\DATASETS\OC-SEAWIFS-MLAC-NEC\stats\!MONTH_*-SEAWIFS-REPRO6-MLAC-NEC-CHLOR_A-OC4-MEAN.SAVE')
    SMONTHS = FILE_SEARCH('D:\DATASETS\SST-4-NEC\STATS\!MONTH_*-N4AT-4-NEC-SST-MEAN.SAVE')
    
    BATHS = 100
    CHARSIZE = 2.5
    POSITION = [0.05, 0.57,0.95, 0.92]
    PAL = 'PAL_SW3'
    PAL_SW3,R,G,B
    
    PNGFILE = 'Figure6A-Annual-SST-Gradient.PNG'    
    STRUCT_SD_2PNG,SFRONT,/ADD_LAND,/ADD_COAST,/ADD_BATHY,BATHS=BATHS,PX=512,PY=512,OVERWRITE=OVERWRITE,SPECIAL_SCALE='!ANNUAL',/ADD_COLORBAR,COLORBAR_TITLE=TITLE,DIR_OUT=DIR_WEBSITE,PNGFILE=PNGFILE    

    TITLE = 'Chlorophyll Gradient Magnitude (ratio)'
    PNGFILE = 'Figure6B-Annual-Chlorophyll-Gradient.PNG' 
    STRUCT_SD_2PNG,CFRONT,/ADD_LAND,/ADD_COAST,/ADD_BATHY,ADD_LABEL=ADD_LABEL,BATHS=BATHS,PX=512,PY=512,OVERWRITE=OVERWRITE,SPECIAL_SCALE='!ANNUAL',/ADD_COLORBAR,COLORBAR_TITLE=TITLE,DIR_OUT=DIR_WEBSITE,PNGFILE=PNGFILE    
   
    TITLE = 'Sea Surface Temperature ' + UNITS('SST',/NO_NAME)
    PNGFILE = 'Figure1-JANUARY-SST.PNG'    
    STRUCT_SD_2PNG,SST,/ADD_LAND,/ADD_COAST,/ADD_BATHY,BATHS=BATHS,PX=512,PY=512,OVERWRITE=OVERWRITE,SPECIAL_SCALE='LOW',/ADD_COLORBAR,COLORBAR_TITLE=TITLE,DIR_OUT=DIR_WEBSITE,PNGFILE=PNGFILE    
    LEG=COLOR_BAR_SCALE(PROD='SST',POSITION=POSITION,CHARSIZE=CHARSIZE,/BOTTOM,TITLE=TITLE,FONT='HELVETICA',SPECIAL_SCALE='LOW',PAL='PAL_SW3')
    WRITE_PNG,DIR_WEBSITE+'Figure1-JANUARY-SST-COLORBAR.PNG',LEG,R,G,B

    TITLE = 'Sea Surface Temperature ' + UNITS('SST',/NO_NAME)
    PNGFILE = 'Figure3-Annual-SST-Span.PNG'
    ADD_LABEL = 'Annual Temperature Span !C(Max-Min)'
    STRUCT_SD_2PNG,SPAN,/ADD_LAND,/ADD_COAST,/ADD_BATHY,ADD_LABEL=ADD_LABEL,BATHS=BATHS,PX=512,PY=512,OVERWRITE=OVERWRITE,/ADD_COLORBAR,COLORBAR_TITLE=TITLE,DIR_OUT=DIR_WEBSITE,PNGFILE=PNGFILE    
    LEG=COLOR_BAR_SCALE(PROD='NUM',POSITION=POSITION,CHARSIZE=CHARSIZE,/BOTTOM,TITLE=TITLE,FONT='HELVETICA',SPECIAL_SCALE='25',PAL='PAL_SW3')
    WRITE_PNG,DIR_WEBSITE+'Figure3-ANNUAL-SST-SPAN-COLORBAR.PNG',LEG,R,G,B
        
    FOR MON = 0L, N_ELEMENTS(SMONTHS)-1 DO BEGIN
      FP = PARSE_IT(SMONTHS(MON))
      LABEL = MONTH_NAMES(FP.MONTH_START)
      PNGFILE='Figure4-MONTH_'+FP.MONTH_START+'-SST.PNG'
      STRUCT_SD_2PNG,SMONTHS(MON),/ADD_LAND,/ADD_COAST,/ADD_BATHY,BATHS=BATHS,PX=512,PY=512,ADD_LABEL=LABEL,OVERWRITE=OVERWRITE,SPECIAL_SCALE='',/ADD_COLORBAR,COLORBAR_TITLE=TITLE,DIR_OUT=DIR_WEBSITE,PNGFILE=PNGFILE       
    ENDFOR
    LEG=COLOR_BAR_SCALE(PROD='SST',POSITION=POSITION,CHARSIZE=CHARSIZE,/BOTTOM,TITLE=TITLE,FONT='HELVETICA',SPECIAL_SCALE='',PAL='PAL_SW3')
    WRITE_PNG,DIR_WEBSITE+'Figure4-SST-COLORBAR.PNG',LEG,R,G,B
    
    TITLE = 'Mean Daily Primary Production ' + UNITS('PPD',/NO_NAME)
    STRUCT_SD_2PNG,PP,/ADD_LAND,/ADD_COAST,/ADD_BATHY,BATHS=BATHS,PX=512,PY=512,OVERWRITE=OVERWRITE,SPECIAL_SCALE='MID',/ADD_COLORBAR,COLORBAR_TITLE=TITLE,DIR_OUT=DIR_WEBSITE+'Figure1-ANNUAL-PRIMARY_PRODUCTION'    
    LEG=COLOR_BAR_SCALE(PROD='PPD',POSITION=POSITION,CHARSIZE=CHARSIZE,/BOTTOM,TITLE=TITLE,FONT='HELVETICA',SPECIAL_SCALE='MID',PAL='PAL_SW3')
    WRITE_PNG,DIR_WEBSITE+'Figure1-ANNUAL-PRIMARY_PRODUCTION-COLORBAR.PNG',LEG,R,G,B
     
    TITLE = 'Mean Daily Chlorophyll ' + UNITS('CHLOR_A',/NO_NAME)
    STRUCT_SD_2PNG,CHL,/ADD_LAND,/ADD_COAST,/ADD_BATHY,BATHS=BATHS,PX=512,PY=512,OVERWRITE=OVERWRITE,SPECIAL_SCALE='MEDIUM',/ADD_COLORBAR,COLORBAR_TITLE=TITLE,DIR_OUT=DIR_WEBSITE+'Figure2-ANNUAL-CHLOROPHYLL'    
    LEG=COLOR_BAR_SCALE(PROD='CHLOR_A',POSITION=POSITION,CHARSIZE=CHARSIZE,/BOTTOM,TITLE=TITLE,FONT='HELVETICA',SPECIAL_SCALE='MEDIUM',PAL='PAL_SW3')
    WRITE_PNG,DIR_WEBSITE+'Figure2-ANNUAL-CHLOROPHYLL-COLORBAR.PNG',LEG,R,G,B
     
    TITLE = 'Chlorophyll ' + UNITS('CHLOR_A',/NO_NAME)    
    FOR MON = 0L, N_ELEMENTS(CMONTHS)-1 DO BEGIN
      FP = PARSE_IT(CMONTHS(MON))
      LABEL = MONTH_NAMES(FP.MONTH_START)
      PNGFILE=DIR_WEBSITE+'Figure3-MONTH_'+FP.MONTH_START+'-CHLOROPHYLL.PNG'
;      IM = STRUCT_SD_CONTOUR(CMONTHS(MON),PX=512,PY=512,LEVELS=[1.0],MED=3,C_THICK=1.5,OVERWRITE=OVERWRITE,$
;           /ADD_LAND,/ADD_COAST,/ADD_BATHY,BATHS=BATHS,ADD_LABEL=LABEL,SPECIAL_SCALE='MEDIUM',/ADD_COLORBAR,COLORBAR_TITLE=TITLE,PNGFILE=PNGFILE)       
    ENDFOR
  ENDIF ; DO_WEBSITE_IMAGES  

; *******************************************************
  IF DO_WEBSITE_MOVIES GE 1 THEN BEGIN
; *******************************************************
    OVERWRITE = DO_WEBSITE_IMAGES GE 2
    
    DIR_WEBSITE = 'D:\PROJECTS\EcoAP\Website\'

    BATHS = 100
    CHARSIZE = 2.5
    POSITION = [0.05, 0.57,0.95, 0.92]
    PAL = 'PAL_SW3'
    PAL_SW3,R,G,B

    CFILES      = FILE_SEARCH('D:\DATASETS\OC-SEAWIFS-MLAC-NEC\TS_IMAGES\SAVE\!D_*.SAVE')
    CP          = PARSE_IT(CFILES)
    CHL         = 'D:\DATASETS\OC-SEAWIFS-MLAC-NEC\stats\!ANNUAL-SEAWIFS-REPRO6-MLAC-NEC-CHLOR_A-OC4-MEAN.SAVE'
    DIR_BROWSE  = 'D:\DATASETS\OC-SEAWIFS-MLAC-NEC\TS_IMAGES\BROWSE\'
    DIR_SBROWSE = 'D:\DATASETS\SST-4-NEC\TS_IMAGES\BROWSE\'
    DIR_COMBO   = 'D:\DATASETS\OC-SEAWIFS-MLAC-NEC\TS_IMAGES\MOVIES\COMBO\'
    DIR_MOVIES  = 'D:\DATASETS\OC-SEAWIFS-MLAC-NEC\TS_IMAGES\MOVIES\'
    
    MAP  = ['GOMN','GOMN','GOMN','GOMN','GOMN','GOMN','GOMN','GOMN','GOMN','GOMN','MAB_EXT','MAB_EXT','MAB','MAB','GOMN','GOMN','MAB_EXT','MAB_EXT','GOMN','GOMN']
    PX   = [640,320,640,320,640,320,640,320,640,320,1024,512,700,350,640,320,1024,512,640,320]
    PY   = [640,320,640,320,640,320,640,320,640,320,1024,512,840,420,640,320,1024,512,640,320]
    SFACTOR    = [1,0.5,1,0.5,1,0.5,1,0.5,1,0.5,1,0.5,1,0.5,1,0.5,1,0.5,1,0.5]
    SEASON     = ['SPRING','SPRING','SPRING','SPRING','SPRING','SPRING','SPRING','SPRING','SPRING','SPRING','SUMMER','SUMMER','SUMMER','SUMMER','FALL','FALL','FALL','FALL','FALL','FALL']
    DATE_START = [20020301,20020301,20030301,20030301,20050301,20050301,20060301,20060301,20100301,20100301,20010601,20010601,20010601,20010601,20000801,20000801,20050801,20050801,20070801,20070801]
    DATE_END   = [20020531,20020531,20030531,20030531,20050531,20050531,20060531,20060531,20100531,20100531,20010930,20010930,20010930,20010930,20001031,20001031,20051031,20051031,20071031,20071031]
    TITLE_DATE = ['March 01, 2002 - May 31, 2002','March 01, 2002 - May 31, 2002',$
                  'March 01, 2003 - May 31, 2003','March 01, 2003 - May 31, 2003',$
                  'March 01, 2005 - May 31, 2005','March 01, 2005 - May 31, 2005',$
                  'March 01, 2006 - May 31, 2006','March 01, 2006 - May 31, 2006',$
                  'March 01, 2010 - May 31, 2010','March 01, 2010 - May 31, 2010',$
                  'June 01, 2001 - September 30, 2001','June 01, 2001 - September 30, 2001',$
                  'June 01, 2001 - September 30, 2001','June 01, 2001 - September 30, 2001',$
                  'August 01, 2000 - October 31, 2000','August 01, 2000 - October 31, 2000',$
                  'August 01, 2005 - October 31, 2005','August 01, 2005 - October 31, 2005',$
                  'August 01, 2007 - October 31, 2007','August 01, 2007 - October 31, 2007']
    
;    FOR NTH = 0L, N_ELEMENTS(MAP)-1 DO BEGIN
;      OK = WHERE(STRMID(CP.DATE_START,0,8) GE DATE_START[NTH] AND STRMID(CP.DATE_END,0,8) LE DATE_END[NTH]) 
;      STRUCT_SD_2PNG,CFILES[OK],MAP_OUT=MAP[NTH],PX=PX[NTH],PY=PY[NTH],/ADD_LAND,/ADD_COAST,/ADD_BATHY,/ADD_DATEBAR,BATHS=BATHS,OVERWRITE=OVERWRITE,SPECIAL_SCALE='MEDIUM',/ADD_COLORBAR,COLORBAR_TITLE=TITLE,DIR_OUT=DIR_BROWSE    
;      STRUCT_SD_2PNG,CHL,MAP_OUT=MAP[NTH],PX=PX[NTH],PY=PY[NTH],/ADD_LAND,/ADD_COAST,/ADD_BATHY,BATHS=BATHS,OVERWRITE=OVERWRITE,SPECIAL_SCALE='MEDIUM',/ADD_COLORBAR,COLORBAR_TITLE=TITLE,DIR_OUT=DIR_BROWSE
;    
;      IMG = READ_PNG(DIR_BROWSE+'!ANNUAL-SEAWIFS-REPRO6-MLAC-'+MAP[NTH]+'-PXY_'+NUM2STR(PX[NTH])+'_'+NUM2STR(PY[NTH])+'-CHLOR_A-OC4-MEAN.PNG',R,G,B)
;      TITLE_PRODUCT = 'Chlorophyll !8a!7'
;      TITLE_SENSOR  = 'SeaWiFS'        
;      IMG = MAP_ADD_TXT(IMG,0.5,0.60, TITLE_PRODUCT,  COLOR=0,charsize=5*SFACTOR[NTH],CHARTHICK=3,ALIGN=0.5)
;      IMG = MAP_ADD_TXT(IMG,0.5,0.40, TITLE_SENSOR,   COLOR=0,charsize=3*SFACTOR[NTH],CHARTHICK=3,ALIGN=0.5)    
;      IMG = MAP_ADD_TXT(IMG,0.5,0.20, TITLE_DATE[NTH],COLOR=0,charsize=3*SFACTOR[NTH],CHARTHICK=3,ALIGN=0.5)
;
;      TITLE_FILE_PNG = DIR_MOVIES + '!ANNUAL-SEAWIFS-REPRO6-MLAC-'+MAP[NTH]+'-PXY_'+NUM2STR(PX[NTH])+'_'+NUM2STR(PY[NTH])+'-CHLOR_A-OC4-MEAN-TITLE_SLIDE.PNG'
;      WRITE_PNG,TITLE_FILE_PNG,IMG,R,G,B
; 
;      FILES = FILE_SEARCH(DIR_BROWSE + '!D_*-SEAWIFS-REPRO6-MLAC-'+MAP[NTH]+'-PXY_'+NUM2STR(PX[NTH])+'_'+NUM2STR(PY[NTH])+'-CHLOR_A-OC4-INTERP-TS_IMAGES.PNG')
;      FP = PARSE_IT(FILES)
;    
;      OK = WHERE(STRMID(FP.DATE_START,0,8) GE DATE_START[NTH] AND STRMID(FP.DATE_END,0,8) LE DATE_END[NTH]) 
;      AVI_FILE = DIR_MOVIES + SEASON[NTH]+'-DD_'+NUM2STR(DATE_START[NTH])+'_'+NUM2STR(DATE_END[NTH])+'-SEAWIFS-REPRO6-MLAC-'+MAP[NTH]+'-PXY_'+NUM2STR(PX[NTH])+'_'+NUM2STR(PY[NTH])+'-CHLOR_A-OC4.AVI'
;      FA = PARSE_IT(AVI_FILE)
;      IF FA.MTIME GT MAX(FP[OK].MTIME) AND OVERWRITE EQ 0 THEN CONTINUE
;      MAKE_AVI,FILES=FILES[OK],DIR_OUT=DIR_MOVIES,PAL=PAL,BITS=BITS,QUALITY=QUALITY,FPS=10,MAP=MAP[NTH],YOFFSET=YOFFSET,$
;                TITLE_FILE_PNG=TITLE_FILE_PNG,/TITLE_SLIDE,N_TITLE=15,TYPE=TYPE,AVI_FILE=AVI_FILE
;    ENDFOR            

    MAP  = ['NEC','NEC','MAB','MAB']
    PX   = [1024,512,700,350]
    PY   = [1024,512,840,420]
    DATE_START = [20050410,20050410,20020601,20020601]
    DATE_END   = [20051115,20051115,20020930,20020930]
    EVENT      = ['WCR','WCR','UPWELLING','UPWELLING']   
    CFILES = FILE_SEARCH('D:\DATASETS\OC-SEAWIFS-MLAC-NEC\TS_IMAGES\SAVE\D_*SEAWIFS-REPRO6-MLAC-NEC-CHLOR_A-OC4-INTERP-TS_IMAGES.SAVE')
    SFILES = FILE_SEARCH('D:\DATASETS\SST-4-NEC\TS_IMAGES\SAVE\D_*-N4AT-4-NEC-SST-INTERP-TS_IMAGES.SAVE')
    
    FOR NTH = 0L, N_ELEMENTS(MAP)-1 DO BEGIN     
      FC = PARSE_IT(CFILES) & OC = WHERE(STRMID(FC.DATE_START,0,8) GE DATE_START[NTH] AND STRMID(FC.DATE_END,0,8) LE DATE_END[NTH],COUNT) 
      FS = PARSE_IT(SFILES) & OS = WHERE(STRMID(FS.DATE_START,0,8) GE DATE_START[NTH] AND STRMID(FS.DATE_END,0,8) LE DATE_END[NTH],COUNT)    
      IF MAP[NTH] EQ 'MAB' THEN S_SPECIAL_SCALE = 'HIGH' ELSE S_SPECIAL_SCALE = ''
      STRUCT_SD_2PNG,CFILES(OC),MAP_OUT=MAP[NTH],PX=PX[NTH],PY=PY[NTH],/ADD_LAND,/ADD_COAST,/ADD_BATHY,/ADD_DATEBAR,BATHS=BATHS,OVERWRITE=OVERWRITE,SPECIAL_SCALE='MEDIUM',/ADD_COLORBAR,COLORBAR_TITLE=TITLE,DIR_OUT=DIR_BROWSE    
      STRUCT_SD_2PNG,SFILES(OS),MAP_OUT=MAP[NTH],PX=PX[NTH],PY=PY[NTH],/ADD_LAND,/ADD_COAST,/ADD_BATHY,/ADD_DATEBAR,BATHS=BATHS,OVERWRITE=OVERWRITE,SPECIAL_SCALE=S_SPECIAL_SCALE,/ADD_COLORBAR,COLORBAR_TITLE=TITLE,DIR_OUT=DIR_SBROWSE

      IF MAP[NTH] EQ 'NEC' AND PX[NTH] EQ '1024' THEN PXY = '' ELSE PXY = '-PXY_'+NUM2STR(LONG(PX[NTH]))+'_'+NUM2STR(LONG(PY[NTH]))
      FA = FILE_ALL(DIR_BROWSE+'D_*SEAWIFS-REPRO6-MLAC-'+MAP[NTH]+PXY+'-CHLOR_A-OC4-INTERP-TS_IMAGES.PNG')
      FB = FILE_ALL(DIR_SBROWSE+'D_*-N4AT-4-'+MAP[NTH]+PXY+'-SST-INTERP-TS_IMAGES.PNG')        
      OK = WHERE(STRMID(FA.DATE_START,0,8) GE DATE_START[NTH] AND STRMID(FA.DATE_END,0,8) LE DATE_END[NTH],COUNT) & IF COUNT GE 1 THEN FA=FA[OK]
      OK = WHERE(STRMID(FB.DATE_START,0,8) GE DATE_START[NTH] AND STRMID(FC.DATE_END,0,8) LE DATE_END[NTH],COUNT) & IF COUNT GE 1 THEN FB=FB[OK]
      BLANK=READALL(FA[0].FULLNAME)
      SZ=SIZE(BLANK)
      BLANK(*,*) = 252
      MAP_TXT = MAP[NTH]+PXY
      FILE_LABEL_C =MAP_TXT+'-CHLOR_A-SST'
      DATE_ALL   = [FA.DATE_START,FB.DATE_START]
      S=SORT(DATE_ALL)
      DATE_ALL = DATE_ALL(S)
      DD='!DD_'+STRMID(DATE_START[NTH],0,8)+'_' +STRMID(DATE_END[NTH],0,8)
      UN = UNIQ(DATE_ALL)
      N_IMAGES = NUM2STR(N_ELEMENTS(UN))
      FOR UNTH = 0L, N_ELEMENTS(UN)-1L DO BEGIN
        AN = UN(UNTH)
        ADATE = DATE_ALL(AN)
        BDATE = STRMID(ADATE,0,8)
        OK1 = WHERE(FA.DATE_START EQ ADATE,COUNT1)
        OK2 = WHERE(FB.DATE_START EQ ADATE,COUNT2)
        PNGFILE=DIR_COMBO+'!D_'+BDATE+'-'+FILE_LABEL_C+'-'+'TS_IMAGES.PNG'
        FA_PNG=FILE_ALL(PNGFILE)
        IF COUNT1 EQ 1 AND COUNT2 EQ 0 AND FA_PNG.SIZE GT 0 THEN IF FA(OK1).MTIME LT FA_PNG.MTIME AND OVERWRITE EQ 0 THEN CONTINUE
        IF COUNT1 EQ 0 AND COUNT2 EQ 1 AND FA_PNG.SIZE GT 0 THEN IF FA(OK2).MTIME LT FA_PNG.MTIME AND OVERWRITE EQ 0 THEN CONTINUE
        IF COUNT1 EQ 1 AND COUNT2 EQ 1 AND FA_PNG.SIZE GT 0 THEN IF FA(OK1).MTIME LT FA_PNG.MTIME AND FB(OK2).MTIME LT FA_PNG.MTIME AND OVERWRITE EQ 0 THEN CONTINUE
        IF COUNT1 EQ 1 THEN IMAGE1 = READALL(FA(OK1).FULLNAME) ELSE IMAGE1 = BLANK
        IF COUNT2 EQ 1 THEN IMAGE2 = READALL(FB(OK2).FULLNAME) ELSE IMAGE2 = BLANK
  
        IF MAP[NTH] EQ 'NEC' THEN IMAGE1=IMAGE_2TRUE(CONGRID(IMAGE1,PX[NTH]*0.5,PY[NTH]*0.5),PAL=PAL[0]) ELSE IMAGE1=IMAGE_2TRUE(IMAGE1,PAL=PAL[0])
        IF MAP[NTH] EQ 'NEC' THEN IMAGE2=IMAGE_2TRUE(CONGRID(IMAGE2,PX[NTH]*0.5,PY[NTH]*0.5),PAL=PAL[0]) ELSE IMAGE2=IMAGE_2TRUE(IMAGE2,PAL=PAL[0])        
        NEW_RGB = IMAGE_WELD(IMAGE1,IMAGE2,BACKGROUND= _background,SPACE=_space,/LANDSCAPE)
        WRITE_PNG,PNGFILE,NEW_RGB
      ENDFOR ;  FOR NTH = 0L, N_ELEMENTS(UN)-1L DO BEGIN
    
    FILES = FILE_ALL(DIR_COMBO + '!D_*'+MAP_TXT+'-CHLOR_A-SST-TS_IMAGES.PNG')   
    OK= WHERE(STRMID(FILES.DATE_START,0,8) GE DATE_START[NTH] AND STRMID(FILES.DATE_END,0,8) LE DATE_END[NTH],COUNT) 
    AVI_FILE = DIR_MOVIES + EVENT[NTH] + '-DD_'+NUM2STR(DATE_START[NTH])+'-'+NUM2STR(DATE_END[NTH])+'-'+MAP_TXT+'-CHLOR_A-SST.AVI'
    FA = PARSE_IT(AVI_FILE)
    IF FA.MTIME GT MAX(FILES[OK].MTIME) AND OVERWRITE EQ 0 THEN CONTINUE
    MAKE_FF_MOVIE,FILES=FILES[OK].FULLNAME,DIR_OUT=DIR_OUT,PAL=PAL,BITS=BITS,QUALITY=QUALITY,FPS=10,MAP=MAP[NTH],YOFFSET=YOFFSET,$
              TITLE_FILE_PNG='',N_TITLE=15,TYPE=TYPE,MOVIE_FILE=AVI_FILE

    ENDFOR

STOP
  ENDIF ; DO_WEBSITE_MOVIES

; ********************************************
  IF DO_COLORBARS GE 1 THEN BEGIN
; ********************************************
    CHARSIZE = 2.5
    POSITION = [0.05, 0.57,0.95, 0.92]
    PAL_SW3,R,G,B
    TITLE = UNITS('FUCO')
    LEG=COLOR_BAR_SCALE(PROD='FUCO',POSITION=POSITION,CHARSIZE=CHARSIZE,/BOTTOM,TITLE=TITLE,FONT='HELVETICA',SPECIAL_SCALE='',PAL='PAL_SW3')
    WRITE_PNG,DIR_PROJECTS + 'BROWSE\'+'FUCOXANTHIN_CONCENTRATION-COLORBAR.PNG',LEG,R,G,B
   
  ENDIF ; DO_COLORBARS   
  
; ********************************************
  IF DO_SST_SATSHIP GE 1 THEN BEGIN
; ********************************************
    OVERWRITE = DO_SST_SATSHIP GE 2
    
    DATASETS = ['SST-MODIS-4','SST-AVHRR-4']
    
    SHIP_FILE = DIR_PROJECTS + 'SST_COMPARE' + SL + 'NOAA_OBSERVER_SST.csv'
    DIR_OUT   = DIR_PROJECTS + 'SST_COMPARE' + SL 
    AROUND = 1
    HOURS = [12]
    MAP = 'NEC'
    PRODS = ['SST-N_11UM','SST'] 
    SHIP_PRODS =  ['SST','SST']
    
    PAL = 'PAL_SW3'
    PSYM = 'CIRCLE'       & SYM_COLOR = 4         & SYMSIZE = 0.5
    CHARSIZE = 11         & STATS_CHARSIZE = 10   & FONT = 0
    PARAMS = [2,3,4,8]    & XMARGIN = [2,2]       & YMARGIN = [2,2]
    THICK = 2             & REG_THICK = 4         & REG_COLOR = 0
    ONE_COLOR = 0         & ONE_THICK = 4         & ONE_LINESTYLE = 2
    MARGIN = [.21,.13,.06,.1]
    RGB = CPAL_READ(PAL,PALLIST=PL)
    COLORS = [45,210];[45,80,100,120,170,210,05]
      
    FOR DTH = 0, N_ELEMENTS(DATASETS)-1 DO BEGIN
      SENSOR = VALID_SENSORS(DATASETS(DTH))      
      APROD = VALIDS('PRODS',PRODS(DTH))
      AALG  = VALIDS('ALGS',PRODS(DTH))
      SPROD = SHIP_PRODS(DTH)
      OUTNAME = SENSOR+'-NOAA_OBSERVER_DATA'      
      DIR_SAVE  = FIX_PATH(!S.DATASETS + DATASETS(DTH) + SL + MAP + '/SAVE/')
;      FILES = FILE_SEARCH(DIR_SAVE + PRODS(DTH) + SL + '*.SAVE')      
;      IF N_ELEMENTS(FILES[0]) EQ '' THEN STOP
;      SD_SAT_SHIP,SHIP_FILE=SHIP_FILE,SAT_FILES=FILES,MAP=MAP, AROUND=AROUND,PROD=APROD,ALG=AALG,SHIP_PROD=SPROD,HOURS=MAX(HOURS),OUTNAME=OUTNAME,$
;        RANGE=RANGE,PX=PX,PY=PY,TRANSFORMATION=TRANSFORMATION,DIR_OUT=DIR_OUT,CSV=1,OVERWRITE=OVERWRITE
       
      XPOS = [0.18,0.525,0.85]
      YPOS = [0.2,0.2,0.2]
      FILE = FILE_SEARCH(DIR_OUT + 'SD_SAT_SHIP-HOURS_12-'+APROD+'-'+AALG+'-'+OUTNAME+'.SAVE')
      SAVEFILES = [DIR_OUT + 'SD_SAT_SHIP-NEC-'+SENSOR+'-'+PRODS(DTH)+'-TEMPERATURE_COMPARISONS.png',$
                   DIR_OUT + 'SD_SAT_SHIP-NEC-'+SENSOR+'-'+PRODS(DTH)+'-TEMPERATURE_COMPARISONS_MONTHLY.png']      
      IF MIN(GET_MTIME(SAVEFILES)) GT GET_MTIME(FILE) AND NOT KEYWORD_SET(OVERWRITE) THEN CONTINUE
      DATA = READALL(FILE)
      TAGS = TAG_NAMES(DATA)
      DP = DATE_PARSE(DATA.DATE_SHIP)      
      IF AALG NE '' THEN ATARGET = APROD + '_' + AALG ELSE ATARGET = APROD
      OKN = WHERE(TAGS EQ 'N_'+ATARGET) & OKX = WHERE(TAGS EQ 'SHIP_DATA_'+ATARGET) & OKY = WHERE(TAGS EQ 'MEAN_'+ATARGET)
      N = FIX(DATA.(OKN))
      X = FLOAT(DATA.(OKX)) & X = (X-32)*5/9
      Y = FLOAT(DATA.(OKY)) 
      OK = WHERE(N GE 4 AND X NE MISSINGS(0.0) AND X GT -5.0 AND Y NE MISSINGS(0.0) AND Y GT -5.0,COUNT)
      XTITLE = 'Observer ' + UNITS('TEMPERATURE') & XRANGE = [-5,35]
      YTITLE = SENSOR + ' Satellite '+ UNITS('TEMPERATURE') & YRANGE = [-5,35]                   
      LAYOUT=[]
      P = PLOTXY_NG(X[OK],Y[OK],DECIMALS=3,LOGLOG=LOGLOG,/QUIET,MODEL='RMA',PARAMS=PARAMS,CHARSIZE=CHARSIZE,PSYM=PSYM,REG_COLOR=REG_COLOR, REG_THICK=REG_THICK,XTITLE=XTITLE, $
             YTITLE=YTITLE,TITLE=SENSOR,SYM_COLOR=SYM_COLOR,SYMSIZE=SYMSIZE,THICK=THICK,XRANGE=XRANGE,YRANGE=XRANGE,/GRID_NONE,MARGIN=MARGIN,STATS_CHARSIZE=STATS_CHARSIZE,STATS_POS=STATS_POS,$
             XTICKNAME=XTICKNAME,YTICKNAME=YTICKNAME,/ONE2ONE,ONE_COLOR=ONE_COLOR,ONE_THICK=ONE_THICK,ONE_LINESTYLE=ONE_LINESTYLE,BUFFER=BUFFER,LAYOUT=LAYOUT,CURRENT=CURRENT)      
        
      P.SAVE, SAVEFILES[0],RESOLUTION=300      
      P.CLOSE
            
      MONTHS = MONTH_NUMBERS()
      NAMES  = MONTH_NAMES()
      OKN = WHERE(TAGS EQ 'N_'+ATARGET) & OKX = WHERE(TAGS EQ 'SHIP_DATA_'+ATARGET) & OKY = WHERE(TAGS EQ 'MEAN_'+ATARGET)
      N = FIX(DATA.(OKN))
      X = FLOAT(DATA.(OKX)) & X = (X-32)*5/9
      Y = FLOAT(DATA.(OKY))
      W = WINDOW(DIMENSIONS=[768,1024])
      CURRENT = 1
      STATS_POS=LIST([.078,.905],[.412,.905],[.744,.905],$
                     [.078,.655],[.412,.655],[.744,.655],$
                     [.078,.405],[.412,.405],[.744,.405],$
                     [.078,.155],[.412,.155],[.744,.155])      
      FOR NTH=0, N_ELEMENTS(MONTHS)-1 DO BEGIN
        LAYOUT = [3,4,NTH+1]        
        OK = WHERE(N GE 4 AND X NE MISSINGS(0.0) AND X GT -5.0 AND Y NE MISSINGS(0.0) AND Y GT -5.0 AND DP.MONTH EQ MONTHS[NTH],COUNT)
        XTITLE = 'Observer ' + UNITS('TEMPERATURE') & XRANGE = [-5,35]
        YTITLE = SENSOR + ' Satellite '+ UNITS('TEMPERATURE') & YRANGE = [-5,35]
        
         P = PLOTXY_NG(X[OK],Y[OK],DECIMALS=3,LOGLOG=LOGLOG,/QUIET,MODEL='RMA',PARAMS=PARAMS,CHARSIZE=CHARSIZE,PSYM=PSYM,REG_COLOR=REG_COLOR, REG_THICK=REG_THICK,XTITLE=XTITLE, $
             YTITLE=YTITLE,TITLE=NAMES[NTH],SYM_COLOR=SYM_COLOR,SYMSIZE=SYMSIZE,THICK=THICK,XRANGE=XRANGE,YRANGE=XRANGE,/GRID_NONE,MARGIN=MARGIN,STATS_CHARSIZE=STATS_CHARSIZE,STATS_POS=STATS_POS[NTH],$
             XTICKNAME=XTICKNAME,YTICKNAME=YTICKNAME,/ONE2ONE,ONE_COLOR=ONE_COLOR,ONE_THICK=ONE_THICK,ONE_LINESTYLE=ONE_LINESTYLE,BUFFER=BUFFER,LAYOUT=LAYOUT,CURRENT=CURRENT)      
        
        ;T = TEXT(1.0,29.0,NAMES(N),TARGET=P)
      ENDFOR  
      P.SAVE,SAVEFILES[1],RESOLUTION=300
      P.CLOSE
      
    
    ENDFOR ; FOR DTH = 0, N_ELEMENTS(DATASETS)-1 DO BEGIN
  ENDIF ;DO_SST_SATSHIP


END; #####################  End of Routine ################################
