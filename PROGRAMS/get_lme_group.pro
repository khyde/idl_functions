; $ID:	GET_LME_GROUP.PRO,	2020-07-08-15,	USER-KJWH	$
;+
;;#############################################################################################################
	FUNCTION GET_LME_GROUP,LME,PROD = PROD,INIT=INIT,PER=PER,YR_RANGE=YR_RANGE,ALL=ALL,OTHER=OTHER,_EXTRA=_EXTRA

; PURPOSE: THIS FUNCTION RETURNS THE PRODUCTIVITY CLASSIFICATION GROUP
; 
; 
; CATEGORY:	LMES;		 
;
; CALLING SEQUENCE: RESULT = GET_LME_GROUP(LME)
;
; INPUTS: LME  [NAME OR NUMERIC CODE]

; OPTIONAL INPUTS:
;		
; KEYWORD PARAMETERS:
;         PROD : STANDARD PROD NAME
;         INIT : REREAD THE SAVFILE INTO MEMORY
;         ALL  : RETURN A STRUCT WITH GROUP# FOR ALL LMES
;         OTHER : ADDITIONAL TAGS TO ADD TO THE OUTPUT STRUCTURE
; NOTES:
;       THE FIRST RUNS OF STATS_TRENDS WERE DONE USING AMEAN OF CHLOR_A


; OUTPUTS: 
;		
;; EXAMPLES:
;             G = GET_LME_GROUP() & H,G
;             G = GET_LME_GROUP('ARABIAN_SEA') & P,G
;             G = GET_LME_GROUP('PACIFIC_WARM_POOL') & P,'GROUP   ',G
;             G = GET_LME_GROUP(23) & P,'GROUP   ',G

;  

;
; MODIFICATION HISTORY:
;			WRITTEN OCT 17, 2014 J.O'REILLY
;			OCT 18,2014,JOR ADDED PPY TO STRUCTURE
;			OCT 19,2014,JOR ADDED KEY PPY TO CALL TO GET_LME_MEAN
;			
;#################################################################################
;-
;******************************
ROUTINE_NAME  = 'GET_LME_GROUP'
;******************************
;######      DEFAULTS     ##########
PER= 'Y'
PROD = 'PPD'
YR_RANGE = FIX(['1998','2013'])
IF IDLTYPE(LME) EQ 'INT' THEN LME = GET_LME_NAMES(LME)

COMMON GET_LME_GROUP_,PPY
IF KEY(INIT) OR NONE(PPY) THEN BEGIN
    GONE,PPY
    DB = READ_LME_DB()& MAPS = DB.MAP
   ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
   FOR NTH = 0,N_ELEMENTS(MAPS)-1 DO BEGIN
     LME = MAPS[NTH] & PFILE,LME,/U
     S =GET_LME_MEAN(LME,PROD = PROD,PER = PER,YR_RANGE=YR_RANGE,/PPY)
     ;;;S.MEAN = S.MEAN *365.25
     S = CREATE_STRUCT(S,'GROUP',0)
     IF NONE(PPY) THEN PPY = S ELSE PPY = [PPY,S]
   ENDFOR;FOR NTH = 0,N_ELEMENTS(MAPS)-1 DO BEGIN
   ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
   PPYS = PPY.MEAN
   PERCENT=[0,10,25,75,90,100.D]   
   PERS = PERCENTILE(PPY.MEAN,PERCENT=PERCENT)
   
   
   ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
   FOR NTH = 0,N_ELEMENTS(PERS) -2 DO BEGIN
     R = [PERS[NTH],PERS(NTH+1)]
     P = [PERCENT[NTH],PERCENT(NTH+1)]
     OK = WHERE(PPYS GE R[0] AND PPYS LE R[1],COUNT)    
     PPY[OK].GROUP =(NTH+1)
   ENDFOR; FOR NTH = 0,N_ELEMENTS(PERS) -2 DO BEGIN
   ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
ENDIF;IF NONE(PPY) THEN BEGIN
IF KEY(ALL) THEN BEGIN    
  S = REVERSE(SORT(PPY.MEAN))
  RETURN,PPY(S) 
ENDIF ELSE BEGIN
  OK = WHERE(PPY.MAP EQ LME,COUNT)
  IF COUNT EQ 1 THEN RETURN, PPY[OK].GROUP
ENDELSE;IF KEY(ALL) THEN BEGIN    

 
DONE:          
	END; #####################  END OF ROUTINE ################################
