; $ID:	PLOT_LME_PAGE.PRO,	2020-07-08-15,	USER-KJWH	$
;###################################################################################################
	PRO  PLOT_LME_PAGE,FILE,DIR_OUT= DIR_OUT, $
                          SUBAREA_CODES=SUBAREA_CODES,PROD=PROD , $
                          METHODS=METHODS,DATE_MIN=DATE_MIN,DATE_MAX=DATE_MAX,STATS_COLOR=STATS_COLOR,$
                          OVERWRITE=OVERWRITE,P_MULTI=P_MULTI, SHOW_MEAN=SHOW_MEAN, SHOW_CV=SHOW_CV,TRANSFORM = TRANSFORM
                          
                          
                          
                          
                          
;+
; NAME:
;       SD_SAT_TIMESERIES_PLOT
;KEYWORDS:
;       PS: MAKE A PS PLOT[DEFAULT]
;       WRITTEN BY:  J.OREILLY
;       JUNE 2, 2003 TD REPLACE STRTRIM(STRING WITH STRTRIM IF FORMAT NOT SPECIFIC
;       NOV 18, 2003 TD MODIFY TO WORK WITH SD_ANALYSES_MAIN.PRO
;				JUL 13, 2004 TD REPLACE DIR_IN WITH FILE
;				;JAN 19,2011,JOR: STANDARDIZE DATE_AXIS FOR MONTH LABELS AND GRID LINES 
;				                 (SO VARYING TIME SERIES LENGTHS DO NOT CAUSE STAGGERING OF VERTICAL LINE AT EACH YEAR)
;             
;				JUN 17,2013,JOR,FORMATTING
;				JUN 28,2013, COPIED FROM TS_SUBAREAS_LME_PAGE_PLOT
;				JUN 30,2013,JOR: IF NTH EQ 0 THEN PRINT,DATE_FORMAT(JD_2DATE([FIRST(X_PLOT),LAST(X_PLOT)]),/YMD)
;       JUL 3,2013,JOR NOW SORT LME_PAGE BY MEAN INSTEAD OF NORTH_SOUTH
;       JUL 13,2013,JOR RANKING BY !ANNUAL MEANS:
;                   PER_MONTH =STATS_PERIOD(JD,M_MEANS,        PERIOD_CODE='MONTH',/STD,/QUIET)
;                   PER_ANNUAL =STATS_PERIOD(PER_MONTH.JD,PER_MONTH.MEAN,PERIOD_CODE='ANNUAL',/STD,/QUIET)
;                   TXT = ROUNDS(LME.ANNUAL_MEAN,2)
;       OCT 18,2013,JOR LMES = READ_LME_DB(/SORT)
;       OCT 27,2013 NOW RANK BY INPUT MAPS WHICH ARE BASED ON TAG_ANNUAL_CHLOR_A-EDIT
;                   ADDED KEYWORDES MAPS,ANNUAL_MEANS 
;       MAR 20,2014,JOR CHANGED TO: !X.OMARGIN=[12,3]
;       OCT 25,2014,JOR NOW USING GET_LME_TS, USING NONE,
;                   REMOVED KEYWORDS MAPS,ANNUAL_MEANS ,DIR_DATA,PS
;                   TXT = ROUNDS(ANNUAL_MEAN,3,/SIG)
;       DEC 4,2014,JOR, NOW USING GET_LME_MEAN()

;                   
;				
;###################################################################################################
;-
;******************************
 ROUTINE_NAME = 'PLOT_LME_PAGE'
;******************************
;COLOR_BAR  PSPRINT  REILL  P,  MERGE  MARGIN
IF NONE(PROD) THEN PROD = 'CHLOR_A'
DIR=GET_SMI()
DIR_OUT = (GET_SMI()).PLOTS
DIR_IMAGES=!S.IMAGES
DIR_DATA= !S.DATA
IF NONE(DATE_MIN) THEN DATE_MIN = '1998'
IF NONE(DATE_MAX) THEN DATE_MAX = '2013'
METHODS = '2010_20012'
IF NONE(PER) THEN PER = 'M'
IF NONE(STATS_COLOR) THEN STATS_COLOR = 0

IF NOT KEYWORD_SET(PS) AND NOT KEYWORD_SET(PNG) THEN PS = 1
  
  PAL_SW3,R,G,B
  BACKGROUND,COLOR=255
  BACKGROUND_COLOR = 254
  GRID_COLOR = 252
	SETCOLOR, BACKGROUND_COLOR
	TITLE_PAGE_CHARSIZE = 2
	STATS_CHARSIZE = 1.2
	NAME_CHARSIZE = 1
	
	;JAN 19,2011,JOR
	; ===> STANDARDIZE FOR MONTH LABELS AND GRID LINES (SO VARYING TIME SERIES LENGTHS DO NOT CAUSE STAGGERING OF VERTICAL LINE AT EACH YEAR)
	XJM=DATE_AXIS([DATE_MIN,DATE_MAX],/MONTH,ROOM=[0,1],STEP_SIZE=3,MAX_LABELS=60)
	;===> REMOVE J (JULY) BETWEEN YEARS
	OK = WHERE(XJM.TICKNAME EQ 'J!C',COUNT)
	IF COUNT GE 1 THEN XJM.TICKNAME[OK] = ' '
  XJY=DATE_AXIS([DATE_MIN,DATE_MAX],/YEAR,ROOM=[0,0],STEP_SIZE=1)
  ;===> MUST HAVE LESS THAN 60 TICKV

	
  PAGE_SUBTITLE ='CHL'
  UL='_'
  DASH='-'
  IF N_ELEMENTS(DIR_OUT) EQ 0 THEN STOP
  IF PROD EQ 'CHLOR_A' OR PROD EQ 'PPD' THEN YLOG=1 ELSE YLOG=0
 ;===> GET MEAN OF 192 MONTHS FROM 1998-2013
  DB = GET_LME_MEAN(PROD = PROD,PER= PER,/INIT,/ALL)  & H,DB
 ;===> GET MEAN OF 16 YEARS FROM 1998-2013
;  M = GET_LME_MEAN(PROD = PROD,PER= 'Y',/INIT,/ALL)  & H,M
;  ;===> SORT Y MEAN  FROM,HIGH TO LOWEST
;  M = M(REVERSE((SORT(M.MEAN))))
  
  IF N_ELEMENTS(METHODS) NE N_ELEMENTS(PROD) THEN STOP
	IF NONE(SHOW_MEAN)   THEN _SHOW_MEAN=1 ELSE _SHOW_MEAN = SHOW_MEAN
	IF NONE(SHOW_CV)     THEN _SHOW_CV=0   ELSE _SHOW_CV   = SHOW_CV
  IF NONE(OVERWRITE)   THEN _OVERWRITE = 0 ELSE _OVERWRITE = OVERWRITE
 
;===> WORKAROUND BAD PERIODS IN DB
 D = DATE_GEN(['19980101','20131231'],UNITS='DAY')
 YM = STRMID(D,0,6)
;===> CHECK FOR DUPS 
S = WHERE_SETS(YM) & PN,S
DATES = S.VALUE & PN,DATES
P  
;PERIODS = DB.PERIOD & DATES = STRMID(PERIOD_2DATE(PERIODS),0,8)
APERIOD = 'M'

JULIAN = (DATE_2JD(DATES) + DATE_2JD(DATES))/2.0 ;


IF PROD EQ 'PPD'     THEN YRANGE=[0.1,30] ; PROD PER DAY
IF PROD EQ 'CHLOR_A' THEN YRANGE=[0.01,100.0] 

XBLANK = REPLICATE(' ',N_ELEMENTS(XJM.TICKNAME))
NOTES = 'SMI'
PRODUCT_TXT =''
IF PROD EQ 'PPD' THEN PRODUCT_TXT = 'PRIMARY PRODUCTIVITY'
IF PROD EQ 'CHLOR_A' THEN PRODUCT_TXT = 'CHLOROPHYLL'
IF PROD EQ 'PAR' THEN PRODUCT_TXT = ' PAR '
IF PROD EQ 'SST' THEN PRODUCT_TXT = 'SURFACE TEMPERATURE'
IF PROD EQ 'CHLOR_EUPHOTIC' THEN PRODUCT_TXT = 'CHLOR_EUTHOTIC'
IF PROD EQ 'K_PAR' THEN PRODUCT_TXT = 'K_PAR'
TITLE_PAGE =PRODUCT_TXT + ' TRENDS IN LARGE MARINE ECOSYSTEMS' ;!C'

JULIAN_MIN = DATE_2JD(DATE_MIN) & JULIAN_MAX = DATE_2JD(DATE_MAX)
DATE_TXT = DT_FMT(JULIAN_MIN,/DMY,/MONTH) + ' - ' +  DT_FMT(JULIAN_MAX,/DMY,/MONTH)


 IF KEYWORD_SET(PS) THEN BEGIN	   
    PSFILE = DIR_OUT+ROUTINE_NAME+'-' + PROD + '.PS'
    PSPRINT,/FULL,FILENAME=PSFILE,/COLOR
 ENDIF;IF KEYWORD_SET(PS) THEN BEGIN    
  FONT_HELVETICA
  !P.CHARSIZE=1.0
  !P.REGION = 0
  !Y.OMARGIN=[6,5]
  !X.OMARGIN=[12,3]	
  !Y.MINOR=1
  !Y.TICKLEN=0.002
LMES = READ_LME_DB(/SORT) & MAPS= LMES.MAP

IF N_ELEMENTS(P_MULTI) LT 1 THEN !P.MULTI=[0,1,N_ELEMENTS(MAPS)] ELSE !P.MULTI = [0,1,P_MULTI]
TS = (GET_LME_MEAN(PROD = 'CHLOR_A',PER = 'Y',/ALL,/INIT))
S = REVERSE(SORT(TS.MEAN))
TS = TS(S)
MAPS = TS.MAP
ANNUAL_MEANS= TS.MEAN
	;     LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
	      FOR _MAP=0L,N_ELEMENTS(MAPS)-1L DO BEGIN
	      POF,_MAP,MAPS
          AMAP = MAPS(_MAP) & PFILE,AMAP,/M
          ANNUAL_MEAN = ANNUAL_MEANS(_MAP)
          OK = WHERE(LMES.MAP EQ AMAP) & LME = LMES[OK]
	        ACODE = LONG(LME.CODE)
          ANAME = GET_LME_NICKNAME(LME.MAP)
	        OK_LME = WHERE(STRUPCASE(DB.MAP) EQ AMAP,COUNT_LME)
	        IF COUNT_LME EQ 0 THEN STOP

          ;D = DB(OK_LME)
          ;===> WORKAROUND
          D = GET_LME_TS(AMAP,PROD = PROD,PER= 'M',/INIT)
          JD = DATE_2JD(DATES)& JD = JD_2JD(JD,/MONTH,/MID)
;          JD = PERIOD_2JD(D.PERIOD) & JD = JD_2JD(JD,/MONTH,/MID)
          X_PLOT = JD
          Y_PLOT = D.MEAN	       
P
	;       ===> COMPUTE STATS ON ALL MONTHS
	        OK = WHERE(Y_PLOT NE MISSINGS(Y_PLOT),COUNT)
	        IF COUNT LT 1 THEN CONTINUE

	        X_PLOT=X_PLOT[OK] & Y_PLOT=Y_PLOT[OK]
	        
	        
	        _STATS =STATS(FLOAT(Y_PLOT),DECIMALS=3,/QUIET,TRANSFORM=TRANSFORM)	        
	        IF N_ELEMENTS(STATS_COLOR) EQ 1 THEN _STATS_COLOR = STATS_COLOR ELSE _STATS_COLOR		= SD_SCALES(_STATS.MEAN  ,PROD=PROD,/DATA2BIN)
	        YSTYLE = 5

	        IF _MAP EQ N_ELEMENTS(MAPS)-1 THEN BEGIN
	          XTICKNAME=XJM.TICKNAME
	          XTITLE=' '
	        ENDIF ELSE BEGIN
	         XTICKNAME = XBLANK
	         XTITLE=''
	         YTITLE=' '
	        ENDELSE


	;       FORCE MAGNITUDE AND COLOR TO BE WITHIN YRANGE  ????
	;STOP
	        Y_FORCED =   YRANGE[0] >  FLOAT(Y_PLOT) < YRANGE[1]
;
	        XX = X_PLOT   ; DAYS SHIFTED

					AXIS_CHARSIZE=2.25
					IF N_ELEMENTS(XJM.TICKV) GT 15 THEN AXIS_CHARSIZE=1.75
					
          PLOT,[XX,XX],[Y_FORCED,Y_FORCED],YLOG=YLOG,$
          YSTYLE=YSTYLE,XTICKS=XJM.TICKS,XTICKV=XJM.TICKV,XTICKNAME=XTICKNAME,COLOR = 0,$
	        	 XTITLE=XTITLE,YTITLE=YTITLE,YRANGE=YRANGE,YMARGIN=[0,0], /NODATA ,CHARSIZE=AXIS_CHARSIZE,/NOCLIP


	        BACKGROUND,/PLOT,COLOR=BACKGROUND_COLOR
	;        FRAME,/PLOT, COLOR = 0, THICK=1
	        IF APERIOD NE 'Y' THEN GRIDS,X=XJY.TICKV,COLOR=GRID_COLOR,THICK=1,/NO_Y
	 					GRIDS,X=XJY.TICKV,COLOR=0,/ALL,THICK=3,/NO_Y

     
	        SYMBOL_COLOR= SD_SCALES(Y_FORCED,PROD=PROD,/DATA2BIN,SPECIAL_SCALE='L3B')
          ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
	        FOR NTH = 0L,N_ELEMENTS(Y_FORCED)-1 DO BEGIN
;            CIRCLE,8,FILL=1,COLOR=SYMBOL_COLOR[NTH],THICK=7
	          CIRCLE,2,FILL=0,COLOR=SYMBOL_COLOR[NTH],THICK=7
	          DATA_SYMSIZE=0.8
            DATA_SYMSIZE=3.0
            DATA_SYMSIZE=2.0
;            DATA_SYMSIZE=0.2
;	          IF APERIOD EQ 'Y' THEN DATA_SYMSIZE = 1.5
	          IF APERIOD EQ 'Y' THEN DATA_SYMSIZE = 1.5
	          IF NTH EQ 0 THEN PRINT,DATE_FORMAT(JD_2DATE([FIRST(X_PLOT),LAST(X_PLOT)]),/YMD)
	  	      PLOTS,X_PLOT[NTH],Y_FORCED[NTH],PSYM=8 ,/NOCLIP,SYMSIZE=DATA_SYMSIZE
	        ENDFOR;FOR NTH = 0L,N_ELEMENTS(Y_FORCED)-1 DO BEGIN
	        ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF

	        XPOS_RIGHT= !X.CRANGE[1] + 14 ; DAYS
	        XPOS_LEFT = !X.CRANGE[0] - 5 ; DAYS
          XPOS_LEFT = !X.CRANGE[0] - 15 ; DAYS
	        IF !Y.TYPE EQ 0 THEN BEGIN
	          YPOS= 0.30*(!Y.CRANGE[1] - !Y.CRANGE[0])+ !Y.CRANGE[0]
	        ENDIF ELSE BEGIN
	        YPOS=	10^(0.5* (!Y.CRANGE[1] - !Y.CRANGE[0]) + !Y.CRANGE[0])
	       ;   YPOS=  10^( !Y.CRANGE(0))
	        ENDELSE
	;       =====> WRITE THE LME NAME IN LEFT COLUMN
	        XYOUTS,XPOS_LEFT,YPOS-0.99,/DATA, ANAME, CHARSIZE=NAME_CHARSIZE, ALIGN = 1.03,WIDTH=CWIDTH,COLOR=0
          ;XYOUTS,XPOS_LEFT,YPOS,/DATA, ANAME, CHARSIZE=NAME_CHARSIZE, ALIGN = 1.0,WIDTH=CWIDTH,COLOR=0
	;       =====> WRITE THE STATS_STRING IN RIGHT COLUMN
          _STATS=STATS(Y_FORCED,DECIMALS=2,/QUIET)
	;;         TXT = ROUNDS(_STATS.MEAN,2)
           TXT = ROUNDS(ANNUAL_MEAN,3,/SIG)
	         XYOUTS,XPOS_RIGHT,YPOS-0.99,/DATA, TXT, CHARSIZE=STATS_CHARSIZE,COLOR=_STATS_COLOR
         
					IF _MAP EQ N_ELEMENTS(MAPS)-1 THEN BEGIN

;     =====> ADD LEGEND
;           POS=[!X.WINDOW[0],!Y.WINDOW[0]-10,!X.WINDOW[1],!Y.WINDOW[0]-0]
;            LEG=COLOR_BAR_SCALE(PROD=PROD,/TRIM,PY=160,NOTE_CHARSIZE=2,PS=1,NOTE_POS=POS)
;											
;     =====> ADD LEGEND
          POS = [ !X.WINDOW[0],0.970, !X.WINDOW[1], 0.980]  
				  LEG=COLOR_BAR_SCALE(PROD=PROD,/TRIM,PY=95,/PS,CHARSIZE=TITLE_PAGE_CHARSIZE,POS=POS)
          
          
				    TXT = "J.E. O'Reilly"
			;	    TXT = TXT +   ',  SEAWIFS CHLOROPHYLL, SEAWIFS PAR, AVHRR SST (JPL)'
;				    XYOUTS, 0.5, 0.002,/NORMAL, TXT, ALIGN=0.3,CHARSIZE=NAME_CHARSIZE*0.75
;            XYOUTS, 0.5, 0.001,/NORMAL, TXT, ALIGN=0.3,CHARSIZE=NAME_CHARSIZE*1.25
            XYOUTS, 0.90, 0.001,/NORMAL, TXT, ALIGN=0.3,CHARSIZE=NAME_CHARSIZE*0.75
				    XYZ=CONVERT_COORD(XPOS_RIGHT,YPOS,/DATA,/TO_NORMAL)
				    TXT=''
				    IF _SHOW_MEAN THEN TXT = 'MEAN'
				    IF _SHOW_MEAN AND _SHOW_CV THEN TXT = 'MEAN  CV'
				    XYOUTS,XYZ[0],0.95,/NORMAL, TXT,COLOR=0,CHARSIZE=STATS_CHARSIZE,ALIGN= 0.25
					ENDIF

	      ENDFOR;   FOR N=0L,N_ELEMENTS(MAP)-1L DO BEGIN
	      
	      XYOUTS, 0.45, 1.05,/NORMAL, TITLE_PAGE, ALIGN=0.5,CHARSIZE=TITLE_PAGE_CHARSIZE
	      
        IF KEYWORD_SET(PS) THEN PSPRINT
       
        PRINT 
        PFILE,PSFILE,/W
      

 

 
END; #####################  END OF ROUTINE ################################
