; $ID:	MAKE_A_CDOM_300_KM_SAVE.PRO,	2020-07-08-15,	USER-KJWH	$
;#############################################################################################################
	PRO MAKE_A_CDOM_300_KM_SAVE
	
;  PRO MAKE_A_CDOM_300_KM_SAVE
;+
; NAME:
;		MAKE_A_CDOM_300_KM_SAVE
;
; PURPOSE: THIS PROGRAM MAKES SAVE FILES FOR A_CDOM_300_KM
;
; CATEGORY:
;		ALGORITHM
;		 
;
; CALLING SEQUENCE: MAKE_A_CDOM_300_KM_SAVE
;
; INPUTS: NONE
;		
; OPTIONAL INPUTS:	NONE:	
;		
; KEYWORD PARAMETERS:	NONE:
;	
; OUTPUTS: MAKES A SD SAVE FOR EACH DAYS KAHRU-MITCHEL A_CDOM
;		
;; EXAMPLES: MAKE_A_CDOM_300_KM_SAVE
;
; MODIFICATION HISTORY:
;			WRITTEN APR 18,2013 J.O'REILLY
;			APR 25,2013,JOR,MODIFIED TO HANDLE AQUA,TERRA [488,531] TO ESTIMATE 510 FOR K_M ALGORTHM
;			FEB 26,2014,JOR: S = READHDF(FILE_443)  & IF IDLTYPE(S) NE 'STRUCT' THEN CONTINUE  ELSE DATA_443 = S.L3M_DATA
;			                 IF SENSOR EQ 'OCTS' THEN BEGIN ; [USE RRS_516 FOR RRS_510]
;			                 A_CDOM = A_CDOM_300_KM(DATA_443, DATA_516,/USE_520)

;  NOTES:
;  ;===> NOTE THAT SEAWIFS AND MERIS HAVE 443 AND 510 BUT AQUA, AND TERRA HAVE 443 AND [488 & 531] 
;        WHICH MUST BE GEOMETRICALLY-AVERAGED TO ESTIMATE 510
;        FOR OCTS 516 IS USED FOR 520
;
;						
;#################################################################################
;-
;****************************************
ROUTINE_NAME  = 'MAKE_A_CDOM_300_KM_SAVE'
;****************************************
;SKIPPING

;
;#################################################
SENSORS= ['SEAWIFS','MERIS','TERRA','AQUA','OCTS']
;#################################################

;SENSORS = ['OCTS','TERRA']

;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FOR _SENSOR = 0,N_ELEMENTS(SENSORS)-1 DO BEGIN
  SENSOR = SENSORS(_SENSOR)
  
  ;*****************************************************  
  IF SENSOR EQ 'SEAWIFS' OR SENSOR EQ 'MERIS' THEN BEGIN 
  ;*****************************************************
  LET = STRMID(SENSOR,0,1)
  PROD = 'A_CDOM' &  ALG = 'K_M'
  FILES =[ FILE_SEARCH('I:\SMI\BZ2\',LET+'*RRS_443*.BZ2'), FILE_SEARCH('I:\SMI\BZ2\',LET+'*RRS_510*.BZ2')]
  IF N_ELEMENTS(FILES) EQ 0 THEN MESSAGE,'FILES ARE REQUIRED'
  DIR_OUT = 'I:\SMI\SAVE\'
  SMI_MISSING_CODE = -32767.0
  IDL_MISSING_CODE = MISSINGS(0.0)
  PF,FILES,/R
  FN = FILE_PARSE(FILES)
  NAMES = FN.FIRST_NAME
  DATES = STRMID(SATDATE_2DATE(NAMES),0,8)
  SETS = WHERE_SETS(DATES)
  OK = WHERE(SETS.N EQ 2,COUNT)
  SETS = SETS[OK]
  
  
  ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
  FOR _SET = 0,N_ELEMENTS(SETS)-1L DO BEGIN
    POF,_SET,SETS
    SET = SETS(_SET)
    SUBS = WHERE_SETS_SUBS(SET)
    FILE_443 = FILES(SUBS[0])  &   FILE_510 = FILES(SUBS[1])
    FN_443 = FILE_PARSE(FILE_443) & FN_510 = FILE_PARSE(FILE_510)
    ;===> ENSURE 443 AND 510 ARE FROM THE SAME SENSOR
    IF STRMID(FN_443.FIRST_NAME,0,1) NE STRMID(FN_510.FIRST_NAME,0,1)THEN MESSAGE,'NOT THE SAME SENSOR'
    ADATE = STRMID(SATDATE_2DATE(FN_510.FIRST_NAME),0,8)
    DOY = DATE_2DOY(ADATE)
    PERIOD='D_' + ADATE
    ;;SAVEFILE = DIR_OUT + PERIOD +'-OCTS_SEAWIFS_TERRA_AQUA_MERIS-SMI-2010_12-K_M-'+ PROD + '.SAVE'
    SAVEFILE = DIR_OUT + PERIOD +'-'+ SENSOR + '-'+ 'SMI-2010_12-K_M-'+ PROD + '.SAVE'
    
    EXIST=FILE_TEST(SAVEFILE)
    IF EXIST EQ 1 AND NOT KEYWORD_SET(OVERWRITE) THEN BEGIN
      PRINT,'SKIPPING ' + SAVEFILE
     CONTINUE;>>>>>>>>>>>>>>>>>>>
      
    END;IF EXIST EQ 1 AND NOT KEYWORD_SET(OVERWRITE) THEN BEGIN
    
    S = READHDF(FILE_443) & DATA_443 = S.L3M_DATA
    S = READHDF(FILE_510) & DATA_510 = S.L3M_DATA
    OK = WHERE(DATA_443 EQ SMI_MISSING_CODE  OR DATA_443 LE 0,COUNT) & IF COUNT GE 1 THEN DATA_443[OK] = MISSINGS(DATA_443)
    OK = WHERE(DATA_510 EQ SMI_MISSING_CODE  OR DATA_510 LE 0,COUNT) & IF COUNT GE 1 THEN DATA_510[OK] = MISSINGS(DATA_510)
    
    ; ===> TRANSFORM RRS TO LWN
    DATA_443 = RRS_2LWN(DATA_443,DOY=DOY,SENSOR=SENSOR, WL=443)
    DATA_510 = RRS_2LWN(DATA_510,DOY=DOY,SENSOR=SENSOR, WL=510)
    
    MISSING   = MISSINGS(DATA_443)
    
    A_CDOM = A_CDOM_300_KM(DATA_443, DATA_510 )  
    
    SLOPE = 1.0
    INTERCEPT = 0.0
    SCALING = 'Linear'

    MISSING_CODE=MISSINGS(A_CDOM)
    TRANSFORMATION=''
    DATA_UNITS=UNITS(PROD)
    GONE,DATA_443
    GONE,DATA_510
  
    STRUCT_SD_WRITE,SAVEFILE,PROD=PROD, ALG=ALG,MAP = 'SMI',$
                IMAGE=A_CDOM,    MISSING_CODE=MISSING_CODE, $
                MASK=MASK, CODE_MASK=CODE_MASK,    CODE_NAME_MASK=CODE_NAME_MASK, $
                SCALING=SCALING,  INTERCEPT=INTERCEPT,    SLOPE=SLOPE,   DATA_UNITS=DATA_UNITS,$
                TRANSFORMATION=TRANSFORMATION,$
                PERIOD=PERIOD, $
  
                  INFILE=[FILE_443,FILE_510],$
                  NOTES=NOTES
  ENDFOR;FOR _SET = 0,N_ELEMENTS(SETS)-1L DO BEGIN
  ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
  
  ENDIF;IF SENSOR EQ 'SEAWIFS' OR SENSOR EQ 'MERIS' THEN BEGIN 
  ;|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

 ;*****************************************************  
  IF SENSOR EQ 'AQUA' OR SENSOR EQ 'TERRA' THEN BEGIN 
  ;*****************************************************
  LET = STRMID(SENSOR,0,1)
  PROD = 'A_CDOM' &  ALG = 'K_M'
  FILES =[  FILE_SEARCH('I:\SMI\BZ2\',LET+'*RRS_443*.BZ2'),$
            FILE_SEARCH('I:\SMI\BZ2\',LET+'*RRS_488*.BZ2'),$
            FILE_SEARCH('I:\SMI\BZ2\',LET+'*RRS_531*.BZ2')]
  IF N_ELEMENTS(FILES) EQ 0 THEN MESSAGE,'FILES ARE REQUIRED'
  
  DIR_OUT = 'I:\SMI\SAVE\'
  SMI_MISSING_CODE = -32767.0
  IDL_MISSING_CODE = MISSINGS(0.0)
  
  
  PF,FILES,/R
  FN = FILE_PARSE(FILES)
  NAMES = FN.FIRST_NAME
  DATES = STRMID(SATDATE_2DATE(NAMES),0,8)
  SETS = WHERE_SETS(DATES)
  OK = WHERE(SETS.N EQ 3,COUNT); MUST HAVE 443,488,531 TRIPLET
  SETS = SETS[OK]
  SETS = STRUCT_REVERSE(SETS)
  
  ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
  FOR _SET = 0,N_ELEMENTS(SETS)-1L DO BEGIN
    POF,_SET,SETS
    SET = SETS(_SET)
    SUBS = WHERE_SETS_SUBS(SET)
    FILE_443 = FILES(SUBS[0])  
    FILE_488 = FILES(SUBS[1]) 
    FILE_531 = FILES(SUBS(2))
    FN_443 = FILE_PARSE(FILE_443) 
        
    ADATE = STRMID(SATDATE_2DATE(FN_443.FIRST_NAME),0,8)
    DOY = DATE_2DOY(ADATE)
    PERIOD='D_' + ADATE
    SAVEFILE = DIR_OUT + PERIOD +'-'+ SENSOR + '-'+ 'SMI-2010_12-K_M-'+ PROD + '.SAVE'
    EXIST=FILE_TEST(SAVEFILE)
    
    IF EXIST EQ 1 AND NOT KEYWORD_SET(OVERWRITE) THEN BEGIN
      PRINT,'SKIPPING ' + SAVEFILE
     CONTINUE;>>>>>>>>>>>>>>>>>>>      
    END;IF EXIST EQ 1 AND NOT KEYWORD_SET(OVERWRITE) THEN BEGIN 
         
    S = READHDF(FILE_443)  & IF IDLTYPE(S) NE 'STRUCT' THEN CONTINUE  ELSE DATA_443 = S.L3M_DATA
    S = READHDF(FILE_488)  & IF IDLTYPE(S) NE 'STRUCT' THEN CONTINUE  ELSE DATA_488 = S.L3M_DATA
    S = READHDF(FILE_531)  & IF IDLTYPE(S) NE 'STRUCT' THEN CONTINUE  ELSE DATA_531 = S.L3M_DATA
    OK = WHERE(DATA_443 EQ SMI_MISSING_CODE  OR DATA_443 LE 0,COUNT) & IF COUNT GE 1 THEN DATA_443[OK] = MISSINGS(DATA_443)
    OK = WHERE(DATA_488 EQ SMI_MISSING_CODE  OR DATA_488 LE 0,COUNT) & IF COUNT GE 1 THEN DATA_488[OK] = MISSINGS(DATA_488)
    OK = WHERE(DATA_531 EQ SMI_MISSING_CODE  OR DATA_531 LE 0,COUNT) & IF COUNT GE 1 THEN DATA_531[OK] = MISSINGS(DATA_531)
    ; ===> TRANSFORM RRS TO LWN
    DATA_443 = RRS_2LWN(DATA_443,DOY=DOY,SENSOR=SENSOR, WL=443)
    DATA_488 = RRS_2LWN(DATA_488,DOY=DOY,SENSOR=SENSOR, WL=488)
    DATA_531 = RRS_2LWN(DATA_531,DOY=DOY,SENSOR=SENSOR, WL=531)
    MISSING   = MISSINGS(DATA_443)
    
; #####   COMPUTE THE GEOMETRIC MEAN OF 488 AND 531     #####
    DATA_510 = EXP( (ALOG(DATA_488) +  ALOG(DATA_531))/2.0)   
    
    A_CDOM = A_CDOM_300_KM(DATA_443, DATA_510 )  
    SLOPE = 1.0
    INTERCEPT = 0.0
    SCALING = 'Linear'
  
    MISSING_CODES=MISSINGS(A_CDOM)
    TRANSFORMATION=''
    DATA_UNITS=UNITS(PROD)
    GONE,DATA_443
    GONE,DATA_488
    GONE,DATA_531
  
    STRUCT_SD_WRITE,SAVEFILE,PROD=PROD, ALG=ALG,$
                IMAGE=A_CDOM,    MISSING_CODE=missing_codes, $
                MASK=MASK, CODE_MASK=CODE_MASK,    CODE_NAME_MASK=CODE_NAME_MASK, $
                SCALING=SCALING,  INTERCEPT=INTERCEPT,    SLOPE=SLOPE,   DATA_UNITS=DATA_UNITS,$
                TRANSFORMATION=TRANSFORMATION,$
                PERIOD=PERIOD, $
  
                  INFILE=[FILE_443,FILE_488,FILE_531],$
                  NOTES=NOTES
                  
                  
  ENDFOR;FOR _SET = 0,N_ELEMENTS(SETS)-1L DO BEGIN
  ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
  
  ENDIF;IF SENSOR EQ 'AQUA' OR SENSOR EQ 'TERRA' THEN BEGIN 
;|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
;
;
;*****************************************************
IF SENSOR EQ 'OCTS' THEN BEGIN
  ;***************************************************
  LET = STRMID(SENSOR,0,1)
  PROD = 'A_CDOM' &  ALG = 'K_M'
  FILES =[ FILE_SEARCH('I:\SMI\BZ2\',LET+'*RRS_443*.BZ2'), FILE_SEARCH('I:\SMI\BZ2\',LET+'*RRS_516*.BZ2')]
  IF N_ELEMENTS(FILES) EQ 0 THEN MESSAGE,'FILES ARE REQUIRED'
  DIR_OUT = 'I:\SMI\SAVE\'
  SMI_MISSING_CODE = -32767.0
  IDL_MISSING_CODE = MISSINGS(0.0)
  PF,FILES,/R
  FN = FILE_PARSE(FILES)
  NAMES = FN.FIRST_NAME
  DATES = STRMID(SATDATE_2DATE(NAMES),0,8)
  SETS = WHERE_SETS(DATES)
  OK = WHERE(SETS.N EQ 2,COUNT)
  SETS = SETS[OK]
  
  
  ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
  FOR _SET = 0,N_ELEMENTS(SETS)-1L DO BEGIN
    POF,_SET,SETS
    SET = SETS(_SET)
    SUBS = WHERE_SETS_SUBS(SET)
    FILE_443 = FILES(SUBS[0])  &   FILE_516 = FILES(SUBS[1])
    FN_443 = FILE_PARSE(FILE_443) & FN_516 = FILE_PARSE(FILE_516)
    ;===> ENSURE 443 AND 516 ARE FROM THE SAME SENSOR
    IF STRMID(FN_443.FIRST_NAME,0,1) NE STRMID(FN_516.FIRST_NAME,0,1)THEN MESSAGE,'NOT THE SAME SENSOR'
    ADATE = STRMID(SATDATE_2DATE(FN_516.FIRST_NAME),0,8)
    DOY = DATE_2DOY(ADATE)
    PERIOD='D_' + ADATE
    ;;SAVEFILE = DIR_OUT + PERIOD +'-OCTS_SEAWIFS_TERRA_AQUA_MERIS-SMI-2010_12-K_M-'+ PROD + '.SAVE'
    SAVEFILE = DIR_OUT + PERIOD +'-'+ SENSOR + '-'+ 'SMI-2010_12-K_M-'+ PROD + '.SAVE'
    
    EXIST=FILE_TEST(SAVEFILE)
    IF EXIST EQ 1 AND NOT KEYWORD_SET(OVERWRITE) THEN BEGIN
      PRINT,'SKIPPING ' + SAVEFILE
      CONTINUE;>>>>>>>>>>>>>>>>>>>
      
    END;IF EXIST EQ 1 AND NOT KEYWORD_SET(OVERWRITE) THEN BEGIN
    
    S = READHDF(FILE_443) & DATA_443 = S.L3M_DATA
    S = READHDF(FILE_516) & DATA_516 = S.L3M_DATA
    OK = WHERE(DATA_443 EQ SMI_MISSING_CODE  OR DATA_443 LE 0,COUNT) & IF COUNT GE 1 THEN DATA_443[OK] = MISSINGS(DATA_443)
    OK = WHERE(DATA_516 EQ SMI_MISSING_CODE  OR DATA_516 LE 0,COUNT) & IF COUNT GE 1 THEN DATA_516[OK] = MISSINGS(DATA_516)
    
    ; ===> TRANSFORM RRS TO LWN
    DATA_443 = RRS_2LWN(DATA_443,DOY=DOY,SENSOR=SENSOR, WL=443)
    DATA_516 = RRS_2LWN(DATA_516,DOY=DOY,SENSOR=SENSOR, WL=516)
    
    MISSING   = MISSINGS(DATA_443)
    ;###> FOR OCTS USE THE 443,520 COEFFICIENTS:/USE_520
    A_CDOM = A_CDOM_300_KM(DATA_443, DATA_516,/USE_520)
    
    SLOPE = 1.0
    INTERCEPT = 0.0
    SCALING = 'Linear'
    
    MISSING_CODE=MISSINGS(A_CDOM)
    TRANSFORMATION=''
    DATA_UNITS=UNITS(PROD)
    GONE,DATA_443
    GONE,DATA_516
    
    STRUCT_SD_WRITE,SAVEFILE,PROD=PROD, ALG=ALG,MAP = 'SMI',$
      IMAGE=A_CDOM,    MISSING_CODE=MISSING_CODE, $
      MASK=MASK, CODE_MASK=CODE_MASK,    CODE_NAME_MASK=CODE_NAME_MASK, $
      SCALING=SCALING,  INTERCEPT=INTERCEPT,    SLOPE=SLOPE,   DATA_UNITS=DATA_UNITS,$
      TRANSFORMATION=TRANSFORMATION,$
      PERIOD=PERIOD, $
      
      INFILE=[FILE_443,FILE_516],$
      NOTES=NOTES
  ENDFOR;FOR _SET = 0,N_ELEMENTS(SETS)-1L DO BEGIN
  ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
  
ENDIF;IF SENSOR EQ 'OCTS' THEN BEGIN
;|||||||||||||||||||||||||||||||||||


ENDFOR;FOR _SENSOR = 0,N_ELEMENTS(SENSORS)-1 DO BEGIN
;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
DONE:

END; #####################  END OF ROUTINE ################################
