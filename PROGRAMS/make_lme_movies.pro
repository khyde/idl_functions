; $ID:	MAKE_LME_MOVIES.PRO,	2020-07-08-15,	USER-KJWH	$

	PRO MAKE_LME_MOVIES, ERROR = error

;+
; NAME:
;		TEMPLATE
;
; PURPOSE:
;		This procedure will make movies for each individual LME
;
; CATEGORY:
;		CATEGORY
;
; CALLING SEQUENCE:
;
; INPUTS:
;		Parm1:	Describe the positional input parameters here. Note again that positional parameters are shown with Initial Caps.
;
; OPTIONAL INPUTS:
;		Parm2:	Describe optional inputs here. If you don't have any, just delete this section.
;
; KEYWORD PARAMETERS:
;		KEY1:	Document keyword parameters like this. Note that the keyword is shown in ALL CAPS!
;
; OUTPUTS:
;		This function returns the
;
; OPTIONAL OUTPUTS:
;		ERROR:     Any Error messages are placed in ERROR, if no errors then ERROR = ''
;
; COMMON BLOCKS: If no common blocks then delete this line
; SIDE EFFECTS:	 If no side effects then delete this line
; RESTRICTIONS:  If no restrictions then delete this line
;
;	PROCEDURE:
;			This is usually a description of the method, or any data manipulations
;
; EXAMPLE:
;
;	NOTES:
;		This routine will display better if you set your tab to 2 spaces:
;	  (Preferences, Editor, The TAB Number of spaces to indent for each Tab: 2)

;		Citations or any other useful notes
;
;
; MODIFICATION HISTORY:
;			Written May 6, 2008 by K.J.W. Hyde, 28 Tarzwell Drive, NMFS, NOAA 02882 (kimberly.hyde@noaa.gov)
;     Apr 17,2010 T.Ducas Add COMBO steps
;-
;	****************************************************************************************************
	ROUTINE_NAME = 'MAKE_LME_MOVIES'
	PAL_SW3, R,G,B
	ASTER='*'
	UL='_'
	DASH='-'

	DO_TS_IMAGES_2PNGS         	= 0
	DO_ANNUAL_ROBINSON_BROWSE  	= 0
	DO_PNG_2AVI                	= 0
	DO_COMBO_BROWSE        			= 0
	DO_TITLE_COMBO_BROWSE     	= 0
	DO_COMBO_MOVIE         			= 0

	DO_TITLE_BROWSE             = 0
	DO_TITLE_SLIDE              = 1


	COMPUTER = GET_COMPUTER()
	IF COMPUTER EQ 'KHYDE-XP' THEN DIR = 'C' ELSE DIR = 'D'
	LME = READALL(DIR + ':\IDL\DATA\LME_NAMES.CSV')
	CODES = FIX(LME.CODE)

	DIR_LME = 'T:\PROJECTS\LME'

	IF FILE_TEST(DIR_LME,/DIRECTORY) EQ 0L THEN FILE_MKDIR,DIR_LME


;	***************************************************************
	IF DO_TS_IMAGES_2PNGS GE 1 THEN BEGIN
;	***************************************************************
		OVERWRITE = DO_TS_IMAGES_2PNGS GE 2


		CODES = 48
		MAP_OUT='YELLOW_SEA'
	  PRODS = ['SST']
	 ; PRODS = ['PPD']
	  PRODS = ['CHLOR_A']


	 	ADD_LEG=1
	  ADDDATE=0
	  ADD_BATHY=0
	  ADD_LAND=1
	  ADD_COAST=1

	  ADD_LME_OUTLINE=1
	  OUTLINE_THICK=1
	  OUTLINE_COLOR=255
	  ADD_MAP=1
	  COAST_COLOR = 0
	  ADD_COLORBAR=1
	  ADD_DATEBAR=1
	  ADD_SENSOR=0
	  ADD_METHOD=0
	  ADD_PROD=0
	  ADD_ALG=0
	  ADD_SOURCE=1
	  add_time_scale=1
	  REGIONS=''
	  PAL='PAL_SW3'
	  MAP_IN='L3B'

		IF MAP_OUT EQ 'YELLOW_SEA' THEN BEGIN
			ADD_COAST=0
			OUTLINE_COLOR=0
			OUTLINE_THICK=0
		ENDIF
	  FOR _PROD = 0L, N_ELEMENTS(PRODS)-1 DO BEGIN
	  	APROD = PRODS(_PROD)
	  	IF APROD EQ 'CHLOR_A' THEN DIR_IN = 'S:\OC-SEA_AQU-9-L3B\ts_images\save\'
			;IF APROD EQ 'CHLOR_A' THEN DIR_IN = 'S:\OC-SEA_AQU-9-L3B\ts_images\save_60days\'
	  	IF APROD EQ 'SST'     THEN DIR_IN = 'T:\SST-4-L3B\ts_images\save\'
	  	IF APROD EQ 'PPD'     THEN DIR_IN = 'T:\PP-N4AT-L3B\ts_images\SAVE\'
	  	;FILES = FILELIST(DIR_IN + '!D_*' + APROD + '*.SAVE')

	FILES = FILELIST(DIR_IN + '!D_20*' + APROD + '*.SAVE')

stop
			FOR NTH=0L, N_ELEMENTS(CODES)-1 DO BEGIN
				ACODE = CODES[NTH]
				OK = WHERE(ACODE EQ LME.CODE)
				ANAME = STRUPCASE(REPLACE(STRTRIM(LME[OK].NAME,2),' ','_'))
				DIR_OUT = DIR_LME + '\'+ NUM2STR(ACODE) + '-' + ANAME + '\BROWSE\'
				;DIR_OUT = DIR_LME + '\'+ NUM2STR(ACODE) + '-' + ANAME + '\BROWSE_60days\'
				IF FILE_TEST(DIR_OUT,/DIR) EQ 0 THEN FILE_MKDIR,DIR_OUT

	    	STRUCT_SD_2PNG, FILES, DIR_OUT=DIR_OUT,$
	          BACKGROUND=Abackground,LAND_COLOR=Aland_color,FLAG_COLOR=Aflag_color,MISS_COLOR=Amiss_color,$
	          OUTSCAN_COLOR=Aoutscan_color,OUTMAP_COLOR=Aoutmap_color,ALGFAIL_COLOR=Aalgfail_color,$
	         	HI_LO_COLOR=Ahi_lo_color,BATHY_COLOR=ABATHY_COLOR,CRITERIA_COLOR=ACRITERIA_COLOR,$
	          PAL=pal,ADD_COLORBAR=ADD_COLORBAR, ADD_DATEBAR=ADD_DATEBAR,ADDDATE=adddate, ADD_SENSOR=ADD_SENSOR,ADD_ALG=ADD_ALG, $
	          ADD_PROD=ADD_PROD,ADD_METHOD=ADD_METHOD,ADD_SOURCE=ADD_SOURCE,ADD_BATHY=ADD_BATHY,ADD_LAND=ADD_LAND,$
	          ADD_COAST=ADD_COAST,COAST_COLOR= COAST_COLOR,ADD_MAP=ADD_MAP,$
	          ADD_LME_OUTLINE=ADD_LME_OUTLINE,OUTLINE_THICK=OUTLINE_THICK,OUTLINE_COLOR=OUTLINE_COLOR,$
	          CRITERIA_RANGE=_CRITERIA_RANGE,CRITERIA_OPER=_CRITERIA_OPER,$
	          IMAGE_SCALE=image_scale,OVERWRITE=overwrite,QUIET=quiet,$
						MAP_OUT='LMES',LME_CODE_OUT=ACODE, LME_NAME_OUT=ANAME

			ENDFOR
		ENDFOR
	ENDIF




;	***************************************************************
	IF DO_ANNUAL_ROBINSON_BROWSE GE 1 THEN BEGIN
;	***************************************************************
		OVERWRITE = DO_ANNUAL_ROBINSON_BROWSE GE 2
		; Have these browses ready for remap to individual lmes
		PRODS=['CHLOR_A','SST','PPD']
		DIR_OUT = DIR_LME + '\ANNUAL_ROBINSON_BROWSE\'
		IF FILE_TEST(DIR_OUT,/DIR) EQ 0 THEN FILE_MKDIR,DIR_OUT
		FOR _PROD =0,N_ELEMENTS(PRODS)-1L DO BEGIN
			APROD=PRODS(_PROD)
			IF APROD EQ 'CHLOR_A' THEN SAVEFILE='S:\OC-SEA_AQU-9-L3B\STATS\!ANNUAL-SEA_AQU-REPRO5-9-L3B-CHLOR_A-OC4-MEAN.SAVE'
			IF APROD EQ 'SST' THEN SAVEFILE='T:\SST-4-L3B\STATS\!ANNUAL-N4AT-4-L3B-SST-MEAN.SAVE'
			IF APROD EQ 'PPD' THEN SAVEFILE='T:\PP-N4AT-L3B\STATS\!ANNUAL-SA_N4AT-9_4-L3B-PPD-OPAL-MEAN.SAVE'
			EXIST=FILE_TEST(SAVEFILE)
			IF EXIST EQ 1 THEN STRUCT_SD_2PNG,SAVEFILE,MAP_OUT=ROBINSON,PAL='PAL_SW3',DIR_OUT=DIR_OUT,/ADD_LAND
		ENDFOR

	ENDIF;IF DO_ANNUAL_ROBINSON_BROWSE GE 1 THEN BEGIN




;	***************************************************************
	IF DO_PNG_2AVI GE 1 THEN BEGIN
;	***************************************************************
		OVERWRITE = DO_PNG_2AVI GE 2
		CODES   = [48]
		MAP_OUT = ['YELLOW_SEA']
	  PRODS  = ['SST']
	 ; PRODS  = ['PPD']
	 ; PRODS   = ['CHLOR_A']
	  PAL='PAL_SW3'
 		QUALITY=100.
    FPS=10
		TITLE_SLIDE=1
		TITLE_SLIDE='ANNUAL'
    N_TITLE=20
    DO_PERIOD='!D'
    TYPE = ''
		DATE_RANGE=['19970917000000','20200131235959']
	;	DATE_RANGE=['20050101000000','20050831235959']
  	DIR_ANNUAL_ROBINSON_BROWSE = DIR_LME + '\ANNUAL_ROBINSON_BROWSE\'
    MOVIE_COUNT=0
    ; This follows analyses_main logic to allow various date_ranges,could have single years
		MOVIE_DATES=['','']
		MOVIE_DATES=[[MOVIE_DATES],[DATE_RANGE]]
		MOVIE_DATES=EXTRAC(MOVIE_DATES,0,1,2,(N_ELEMENTS(MOVIE_DATES)-2)/2)
		MOVIES= N_ELEMENTS(MOVIE_DATES)/2

		FOR _PROD = 0,N_ELEMENTS(PRODS)-1L DO BEGIN
			APROD=PRODS(_PROD)
			FOR _CODE = 0,N_ELEMENTS(CODES)-1L DO BEGIN
       	ACODE = CODES(_CODE)
				OK = WHERE(ACODE EQ LME.CODE)
				AMAP = STRUPCASE(REPLACE(STRTRIM(LME[OK].NAME,2),' ','_'))
				DIR_IN = DIR_LME + '\'+ NUM2STR(ACODE) + '-' + AMAP + '\BROWSE\'
				;DIR_IN = DIR_LME + '\'+ NUM2STR(ACODE) + '-' + AMAP + '\BROWSE_60days\'

stop
				DIR_OUT= DIR_LME + '\'+ NUM2STR(ACODE) + '-' + AMAP + '\MOVIE\'
				IF FILE_TEST(DIR_OUT,/DIR) EQ 0 THEN FILE_MKDIR,DIR_OUT
				FILES = FILELIST(DIR_IN + '!D_*' + APROD + '*.PNG')

      	IF FILES[0] EQ '' THEN BEGIN
      		PRINT, 'No files found for prod:  ',APROD,'   in folder:  ',DIR_IN
      		CONTINUE
      	ENDIF
      	FA=PARSE_IT(FILES)
	      MAPS_INFO=MAPS_SIZE(AMAP)
	      _YOFFSET=0
	      IF AMAP EQ 'MED_SEA' THEN _YOFFSET = .15
	      IF AMAP EQ 'YELLOW_SEA' THEN _YOFFSET = .15
				TITLE_FILE_PNG  = DIR_OUT+'!ANNUAL-'+AMAP+'-'+APROD+'-MEAN.PNG'
		    ; use stats browse for title slide
				IF TITLE_SLIDE EQ 'ANNUAL' THEN BEGIN
					ROBINSON_BROWSE = FILE_SEARCH(DIR_ANNUAL_ROBINSON_BROWSE +'!ANNUAL*-ROBINSON-*'+APROD+'-*MEAN.PNG')
					IF FILE_TEST(TITLE_FILE_PNG) EQ 0 AND ROBINSON_BROWSE[0] NE '' THEN BEGIN
						ROBINSON_BROWSE=READ_PNG(ROBINSON_BROWSE,R,G,B)
						IMAGE = MAP_REMAP(ROBINSON_BROWSE,MAP_IN='ROBINSON',MAP_OUT='LME_'+AMAP)
						WRITE_PNG,TITLE_FILE_PNG,IMAGE,R,G,B
				  	IMAGE=''
				  	ROBINSON_BROWSE=''
					ENDIF

				  FILE=FILE_SEARCH(TITLE_FILE_PNG)
				  IF FILE[0] NE '' THEN TITLE_FILE_PNG = FILE[0] ELSE TITLE_FILE_PNG=FA[0].FULLNAME
				ENDIF ELSE  TITLE_FILE_PNG = FA[0].FULLNAME


				FOR _MOVIE=0,MOVIES -1  DO BEGIN

					DATE_START=MOVIE_DATES(0,_MOVIE)
		    	DATE_END=MOVIE_DATES(1,_MOVIE)

			  	OK= WHERE(FA.DATE_START GE DATE_START AND FA.DATE_END LE DATE_END,COUNT)

			    IF COUNT GT 1 THEN BEGIN
						_FA=FA[OK]
						DD='!DD_'+STRMID(FIRST(_FA.DATE_START),0,8)+UL +STRMID(LAST(_FA.DATE_END),0,8)

				    FILE_LABEL_LIST=['SENSOR','SATELLITE', 'METHOD','COVERAGE','MAP','PROD','ALG']
				    _FILE_LABEL=FILE_LABEL_MAKE(_FA[0].FIRST_NAME,LIST=FILE_LABEL_LIST)

				    ; GET IMAGE SIZE & USER IN AVI_FILE NAME
				    IMAGE = READALL(_FA[0].FULLNAME)
				    SZ=SIZE(IMAGE,/STRUCT)
				    IF SZ.N_DIMENSIONS EQ 3 THEN N = 1 ELSE N = 0
				    WIDTH   = SZ.DIMENSIONS(N)
				    HEIGHT  = SZ.DIMENSIONS(N+1)
				    AVI_FILE  = DIR_OUT + DD +DASH+_FILE_LABEL+DASH+'PXY_'+NUM2STR(WIDTH)+'_'+NUM2STR(HEIGHT)+'.AVI'
				    FA_OUT = FILE_ALL(AVI_FILE)

				   	IF FA_OUT.FULLNAME NE '' AND FA_OUT.MTIME GT MAX(_FA.MTIME)  AND OVERWRITE EQ 0 THEN CONTINUE

		        MAKE_AVI,FILES=_FA.FULLNAME,DIR_OUT=dir_out,PAL=pal, $
		                  BITS=bits,QUALITY=quality, FPS=fps,MAP=AMAP,$
		                  TITLE_FILE_PNG=TITLE_FILE_PNG,TITLE_SLIDE=TITLE_SLIDE,N_TITLE=N_TITLE,TYPE=TYPE,$
		                  AVI_FILE=avi_file,YOFFSET=_YOFFSET

			    ENDIF ELSE BEGIN
			        PRINT, 'No files for '+ target + ' found in ' + _DIR_IN
			    ENDELSE; IF COUNT GT 1

				ENDFOR;	FOR _MOVIE=0,N_ELEMENTS(MOVIES) -1  DO BEGIN
	    ENDFOR ; FOR _CODE =0,N_ELEMENTS(CODES)-1L DO BEGIN
		ENDFOR; FOR _PROD=0,N_ELEMENTS(PRODS)-1L DO BEGIN
	ENDIF




  ; ***************************************************************
    IF KEYWORD_SET(DO_COMBO_BROWSE) THEN BEGIN
  ; *****************************************************************
      _OVERWRITE = 0

			CODES   = 48
			MAP_OUT = 'YELLOW_SEA'
			PRODS   = ['CHLOR_A','SST']
	    PAL     = ['PAL_SW3','PAL_SW3']

   		_SCALE = 1.0
	    ; _SCALE = 0.5
	    SPACE = 2
	    _BACKGROUND=255
	    _LANDSCAPE=1
	    _PORTRAIT=0
		 	DATE_START='19970917000000'
		 	DATE_START='20091002000000'
	  	DATE_END	='20100401235959'
			PERIOD_CODE='!D'

			FOR NTH=0L, N_ELEMENTS(CODES)-1 DO BEGIN
				ACODE = CODES[NTH]
				OK = WHERE(ACODE EQ LME.CODE)
				ANAME = STRUPCASE(REPLACE(STRTRIM(LME[OK].NAME,2),' ','_'))

				DIR_IN  = DIR_LME + '\'+ NUM2STR(ACODE) + '-' + ANAME + '\BROWSE\'
				DIR_OUT = DIR_LME + '\'+ NUM2STR(ACODE) + '-' + ANAME + '\BROWSE_COMBO\'
				IF FILE_TEST(DIR_OUT,/DIR) EQ 0 THEN FILE_MKDIR,DIR_OUT



STOP


			file_label = 'SA_N4AT-'+MAP_OUT+'-CHLOR_A-SST'
			FA = FILE_ALL(DIR_IN+PERIOD_CODE+'*'+PRODS[0]+'*.PNG')
			FB = FILE_ALL(DIR_IN+PERIOD_CODE+'*'+PRODS[1]+'*.PNG')


			IF FA[0].FULLNAME EQ '' THEN BEGIN & PRINT, 'No files for '+ file_label + ' found in ',PATH[0] &  GOTO, DONE_COMBO & ENDIF
			IF FB[0].FULLNAME EQ '' THEN BEGIN & PRINT, 'No files for '+ file_label + ' found in ',PATH[1] &  GOTO, DONE_COMBO & ENDIF

		 	OK= WHERE(FA.DATE_START GE DATE_START AND FA.DATE_END LE DATE_END,COUNT)
		 	IF COUNT GE 1 THEN FA=FA[OK]
		 	OK= WHERE(FB.DATE_START GE DATE_START AND FB.DATE_END LE DATE_END,COUNT)
		 	IF COUNT GE 1 THEN FB=FB[OK]


		;	****************************************************
		  DATE_ALL   = [FA.DATE_START,FB.DATE_START]
		  S=SORT(DATE_ALL)
		  DATE_ALL = DATE_ALL(S)
			DD='!DD_'+STRMID(FIRST(DATE_ALL),0,8)+UL +STRMID(LAST(DATE_ALL),0,8)

		  UN = UNIQ(DATE_ALL)
		  N_IMAGES = NUM2STR(N_ELEMENTS(UN))

		; Dimension	ARRAY FOR CSV FILE
			csv = CREATE_STRUCT('NAMES','')
			csv = REPLICATE(csv,n_images)
			CSVFILE = DIR_OUT+DD+dash+file_label+'-NAMES.CSV'

			BLANK=READALL(FA[0].FULLNAME)
			SZ=SIZE(BLANK)
			PX=SZ[1]
			PY=SZ(2)
			blank = BYTARR(PX,PY)
			BLANK(*,*) = _BACKGROUND

			PX_SCALED = PX*_SCALE
			PY_SCALED = PY*_SCALE

	;		LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
	  	FOR NTH = 0L, N_ELEMENTS(UN)-1L DO BEGIN
	  		an = UN[NTH]
	  		ADATE = DATE_ALL(an)
	  		BDATE = STRMID(ADATE,0,8)
	;			=================> Find PRODUCTS in order of there order in the PRODUCTS array
				OK1 = WHERE(FA.DATE_START EQ ADATE,COUNT1)
				OK2 = WHERE(FB.DATE_START EQ ADATE,COUNT2)

				output_name=DIR_OUT+PERIOD_CODE+UL+BDATE+dash+file_label
	      PNGFILE = output_name+'.PNG'
	;			FILL THE CSV_ARRAY
	      csv(nth).NAMES = PNGFILE
				FA_PNG=FILE_ALL(PNGFILE)
				IF COUNT1 EQ 1 AND COUNT2 EQ 0 AND FA_PNG.SIZE GT 0 THEN BEGIN
					IF FA(OK1).MTIME LT FA_PNG.MTIME AND _OVERWRITE EQ 0 THEN CONTINUE
				ENDIF
				IF COUNT1 EQ 0 AND COUNT2 EQ 1 AND FA_PNG.SIZE GT 0 THEN BEGIN
					IF FA(OK2).MTIME LT FA_PNG.MTIME AND _OVERWRITE EQ 0 THEN CONTINUE
				ENDIF
				IF COUNT1 EQ 1 AND COUNT2 EQ 1 AND FA_PNG.SIZE GT 0 THEN BEGIN
					IF FA(OK1).MTIME LT FA_PNG.MTIME AND FB(OK2).MTIME LT FA_PNG.MTIME AND _OVERWRITE EQ 0 THEN CONTINUE
				ENDIF
	      IF COUNT1 EQ 1 THEN BEGIN
	      	IMAGE1 = READALL(FA(OK1).FULLNAME )
	      ENDIF ELSE IMAGE1 = BLANK

	      IF COUNT2 EQ 1 THEN BEGIN
	      	IMAGE2 = READALL(FB(OK2).FULLNAME )
				ENDIF ELSE IMAGE2 = BLANK

	;			===============> Scale both images
				IF _SCALE NE 1 THEN BEGIN
					IMAGE1 = CONGRID(IMAGE1,PX_SCALED,PY_SCALED)
					IMAGE2 = CONGRID(IMAGE2,PX_SCALED,PY_SCALED)
				ENDIF

	;			=================> Convert both to True Color
				IMAGE1=IMAGE_2TRUE(IMAGE1,PAL=PAL[0])
				IMAGE2=IMAGE_2TRUE(IMAGE2,PAL=PAL[1])
				IF KEYWORD_SET(_LANDSCAPE) THEN NEW_RGB = IMAGE_WELD(IMAGE1,IMAGE2,/landscape,BACKGROUND= _background,SPACE=_space)
				IF KEYWORD_SET(_PORTRAIT) THEN NEW_RGB = IMAGE_WELD(IMAGE2,IMAGE1,/PORTRAIT,BACKGROUND= _background,SPACE=_space)
	  		WRITE_PNG,PNGFILE,NEW_RGB
	  		IMAGE1=''
	  		IMAGE2=''
	  		NEW_RBG=''

			ENDFOR ;	FOR NTH = 0L, N_ELEMENTS(UN)-1L DO BEGIN
     	STRUCT_2CSV,CSVFILE,CSV

		ENDFOR;		FOR NTH=0L, N_ELEMENTS(CODES)-1 DO BEGIN

	DONE_COMBO:
	FA=''
	FB=''
  ENDIF;IF KEYWORD_SET(DO_COMBO_BROWSE) THEN BEGIN



 ; ***************************************************************
	IF KEYWORD_SET(DO_TITLE_COMBO_BROWSE) THEN BEGIN
 ; ***************************************************************

		PRODS  = ['CHLOR_A','SST']
		AMAP   = 'YELLOW_SEA'
		DIR_OUT= 'T:\PROJECTS\LME\48-YELLOW_SEA\TITLE_BROWSE\'
  	DIR_ANNUAL_ROBINSON_BROWSE = DIR_LME + '\ANNUAL_ROBINSON_BROWSE\'
    SPACE = 2
	  _BACKGROUND=255
	  _LANDSCAPE=1

		TITLE_FILE_PNG  = DIR_OUT+'!ANNUAL-'+AMAP+'-'+PRODS[0]+'-'+PRODS[1]+'-MEAN.PNG'
	STOP
		ROBINSON_BROWSE_0 = FILE_SEARCH(DIR_ANNUAL_ROBINSON_BROWSE +'!ANNUAL*-ROBINSON-*'+PRODS[0]+'-*MEAN.PNG')
		ROBINSON_BROWSE_1 = FILE_SEARCH(DIR_ANNUAL_ROBINSON_BROWSE +'!ANNUAL*-ROBINSON-*'+PRODS[1]+'-*MEAN.PNG')
		IF FILE_TEST(ROBINSON_BROWSE_1) EQ 0 OR FILE_TEST(ROBINSON_BROWSE_1) EQ 0 THEN STOP

		ROBINSON_BROWSE_0=READ_PNG(ROBINSON_BROWSE_0,R,G,B)
		ROBINSON_BROWSE_1=READ_PNG(ROBINSON_BROWSE_1,R,G,B)
		IMAGE_0 = MAP_REMAP(ROBINSON_BROWSE_0,MAP_IN='ROBINSON',MAP_OUT='LME_'+AMAP)
		IMAGE_1 = MAP_REMAP(ROBINSON_BROWSE_1,MAP_IN='ROBINSON',MAP_OUT='LME_'+AMAP)
		PAGE    = IMAGE_WELD(IMAGE_0,IMAGE_1,LANDSCAPE=_LANDSCAPE,SPACE=SPACE,BACKGROUND=_BACKGROUND)
		WRITE_PNG,TITLE_FILE_PNG,PAGE,R,G,B
		IMAGE=''
		IMAGE_0=''
		IMAGE_1=''
		PAGE=''
		ROBINSON_BROWSE_0=''
		ROBINSON_BROWSE_1=''
  ENDIF;IF KEYWORD_SET(DO_TITLE_COMBO_BROWSE) THEN BEGIN



 ; ***************************************************************
	IF KEYWORD_SET(DO_TITLE_BROWSE) THEN BEGIN
 ; ***************************************************************

		PRODS  = ['CHLOR_A','SST']
		AMAP   = 'YELLOW_SEA'
		DIR_OUT= 'T:\PROJECTS\LME\48-YELLOW_SEA\TITLE_BROWSE\'
  	DIR_ANNUAL_ROBINSON_BROWSE = DIR_LME + '\ANNUAL_ROBINSON_BROWSE\'

		FOR _PROD =0,N_ELEMENTS(PRODS)-1L DO BEGIN
			APROD=PRODS(_PROD)
			TITLE_BROWSE  = DIR_OUT+'!ANNUAL-'+AMAP+'-'+APROD+'-MEAN.PNG'
		STOP
			ROBINSON_BROWSE = FILE_SEARCH(DIR_ANNUAL_ROBINSON_BROWSE +'!ANNUAL*-ROBINSON-*'+APROD+'-*MEAN.PNG')
			IF FILE_TEST(ROBINSON_BROWSE) EQ 0 THEN STOP
			ROBINSON_BROWSE=READ_PNG(ROBINSON_BROWSE,R,G,B)
			IMAGE = MAP_REMAP(ROBINSON_BROWSE,MAP_IN='ROBINSON',MAP_OUT='LME_'+AMAP)
			WRITE_PNG,TITLE_BROWSE,IMAGE,R,G,B
			IMAGE=''
			ROBINSON_BROWSE=''
		ENDFOR
  ENDIF;IF KEYWORD_SET(DO_TITLE_BROWSE) THEN BEGIN


 ; ***************************************************************
	IF KEYWORD_SET(DO_TITLE_SLIDE) THEN BEGIN
 ; ***************************************************************

		PRODS  = ['CHLOR_A','SST']
		AMAP   = 'YELLOW_SEA'
		DIR_IN= 'T:\PROJECTS\LME\48-YELLOW_SEA\TITLE_BROWSE\'
  	DIR_OUT='T:\PROJECTS\LME\48-YELLOW_SEA\TITLE_BROWSE\'

STOP
		FOR _PROD =0,N_ELEMENTS(PRODS)-1L DO BEGIN
			APROD=PRODS(_PROD)
			TITLE_BROWSE  = DIR_IN+'!ANNUAL-'+AMAP+'-'+APROD+'-MEAN.PNG'
			TITLE_SLIDE   = DIR_OUT+'TITLE_SLIDE-'+AMAP+'-'+APROD+'.PNG'
		STOP
			ANNUAL_BROWSE = FILE_SEARCH(TITLE_BROWSE)
			IF FILE_TEST(ANNUAL_BROWSE) EQ 0 THEN STOP
			;IMAGE=READ_PNG(ANNUAL_BROWSE,R,G,B)
			DATE_START='19970917'
			DATE_END  ='20100401'
			IMAGE=MAKE_AVI_TITLE(IMAGE_FILE=ANNUAL_BROWSE,DATE_START=date_start,DATE_END=date_end,DIR_OUT=dir_out)
												;,YOFFSET=yoffset,$
												;MAP=MAP,TITLE_COLOR=TITLE_COLOR,$
												;  AUTHORS=authors,ADDRESS=address,SENSORS=sensors
			;WRITE_PNG,TITLE_SLIDE,IMAGE,R,G,B
			;IMAGE=''
			;ROBINSON_BROWSE=''
		ENDFOR
  ENDIF;IF KEYWORD_SET(DO_TITLE_SLIDE) THEN BEGIN



; ****************************************************
	IF KEYWORD_SET(DO_COMBO_MOVIE) THEN BEGIN
; ****************************************************
		OVERWRITE=0

		MAP_OUT= 'APEC_REGION'
		MAP_OUT= 'APEC_REGION_EAST'
		MAP_OUT= 'APEC_REGION_WEST'
		MAP_OUT= 'YELLOW_SEA'

		_BACKGROUND   = 252
		_PAL='PAL_SW3'
		TITLE_SLIDE=1

		TITLE_FILE_PNG=''
		DISK='T:\'
	;	DISK='E:\'
	;	DIR_in = DISK+'PROJECTS\APEC\'+MAP_OUT+'\COMBO\'
	;	DIR_OUT= DISK+'PROJECTS\APEC\'+MAP_OUT+'\COMBO\'

		DIR_in = 'T:\PROJECTS\LME\48-YELLOW_SEA\BROWSE_COMBO\'
		DIR_OUT= 'T:\PROJECTS\LME\48-YELLOW_SEA\MOVIE\'

		;files=   FILELIST(DIR_IN+'!D_*-SA_N4AT-'+MAP_OUT+'-PPD-SST.PNG')
		files=   FILELIST(DIR_IN+'!D_*-SA_N4AT-'+MAP_OUT+'-CHLOR_A-SST.PNG')

		MOVIE_DATE_RANGE = ['20000101000000','20021231235959']
		MOVIE_DATE_RANGE = ['20030101000000','20051231235959']
		MOVIE_DATE_RANGE = ['20050101000000','20090330235959']
		MOVIE_DATE_RANGE = ['19970917000000','20100401235959']


STOP
		TITLE_FILE_PNG='T:\PROJECTS\LME\48-YELLOW_SEA\TITLE_BROWSE\!ANNUAL-YELLOW_SEA-CHLOR_A-SST-MEAN.PNG'
		;TITLE_FILE_PNG=DISK+'PROJECTS\APEC\'+MAP_OUT+'\COMBO\!ANNUAL-SA_N4AT-'+MAP_OUT+'-PPD-SST.PNG'



		FA=FILE_ALL(FILES)
		OK=WHERE(FA.FULLNAME NE '',COUNT)
		DATE_START=MOVIE_DATE_RANGE[0]
    DATE_END=MOVIE_DATE_RANGE[1]

		OK= WHERE(FA.DATE_START GE DATE_START AND FA.DATE_END LE DATE_END,COUNT)

	  IF COUNT GT 1 THEN BEGIN
			_FA=FA[OK]
			APERIOD=_FA[0].PERIOD_CODE
			AMAP=_FA[0].MAP
			IF APERIOD EQ '!S'     THEN PERIOD_TXT='!SS_'+STRMID(FIRST(_FA.DATE_START),0,14)+UL +STRMID(LAST(_FA.DATE_END),0,14)
			IF APERIOD EQ '!D'     THEN PERIOD_TXT='!DD_'+STRMID(FIRST(_FA.DATE_START),0,8)+UL +STRMID(LAST(_FA.DATE_END),0,8)
			IF APERIOD EQ '!DOY'   THEN PERIOD_TXT='!DOY_'+STRMID(MIN(_FA.PERIOD),5,8)+UL +STRMID(MAX(_FA.PERIOD),5,8)
			IF APERIOD EQ '!M'     THEN PERIOD_TXT='!MM_'+FIRST(_FA.YEAR_START)+UL+ FIRST(_FA.MONTH_START)+UL+LAST(_FA.YEAR_START) +UL+ LAST(_FA.MONTH_START)
			IF APERIOD EQ '!MONTH' THEN PERIOD_TXT='!MONTH_'+MIN(_FA.MONTH_START)+UL +MAX(_FA.MONTH_START)

		  FILE_LABEL_LIST=['SENSOR','SATELLITE', 'METHOD','COVERAGE','MAP','PROD','ALG']
		  _FILE_LABEL=FILE_LABEL_MAKE(_FA[0].FIRST_NAME,LIST=FILE_LABEL_LIST)

	    ; GET IMAGE SIZE & USER IN AVI_FILE NAME
	    IMAGE = READALL(_FA[0].FULLNAME)
	    SZ=SIZE(IMAGE,/STRUCT)
	    IF SZ.N_DIMENSIONS EQ 3 THEN N = 1 ELSE N = 0
	    WIDTH   = SZ.DIMENSIONS(N)
	    HEIGHT  = SZ.DIMENSIONS(N+1)
	    AVI_FILE  = DIR_OUT + PERIOD_TXT+DASH+_FILE_LABEL+DASH+'PXY_'+NUM2STR(WIDTH)+'_'+NUM2STR(HEIGHT)+'.AVI'
	    FA_OUT = FILE_ALL(AVI_FILE)

	   	IF FA_OUT.FULLNAME NE '' AND FA_OUT.MTIME GT MAX(_FA.MTIME)  AND OVERWRITE EQ 0 THEN GOTO,DONE_COMBO_MOVIE
    	; use stats browse for title slide
	    IF TITLE_FILE_PNG EQ '' THEN TITLE_FILE_PNG = _FA[0].FULLNAME
STOP


    	MAKE_AVI,FILES=_FA.FULLNAME,DIR_OUT=dir_out,PAL=_pal, $
                  BITS=bits,QUALITY=quality, FPS=fps,MAP='',$
                  TITLE_FILE_PNG=TITLE_FILE_PNG,TITLE_SLIDE=TITLE_SLIDE,N_TITLE=N_TITLE,TYPE=TYPE,$
                  AVI_FILE=avi_file,YOFFSET=_YOFFSET




	  ENDIF ELSE BEGIN
	    PRINT, 'No files for '+ PROD + ' found in ' + DIR_IN
	  ENDELSE; IF COUNT GT 1
	  DONE_COMBO_MOVIE:
	ENDIF;	IF KEYWORD_SET(DO_COMBO_MOVIE) THEN BEGIN




	END; #####################  End of Routine ################################
