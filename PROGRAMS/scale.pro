; $ID:	SCALE.PRO,	2020-07-08-15,	USER-KJWH	$
;###########################################################################################
FUNCTION SCALE, ARRAY, RANGE, MIN=MIN,MAX=MAX, INTERCEPT=INTERCEPT, SLOPE=SLOPE, ERROR=ERROR
;+
; NAME:
;       SCALE
;
; PURPOSE:
;				LINEARLY SCALE AN INPUT ARRAY TO THE RANGE PROVIDED
;
; CATEGORY:
;				MATH
;
; CALLING SEQUENCE:
;       RESULT = SCALE(ARRAY,RANGE)
;
; INPUTS:
;				ARRAY:  ANY NUMERIC DATA
;				RANGE:  THE DESIRED RANGE [MIN,MAX] TO USE IN SCALING THE ARRAY
;								IF RANGE IS NOT PROVIDED THEN THE RANGE USED WILL BE THE [MIN,MAX] OF THE FINITE DATA
;
; KEYWORD PARAMETERS:
;
;				MIN:				ARRAY VALUES BELOW THE MIN ARE SET TO RANGE[0]
;				MAX:				ARRAY VALUES ABOVE THE MAX ARE SET TO RANGE[1]
;				INTERCEPT: 	THE Y-INTERCEPT OF THE LINEAR EQUATION USED IN SCALING
;				SLOPE:			THE SLOPE OF THE LINEAR EQUATION USED IN SCALING
;				ERROR:			'' = OK, 'ERROR MESSAGE'= ERROR
;
; OUTPUTS:
;				A DOUBLE PRECISION ARRAY SCALED TO THE RANGE
;
;	EXAMPLES:
;
;	 PRINT, SCALE([2,3,8,127,255],[0,100])
;  S= SCALE([1,250], [-0.30, 0.30],INTERCEPT=INTERCEPT,SLOPE=SLOPE) & PRINT, INTERCEPT,SLOPE
;  S= SCALE([1,250], ALOG10([1,100]),INTERCEPT=INTERCEPT,SLOPE=SLOPE) & PRINT, INTERCEPT,SLOPE
;  S= SCALE([-3,1,4,250],[1,200],MIN= 1,MAX=200,INTERCEPT=INTERCEPT,SLOPE=SLOPE) & PRINT, INTERCEPT,SLOPE
;  S= SCALE([1,250], ALOG10([1,1.5]),INTERCEPT=INTERCEPT,SLOPE=SLOPE) & PRINT, INTERCEPT,SLOPE
;  S= SCALE([1,250], ALOG10([1,1.3]),INTERCEPT=INTERCEPT,SLOPE=SLOPE) & PRINT, INTERCEPT,SLOPE
;  S= SCALE([1,250], ALOG10([1,1.8]),INTERCEPT=INTERCEPT,SLOPE=SLOPE) & PRINT, INTERCEPT,SLOPE;  S= SCALE([1,250], ALOG10([0.1,2]),INTERCEPT=INTERCEPT,SLOPE=SLOPE) & PRINT, INTERCEPT,SLOPE
;  S= SCALE([1,250], ALOG10([0.1,2]),INTERCEPT=INTERCEPT,SLOPE=SLOPE) & PRINT, INTERCEPT,SLOPE;  S= SCALE([1,250], ALOG10([0.1,2]),INTERCEPT=INTERCEPT,SLOPE=SLOPE) & PRINT, INTERCEPT,SLOPE
;  S= SCALE([1,250], ALOG10([0.01 , 56.23]),INTERCEPT=INTERCEPT,SLOPE=SLOPE) & PRINT, INTERCEPT,SLOPE
;  S= SCALE([1,250], ALOG10([0.01 , 56.23]),INTERCEPT=INTERCEPT,SLOPE=SLOPE) & PRINT, INTERCEPT,SLOPE
;  S= SCALE([1,250], [-3, 35],INTERCEPT=INTERCEPT,SLOPE=SLOPE) & PRINT, INTERCEPT,SLOPE

; MODIFICATION HISTORY:
;       WRITTEN AUGUST 29,2000 BY J.O'REILLY, 28 TARZWELL DRIVE, NMFS, NOAA 02882 (JAY.O'REILLY@NOAA.GOV)
;       FEB 5,2013,JOR, FORMATTING, MORE EXAMPLES
;       DEC 31,2013,JOR, MORE EXAMPLES 
;       
;###########################################################################################
;-
;*********************************
ROUTINE_NAME = 'SCALE'
;*********************************	
;  PRINT
	ERROR = ''


  IF N_ELEMENTS(ARRAY) LT 1 THEN BEGIN
  	ERROR = 1
  	RETURN, !VALUES.D_INFINITY
  ENDIF


; ===> FIND FINITE DATA
	OK = WHERE(FINITE(ARRAY),COUNT)

;	===> MAKE GOOD DATA DOUBLE PRECISION
	IF COUNT GE 1 THEN BEGIN
		_ARRAY = DOUBLE(ARRAY[OK])

		MIN_ARRAY = MIN(_ARRAY,MAX=MAX_ARRAY)

;		===> MIN AND MAX
		IF N_ELEMENTS(MIN) EQ 1 THEN _MIN = MIN ELSE _MIN = MIN_ARRAY
		IF N_ELEMENTS(MAX) EQ 1 THEN _MAX = MAX ELSE _MAX = MAX_ARRAY

;		===> CHECK ON RANGE
		IF N_ELEMENTS(RANGE) NE 2 THEN _RANGE = [MIN_ARRAY,MAX_ARRAY] ELSE _RANGE = DOUBLE(RANGE)


		IF N_ELEMENTS(_ARRAY) GE 2 THEN BEGIN
			SLOPE 		= (_RANGE[1]-_RANGE[0])/(_MAX- _MIN)
  		INTERCEPT = _RANGE[1] - _MAX * SLOPE
  	ENDIF ELSE BEGIN
  		SLOPE =   1.0
  		INTERCEPT = 0.0
  	ENDELSE

 ;	===> CONSTRAIN THE SCALED VALUES TO BE BETWEEN THE MIN AND MAX
		SCALED =  _RANGE[0] > (INTERCEPT + SLOPE* _ARRAY) <  _RANGE[1]

;		===> MAKE AN ARRAY TO HOLD THE RESULT AND FILL IT WITH INFINITY
  	COPY   		= DOUBLE(ARRAY) & COPY(*) = !VALUES.D_INFINITY

;		===> REPLACE COPY WITH GOOD SCALED VALUES
  	COPY[OK] 	= SCALED
  	RETURN, COPY

	ENDIF ELSE BEGIN
		ERROR			= 1
		SLOPE			=	!VALUES.D_INFINITY
  	INTERCEPT	=	!VALUES.D_INFINITY
		RETURN, 		''
	ENDELSE


END; #####################  END OF ROUTINE ################################
