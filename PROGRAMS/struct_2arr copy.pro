; $ID:	STRUCT_2ARR.PRO,	2015-01-07	$
;##############################
FUNCTION STRUCT_2ARR, STRUCT, FLT=FLT
;+
;PURPOSE:
;	THIS FUNCTION GENERATES AN ARRAY FROM TAGS IN A STRUCTURE
;	
; SYNTAX:
;		RESULT = STRUCT_2ARR(STRUCT)
; OUTPUT:
; 
; ARGUMENTS:
; 	STRUCT:	IDL STRUCTURE (SIMPLE ROW X COLUMN 'SPREADSHEET' TYPE STRUCTURE)

; KEYWORDS: NONE

; EXAMPLES:
;	S = STRUCT_IT(INDGEN(9), 'I') & A= STRUCT_2ARR(S) & HELP,A & PRINT,A
; S = CREATE_STRUCT('A','A','B','B','C','C') & A = STRUCT_2ARR(S) & HELP,A & PRINT,A
; S = MAPS_READ('NEC') & A = STRUCT_2ARR(S) & HELP,A & PRINT,A
; CATEGORY:
;		STRUCTURES
; NOTES:
;		INPUT STRUCTURE IS NOT ALTERED.

; HISTORY:
;		AUG 23, 2001 - WRITTEN BY:	J.E. O'REILLY, NOAA, 28 TARZWELL DRIVE, NARRAGANSETT, RI 02882
;		JAN 13, 2014 - JOR:  FORMATTING
;		                     IDLTYPE
;		                     ARR = REPLICATE(COPY.(0),NTAGS,N_ELEMENTS(COPY))
;   JAN 23, 2014 - JOR:  RETURN ERROR STRING , ADDED MORE EXAMPLES
;   APR 2,  2014 - KJWH: ADDED FLT KEYWORD BACK TO PROGRAM
;   APR 11, 2014 - JOR:  IF KEYWORD_SET(FLT) THEN COPY = STRUCT_2NUM(COPY)
;   DEC 9,  2014 - KJWH: REMOVED ARR = REPLICATE(COPY.(0),NTAGS,N_ELEMENTS(COPY)) BECAUSE IT CAUSED AN ERROR
;                        ADDED   IF KEYWORD_SET(FLT) THEN ARR = FLTARR(NTAGS,N_ELEMENTS(COPY)) ELSE ARR = DBLARR(NTAGS,N_ELEMENTS(COPY))
;   JAN 7,2015,JOR:IF KEYWORD_SET(FLT) THEN ARR = FLTARR(NTAGS,N_ELEMENTS(COPY)) ELSE ARR = STRARR(NTAGS,N_ELEMENTS(COPY))



;		                
;-
;**************************
  ROUTINE_NAME='STRUCT_2ARR'
;**************************

  COPY = STRUCT  ; INPUT STRUCTURE IS NOT CHANGED
  IF KEYWORD_SET(FLT) THEN COPY = STRUCT_2NUM(COPY)
  IF IDLTYPE(COPY) NE 'STRUCT' THEN BEGIN
    ERROR ='ERROR: STRUCT MUST BE AN IDL STRUCTURE'
    RETURN, ERROR
  ENDIF
  NTAGS = N_TAGS(COPY)
  SZ = SIZE(COPY,/STRUCT)
  IF SZ.N_DIMENSIONS NE 1 THEN BEGIN
    ERROR = 'ERROR: ONLY SPREADSHEET TYPE STRUCTURE ALLOWED'
    RETURN, ERROR
  ENDIF

; MAKE SURE NUMERIC DATA
  ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
  FOR N = 0, N_TAGS(STRUCT)-1 DO BEGIN
    SZ = SIZE(STRUCT.(N),/STRUCT)
    IF ISA(STRUCT.(N),/NUMBER) EQ 1 THEN BEGIN
      CONTINUE
    ENDIF ELSE BEGIN
      CONTINUE
 ;     PRINT,'ERROR: ONLY NUMERIC DATA ALLOWED'
 ;     RETURN,-1
    ENDELSE
  ENDFOR;FOR N = 0, N_TAGS(STRUCT)-1 DO BEGIN

 ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
  SZ = SIZE(STRUCT,/STRUCT)
  IF NTAGS EQ 1 AND SZ.DIMENSIONS[0] EQ 1 THEN BEGIN 
    FOR NTH = 0,N_TAGS(STRUCT)-1 DO BEGIN
      IF NTH EQ 0 THEN ARR = STRUCT.(NTH)  ELSE ARR = [ARR,STRUCT.(NTH)]
    ENDFOR;FOR NTH = 0,N_tags(STRUCT)-1 DO BEGIN 
    RETURN,ARR
  ENDIF;IF NTAGS EQ 1 AND SZ.DIMENSIONS GT 1 THEN BEGIN
  IF KEYWORD_SET(FLT) THEN ARR = FLTARR(NTAGS,N_ELEMENTS(COPY)) ELSE ARR = STRARR(NTAGS,N_ELEMENTS(COPY))
  ;ARR = REPLICATE(COPY.(0),NTAGS,N_ELEMENTS(COPY))
  ARR(*,*) = MISSINGS(ARR)
  FOR N = 0, N_TAGS(STRUCT)-1 DO BEGIN
     ARR(N,*) = COPY.(N)
  ENDFOR

  RETURN,ARR



END; #####################  END OF ROUTINE ################################
