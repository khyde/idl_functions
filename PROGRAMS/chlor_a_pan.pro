; $ID:	CHLOR_A_PAN.PRO,	2020-07-08-15,	USER-KJWH	$
FUNCTION CHLOR_A_PAN, SENSOR=SENSOR, RRS488=R488, RRS490=R490, RRS547=R547, RRS555=R555, RRS667=R667, RRS670=R670, VERSION=VERSION

;+
; NAME:
;   CHLOR_A_PAN
;
; PURPOSE:
;   This function uses Xiaoju Pan's model to produce regional chlorophyll a using SeaWiFS and MODISA. 
;
; CATEGORY:
;   Algorithms
;
; CALLING SEQUENCE:
;   CHLPAN = CHLOR_A_PAN(SENSOR=SENSOR, RRS488=R488, RRS490=R490, RRS547=R547, RRS555=R555, RRS667=R667, RRS670=R670, VERSION=VERSION)
;
; REQUIRED INPUTS:
;   SENSOR..... Name of the input sensor (SEAWIFS, MODISA and OCCCI are all accepted).  Need to add VIIRS once we have coefficients for the VIIRS data
;   RRS488..... The "blue" Remote Sensing Reflectance data for MODISA
;   RRS490..... The "blue" Remote Sensing Reflectance data for SEAWIFS/OCCCI
;   RRS547..... The "green" Remote Sensing Reflectance data for MODISA
;   RRS555..... The "green" Remote Sensing Reflectance data for SEAWIFS/OCCCI
;   RRS667..... The "red" Remote Sensing Reflectance data for MODISA
;   RRS670..... The "red" Remote Sensing Reflectance data for SEAWIFS/OCCCI
;
; OPTIONAL INPUTS:
;   VERSION.... The VERSION will determine which set of cofficients are used
;
; KEYWORD PARAMETERS:
;   NONE
;
; OUTPUTS:
;   This function returns the results of the Pan chlorophyll algorithm as an array
;
; EXAMPLE:  
;   PRINT, CHLOR_A_PAN(SENSOR='MODISA', RRS488=0.0077,RRS547=0.00187,RRS667=0.00186)
;   PRINT, CHLOR_A_PAN(SENSOR='SEAWIFS',RRS490=0.0077,RRS555=0.00187,RRS670=0.00186)
;   PRINT, CHLOR_A_PAN(SENSOR='MODISA', RRS488=[0.0028,0.0077,0.0379], RRS547=[0.000984,0.001855,0.028217],RRS667=[0.000110,0.000186,0.00151200])
;   PRINT, CHLOR_A_PAN(SENSOR='SEAWIFS',RRS490=[0.0028,0.0077,0.0379], RRS555=[0.000984,0.001855,0.028217],RRS670=[0.000110,0.000186,0.00151200])
;   PRINT, CHLOR_A_PAN(SENSOR='MODISA', RRS488=[0.0028,0.0077,0.0379], RRS547=[0.000984,0.001855,0.028217],RRS667=[0.000110,0.000186,0.00151200],VERSION='V2_0')
;   PRINT, CHLOR_A_PAN(SENSOR='SEAWIFS',RRS490=[0.0028,0.0077,0.0379], RRS555=[0.000984,0.001855,0.028217],RRS670=[0.000110,0.000186,0.00151200],VERSION='V1_1')
;
; NOTES:
;  Version 1 (V1_0) of the algorithm was provided by Xiaoju Pan (a former NASA post-doc with Antonio Mannino)
;     SEAWIFS Coefficients: 
;       A1 = [  0.02534, -3.033,  2.096,  -1.607 ]    ; Coefficients for the 490/555 ratio Version 1 from Pan et al., 2008
;       A2 = [  1.351,   -2.427,  0.9395, -0.2432]    ; Coefficients for the 490/670 ratio
;      MODISA Coefficients:
;       A1 = [ 0.03664,  -3.451,  2.276,   -1.096 ]   ; Coefficients for the 488/547 ratio
;       A2 = [ 1.351,    -2.427,  0.9395,  -0.2432]   ; Coefficients for the 488/667 ratio
;  
;  Version 1.1 (V1_1) uses the same coefficients as V1_0, but include a step to evaluate low values of RRS_670 (RRS_667) from Pan et al, 2010
;      IF RRS_670 IS LESS THAN 0.0001, THEN USE THE CHL DERIVED FROM THEN RRS_490/RRS_555 RATIO
;  
;  Version 2 (V2_0) is based on updated coefficients generated by Antonio Mannino - NASA Goddard 
;     SEAWIFS Coefficients:
;       A1 = [0.01464, -3.600,  2.477,    6.232]     ; Coefficients for the 490/555 ratio Version 2 from Mannino (personal communication)
;       A2 = [1.356,   -2.038, -0.01168,  0.2839]    ; Coefficients for the 490/670 ratio
;      MODISA Coefficients:
;       A1 = [0.02451, -4.124,   2.923, -10.28 ]     ; Coefficients for the 488/547 ratio
;       A2 = [1.279,   -1.070,  -1.542,   0.9416]    ; Coefficients for the 488/667 ratio
;     *** Note, the V2_0 data returned unexpected results and should not be used until verified  
;  
; REFERENCES:
;   Pan X, Mannino A, Russ ME, Hooker SB (2008) Remote sensing of the absorption coefficients and chlorophyll a concentration in the 
;       United States southern Middle Atlantic Bight from SeaWiFS and MODIS-Aqua. Journal of Geophysical Research 113: C11022 doi doi: 10.1029/2008jc004852
;   Pan X, Mannino A, Russ ME, Hooker SB, Harding Jr LW (2010) Remote sensing of phytoplankton pigment distribution in the United States 
;       northeast coast. Remote Sensing of Environment 114: 2403-2416 doi doi: 10.1016/j.rse.2010.05.015 
;
; COPYRIGHT:
;   Copyright (C) 2018, Department of Commerce, National Oceanic and Atmospheric Administration, National Marine Fisheries Service,
;   Northeast Fisheries Science Center, Narragansett Laboratory.
;   This software may be used, copied, or redistributed as long as it is not sold and this copyright notice is reproduced on each copy made.
;   This routine is provided AS IS without any express or implied warranties whatsoever.
;
;   This program was written by Kimberly Hyde, DOC/NOAA/NMFS/NEFSC Narragansett, RI, kimberly.hyde@noaa.gov
;
; MODIFICATION HISTORY:
;     Written Mar 22, 2010 by K.J.W.Hyde, 28 Tarzwell Drive, NMFS, NOAA 02882 (kimberly.hyde@noaa.gov) 
;     Modified:
;     Jul 28, 2015 - KJWH: Updated SENSOR check to look for any variation of MODIS (i.e. MODISA) by using HAS(SAT,'MODIS')
;     May 02, 2017 - KJWH: Added example
;     AUG 22, 2018 - KJWH: Updated the algorithm coefficients based on and updated analysis from Antonio Mannino
;                          Removed the MISSING, ERROR and ERR_MSG keywords (legacy keywords)
;                          Updated the documentation and formatting
;                          Added the check for if the R670 vales are less than 0.001 - BUG FIX (V1_1)
;                            OK_R6 = WHERE(R670 < 0.0001, COUNT_R6)                       ; Find where R670(R667) is less than 0.0001
;                            IF COUNT_R6 GT 0 THEN OCHL(OK_R6) = C1(OK_R6)                ; If R670(R667) is less than 0.0001 then use the C1 chlorophyll
;     AUG 27, 2018 - KJWH: Changed WHERE(R670 < 0.0001, COUNT_R6)  to WHERE(R670 LT 0.0001, COUNT_R6) 
;     OCT 24, 2018 - KJWH: Added IF SENSOR EQ 'VIIRS'  THEN SENSOR = 'MODIS'
;     MAR 26, 2019 - KJWH: Updated documentation
;                          Changed default version to V1_1
;-
; ****************************************************************************************************
  ROUTINE_NAME = 'CHLOR_A_PAN'

; ===> Defaults
  IF N_ELEMENTS(VERSION) NE 1 THEN VERSION='VER1'  
  ;VER = STRMID(VERSION,0,2)

; ===> Check the SENSOR input
  IF N_ELEMENTS(SENSOR) NE 1 THEN RETURN, 'ERROR: No SENSOR provided'
  IF SENSOR EQ 'OCCCI' THEN SENSOR = 'SEAWIFS'  ; For the OCCCI data, use the SeaWiFS coefficients (KJWH 8/22/18)
  IF SENSOR EQ 'VIIRS' THEN SENSOR = 'MODISA'   ; Until Antonio is able to update the algorithms, use the MODISA coeffients for VIIRS
  IF SENSOR EQ 'JPSS1' THEN SENSOR = 'SEAWIFS'  ; Until Antonio is able to update the algorithms, use the SEAWIFS coeffients for VIIRS
  IF SENSOR NE 'SEAWIFS' AND SENSOR NE 'MODISA' THEN MESSAGE, 'ERROR: Unregonized SENSOR'

; ===> Sensor specific coefficients for the chlorophyll algorithm
  CASE STRUPCASE(SENSOR) OF 
    'SEAWIFS': BEGIN
      CASE VERSION OF
        'VER1': BEGIN
          A1 = [0.02534, -3.033,  2.096,  -1.607 ]    ; Coefficients for the 490/555 ratio Version 1 from Pan et al., 2008
          A2 = [1.351,   -2.427,  0.9395, -0.2432]    ; Coefficients for the 490/670 ratio 
        END
        'VER2': BEGIN                                    ; Note - V2 needs to be validated before being implemented
          A1 = [0.01464, -3.600,  2.477,    6.232]     ; Coefficients for the 490/555 ratio Version 2 from Mannino (personal communication)
          A2 = [1.356,   -2.038, -0.01168,  0.2839]    ; Coefficients for the 490/670 ratio
        END 
        ELSE: MESSAGE, 'ERROR: Unrecognized version' 
      ENDCASE
    END
    'MODISA': BEGIN
      CASE VERSION OF
        'VER1': BEGIN
          A1 = [ 0.03664,  -3.451,  2.276,   -1.096 ]   ; Coefficients for the 488/547 ratio
          A2 = [ 1.351,    -2.427,  0.9395,  -0.2432]   ; Coefficients for the 488/667 ratio
        END
        'VER2': BEGIN
          A1 = [0.02451, -4.124,   2.923, -10.28 ]     ; Coefficients for the 488/547 ratio
          A2 = [1.279,   -1.070,  -1.542,   0.9416]    ; Coefficients for the 488/667 ratio
        END
        ELSE: MESSAGE, 'ERROR: Unrecognized version' 
      ENDCASE  
      R490 = R488 & GONE, R488                      ; Change the R488 variable name to R490 & remove from memory
      R555 = R547 & GONE, R547                      ; Change the R547 variable name to R555 & remove from memory
      R670 = R667 & GONE, R667                      ; Change the R667 variable name to R670 & remove from memory
    END
    'VIIRS': BEGIN
      RETURN, 'ERROR: VIIRS coefficients currently not available'
    END  
    ELSE: RETURN, 'ERROR: Unrecognized SENSOR' 
  ENDCASE  

; ===> Set up blank output CHL array
  CHL = DOUBLE(R490)  & CHL(*) = MISSINGS(CHL) 

; ===> Check for missing and bad data
  OK_GOOD = WHERE(R490 NE MISSINGS(R490) AND DOUBLE(R490) GT 0D AND FINITE(R490) AND $          
                  R555 NE MISSINGS(R555) AND DOUBLE(R555) GT 0D AND FINITE(R555) AND $
                  R670 NE MISSINGS(R670) AND DOUBLE(R670) GT 0D AND FINITE(R670), COUNT_GOOD)                                     
  IF COUNT_GOOD LT 1 THEN BEGIN
    PRINT, 'No valid input data to calculate CHLOR_A-PAN.'
    RETURN, []   ; If no valid input data, then return empty CHL array
  ENDIF 

; ===> Band ratios    
  R1 = ALOG10(DOUBLE(R490(OK_GOOD))/DOUBLE(R555(OK_GOOD))) ; Calculate the band ratio 490/555 for only the "good" data
  R2 = ALOG10(DOUBLE(R490(OK_GOOD))/DOUBLE(R670(OK_GOOD))) ; Calculate the band ratio 490/670 for only the "good" data
                
; ===> Initial chlorophyll equations  
  C1 = 10.^(A1[0] + (A1[1]*R1) + (A1(2)*R1^2) + (A1(3)*R1^3))  ; Chlorophyll based on the 490/555 ratio
  C2 = 10.^(A2[0] + (A2[1]*R2) + (A2(2)*R2^2) + (A2(3)*R2^3))  ; Chlorophyll based on the 490/670 ratio

; ===> Determine which chlorophyll value (C1 or C2) to use
  MCHL = C1 & OCHL = MCHL                                      ; MCHL is the array to hold the "Maximum" chl & OCHL is the array to hold the "output" chl
  OK_C2 = WHERE(C2 GT C1,COUNT_C2)                             ; Find where C2 is greater than C1     
  IF COUNT_C2 GE 1 THEN MCHL(OK_C2) = C2(OK_C2)                ; Fill in MCHL with the "maximum" chl from C1 & C2 
  OK_R1 = WHERE(R1 LE 0.15,COUNT_R1)                           ; Find where the R1 waveband ratio is less than 0.15
  IF COUNT_R1 GT 0 THEN OCHL(OK_R1) = MCHL(OK_R1)              ; If R1 is less than 0.15, then use the "maximum" chl from C1 & C2 (MCHL), otherwise use the chl from C1
  IF VERSION NE 'VER1' THEN BEGIN                              ; BUG found on 8/22/2018 by KJWH.  Addition of the search for R670 < 0.0001 is valid for V1_1 and higher
    OK_R6 = WHERE(R670 LT 0.0001, COUNT_R6)                    ; Find where R670(R667) is less than 0.0001
    IF COUNT_R6 GT 0 THEN OCHL(OK_R6) = C1(OK_R6)              ; If R670(R667) is less than 0.0001 then use the C1 chlorophyll
  ENDIF
  CHL(OK_GOOD) = OCHL                                          ; Input the "output" chl data into the full chl array  

; ===> Free up the memory associated with the chlorophyll equations
  GONE, R490
  GONE, R555
  GONE, R670
  GONE, MCHL
  GONE, OCHL
  GONE, C1
  GONE, C2
  GONE, R1
  GONE, R2
  
; ===> Look for "bad" data  
  BAD = WHERE(CHL LE 0.0 OR CHL GT 200.0,COUNT_BAD)            ; Find any negative or very high values 
  IF COUNT_BAD GE 1 THEN CHL(BAD) = MISSINGS(0.0)              ; Replace any "bad" values with the missing code 
  
  RETURN, FLOAT(CHL)                                           ; Return the chlorophyll as a floating point array
  
END
