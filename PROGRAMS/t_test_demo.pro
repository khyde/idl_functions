; $ID:	T_TEST_DEMO.PRO,	2020-07-08-15,	USER-KJWH	$
;#############################################################################################################
	PRO T_TEST_DEMO
	
;  PRO T_TEST_DEMO
;+
; NAME:
;		T_TEST_DEMO
;
; PURPOSE: THIS IS A DEMO FOR T_TEST 
;
; CATEGORY:
;		PALETTE
;		 
;
; CALLING SEQUENCE: T_TEST_DEMO
;
; INPUTS: NONE
;		
;		
; OPTIONAL INPUTS:
;		NONE:	
;		
; KEYWORD PARAMETERS:
;		NONE:

; OUTPUTS: 
;		
;; EXAMPLES:
;
;  T_TEST_DEMO
;
; MODIFICATION HISTORY:
;			WRITTEN APR 18,2013 J.O'REILLY
;			THE TWO-TAILED PROBABILITY, WHICH IS THE PROBABILITY THAT THE ABSOLUTE VALUE OF X 
;     IS LESS THAN OR EQUAL TO V, CAN BE COMPUTED AS 1 - 2 X (1 - T_PDF(V, DF)).
;     JUL 29,2013,JOR ADDED STEP DO_COMPARE_OLD
;     JUL 17,2014 ADDED STEP DO_STATS2_VS_T_TEST_SLOPE

;			
;			
;#################################################################################
;
;
;-
;***************************
ROUTINE_NAME  = 'T_TEST_DEMO'
;***************************
;SSSSSSSSSS SWITCHES     SSSSSSSSSSSSS
DO_TEST_SLOPE           = 0
DO_TEST_T_PDF           = 0
DO_COMPARE_OLD          = 0
DO_T_TEST_SLOPE         = 1

;*******************************
IF DO_TEST_SLOPE GE 1 THEN BEGIN
;*******************************
  ,'DO_TEST_SLOPE'  
  SAVEFILE = !S.DATA +'DATA_FOR _T_TEST.SAVE'
  STRUCT = IDL_RESTORE(SAVEFILE)
  ST,STRUCT
  X = STRUCT.X & PN,X
  Y = STRUCT.Y & PN,Y
  S=STATS2(X,Y,MODEL = 'LSY')
  ST,S
  P,'SLOPE_PROB  ',S.SLOPE_PROB
  STOP
  ,'DO_TEST_SLOPE'
ENDIF;IF DO_TEST_SLOPE GE 1 THEN BEGIN
;|||||||||||||||||||||||||||||||||||||
;
;*******************************
IF DO_TEST_T_PDF GE 1 THEN BEGIN
;*******************************
  ,'DO_TEST_T_PDF'  
  CSVFILE = !S.DATA +'\T_TABLE_ONE_TAIL.CSV'
  DB = CSV_READ(CSVFILE)
  DFS = [1,2,5,10,50,100,500,1000]
  ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
  FOR _DF = 0,N_ELEMENTS(DFS)-1 DO BEGIN
  DF = DFLS(_DF)
  OK = WHERE(DB.DF EQ DF,COUNT)
  IF COUNT EQ 1 THEN BEGIN
    D = DB[OK]     
    D = STRUCT_REMOVE(D,'DF') 
    NAMES = TAG_NAMES(D) & NAMES =FLOAT(REPLACE(NAMES,'T_','.'))
    S = STRUCT_2STRING(D) 
    T=STR_SEP(S,',')
    VALS = FLOAT(T)
  ENDIF;IF COUNT EQ 1 THEN BEGIN
  
  PROBS = T_PDF(VALS, DF) 
  ;PRINT,VALS
  ;PRINT,PROBS
  ;PRINT,NAMES
  DIF = NAMES -PROBS
  PRINT,'TOTAL OF DIFFERENCES BETWEEN TABLE PROBS AND IDLS T_PDF PROBS FOR DF = '+STRTRIM(DF,2) + '    '+ ROUNDS(TOTAL(DIF),4)
  PRINT
  
  ENDFOR;FOR _DF = 0,N_ELEMENTS(DFS)-1 DO BEGIN
  ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
  ,'DO_TEST_T_PDF'
ENDIF;IF DO_TEST_T_PDF GE 1 THEN BEGIN
;|||||||||||||||||||||||||||||||||||||
;
;********************************
IF DO_COMPARE_OLD GE 1 THEN BEGIN
;********************************
  ,'DO_COMPARE_OLD'  
  CSVFILE = !S.DATA +'T_TABLE_ONE_TAIL.CSV'
  DB = CSV_READ(CSVFILE)
  DFS = [1,2,5,10,50,100,500,1000]
  DFS = [100,200]
  ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
  FOR _DF = 0,N_ELEMENTS(DFS)-1 DO BEGIN
  DF = DFLS(_DF)
  OK = WHERE(DB.DF EQ DF,COUNT)
  IF COUNT EQ 1 THEN BEGIN
    D = DB[OK]     
    D = STRUCT_REMOVE(D,'DF') 
    NAMES = TAG_NAMES(D) & NAMES =FLOAT(REPLACE(NAMES,'T_','.'))
    S = STRUCT_2STRING(D) 
    T=STR_SEP(S,',')
    VALS = FLOAT(T)
  ENDIF;IF COUNT EQ 1 THEN BEGIN
  OLD_PROBS = REPLICATE(0.0,N_ELEMENTS(VALS))
  ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
  FOR NTH = 0,N_ELEMENTS(VALS)-1 DO BEGIN
    T_VALUE = VALS[NTH]
    OLD = T_TEST(NUM=DF, TVAL=T_VALUE)
    OLD_PROBS[NTH] = OLD
  ENDFOR;FOR NTH = 0,N_ELEMENTS(VALS)-1 DO BEGIN
  ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
  PROBS = T_PDF(VALS, DF) 
  ;PRINT,VALS
  ;PRINT,PROBS
  ;PRINT,NAMES
  DIF = NAMES -OLD_PROBS
  PRINT,' DIFFERENCES BETWEEN TABLE PROBS AND IDLS T_PDF PROBS FOR DF = '+STRTRIM(DF,2) + '    '+ ROUNDS(DIF,4)
  T = STRTRIM(OLD_PROBS,2) + '   ' + STRTRIM(PROBS,2)  & T = ['OLD         NEW',T]& T = ['DF = ' + STRTRIM(DF,2),T]
  PLIST,T
  P
  ENDFOR;FOR _DF = 0,N_ELEMENTS(DFS)-1 DO BEGIN
  ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
  P,'NOTE THAT OLD TABLE STOPPED AT 101 DEGREES OF FREEDOM!'
  
  ,'DO_COMPARE_OLD'
ENDIF;IF DO_COMPARE_OLD GE 1 THEN BEGIN
;|||||||||||||||||||||||||||||||||||||

;*********************************
IF DO_T_TEST_SLOPE GE 1 THEN BEGIN
;*********************************
  SAVEFILE = !S.DATA + 'DATA_FOR _T_TEST.SAVE'
  STRUCT = IDL_RESTORE(SAVEFILE)
  ST,STRUCT
  X = STRUCT.X & PN,X
  Y = STRUCT.Y & PN,Y
  S=STATS2(X,Y,MODEL = 'LSY') 
  PRINT,'SLOPE_PROB  ',S.SLOPE_PROB
;===> WRITTEN BY KIM HYDE >>>
T= T_TEST_SLOPE(X=X, Y=Y, MODEL=MODEL, ALPHA=0.95, SLOPE_P=SLOPE_P)
PRINT,'SLOPE_PROB  ',S.SLOPE_PROB,'  T_TEST_SLOPE ',STRTRIM(T[1]) +'   ' + SLOPE_P
P,S.STD_SLOPE/S.SLOPE
PRINT
STOP
ENDIF;IF DO_T_TEST_SLOPE GE 1 THEN BEGIN
;|||||||||||||||||||||||||||||||||||||||


END; #####################  END OF ROUTINE ################################
