; $ID:	STRUCT_FRISK.PRO,	2020-07-01-12,	USER-KJWH	$
;+
;#############################################################################################################
	PRO STRUCT_FRISK,STRUCT,FILE=FILE,BASIC=BASIC,EXCLUDE=EXCLUDE

;
; PURPOSE:  EVALUATE MIN & MAX FOR ALL TAGS IN A STRUCTURE
;
; CATEGORY:	STRUCT
;
; CALLING SEQUENCE: STRUCT_FRISK,STRUCT
;
; INPUTS: STRUCT A STRUCTURE ARRAY
;         
;		
; OPTIONAL INPUTS:
;		NONE:	
;		
; KEYWORD PARAMETERS:  
;                FILE..... OUTPUT FILE NAME [USUALLY  A CSV]
;                BASIC.... COMPUTE ONLY BASIC STATS IN STATS_NAN
;               EXCLUDE... TAGS TO EXCLUDE

; OUTPUTS:       A CSV FILE

; 
;
; MODIFICATION HISTORY:
;			SEP 21,2014,  WRITTEN BY J.O'REILLY 
;			JUN 28,2015,JEOR UPDATED DOCUMENTATION,NOW USING STATS_NAN, FIXED SECTION DEALING WITH STRING DATA
;     DEC 27,2016,JEOR CONVERT STATS_NAN TO STRING TO DEAL WITH MINMAX OF STRING DATA
;		  JUN 03,2018,JEOR	ADDED KEY EXCLUDE
;			
;#################################################################################
;-
;******************************
ROUTINE_NAME  = 'STRUCT_FRISK'
;******************************
IF NONE(FILE) THEN FILE = !S.IDL_TEMP + ROUTINE_NAME + '.CSV'
;===> CONVERT TO NUMERIC
STRUCT=STRUCT_2NUM(STRUCT)
;===> MAKE A STRUCT TO HOLD INFO FOR EACH TAG
D = STATS_NAN(FINDGEN(9))
D = CREATE_STRUCT('TAG','',D)
D = STRUCT_2STR(D)

TAGNAMES  = TAG_NAMES(STRUCT)
;STRUCT = STRUCT_2NUM(STRUCT)
;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FOR TAG = 0,N_TAGS(STRUCT)-1 DO BEGIN
  NAME = TAGNAMES(TAG)
  PFILE,NAME,/M
  DATA = STRUCT.(TAG)  
  IF IDLTYPE(DATA) EQ 'STRING' THEN BEGIN
    S = STRUCT_2STR(D)
    DATA = DATA(SORT(DATA))    
    M = MIN(DATA,SUB_MIN) & S.MIN = M & S.SUB_MIN = SUB_MIN
    M = MAX(DATA,SUB_MAX) & S.MAX = M & S.SUB_MAX = SUB_MAX
    S.TAG = NAME
    S.N = NOF(DATA)
    OK = WHERE(DATA NE '',COUNT) & S.N_GOOD = COUNT
    ;===> MAKE MEAN  MED VAR SDEV MISSING FOR STRINGS
    S.MEAN = ''
    S.MED = ''
;    S.VAR = ''
;    S.SDEV = ''
    STRUCT_ASSIGN,S,D
 ENDIF ELSE BEGIN    
  S = STRUCT_2STR(STATS_NAN(DATA,BASIC=BASIC))
  STRUCT_ASSIGN,S,D
  D.TAG = NAME
 ENDELSE;IF IDLTYPE(DATA) EQ 'STRING' THEN BEGIN
IF NONE(DB) THEN DB = D ELSE DB = [DB,D]
  
ENDFOR;FOR TAG = 0,N_TAGS(STRUCT)-1 DO BEGIN
;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
IF KEY(EXCLUDE) THEN  DB = STRUCT_REMOVE(DB,EXCLUDE)

CSV_WRITE,FILE,DB ;& PFILE,FILE


END; #####################  END OF ROUTINE ################################
