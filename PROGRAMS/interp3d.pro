;############################################################################################
;congrid
PRO INTERP3D, INFIL_PAIR, INDEX_IN=INDEX_IN, DATA_IN=DATA_IN, INDEX_OUT=INDEX_OUT, DATA_OUT=DATA_OUT, $
  T_DELT=T_DELT, DISPLAY=DISPLAY, DISP_XSIZ=DISP_XSIZ, WRITE_FILE=WRITE_FILE, OUTDIR=OUTDIR, $
  VERBOSE=VERBOSE

  ;+
  ; NAME:
  ;   INTERP3D
  ; PURPOSE:
  ;   INTERPOLATE INTERMEDIATE IMAGES BETWEEN A PAIR INPUT IMAGES.
  ;   OPTIONALLY WRITE THEM OUT, PRESERVING THE NAMING CONVENTION.
  ; CALLING SEQUENCE:
  ;   IDL> INTERP3D, ['FILE1.FTS','FILE2.FTS'], /DISPLAY, /WRITE_FILE, T_DELT=600
  ;   IDL> INTERP3D, INFIL_PAIR, INDEX_OUT=INDEX_OUT, DATA_OUT=DATA_OUT, /DISPLAY
  ;   IDL> INTERP3D, INDEX_IN=INDEX_IN, DATA_IN=DATA_IN, INDEX_OUT=INDEX_OUT, DATA_OUT=DATA_OUT, /DISPLAY
  ; INPUTS:
  ;   INFIL_PAIR - TWO ELEMENT STRING VECTOR OF FITS FILE NAMES TO BE INTERPOLATED
  ; OUTPUTS:
  ;   INDEX_OUT  - VECTOR OF INDEX RECORDS FOR INTERPOLATED IMAGES
  ;   DATA_OUT   - INTERPOLATED IMAGE CUBE
  ; OPTIONAL KEYWORD PARAMETERS:
  ;   T_DELT     - CADENCE FOR INTERPOLATED IMAGES (SECONDS, DEFAULT = 10 SEC)
  ;   DISPLAY    - SET TO 1 TO DISPLAY INTERPOLATED IMAGE CUBE
  ;   DISP_XSIZ  - X DIMENSION OF DISPLAY VERSION OF INTERPOLATED IMAGE CUBE (Y DIM DERIVED)
  ;   WRITE_FILE - SET TO 1 TO WRITE INTERPOLATED FITS FILES (FILE NAMES ARE CONSISTENT WITH
  ;                INPUT FILE NAMING CONVENTION)
  ;   OUTDIR     - PATH SPECIFICATION FOR OUTPUT FILES (DEFAULT IS CURRENT DIR)
  ; MODIFICATION HISTORY:
  ;   2009-08-17 - GLS - WRITTEN

  ; SET DEFAULTS FOR OPTIONAL INPUTS:
  IF NOT EXIST(T_DELT) THEN T_DELT = 10.
  IF NOT EXIST(DISP_XSIZ) THEN DISP_XSIZ = 512

  ; READ IN FITS FILE PAIR IF INFIL_PAIR SUPPLIED (OTHERWISE INDEX_IN AND DATA_IN ARE ASSUMED):
  IF EXIST (INFIL_PAIR) THEN BEGIN
    MREADFITS, INFIL_PAIR, INDEX_PAIR, DATA_PAIR
  ENDIF ELSE BEGIN
    INDEX_PAIR = INDEX_IN
    DATA_PAIR = DATA_IN
  ENDELSE

  INFIL0 = INFIL_PAIR[0]
  INDEX0 = INDEX_PAIR[0]

  T_PAIR = INDEX_PAIR.DATE_D$OBS
  TSEC_PAIR = ANYTIM(T_PAIR)
  TDIFF_PAIR = TSEC_PAIR[1] - TSEC_PAIR[0]

  IF (TDIFF_PAIR GT T_DELT) THEN BEGIN

    ; CREATE TIME GRID FOR INTERPOLATED IMAGES AND INDEX RECORDS FOR THOSE IMAGES:
    T_GRID = TIMEGRID(T_PAIR[0], T_PAIR[1], SECONDS=TDIFF_PAIR)
    N_SAMP = FIX(TDIFF_PAIR/T_DELT)
    TSEC_SAMP = TSEC_PAIR[0] + (INDGEN(N_SAMP)+1)*T_DELT
    T_SAMP = ANYTIM(TSEC_SAMP, /CCSDS)
    INDEX_SAMP = REPLICATE(INDEX0, N_SAMP)
    INDEX_SAMP.DATE_D$OBS = ANYTIM(T_SAMP, /CCSDS)

    ; DO INTERPOLATION (CONGRID WITH LINEAR INTERPOLATION):
    NAXIS1 = INDEX0.NAXIS1
    NAXIS2 = INDEX0.NAXIS2
    BUFF = CONGRID(DATA_PAIR, NAXIS1, NAXIS2, N_SAMP+2)
    DATA_SAMP = BUFF[*,*,1:N_SAMP]

    ; OPTIONALLY DISPLAY MOVIE OF INTERPOLATED FILES INTERACTIVELY:
    IF KEYWORD_SET(DISPLAY) THEN BEGIN
      IF NOT EXIST(DISP_XSIZ) THEN DISP_XSIZ=512
      DISP_YSIZ = DISP_XSIZ*(FLOAT(NAXIS2)/NAXIS1)
      LIL_DATA_SAMP = CONGRID(DATA_SAMP, DISP_XSIZ, DISP_YSIZ, N_SAMP, /INTERP)
      XSTEPPER, SAFE_LOG10(LIL_DATA_SAMP)
    ENDIF

    ; OPTIONALLY WRITE OUT INTERPOLATED FITS FILES:
    IF KEYWORD_SET(WRITE_FILE) THEN BEGIN
      BREAK_FILE, INFIL0, DISK0, DIR0, FILNAM0, EXT0
      FILE_SPEC0 = STRMID(FILNAM0, 15, 6) + '_' + STRTRIM(INDEX_SAMP.WAVELNTH,2)
      OUTFIL_SAMP = TIME2FILE(INDEX_SAMP.DATE_D$OBS, /SECONDS) + FILE_SPEC0 + EXT0
      IF EXIST(OUTDIR) THEN OUTFIL_SAMP = CONCAT_DIR(OUTDIR, OUTFIL_SAMP)
      MWRITEFITS, INDEX_SAMP, DATA_SAMP, OUTFILE=OUTFIL_SAMP
    ENDIF

  ENDIF ELSE BEGIN

    IF KEYWORD_SET(VERBOSE) THEN $
      PRINT, 'REQUESTED SAMPLE INTERVAL EXCEEDS IME DIFFERENCE BETWEEN IMAGE PAIR.  NO FILES CREATED.'

  ENDELSE

END