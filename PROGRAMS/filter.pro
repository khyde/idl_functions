; $ID:	FILTER.PRO,	2020-07-08-15,	USER-KJWH	$
;#################################################################################
 	FUNCTION FILTER, DATA, FILT=FILT,WIDTH=WIDTH, WTS=WTS, $
 	                INVALID=INVALID,MISSING=MISSING,NAN=NAN,SIGMA=SIGMA

;+
; NAME:
;		FILT
;
; PURPOSE:
;				CONVOLVE A 1 OR 2-D OR 3-D DATA ARRAY USING A SPECIFIED FILT [DEFAULT=TRICUBE]
;
; CATEGORY:
;		MATH
;
; CALLING SEQUENCE:
;
;		RESULT = FILT(DATA,FILT=FILT,WIDTH=WIDTH,WTS=WTS)
;
; INPUTS:
;		DATA...	A 1 OR 2-D OR 3-D ARRAY [DATA MUST HAVE AT LEAST 3 ELEMENTS]
;
; KEYWORDS:
;  FILT:  THE WEIGHTING FILT TO USE 
;		WIDTH:  THE WIDTH FOR THE FILT (DEFAULT = 5)
;		MISSING:THE DATA VALUE WHICH IS INVALID AND SHOULD BE IGNORED AS MISSING DATA
;						THE DEFAULT MISSING IS BASED ON THE IDL DATA TYPE AND MISSINGS.PRO
;		WTS:   RETURN JUST THE FILT
;		INVALID:  A SCALAR VALUE OF THE SAME TYPE AS ARRAY THAT SHOULD BE USED 
;		          TO INDICATE INVALID DATA WITHIN ARRAY. 
;		          WHEN COMPUTING THE CONVOLUTION FOR A PARTICULAR POINT, 
;		          ANY INVALID VALUES IN THE KERNEL'S SPAN WILL NOT BE INCLUDED WITHIN THE SUM.  
;		NAN:    TREAT NANS AS INVALID DATA [EQUIVALENT TO TREATING THOSE VALUES AS 0.0 
;		        WHEN COMPUTING THE CONVOLUTION SUM.]
;		SIGMA:  ONLY USED BY GAUSSIAN
;
; OUTPUTS:
;		A DOUBLE-PRECISION FILTED  ARRAY OF THE SIZE OF THE INPUT DATA
;; EXAMPLES:
; TO SEE THE FILTER WEIGHTS:
;
; P,ROUNDS(FILTER(FILT ='TRICUBE',/WTS,WIDTH = 7),5)
; P,ROUNDS(FILTER(FILT ='TRAPEZOID',/WTS,WIDTH = 7),5)
; P,ROUNDS(FILTER(FILT ='DANIELL',/WTS,WIDTH = 7),5)
; P,ROUNDS(FILTER(FILT ='GAUSSIAN',/WTS,WIDTH = 7),6)

; TO APPLY THE FILT TO DATA:
;
; P,ROUNDS(FILTER(FILT ='TRICUBE',FINDGEN(11)),3)
; P,ROUNDS(FILTER(FILT ='TRAPEZOID',FINDGEN(11)),3)
; P,ROUNDS(FILTER(FILT ='DANIELL',FINDGEN(11)),3)
; P,ROUNDS(FILTER(FILT ='GAUSSIAN',FINDGEN(11)),3)
;
;===> NON EXISTENT FILT
; P,FILTER(FILT ='JUNK',/WTS)
;===> USING INVALID
; DATA = FINDGEN(11) &  DATA(3) =-999. & DATA(5) = !VALUES.F_NAN
; P,FILTER(FILT ='TRICUBE',DATA,/NAN,WIDTH = 5,INVALID =-999.)
; ;|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
; 
; 
; NOTES:
;#############################################################################################
; ; THE DANIELL FILTER:
;     FOLLOWS THE APPROACH IN:
;     BLOOMFIELD, PETER. 2000.
;     FOURIER ANALYSIS OF TIME SERIES, AN INTRODUCTION.
;     SECOND EDITION. JOHN WILEY & SONS, INC.
;     PAGE 108 EQUATION (7.8) AND PAGE 157 EQUATION (8.18).

;     FOR EXAMPLE, BLOOMFIELD'S SIMPLE MOVING AVERAGE OF LENGTH 6 (PAGE 157, EQUATION (8.18).
;     S6(F) = 1/6 *(  1/2*I(F-F3) + TOTAL(I(F-FJ)(J=-2,2) + 1/2*I(F+F3)  )
;     YIELDS IDENTICAL RESULTS TO THIS PROGRAM WHEN WIDTH = 7,
;     WHERE THE CENTRAL 4 ARE SUMMED AND THE POINTS TO LEFT AND RIGHT OF CENTRAL 4 ARE AVERAGED
;     (I.E.THE END POINTS HAVE 1/2 THE WEIGHTS OF THE CENTRAL POINTS).
;     THIS PRESERVES THE SYMMETRY OF THE FILT AND CENTERS THE AVERAGE.
;
;     TREATMENT OF END VALUES:
;         BLOOMFIELD, 2000, P.103:"TWO SIMPLE RULES ARE TO TREAT UNAVAILABLE VALUES 
;                                  IN THE INPUT SERIES AS EQUAL TO THE CORRESPONDING END VALUE, 
;                                  AND TO TREAT THE INPUT SERIES AS IF IT WERE
;                                  SYMMETRIC ABOUT EACH END VALUE."
;         IDL'S CONVOL IS USED WITH EDGE_TRUNCATE. THEREFORE, FOR EXAMPLE, IF THE WIDTH=5,
;         THE SMOOTHED ESTIMATE AT Y0 IS:   DATA[0]*0.125 + DATA[0]*0.25+DATA[0]*0.25 + DATA[1]*0.25 +DATA(2)*0.125
;         THE SMOOTHED ESTIMATE AT Y1 IS:   DATA[0]*0.125 + DATA[0]*0.25+DATA[1]*0.25 + DATA(2)*0.25 +DATA(3)*0.125
;         THE SMOOTHED ESTIMATE AT Y2 IS:   DATA[0]*0.125 + DATA[1]*0.25+DATA(2)*0.25 + DATA(3)*0.25 +DATA(4)*0.125
;||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
;
;#############################################################################################
; THE TRICUBE FILT THIS FILT USES THE WEIGHT_TRICUBE FUNCTION:
; 
; EXAMPLES FROM NIST: ENGINEERING STATISTICS HANDBOOK, EXAMPLE OF LOESS COMPUTATIONS
; HTTP://WWW.ITL.NIST.GOV/DIV898/HANDBOOK/PMD/SECTION1/DEP/DEP144.HTM
; ;http://www.itl.nist.gov/div898/handbook/pmd/section1/dep/dep144.htm
; CEN = 0.5578196 ; POINT OF ESTIMATION
; X          Y     DISTANCE  DISTANCE   WEIGHT
; 0.5578196  18.63654 0.000000 0.0000000 1.00000000
; 2.0217271 103.49646 1.463907 0.3217691 0.90334913
; 2.5773252 150.35391 2.019506 0.4438904 0.75988974
; 3.4140288 190.51031 2.856209 0.6277992 0.42621714
; 4.3014084 208.70115 3.743589 0.8228466 0.08686171
; 4.7448394 213.71135 4.187020 0.9203134 0.01072308
; 5.1073781 228.49353 4.549558 1.0000000 0.00000000
; CEN = 0.5578196
; ARR=[0.5578196,2.0217271,2.5773252,3.4140288,4.3014084,4.7448394,5.1073781]
;IDL> PRINT, WEIGHT
;       1.0000000      0.90334912      0.75988974      0.42621708     0.086861716     0.010723108 -3.8857637E-021


; CEN = 2.5773252 ; POINT OF ESTIMATION
; X          Y     DISTANCE  DISTANCE   WEIGHT
;0.5578196  18.63654 2.0195055 0.7982068 0.1186858
;2.0217271 103.49646 0.5555981 0.2195994 0.9685654
;2.5773252 150.35391 0.0000000 0.0000000 1.0000000
;3.4140288 190.51031 0.8367037 0.3307060 0.8953727
;4.3014084 208.70115 1.7240833 0.6814416 0.3194020
;4.7448394 213.71135 2.1675143 0.8567071 0.0511567
;5.1073781 228.49353 2.5300530 1.0000000 0.0000000
;ARR=[0.5578196,2.0217271,2.5773252,3.4140288,4.3014084,4.7448394,5.1073781]
;CEN = 2.5773252
; IDL> PRINT, WEIGHT
; 0.11868579      0.96856545       1.0000000      0.89537262      0.31940198     0.051156749      0.00000000
;|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||| 
; 
;###################################################################################################################
;;    A TRAPEZOIDAL FILT OF WIDTH=7 IS SIMILAR TO BLOOMFIELD'S MODIFIED DANIELL FILT WIDTH=6
;   WHERE THE CENTRAL 4 ARE SUMMED AND THE POINTS TO LEFT AND RIGHT OF CENTRAL 4 ARE AVERAGED

;   FOR EXAMPLE, BLOOMFIELD'S SIMPLE MOVING AVERAGE OF LENGTH 6
;   S6(F) = 1/6 *(  1/2*I(F-F3) + TOTAL(I(F-FJ)(J=-2,2) + 1/2*I(F+F3)  )
;   YIELDS IDENTICAL RESULTS TO THIS PROGRAM WHEN WIDTH = 7

;   BLOOMFIELD, PETER. 2000.
;   FOURIER ANALYSIS OF TIME SERIES, AN INTRODUCTION.
;   SECOND EDITION. JOHN WILEY & SONS, INC. (PAGE 157).
;|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

;##############################################################################################
; THE GAUSSIAN FILT:
; 
; ;   DATA... A 1 OR 2-D ARRAY (SHOULD BE FLOATING-POINT OR DOUBLE-PRECISION)
;             OUTPUT IS 1 OR 2-D ARRAY OF THE SIZE OF THE INPUT DATA
;
;     SIGMA.. THE VALUE WHICH CONTROLS THE STEEPNESS OF THE GAUSSIAN WEIGHTING FUNCTION:
;           E.G. WITH A SIGMA = 0.5 THE WEIGHTING FUNCTION DECREASES RAPIDLY AWAY FROM 
;           THE CENTRAL PIXEL
;           AND  WITH A SIGMA = 7.0 THE WEIGHTING FUNCTION DECREASES VERY SLOWLY 
;           AWAY FROM THE CENTRAL PIXEL.
;           THE DEFAULT SIGMA IS 0.6
;|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
; 
; RESTRICTIONS:
;		THE FILT WIDTH MUST BE LESS THAN OR EQUAL TO THE DIMENSION(S) OF THE INPUT DATA ARRAY
;   NOTE THAT ANY NANS OR INFINITY VALUES ARE CONSIDERED INVALID BECAUSE THE DEFAULT IS NAN = 1


;	NOTES:
;
;
; MODIFICATION HISTORY:
;			WRITTEN FEB 9,2015,JOR [COMBINED SEVERAL SEPARATE FILT PROGRAMS]
;			FEB 10,2015,JOR:  IF FILT EQ 'GAUSSIAN' AND SZ.N_DIMENSIONS EQ 1 THEN F = F(*,0)
;     FEB 12,2015,JOR CALLING IDL'S GAUSSIAN FUNCTION WHEN FILT = 'GAUSSIAN'
;     AUG 02, 2018 - KJWH: Changed CASE FILT OF to CASE STRUPCASE(FILT) OF
;
;-
;***********************
ROUTINE_NAME = 'FILT'
;***********************
;===> NON FINITE VALUES [NAN, INFINITY] ARE CONSIDERED INVALID [SEE CONVOL]
IF NONE(NAN) THEN NAN = 1
;	===> DEFAULT FILT AND WIDTH AND MISSING VALUE
IF NONE(FILT) THEN FILT = 'TRICUBE' 
IF NONE(WIDTH) AND FILT EQ 'DANIELL' THEN WIDTH=5;[TO MATCH BLOOMFIELD, 2000]
IF NONE(WIDTH) THEN WIDTH=5
;	===> ENSURE WIDTH GE 3:
WIDTH = WIDTH > 3	
IF NONE(MISSING) THEN MISSING = MISSINGS(DATA)

;===> SIZE OF INPUT DATA
SZ=SIZEXYZ(DATA) 


X=FINDGEN(WIDTH)

;===> GET FILT WEIGHTS
CASE STRUPCASE(FILT) OF
  'TRICUBE': BEGIN
    ;===> CENTER OF FILT
    CENTER = WIDTH/2
    W = WEIGHT_TRICUBE(X,CENTER)
  END;'TRICUBE'
  
  'TRAPEZOID': BEGIN
    W = REPLICATE(1./(WIDTH-1),WIDTH)
    W([0,WIDTH-1]) = 0.5*W([0,WIDTH-1])
   END;'TRAPEZOID'
   
   'DANIELL': BEGIN
    ; ===> RESTRICTION: WIDTH MUST BE ODD
    WIDTH = WIDTH + (WIDTH + 1) MOD 2      
    W = REPLICATE(1./(WIDTH-1),WIDTH)
    W([0,WIDTH-1]) = 0.5*W([0,WIDTH-1])
   END;'DANIELL'
   
   'GAUSSIAN': BEGIN
     ;  ===> GET FILT WEIGHTS
   IF NONE(SIGMA)  THEN SIGMA = 0.6D

; ===> FOLLOWING IS FROM RSI: CREATE X AND Y INDICES
;   X = (DINDGEN(WIDTH)-WIDTH/2) # REPLICATE(1, WIDTH)
;   Y = TRANSPOSE(X)
;; ===> CREATE KERNEL
;   W = EXP(-((X^2)+(Y^2))/(2*DOUBLE(SIGMA)^2)) / (SQRT(2.0*!PI) * DOUBLE(SIGMA))
; ===> ENSURE DATA DIMENSIONS MATCH W DIMENSIONS:
   IF SZ.N_DIMENSIONS EQ 1 THEN DATA = (DATA#REPLICATE(1,NOF(DATA)))
;===> REPLICATE SIGMA FOR THE  GAUSSIAN_FUNCTION
   SIG = REPLICATE(SIGMA,(SZ.N_DIMENSIONS > 1))
   KERNEL = GAUSSIAN_FUNCTION([SIG], WIDTH=WIDTH)
   GOTO,DONE_KERNEL
   END;'GAUSSIAN'

  ELSE: BEGIN
    MESSAGE,'ERROR: FILT NOT FOUND'
  END
ENDCASE



IF SZ.N_DIMENSIONS EQ 2 THEN KERNEL = W # TRANSPOSE(W)
IF SZ.N_DIMENSIONS EQ 3 THEN BEGIN
  D3 = D3_GEN([WIDTH,WIDTH,WIDTH])
  ;===> THIS MUST BE CHECKED>
  FOR N = 0,WIDTH-1 DO D3(*,*,N) = W # TRANSPOSE(W)
  KERNEL = D3
ENDIF;IF SZ.N_DIMENSIONS EQ 3 THEN BEGIN

IF SZ.N_DIMENSIONS EQ 0 THEN KERNEL = W 
IF SZ.N_DIMENSIONS EQ 1 THEN KERNEL = W

DONE_KERNEL:
;===> IF JUST WANT THE FILT ?
IF KEY(WTS) THEN RETURN,KERNEL

;	***************************************
;	*** CONVOLUTION OF DATA WITH KERNEL ***
;	***************************************

;===> ENSURE THAT WIDTH OF KERNEL IS LESS THAN WIDTH OF DATA ARRAY
IF (SZ.N_DIMENSIONS EQ 1 AND WIDTH GT SZ.DIMENSIONS[0]) OR $
	 (SZ.N_DIMENSIONS EQ 2 AND (WIDTH GT SZ.DIMENSIONS[0] OR WIDTH GT SZ.DIMENSIONS[1])) THEN BEGIN
	RETURN,'ERROR:WIDTH MUST BE LESS THAN DATA DIMENSIONS'
ENDIF

F=CONVOL(DATA,KERNEL,TOTAL(KERNEL),INVALID=INVALID,MISSING=MISSING,/NORMALIZE,/EDGE_TRUNCATE,NAN=NAN)

;===> IF GAUSSIAN FILT AND DATA WERE A 1-D ARRAY THEN REDEFINE F AS A 1-D ARRAY
IF FILT EQ 'GAUSSIAN' AND SZ.N_DIMENSIONS EQ 1 THEN BEGIN  
  F = F(*,0) 
 ;; DATA = DATA(*,0) ;CONSERVE THE ORIGINAL INPUT DATA
ENDIF;IF FILT EQ 'GAUSSIAN' AND SZ.N_DIMENSIONS EQ 1 THEN BEGIN
;||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

RETURN,F 

END; #####################  END OF ROUTINE ################################
