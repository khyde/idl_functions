; $ID:	STRUCT_FINITE.PRO,	2020-06-26-15,	USER-KJWH	$
; #########################################################################; 
FUNCTION STRUCT_FINITE,STRUCT,COUNT
;+
; PURPOSE:  RETURNS A STRUCTURE WITH JUST THE FINITE DATA FOR ALL NUMERICAL TAGS
;
; CATEGORY: STRUCT;
;
;
; INPUTS: 
;        STRUCT..... STRUCTURE
;
;
; KEYWORDS:

; OUTPUTS:
;       COUNT..... NUMBER OF FINITE
;
;; EXAMPLES:
;
; MODIFICATION HISTORY:
;     OCT 29, 2016  WRITTEN BY: J.E. O'REILLY
;-
; #########################################################################

;******************************
ROUTINE_NAME  = 'STRUCT_FINITE'
;******************************

TYPES = INTARR(N_TAGS(STRUCT))
;===> FIRST GET THE TYPE FOR EACH TAG
;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FOR I = 0,N_TAGS(STRUCT) -1 DO BEGIN
  TYPES(I) = NUMERIC(STRUCT.(I)) 
ENDFOR;FOR I = 0,N_TAGS(STRUCT) -1 DO BEGIN
;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF

OK = WHERE(TYPES NE 1,COUNT)
IF COUNT GE 1 THEN MESSAGE, 'ERROR: NOT ALL TAGS ARE NUMERIC'


;===> CONSTRUCT AN ARRAY TO HOLD FINITE SUBSCRIPTS FOR EACH TAG
SUBS = BYTARR([N_TAGS(STRUCT),NOF(STRUCT)])
COUNTER = 0
;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FOR I = 0,N_TAGS(STRUCT)-1 DO BEGIN
   OK = WHERE(FINITE(STRUCT.(I)),COUNT) & COUNTER = COUNTER + COUNT
   IF COUNT GE 1 THEN SUBS(I,OK) = 1 
ENDFOR;FOR I = 0,N_TAGS(STRUCT)-1 DO BEGIN
;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF

OK = WHERE(TOTAL(SUBS, 1) EQ N_TAGS(STRUCT),COUNT)

IF COUNT GE 1 THEN BEGIN
  COUNT = COUNTER
  RETURN,STRUCT[OK] 
ENDIF ELSE BEGIN
  COUNT = 0
  RETURN,[]
ENDELSE


END; #####################  END OF ROUTINE ################################
