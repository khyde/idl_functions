; $ID:	ILLEX_MAIN.PRO,	2021-04-15-17,	USER-KJWH	$

PRO ILLEX_MAIN, VERSION=VERSION

;+
; NAME:
;		ILLEX_MAIN
;
; PURPOSE:;
;		MAIN program for creating data and figures for the ILLEX working group
;
; CATEGORY:
;		MAIN
;
; CALLING SEQUENCE:
;
;	ROUTINE_NAME
;
; INPUTS:
;
; OPTIONAL INPUTS:
;
; KEYWORD PARAMETERS:
;
; OUTPUTS:
;		This function creates data and plots for ILLEX analyses and reports
;
;	NOTES:
;
;
; MODIFICATION HISTORY:
;			Written:  February 14, 2019 by K.J.W.Hyde, 28 Tarzwell Drive, NMFS, NOAA 02882 (kimberly.hyde@noaa.gov)
;			Modified: Feb 14, 2019 - KJWH: 
;			                               
;-
  ;	****************************************************************************************************
  ROUTINE_NAME = 'ILLEX_MAIN'


  SL = PATH_SEP()
  DIR_PROJECTS = !S.PROJECTS + 'ILLEX' + SL 
  DIR = DIR_PROJECTS + 'EXAMPLES' + SL
  DIR_NET = DIR_PROJECTS + 'NETCDF' + SL
  DIR_OUT = DIR + 'OUTLINE' + SL
  DIR_MASK = DIR + 'MASK' + SL
  DIR_SUBSET = DIR + 'SUBSET' + SL
  DIR_TEST, [DIR, DIR_NET, DIR_OUT, DIR_MASK, DIR_SUBSET]

  SUBAREA = 'ILLEX'
  SST = 'SST_6_26'
  SST_MIN = 13
  SST_MAX = 21
  CB_TITLE = UNITS('TEMP')
  MP = 'NES'
  AREAS = MAPS_PIXAREA(MP)
  MR = MAPS_READ(MP);,PX=PX,PY=PY)
  TP = FLOAT(STRSPLIT(MR.TXT_POS, ';',/EXTRACT))

  LM = READ_LANDMASK(MP,/STRUCT)
  PAL = 'PAL_BR'
  PAL_BR, R, G, B
  BUFFER=1
  
  STRUCT = READ_SHPFILE(SUBAREA, MAPP='NES')
  STR=STRUCT.(0)
  OUTLINE = STRUCT.(0).OUTLINE
  BLK = MAPS_BLANK(MP, FILL=255)
  BLK(STR.ILLEX_0.SUBS) = 1
  BLK(OUTLINE) = 245
  CLOUDIER, IMAGE=BLK,CLOUDS=245B,MASK=MASK,BOX=5,/QUIET
  OUTLINE = WHERE(MASK EQ 1,COUNT_OUTLINE)
  MASK = WHERE(BLK EQ 255)

  FW = FLS(!S.SST + 'MUR/L3B2/STATS/SST/W_2003*')
  F8 = FLS(!S.SST + 'MUR/L3B2/STATS/SST/D8_2003*')
  F3 = FLS(!S.SST + 'MUR/L3B2/STATS/SST/D3_2003*')
  FD = FLS(!S.SST + 'MUR/L3B2/SAVE/SST/D_2003*')
  
  AV = FLS(!S.SST + 'AVHRR/L3B4/STATS/SST/D8_2000*',DATERANGE=[20000501,20000531])
  WRITE_NETCDF,AV,DIR_OUT=DIR_NET,MAP_OUT='NESGRID',TAGS_STAT=['NUM','MEAN','MED','STD'],OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,OUTFILES=OUTFILES
  
  MU = FLS(!S.SST + 'MUR/L3B2/SAVE/SST/D_2012*',DATERANGE=[20120801,20120930])
  WRITE_NETCDF,MU,DIR_OUT=DIR_NET,MAP_OUT='NESGRID',OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,OUTFILES=OUTFILES
    
  F = [AV,MU,FW(17),FW(18),F8(119:134),FD(119:131)] ; F3(119:131),
  
  FOR N=0, N_ELEMENTS(F)-1 DO BEGIN
    FP = PARSE_IT(F(N))
    CASE FP.PERIOD_CODE OF 
      'W': DATE = 'Weekly mean ' 
      'D8': DATE = '8-Day mean '
      'D': DATE = DATE_FORMAT(FP.DATE_START,/DAY)
    ENDCASE
    IF FP.PERIOD_CODE NE 'D' THEN DATE = DATE + '!C' + DATE_FORMAT(FP.DATE_START,/DAY) + ' to ' + DATE_FORMAT(FP.DATE_END,/DAY)
    IF FILE_MAKE(F(N),DIR + FP.NAME + '-' + ['OUTLINE','MASK','SUBSET'] + '.PNG',OVERWRITE=OVERWRITE) EQ 0 THEN CONTINUE
    D = STRUCT_READ(F(N),MAP_OUT=MP)
    OK_SST = WHERE(D GE SST_MIN AND D LE SST_MAX AND BLK EQ 1,COUNT)
    COMP_SST = WHERE(D NE MISSINGS(D) AND BLK EQ 1, COUNT_COMP)
    AREA = TOTAL(AREAS(OK_SST))
    ATXT = 'Total area ' + "$\ge$ " + NUM2STR(SST_MIN) + ' and ' + "$\le$ " + NUM2STR(SST_MAX) + ' = ' + ROUNDS(AREA,2) + " km$^2$"
    
    PNGFILE = DIR_OUT + FP.NAME + '-OUTLINE.PNG'
    IF FILE_MAKE(F(N),PNGFILE,OVERWRITE=OVERWRITE) EQ 1 THEN BEGIN
      B = PRODS_2BYTE(D, PROD=SST)
      B(OUTLINE) = 0
      B(LM.LAND) = 252
      B(LM.COAST_THICK) = 0
      W = WINDOW(DIMENSIONS = FLOAT(STRSPLIT(MR.IMG_DIMS,';',/EXTRACT)), BUFFER=BUFFER)
      IMG = IMAGE(B, RGB_TABLE=CPAL_READ(PAL), MARGIN=0,/CURRENT) 
      CBAR, SST, IMG=IMG, FONT_SIZE=MR.CB_SIZE, FONT_STYLE=CB_STYLE, CB_TYPE=FIX(MR.CB_TYPE), CB_POS=FLOAT(STRSPLIT(MR.CB_POS,  ';',/EXTRACT)), CB_TITLE=CB_TITLE, CB_OBJ=CB_OBJ, CB_TICKNAMES=CB_TICKNAMES, PAL=PAL, RELATIVE=RELATIVE
      TXT = TEXT(0.02,0.79,DATE,FONT_SIZE=11,FONT_STYLE='BOLD')
      W.SAVE, PNGFILE
      W.CLOSE
    ENDIF  
    
    PNGFILE = DIR_MASK + FP.NAME + '-MASK.PNG'
    IF FILE_MAKE(F(N),PNGFILE,OVERWRITE=OVERWRITE) EQ 1 THEN BEGIN
      B = PRODS_2BYTE(D, PROD=SST)
      B(MASK) = 255
      B(OUTLINE) = 0
      B(LM.LAND) = 252
      B(LM.COAST_THICK) = 0
      W = WINDOW(DIMENSIONS = FLOAT(STRSPLIT(MR.IMG_DIMS,';',/EXTRACT)), BUFFER=BUFFER)
      IMG = IMAGE(B, RGB_TABLE=CPAL_READ(PAL), MARGIN=0,/CURRENT)
      CBAR, SST, IMG=IMG, FONT_SIZE=MR.CB_SIZE, FONT_STYLE=CB_STYLE, CB_TYPE=FIX(MR.CB_TYPE), CB_POS=FLOAT(STRSPLIT(MR.CB_POS,  ';',/EXTRACT)), CB_TITLE=CB_TITLE, CB_OBJ=CB_OBJ, CB_TICKNAMES=CB_TICKNAMES, PAL=PAL, RELATIVE=RELATIVE
      TXT = TEXT(0.02,0.79,DATE,FONT_SIZE=11,FONT_STYLE='BOLD')
      W.SAVE, PNGFILE
      W.CLOSE
    ENDIF  
    
    PNGFILE = DIR_SUBSET + FP.NAME + '-SUBSET.PNG'
    IF FILE_MAKE(F(N),PNGFILE,OVERWRITE=OVERWRITE) EQ 1 THEN BEGIN
      B = PRODS_2BYTE(D, PROD=SST) & BB = B
      B(MASK) = 255
      B(COMP_SST) = 254
      B(OK_SST) = BB(OK_SST)
      B(OUTLINE) = 0
      B(LM.LAND) = 252
      B(LM.COAST_THICK) = 0
      W = WINDOW(DIMENSIONS = FLOAT(STRSPLIT(MR.IMG_DIMS,';',/EXTRACT)), BUFFER=BUFFER)
      IMG = IMAGE(B, RGB_TABLE=CPAL_READ(PAL), MARGIN=0,/CURRENT)
      CBAR, SST, IMG=IMG, FONT_SIZE=MR.CB_SIZE, FONT_STYLE=CB_STYLE, CB_TYPE=FIX(MR.CB_TYPE), CB_POS=FLOAT(STRSPLIT(MR.CB_POS,  ';',/EXTRACT)), CB_TITLE=CB_TITLE, CB_OBJ=CB_OBJ, CB_TICKNAMES=CB_TICKNAMES, PAL=PAL, RELATIVE=RELATIVE
      TXT = TEXT(0.02,0.79,DATE,FONT_SIZE=11,FONT_STYLE='BOLD')
      TA  = TEXT(0.98,0.05, ATXT,FONT_SIZE=11,FONT_STYLE='BOLD',ALIGNMENT=1.0)
      W.SAVE, PNGFILE
      W.CLOSE
    ENDIF

  ENDFOR
  
  F = FLS(!S.SST + 'AVHRR/L3B4/STATS/SST/D8_2000*',DATERANGE=[20000501,20000531])
  F = [F,FLS(!S.SST + 'MUR/L3B2/SAVE/SST/D_2012*',DATERANGE=[20120801,20120930])]
  
  







stop

  OMAP = 'NES'
  SUBAREA = 'NES_ECOREGIONS'
  EPUS    = 'EPU_'+['NOESTUARIES']
  SHP_FILES = FLS(!S.IDL_SHAPEFILES + 'NES_ECOREGIONS' + SL + EPUS + '.shp')
  NAMES = ['GOM','GB','MAB']
  SUBTITLES = ['Gulf of Maine','Georges Bank','Mid-Atlantic Bight']
  STRUCT = READ_SHPFILE(SHP_FILES, MAPP=OMAP, COLOR=COLOR, VERBOSE=VERBOSE, NORMAL=NORMAL, AROUND=AROUND)
  SHPS=STRUCT.(0)
  EPU_OUTLINE = []
  FOR F=0, N_ELEMENTS(NAMES)-1 DO BEGIN
    POS = WHERE(TAG_NAMES(SHPS) EQ STRUPCASE(NAMES(F)),/NULL)
    EPU_OUTLINE = [EPU_OUTLINE,SHPS.(POS).OUTLINE]
  ENDFOR

  IF NONE(VERSION) THEN VERSION = 'V2019'
  FOR VTH=0, N_ELEMENTS(VERSION)-1 DO BEGIN ; Loop through the various versions
    VER = VERSIONS(VTH)
    CASE VER OF
      '2019': BEGIN
        DATERANGE = ['19980101','20191231']
        DATA_EXTRACTS = 'Y' 
        
      END
      
    ENDCASE
        
    DIR_PRO = DIR_PROJECTS + VERSION + SL
    DIR_DATA   = DIR_PRO + 'DATA_EXTRACTS' + SL & DIR_TEST, DIR_DATA
    DIR_COMP   = DIR_PRO + 'COMPOSITES'    + SL & DIR_TEST, DIR_COMP
    DIR_PNGS   = DIR_PRO + 'PNGS'          + SL & DIR_TEST, DIR_PNGS
    DIR_PLOTS  = DIR_PRO + 'PLOTS'         + SL & DIR_TEST, DIR_PLOTS
    DIR_THUMBS = DIR_PRO + 'THUMBNAILS'    + SL & DIR_TEST, DIR_THUMBS


;||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
;||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
;||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||


    BUFFER = 1
    VERBOSE = 0
    SUBAREA = 'NES_ECOREGIONS'
    EPUS    = 'EPU_'+['NOESTUARIES']
    
   ; DATFILE = DIR_DATA + STRJOIN(DATERANGE,'_') + '-' + STRJOIN(SATS,'_') + '-' + SUBAREA + '-' + SPLABEL + '-' +  '.SAV'
    YEARS = YEAR_RANGE(DATERANGE[0],DATE_RANGE[1],/STRING)


; ********************************************************
    IF KEY(DATA_EXTRACTS) THEN BEGIN
; ********************************************************
      SWITCHES,DATA_EXTRACTS,STOPP=STOPP,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,INIT=INIT,R_FILES=R_FILES,R_DATASETS=R_DATASETS,R_MAPS=R_MAPS
      
      
      PRODS = ['CHLOR_A-PAN','PPD-VGPM2'];,'MICRO_PERCENTAGE-PAN','NANO_PERCENTAGE-PAN','PICO_PERCENTAGE-PAN','MICRO_PERCENTAGE-HIRATA','NANO_PERCENTAGE-HIRATA','PICO_PERCENTAGE-HIRATA','MICRO_PERCENTAGE-UITZ','NANO_PERCENTAGE-UITZ','PICO_PERCENTAGE-UITZ']
      PERIODS = ['M','A','W','WEEK','MONTH','ANNUAL']
      EFILES = [] 
      FOR S=0, N_ELEMENTS(SATS)-1 DO BEGIN
        DATASET = SATS(S)
 ;       FILES = EDAB_SOE_GET_FILES(PRODS=PRODS, DATASETS=DATASET, PERIODS=PERIODS, PPD_PAN=PPD_PAN, YEARS=YEARS)
        SAV = DIR_DATA + DATASET + '-' + SUBAREA + '-' + SPLABEL + '-' + ROUTINE_NAME + '_' + VERSION + '.SAV'
        SUBAREAS_EXTRACT, FILES, SHP_FILES=SHP_FILES, INIT=INIT, VERBOSE=VERBOSE, DIR_OUT=DIR_DATA, STRUCT=STR, SAVEFILE=SAV
        EFILES = [EFILES,SAV]
        IF S EQ 0 THEN STRUCT = STR ELSE STRUCT = STRUCT_CONCAT(STRUCT,STR)
      ENDFOR ; SATS     
       
      STRUCT(WHERE(STRPOS(STRUCT.NAME,'SA_SEAWIFS') GE 0, /NULL)).SENSOR = 'SEAWIFS'
      STRUCT(WHERE(STRPOS(STRUCT.NAME,'SA_MODISA')  GE 0, /NULL)).SENSOR = 'MODISA'

      IF FILE_MAKE(EFILES,DATFILE,OVERWRITE=OVERWRITE) EQ 1 THEN BEGIN
        SAVE, STRUCT, FILENAME=DATFILE ; ===> SAVE THE MERGED DATAFILE
        SAVE_2CSV, DATFILE
      ENDIF
      
      
; ===> CONVERT THE EXTRACTED DATA TO THE SOE FORMAT      
      SEA_SOURCE = 'https://oceandata.sci.gsfc.nasa.gov/SeaWiFS/'
      MOD_SOURCE = 'https://oceandata.sci.gsfc.nasa.gov/MODIS-Aqua/'
      SA_SOURCE  =  STRJOIN([SEA_SOURCE,MOD_SOURCE],'; ')
      OCC_SOURCE = 'http://www.esa-oceancolour-cci.org/'
      AVH_SOURCE = 'https://www.nodc.noaa.gov/satellitedata/pathfinder4km53/'
      MUR_SOURCE = 'https://podaac.jpl.nasa.gov/dataset/MUR-JPL-L4-GLOB-v4.1'
      SST_SOURCE = STRJOIN([AVH_SOURCE,MUR_SOURCE])
      
      B = WHERE_SETS(STRUCT.PROD)
      FOR PR=0, N_ELEMENTS(B)-1 DO BEGIN
        APROD = B(PR).VALUE
           
        DATASETS = ['SEAWIFS_MODIS','OCCCI']
        FOR DTH=0, N_ELEMENTS(DATASETS)-1 DO BEGIN
            
          SPLABEL = APROD + '-STATS_ANOMS-' + DATASETS(DTH)
          EXTRACTED_FINAL = DIR_DATA + 'SOE_' + VERSION + '-' + SUBAREA + '-' + SPLABEL + '.CSV'
          IF FILE_MAKE(DATFILE,EXTRACTED_FINAL,OVERWRITE=OVERWRITE) EQ 1 THEN BEGIN
            DSTR = []
            ASTR = []
            STRUCT = IDL_RESTORE(DATFILE)
                      
            OKD = WHERE(STRUCT.SENSOR EQ 'OCCCI',COUNTO,COMPLEMENT=COMPLEMENT,NCOMPLEMENT=NCOMP)
            IF DATASETS(DTH) EQ 'OCCCI'         AND COUNTO GT 0 THEN DSTR = STRUCT(OKD)
            IF DATASETS(DTH) EQ 'SEAWIFS_MODIS' AND NCOMP  GT 0 THEN DSTR = STRUCT(COMPLEMENT)
            IF DSTR EQ [] THEN STOP
            
            OKP = WHERE(DSTR.PROD EQ APROD,COUNTP)
            IF COUNTP EQ 0 THEN STOP
            ASTR = DSTR(OKP)
          
            STR = REPLICATE(STRUCT_2MISSINGS(CREATE_STRUCT('PERIOD','','TIME','','TIME_UNIT','','VARIABLE','','VALUE',0.0,'UNITS','','REGION','','SHAPEFILE','','SENSOR','','ALGORITHM','','SOURCE','','NOTES','','FILENAME','')),N_ELEMENTS(ASTR))
            STR.FILENAME = ASTR.NAME
            STR.PERIOD = ASTR.PERIOD
          
            BP = WHERE_SETS(ASTR.PROD + '-' + ASTR.ALG)
            FOR A=0, N_ELEMENTS(BP)-1 DO BEGIN
              PROD = BP(A).VALUE  
              SUBS = WHERE_SETS_SUBS(BP(A))
              CASE PROD OF
                'CHLOR_A-PAN':              BEGIN & UNIT = 'mg m^-3'      & ALG = 'PAN_ET_AL_2008' & END
                'CHLOR_A-OCI':              BEGIN & UNIT = 'mg m^-3'      & ALG = 'NASA' & END
                'CHLOR_A-OCX':              BEGIN & UNIT = 'mg m^-3'      & ALG = "O'REILLY_ET_AL_1998" & END
                'PPD-VGPM2':                BEGIN & UNIT = 'gC m^-2 d^-1' & ALG = 'BERENFELD_FALKOWSKI_1997;EPPLEY_1972' & END
                'DIATOM_PERCENTAGE-PAN':    BEGIN & UNIT = 'percent(%)'   & ALG = 'PAN_ET_AL_2010; PAN_ET_AL_2011' & END
                'MICRO_PERCENTAGE-PAN':     BEGIN & UNIT = 'percent(%)'   & ALG = 'PAN_ET_AL_2010; PAN_ET_AL_2011' & END
                'NANO_PERCENTAGE-PAN':      BEGIN & UNIT = 'percent(%)'   & ALG = 'PAN_ET_AL_2010; PAN_ET_AL_2011' & END
                'PICO_PERCENTAGE-PAN':      BEGIN & UNIT = 'percent(%)'   & ALG = 'PAN_ET_AL_2010; PAN_ET_AL_2011' & END
                'DIATOM_PERCENTAGE-HIRATA': BEGIN & UNIT = 'percent(%)'   & ALG = 'HIRATA_ET_AL_2008; HIRATA_ET_AL_2011' & END
                'MICRO_PERCENTAGE-HIRATA':  BEGIN & UNIT = 'percent(%)'   & ALG = 'HIRATA_ET_AL_2008; HIRATA_ET_AL_2011' & END
                'NANO_PERCENTAGE-HIRATA':   BEGIN & UNIT = 'percent(%)'   & ALG = 'HIRATA_ET_AL_2008; HIRATA_ET_AL_2011' & END
                'PICO_PERCENTAGE-HIRATA':   BEGIN & UNIT = 'percent(%)'   & ALG = 'HIRATA_ET_AL_2008; HIRATA_ET_AL_2011' & END
                'MICRO_PERCENTAGE-UITZ':    BEGIN & UNIT = 'percent(%)'   & ALG = 'UITZ_ET_AL_2008' & END
                'NANO_PERCENTAGE-UITZ':     BEGIN & UNIT = 'percent(%)'   & ALG = 'UITZ_ET_AL_2008' & END
                'PICO_PERCENTAGE-UITZ':     BEGIN & UNIT = 'percent(%)'   & ALG = 'UITZ_ET_AL_2008' & END
              ENDCASE
              STR(SUBS).UNITS = UNIT
              STR(SUBS).ALGORITHM = ALG
            ENDFOR  
                    
            BP = WHERE_SETS(ASTR.PERIOD_CODE)
            FOR A=0, N_ELEMENTS(BP)-1 DO BEGIN
              APER = BP(A).VALUE
              SUBS = WHERE_SETS_SUBS(BP(A))
              CASE APER OF 
                'A':      BEGIN & OPER = 'ANNUAL'                & TUNIT = 'YYYY'     & SPOS = 2 & LEN = 4 & END
                'M':      BEGIN & OPER = 'MONTHLY'               & TUNIT = 'YYYYMM'   & SPOS = 2 & LEN = 6 & END
                'W':      BEGIN & OPER = 'WEEKLY'                & TUNIT = 'YYYYWW'   & SPOS = 2 & LEN = 6 & END
                'D8':     BEGIN & OPER = '8_DAY'                 & TUNIT = 'YYYYMMDD' & SPOS = 3 & LEN = 8 & END
                'ANNUAL': BEGIN & OPER = 'CLIMATOLOGICAL_ANNUAL' & TUNIT = 'YYYY'     & SPOS = 7 & LEN = 9 & END
                'MONTH':  BEGIN & OPER = 'CLIMATOLOGICAL_MONTH'  & TUNIT = 'MM'       & SPOS = 6 & LEN = 2 & END
                'WEEK':   BEGIN & OPER = 'CLIMATOLOGICAL_WEEK'   & TUNIT = 'WW'       & SPOS = 5 & LEN = 2 & END
                'DOY':    BEGIN & OPER = 'CLIMATOLOGICAL_DOY'    & TUNIT = 'DOY'      & SPOS = 4 & LEN = 3 & END
              ENDCASE
              STR(SUBS).VARIABLE = OPER + '_' + ASTR(SUBS).PROD
              STR(SUBS).TIME = STRMID(ASTR(SUBS).PERIOD,SPOS,LEN)
              STR(SUBS).TIME_UNIT = TUNIT  
            ENDFOR
            
            BP = WHERE_SETS(ASTR.MATH)
            FOR A=0, N_ELEMENTS(BP)-1 DO BEGIN
              UNI = ''
              AMATH = BP(A).VALUE
              SUBS = WHERE_SETS_SUBS(BP(A))
              CASE AMATH OF 
                'STATS':         BEGIN & MTH = 'MEDIAN'             & TAG = 'MED'   & NOTE = 'MEDIAN OF THE SPATIAL DATA' & END
                'ANOMALY_RATIO': BEGIN & MTH = 'RATIO_ANOMALY'      & TAG = 'AMEAN' & NOTE = 'ARITHMETIC MEAN OF THE SPATIAL DATA' & UNI = 'UNITLESS' & END
                'DIF':           BEGIN & MTH = 'DIFFERENCE_ANOMALY' & TAG = 'AMEAN' & NOTE = 'ARITHMETIC MEAN OF THE SPATIAL DATA' & END
              ENDCASE
              STR(SUBS).VARIABLE = STR(SUBS).VARIABLE + '_' + MTH
              STR(SUBS).NOTES = NOTE
              IF UNI NE '' THEN STR(SUBS).UNITS = UNI
              TP = WHERE(TAG_NAMES(ASTR) EQ TAG,/NULL)
              STR(SUBS).VALUE = ASTR(SUBS).(TP)
            ENDFOR    
                        
            STR.REGION = ASTR.SUBAREA
            STR.SHAPEFILE = ASTR.REGION
            
            BP = WHERE_SETS(ASTR.SENSOR)
            FOR A=0, N_ELEMENTS(BP)-1 DO BEGIN
              ASEN = BP(A).VALUE
              SUBS = WHERE_SETS_SUBS(BP(A))
              CASE ASEN OF 
                'SEAWIFS': BEGIN & OSEN = 'SeaWiFS'            & SRC = 'KHyde (NEFSC); ' + SEA_SOURCE & END
                'MODISA':  BEGIN & OSEN = 'MODIS-Aqua'         & SRC = 'KHyde (NEFSC); ' + MOD_SOURCE & END
                'SA':      BEGIN & OSEN = 'SeaWiFS/MODIS-Aqua' & SRC = 'KHyde (NEFSC); ' + SA_SOURCE  & END
                'OCCCI':   BEGIN & OSEN = 'OC-CCI'             & SRC = 'KHyde (NEFSC); ' + OCC_SOURCE & END
              ENDCASE
              STR(SUBS).SENSOR = OSEN
              STR(SUBS).SOURCE = SRC
            ENDFOR  
            
            YR = (DATE_PARSE(PERIOD_2DATE(STR.PERIOD))).YEAR
            
            STR(WHERE(STRUPCASE(STR.SENSOR) EQ 'SEAWIFS/MODIS-AQUA' AND HAS(STR.VARIABLE,'PPD'),/NULL)).SOURCE = STRJOIN(['Khyde (NEFSC)',SA_SOURCE, SST_SOURCE],'; ')
            STR(WHERE(STRUPCASE(STR.SENSOR) EQ 'SEAWIFS' AND HAS(STR.VARIABLE,'PPD') AND ~HAS(STR.VARIABLE,'CLIM') AND YR LE '2001',/NULL)).SOURCE = STRJOIN(['Khyde (NEFSC)',SEA_SOURCE, AVH_SOURCE],'; ')
            STR(WHERE(STRUPCASE(STR.SENSOR) EQ 'SEAWIFS' AND HAS(STR.VARIABLE,'PPD') AND ~HAS(STR.VARIABLE,'CLIM') AND YR EQ '2002',/NULL)).SOURCE = STRJOIN(['Khyde (NEFSC)',SEA_SOURCE, SST_SOURCE],'; ')
            STR(WHERE(STRUPCASE(STR.SENSOR) EQ 'SEAWIFS' AND HAS(STR.VARIABLE,'PPD') AND ~HAS(STR.VARIABLE,'CLIM') AND YR GE '2003',/NULL)).SOURCE = STRJOIN(['Khyde (NEFSC)',SEA_SOURCE, MUR_SOURCE],'; ')
            STR(WHERE(STRUPCASE(STR.SENSOR) EQ 'MODISA'  AND HAS(STR.VARIABLE,'PPD') AND ~HAS(STR.VARIABLE,'CLIM')                 ,/NULL)).SOURCE = STRJOIN(['Khyde (NEFSC)',MOD_SOURCE, MUR_SOURCE],'; ')
            STR(WHERE(STRUPCASE(STR.SENSOR) EQ 'OCCCI'   AND HAS(STR.VARIABLE,'PPD') AND ~HAS(STR.VARIABLE,'CLIM') AND YR LE '2001',/NULL)).SOURCE = STRJOIN(['Khyde (NEFSC)',OCC_SOURCE, AVH_SOURCE],'; ')
            STR(WHERE(STRUPCASE(STR.SENSOR) EQ 'OCCCI'   AND HAS(STR.VARIABLE,'PPD') AND ~HAS(STR.VARIABLE,'CLIM') AND YR EQ '2002',/NULL)).SOURCE = STRJOIN(['Khyde (NEFSC)',OCC_SOURCE, SST_SOURCE],'; ')
            STR(WHERE(STRUPCASE(STR.SENSOR) EQ 'OCCCI'   AND HAS(STR.VARIABLE,'PPD') AND ~HAS(STR.VARIABLE,'CLIM') AND YR GE '2003',/NULL)).SOURCE = STRJOIN(['Khyde (NEFSC)',OCC_SOURCE, MUR_SOURCE],'; ')
            STR(WHERE(STRUPCASE(STR.SENSOR) EQ 'OCCCI'   AND HAS(STR.VARIABLE,'PPD') AND  HAS(STR.VARIABLE,'CLIM'),/NULL)).SOURCE = STRJOIN(['Khyde (NEFSC)',OCC_SOURCE, SST_SOURCE],'; ')

            STR = STRUCT_REMOVE(STR,'PERIOD')
            STR = STRUCT_SORT(STR,TAGNAMES=['MATH','VARIABLE','TIME','REGION'])  
            PFILE, EXTRACTED_FINAL
            STRUCT_2CSV, EXTRACTED_FINAL, STR
          ENDIF ; SOE_FORMAT
        ENDFOR ; DATASETS  
      ENDFOR ; PRODS
    ENDIF ; DATA_EXTRACTS
         
        
;  ****************************************
    IF KEY(ANNUAL_COMPS) THEN BEGIN
;  ****************************************
      
      DIR_PNG = DIR_COMP + 'ANNUAL' + SL & DIR_TEST, DIR_PNG
      
      SPROD = 'CHLOR_A-PAN'
      PPROD = 'PPD-VGPM2'
      PRODS = [SPROD,PPROD]; ,'MICRO_PERCENTAGE-PAN','NANO_PERCENTAGE-PAN','PICO_PERCENTAGE-PAN','MICRO_PERCENTAGE-HIRATA','NANO_PERCENTAGE-HIRATA','PICO_PERCENTAGE-HIRATA','MICRO_PERCENTAGE-UITZ','NANO_PERCENTAGE-UITZ','PICO_PERCENTAGE-UITZ']
      PERIODS = ['A','M']
      PPD_PAN = 0
      TXT_TAGS = [];['PERIOD','MATH']

      EFILES = [] & AFILES = []
      FOR S=0, N_ELEMENTS(SATS)-1 DO BEGIN
        DATASET = SATS(S)
 ;       FILES = EDAB_SOE_GET_FILES(PRODS=PRODS, DATASETS=DATASET, PERIODS=PERIODS, PPD_PAN=PPD_PAN, YEARS=YEARS)
        AFILES = [AFILES,FILES]
      ENDFOR ; SATS  
            
      FA = PARSE_IT(AFILES,/ALL)
      FA(WHERE(STRPOS(FA.NAME,'SA_SEAWIFS') GE 0, /NULL,COUNTS)).SENSOR = 'SEAWIFS'
      FA(WHERE(STRPOS(FA.NAME,'SA_MODISA')  GE 0, /NULL,COUNTM)).SENSOR = 'MODISA'
      
      STRUCT = IDL_RESTORE(DATFILE)
      STRUCT(WHERE(STRUCT.MATH EQ 'RATIO',/NULL)).PROD = STRUCT(WHERE(STRUCT.MATH EQ 'RATIO',/NULL)).PROD + '_RATIO'
      OK_OCCCI = WHERE(STRUCT.SENSOR EQ 'OCCCI',COMPLEMENT=OK_SEAMOD)
      
      SENS = ['SEAWIFS_MODISA','OCCCI']
      FOR S=0, N_ELEMENTS(SENS)-1 DO BEGIN
        SEN = SENS(S)
        FOR N=0, N_ELEMENTS(YEARS)-1 DO BEGIN
          YR = YEARS(N)
          IF YR EQ '1997' THEN CONTINUE
          CASE SEN OF   
            'SEAWIFS_MODISA': BEGIN
              SET = STRUCT(OK_SEAMOD)
              IF FIX(YR) LE 2007 THEN SENSOR = 'SEAWIFS'
              IF FIX(YR) GT 2007 THEN SENSOR = 'MODISA'
              RSEN = 'SA'
            END
            'OCCCI': BEGIN 
              SET = STRUCT(OK_OCCCI) 
              SENSOR = 'OCCCI'
              RSEN   = 'OCCCI'
            END
          ENDCASE
          
          MSTR = SET[WHERE(SET.PERIOD_CODE EQ 'M',/NULL)]
          ASTR = SET[WHERE(SET.PERIOD_CODE EQ 'A',/NULL)]
          
          PERIOD = 'A_'+YR
          CS = AFILES[WHERE(FA.PERIOD EQ PERIOD AND FA.PROD EQ 'CHLOR_A'       AND FA.MATH EQ 'STATS' AND FA.SENSOR EQ SENSOR,/NULL)]
          CA = AFILES[WHERE(FA.PERIOD EQ PERIOD AND FA.PROD EQ 'CHLOR_A_RATIO' AND FA.MATH EQ 'RATIO' AND FA.SENSOR EQ SENSOR,/NULL)]
          PS = AFILES[WHERE(FA.PERIOD EQ PERIOD AND FA.PROD EQ 'PPD'           AND FA.MATH EQ 'STATS' AND FA.SENSOR EQ SENSOR,/NULL)]
          PA = AFILES[WHERE(FA.PERIOD EQ PERIOD AND FA.PROD EQ 'PPD_RATIO'     AND FA.MATH EQ 'RATIO' AND FA.SENSOR EQ SENSOR,/NULL)]

          IF ~ANY([CS,CA,PS,PA]) THEN CONTINUE
          PNGFILE = DIR_PNG + 'A_' + YR + '-' + SEN + '-' + SPROD + '-' + PPROD + '-DATA_COMPOSITE.PNG'
          IF FILE_MAKE([CS,CA,PS,PA,DATFILE],PNGFILE) EQ 0 THEN CONTINUE    
          
          WIDTH = 1100
          HEIGHT = 850
          NROW = 3
          NCOL = 4
          EDGE = 0.01
          SP = 0.005
          GAP = 0.05
          DIF = (1-(2*EDGE)-(NROW*SP))/NCOL
          PIXDIF = WIDTH * DIF
          CB = 0.025
          TP = 0.95 
          TPPIX = TP * HEIGHT
          BTPIX = TPPIX-PIXDIF
          BT = BTPIX/HEIGHT
          Y2 = BT-CB-GAP
          Y1 = .32;(BTPIX-PIXDIF/.7)/HEIGHT
          Y4 = Y1-GAP
          Y3 = Y4-(Y2-Y1)
          LF = EDGE + FINDGEN(4)*(DIF+SP)
          RT = LF + DIF
          X1 = LF+SP*5
          X2 = RT-SP*2

          ADD_CB = 1
          CB_TYPE = 3
          CB_FONT = 12
          CB_RELATIVE = 0

          CSPROD = 'CHLOR_A_0.1_30' & CSTITLE = '$Chlorophyll \ita\rm$' + ' ' + UNITS('CHLOR_A',/NO_NAME)  & CSPAL = 'PAL_BR'
          CAPROD = 'RATIO'          & CATITLE = 'CHL Ratio Anomaly'                                        & CAPAL = 'PAL_ANOM_GREY'
          PSPROD = 'PPD_0.1_10'     & PSTITLE = 'Primary Production '    + UNITS('PPD',/NO_NAME)           & PSPAL = 'PAL_BR'
          PAPROD = 'RATIO'          & PATITLE = 'PP Ratio Anomaly'                                         & PAPAL = 'PAL_ANOM_GREY'
          
          W = WINDOW(DIMENSIONS=[WIDTH,HEIGHT],BUFFER=BUFFER)
          
          IF CS NE [] THEN PRODS_2PNG,CS,MAPP=OMAP,PROD=CSPROD,OUTLINE=EPU_OUTLINE,OUT_COLOR=0,OUT_THICK=4,CB_TITLE=CSTITLE,TXT_TAGS=TXT_TAGS,VERBOSE=VERBOSE,/CURRENT,IMG_POS=[LF[0],BT,RT[0],TP],/ADD_CB,CB_POS=[LF[0]+SP,BT-CB,RT[0]-SP,BT-SP],CB_TYPE=CB_TYPE,CB_RELATIVE=CB_RELATIVE,PAL=CSPAL
          IF CA NE [] THEN PRODS_2PNG,CA,MAPP=OMAP,PROD=CAPROD,OUTLINE=EPU_OUTLINE,OUT_COLOR=0,OUT_THICK=4,CB_TITLE=CATITLE,TXT_TAGS=TXT_TAGS,VERBOSE=VERBOSE,/CURRENT,IMG_POS=[LF[1],BT,RT[1],TP],/ADD_CB,CB_POS=[LF[1]+SP,BT-CB,RT[1]-SP,BT-SP],CB_TYPE=CB_TYPE,CB_RELATIVE=CB_RELATIVE,PAL=CAPAL
          IF PS NE [] THEN PRODS_2PNG,PS,MAPP=OMAP,PROD=PSPROD,OUTLINE=EPU_OUTLINE,OUT_COLOR=0,OUT_THICK=4,CB_TITLE=PSTITLE,TXT_TAGS=TXT_TAGS,VERBOSE=VERBOSE,/CURRENT,IMG_POS=[LF(2),BT,RT(2),TP],/ADD_CB,CB_POS=[LF(2)+SP,BT-CB,RT(2)-SP,BT-SP],CB_TYPE=CB_TYPE,CB_RELATIVE=CB_RELATIVE,PAL=PSPAL
          IF PA NE [] THEN PRODS_2PNG,PA,MAPP=OMAP,PROD=PAPROD,OUTLINE=EPU_OUTLINE,OUT_COLOR=0,OUT_THICK=4,CB_TITLE=PATITLE,TXT_TAGS=TXT_TAGS,VERBOSE=VERBOSE,/CURRENT,IMG_POS=[LF(3),BT,RT(3),TP],/ADD_CB,CB_POS=[LF(3)+SP,BT-CB,RT(3)-SP,BT-SP],CB_TYPE=CB_TYPE,CB_RELATIVE=CB_RELATIVE,PAL=PAPAL
          T = TEXT(0.5,0.975,YR,ALIGN=0.5,VERTICAL_ALIGN=0.5,FONT_SIZE=20,FONT_STYLE='BOLD')
        
          PRODS = ['CHLOR_A','CHLOR_A_RATIO','PPD','PPD_RATIO']
          MR1   = [0.0,0.5,0.0,0.5]
          MR2   = [2.0,2.25,1.6,2.0]
          MTKS  = LIST('',[0.5,0.75,1,1.5,2.0],'',[0.5,0.75,1.0,1.5,2.0])
          MYMJR = [5,5,4,5]
          YR1   = [0.4,0.65,0.4,0.8]
          YR2   = [1.2,1.58,1.0,1.26]
          YTKS  = LIST('',[0.65,0.8,1,1.2,1.5],'',[0.8,0.9,1.0,1.111,1.25])
          YYMJR = [5,5,4,5]
          LOGS  = [0,1,0,1]
          TAGS  = ['GMEAN','AMEAN','GMEAN','AMEAN']
          CLRS  = ['BLUE','CYAN','RED','SPRING_GREEN']
          EPUS  = ['GOM','GB','MAB']
          THICK = 3
          AX = DATE_AXIS([210001,210012],/MONTH,/FYEAR,STEP=1,ROOM=1)
          AX.TICKNAME[0] = '' & AX.TICKNAME(-1) = ''
          FOR P=0, N_ELEMENTS(PRODS) -1 DO BEGIN
            FOR R=0, N_ELEMENTS(EPUS)-1 DO BEGIN
              POSITION=[X1(P),Y1,X2(P),Y2]
              STR = MSTR[WHERE(MSTR.PROD EQ PRODS(P) AND MSTR.SUBAREA EQ EPUS(R) AND DATE_2YEAR(PERIOD_2DATE(MSTR.PERIOD)) EQ YR,/NULL,COUNTM)] & IF COUNTM GT 12 THEN STOP
              MDATE = DATE_2JD('2100'+DATE_2MONTH(PERIOD_2DATE(STR.PERIOD)))
              RDATA = GET_TAG(STR,TAGS(P))
              LDATA = LOWESS(DATE_2MONTH(PERIOD_2DATE(STR.PERIOD)),RDATA,WIDTH=7)
              IF HAS(PRODS(P),'RATIO') THEN YTICKS = MTKS(P) ELSE YTICKS = []
              P0 = PLOT(MDATE,RDATA,YLOG=LOGS(P),/NODATA,/CURRENT,POSITION=POSITION,OVERPLOT=R,XRANGE=AX.JD,YRANGE=[MR1(P),MR2(P)],XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,XSTYLE=1,YMAJOR=MYMJR(P),YTICKV=YTICKS)
              XRANGE = P0.XRANGE
              IF HAS(PRODS(P),'RATIO') THEN PL = PLOT(XRANGE,[1,1],/OVERPLOT,COLOR='BLACK',THICK=3,TRANSPARENCY=90)
              P1 = PLOT(MDATE,RDATA,YLOG=LOGS(P),COLOR=CLRS(R),/CURRENT,POSITION=POSITION,/OVERPLOT,THICK=THICK,LINESTYLE=6,SYM_SIZE=0.25,SYMBOL='CIRCLE',SYM_FILLED=1);,XRANGE=AX.JD,YRANGE=[MR1(P),MR2(P)],XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,XSTYLE=1)
              P2 = PLOT(MDATE,LDATA,YLOG=LOGS(P),COLOR=CLRS(R),/CURRENT,POSITION=POSITION,/OVERPLOT,THICK=THICK);XRANGE=AX.JD,YRANGE=[MR1(P),MR2(P)],XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,XSTYLE=1)
              IF P EQ 0 THEN T = TEXT(POSITION[0]+0.01,POSITION(3)-0.03-(R*0.015),EPUS(R),COLOR=CLRS(R),TARGET=P0,/NORMAL,FONT_SIZE=10)
            ENDFOR
          ENDFOR

          AX = DATE_AXIS([YEARS[0],YEARS(-1)],/YEAR,/YY_YEAR,STEP=2,ROOM=2)
          AX.TICKNAME[0] = '' & AX.TICKNAME(-1) = ''
          FOR P=0, N_ELEMENTS(PRODS) -1 DO BEGIN
            FOR R=0, N_ELEMENTS(EPUS)-1 DO BEGIN
              POSITION=[X1(P),Y3,X2(P),Y4]
              STR = ASTR[WHERE(ASTR.PROD EQ PRODS(P) AND ASTR.SUBAREA EQ EPUS(R),/NULL)]
              YST = STR[WHERE(STR.PERIOD EQ PERIOD,/NULL)]
              RDATA = GET_TAG(STR,TAGS(P))
              LDATA = LOWESS(DATE_2YEAR(PERIOD_2DATE(STR.PERIOD)),RDATA,WIDTH=7)
              IF HAS(PRODS(P),'RATIO') THEN YTICKS = YTKS(P) ELSE YTICKS = []
              P0 = PLOT(MDATE,RDATA,YLOG=LOGS(P),/NODATA,/CURRENT,POSITION=POSITION,OVERPLOT=R,XRANGE=AX.JD,YRANGE=[YR1(P),YR2(P)],XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,XSTYLE=1,YMAJOR=YYMJR(P),YTICKV=YTICKS,YSTYLE=1)
              XRANGE = P0.XRANGE
              PL = PLOT(PERIOD_2JD([YST.PERIOD,YST.PERIOD]),[YR1(P),YR2(P)],COLOR='YELLOW',THICK=THICK*1.5,/OVERPLOT,TRANSPARENCY=90)
              IF HAS(PRODS(P),'RATIO') THEN PL = PLOT(XRANGE,[1,1],/OVERPLOT,COLOR='BLACK',THICK=3,TRANSPARENCY=90)
              P1 = PLOT(PERIOD_2JD(STR.PERIOD),RDATA,YLOG=LOGS(P),COLOR=CLRS(R),/CURRENT,POSITION=POSITION,/OVERPLOT,THICK=THICK,LINESTYLE=6,SYM_SIZE=0.25,SYMBOL='CIRCLE',SYM_FILLED=1);,XRANGE=AX.JD,YRANGE=[YR1(P),YR2(P)],XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=1,XSTYLE=1)
              P2 = PLOT(PERIOD_2JD(STR.PERIOD),LDATA,YLOG=LOGS(P),COLOR=CLRS(R),/CURRENT,POSITION=POSITION,/OVERPLOT,THICK=THICK);,XRANGE=AX.JD,YRANGE=[YR1(P),YR2(P)],XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=1,XSTYLE=1)
            ENDFOR
          ENDFOR
            
          W.SAVE, PNGFILE
          W.CLOSE
          PFILE, PNGFILE 
        ENDFOR ; YEARS
      ENDFOR ; SENS  
    ENDIF ; ANNUAL_COMPS  
    
;  ****************************************
    IF KEY(ANNUAL_COMPARE) THEN BEGIN
;  ****************************************

      DIR_PNG = DIR_COMP + 'ANNUAL_COMPARE' + SL & DIR_TEST, DIR_PNG

      SPROD = 'CHLOR_A-PAN'
      PPROD = 'PPD-VGPM2'
      PRODS = [SPROD,PPROD]; ,'MICRO_PERCENTAGE-PAN','NANO_PERCENTAGE-PAN','PICO_PERCENTAGE-PAN','MICRO_PERCENTAGE-HIRATA','NANO_PERCENTAGE-HIRATA','PICO_PERCENTAGE-HIRATA','MICRO_PERCENTAGE-UITZ','NANO_PERCENTAGE-UITZ','PICO_PERCENTAGE-UITZ']
      MATHS = ['STATS','RATIO']
      PERIODS = ['A','M']
      PPD_PAN = 0
      TXT_TAGS = [];['PERIOD','MATH']
      BUFFER = 1

      EFILES = [] & AFILES = []
      FOR S=0, N_ELEMENTS(SATS)-1 DO BEGIN
        DATASET = SATS(S)
  ;      FILES = EDAB_SOE_GET_FILES(PRODS=PRODS, DATASETS=DATASET, PERIODS=PERIODS, PPD_PAN=PPD_PAN, YEARS=YEARS)
        AFILES = [AFILES,FILES]
      ENDFOR ; SATS

      FA = PARSE_IT(AFILES,/ALL)
      FA(WHERE(STRPOS(FA.NAME,'SA_SEAWIFS') GE 0, /NULL,COUNTS)).SENSOR = 'SEAWIFS'
      FA(WHERE(STRPOS(FA.NAME,'SA_MODISA')  GE 0, /NULL,COUNTM)).SENSOR = 'MODISA'

      STRUCT = IDL_RESTORE(DATFILE)
      STRUCT(WHERE(STRUCT.MATH EQ 'RATIO',/NULL)).PROD = STRUCT(WHERE(STRUCT.MATH EQ 'RATIO',/NULL)).PROD + '_RATIO'
      OK_OCCCI = WHERE(STRUCT.SENSOR EQ 'OCCCI',COMPLEMENT=OK_SEAMOD)
      MSTR = STRUCT[WHERE(STRUCT.PERIOD_CODE EQ 'M',/NULL)]
      ASTR = STRUCT[WHERE(STRUCT.PERIOD_CODE EQ 'A',/NULL)]
      FOR N=0, N_ELEMENTS(YEARS)-1 DO BEGIN
        YR = YEARS(N)
        IF YR EQ '1997' OR YR GE '2018' THEN CONTINUE
      
        FOR P=0, N_ELEMENTS(PRODS)-1 DO BEGIN
          APROD = PRODS(P)
          FOR M=0, N_ELEMENTS(MATHS)-1 DO BEGIN
            AMATH = MATHS(M)
            
            CASE PRODS(P) OF 
              'CHLOR_A-PAN': BEGIN
                IF AMATH EQ 'RATIO' THEN BEGIN
                  SPROD  = 'CHLOR_A_RATIO' 
                  TITLE = 'CHL Ratio Anomaly' 
                  SSCL  = 'RATIO'  
                  ASCL  = 'DIF'
                  SPAL  = 'PAL_ANOM_GREY'
                  APAL  = 'PAL_ANOM_GREY'
                  MRG   = [0.5,2.0]
                  YRG   = [0.65,1.5]
                  MTKS  = [0.5,0.75,1,1.5,2.0]
                  YTKS  = [0.65,0.8,1,1.2,1.5]
                  MYMJR = 5
                  YYMJR = 5
                  LOGS  = 1
                  TAG   = 'AMEAN'
                ENDIF ELSE BEGIN
                  SPROD = 'CHLOR_A'
                  SSCL  = 'CHLOR_A_0.1_30'
                  ASCL  = 'RATIO'
                  SPAL  = 'PAL_BR'
                  APAL  = 'PAL_ANOM_GREY'
                  TITLE = '$Chlorophyll \ita\rm$' + ' ' + UNITS('CHLOR_A',/NO_NAME)  
                  MRG   = [0.0,2.0]
                  YRG   = [0.4,1.2]
                  MTKS  = []
                  YTKS  = []
                  MYMJR = 5
                  YYMJR = 5
                  LOGS  = 0
                  TAG   = 'GMEAN'
                ENDELSE   
              END
              'PPD-VGPM2': BEGIN
                IF AMATH EQ 'RATIO' THEN BEGIN
                  SSCL  = 'RATIO'
                  ASCL  = 'DIF' 
                  SPROD = 'PPD_RATIO'
                  TITLE = 'PP Ratio Anomaly'
                  SPAL  = 'PAL_ANOM_GREY'
                  APAL  = 'PAL_ANOM_GREY'
                  MRG   = [0.5,2.0]
                  YRG   = [0.8,1.25]
                  MTKS  = [0.5,0.75,1.0,1.5,2.0]
                  YTKS  = [0.8,0.9,1.0,1.111,1.25]
                  MYMJR = 5
                  YYMJR = 5
                  LOGS  = 1
                  TAG   = 'AMEAN'
                ENDIF ELSE BEGIN
                  SPROD = 'PPD'
                  SSCL  = 'PPD_0.1_10'
                  TITLE = 'Primary Production '    + UNITS('PPD',/NO_NAME)  
                  ASCL  = 'DIF'
                  SPAL  = 'PAL_BR'
                  APAL  = 'PAL_ANOM_GREY'
                  MRG   = [0.0,1.6]
                  YRG   = [0.4,1.0]
                  MTKS  = []
                  YTKS  = []
                  MYMJR = 4
                  YYMJR = 4
                  LOGS  = 0
                  TAG   = 'GMEAN'
                ENDELSE
              END
            ENDCASE
      
            IF FIX(YR) LE 2007 THEN SEAMOD = 'SEAWIFS'
            IF FIX(YR) GT 2007 THEN SEAMOD = 'MODISA'
            RSEN = 'SA'
        
            PERIOD = 'A_'+YR
            SS = AFILES[WHERE(FA.PERIOD EQ PERIOD AND FA.PROD EQ SPROD AND FA.MATH EQ AMATH AND FA.SENSOR EQ SEAMOD,/NULL)]
            OS = AFILES[WHERE(FA.PERIOD EQ PERIOD AND FA.PROD EQ SPROD AND FA.MATH EQ AMATH AND FA.SENSOR EQ 'OCCCI',/NULL)]
            
            IF ~ANY([SS,OS]) THEN CONTINUE
            PNGFILE = DIR_PNG + 'A_' + YR + '-' + 'OCCCI_vs_SEAMOD' + '-' + SPROD + '-' + AMATH + '_COMPOSITE.PNG'
            IF FILE_MAKE([SS,OS,DATFILE],PNGFILE) EQ 0 THEN CONTINUE
  
            NROW = 3
            NCOL = 3
            IMGPIX = 300.
            HEIGHT = IMGPIX*NROW
            WIDTH  = IMGPIX*NCOL
            
            EDGE = 0.02
            WSP = 0.05 
            HSP = 0.05 
            TEDGE = 0.04
            BEDGE = 0.01
            CB   = 0.005
            CBS  = 0.015
            
            TWSP = WSP*(NCOL-1) + EDGE*2
            THSP = TEDGE + BEDGE + HSP*(NROW-1) + CBS*NROW + CB*NROW
            WDIF = (1-TWSP)/NCOL
            LF = [] & RT = [] & TP = [] & BT = []
            FOR L=0, NCOL-1 DO LF = [LF,EDGE+WSP*L+WDIF*L]
            RT = LF + WDIF
            HDIF = WIDTH*WDIF/HEIGHT
            FOR T=0, NROW-1 DO TP = [TP,1-TEDGE-(HSP*T)-HDIF*T-CBS*T-CB*T]
            BT = TP - HDIF
            
            ADD_CB = 1
            CB_TYPE = 3
            CB_FONT = 12
            CB_RELATIVE = 0
  
            W = WINDOW(DIMENSIONS=[WIDTH,HEIGHT],BUFFER=BUFFER)
            T = TEXT(0.5,0.975,YR,ALIGN=0.5,VERTICAL_ALIGN=0.5,FONT_SIZE=20,FONT_STYLE='BOLD')
            IF SS NE [] THEN PRODS_2PNG,SS,MAPP=OMAP,PROD=SSCL,OUTLINE=EPU_OUTLINE,OUT_COLOR=0,OUT_THICK=4,CB_TITLE=TITLE,TXT_TAGS=SEAMOD, TXT_POS=[LF[0]+(WSP/2),TP[0]-(HSP*2)],VERBOSE=VERBOSE,/CURRENT,IMG_POS=[LF[0],BT[0],RT[0],TP[0]],/ADD_CB,CB_POS=[LF[0],BT[0]-CBS,RT[0],BT[0]-CB],CB_TYPE=CB_TYPE,CB_RELATIVE=CB_RELATIVE,PAL=SPAL
            IF OS NE [] THEN PRODS_2PNG,OS,MAPP=OMAP,PROD=SSCL,OUTLINE=EPU_OUTLINE,OUT_COLOR=0,OUT_THICK=4,CB_TITLE=TITLE,TXT_TAGS='OCCCI',TXT_POS=[LF[0]+(WSP/2),TP[0]-(HSP*2)],VERBOSE=VERBOSE,/CURRENT,IMG_POS=[LF[1],BT[0],RT[1],TP[0]],/ADD_CB,CB_POS=[LF[1],BT[0]-CBS,RT[1],BT[0]-CB],CB_TYPE=CB_TYPE,CB_RELATIVE=CB_RELATIVE,PAL=SPAL
            
            SM = STRUCT_READ(SS,MAP_OUT=OMAP)
            OC = STRUCT_READ(OS,MAP_OUT=OMAP) 
            IF AMATH EQ 'STATS' THEN ANOM = SM/OC ELSE ANOM = SM-OC
            IF AMATH EQ 'STATS' THEN ASCL = 'RATIO_.8_1.25' ELSE ASCL = 'DIF_-1_1'
            IF AMATH EQ 'STATS' THEN ATITLE = 'SeaWiFS:OCCCI Ratio' ELSE ATITLE = 'SeaWiFS-OCCCI Difference'
            BYT = PRODS_2BYTE(ANOM,MP=OMAP,PROD=ASCL,/ADD_LAND,/ADD_COAST)
            IMG = IMAGE(BYT, RGB_TABLE=CPAL_READ(APAL),POSITION=[LF(2),BT[0],RT(2),TP[0]], MARGIN=0, /CURRENT, BUFFER=BUFFER)
            CBAR, ASCL, IMG=IMG, FONT_SIZE=10, CB_TYPE=CB_TYPE, CB_POS=[LF(2),BT[0]-CBS,RT(2),BT[0]-CB], CB_TITLE=ATITLE, PAL=APAL, RELATIVE=CB_RELATIVE
            TXT = TEXT(LF(2)+0.01,TP[0]-0.03,SEAMOD+':OCCCI',/NORMAL,FONT_SIZE=10,FONT_STYLE='BOLD',TARGET=IMG)
            
            
            CLRS  = ['BLUE','CYAN','RED','SPRING_GREEN']
            EPUS  = ['GOM','GB','MAB']
            THICK = 3
            AX = DATE_AXIS([210001,210012],/MONTH,/FYEAR,STEP=1,ROOM=1)
            AX.TICKNAME[0] = '' & AX.TICKNAME(-1) = ''
            
            SENSORS = [SEAMOD,'OCCCI']
            FOR R=0, N_ELEMENTS(EPUS)-1 DO BEGIN
              FOR S=0, N_ELEMENTS(SENSORS) -1 DO BEGIN
                POSITION=[LF(R)+.015,BT[1]+.02,RT(R),TP[1]+.02]
                STR = MSTR[WHERE(MSTR.PROD EQ SPROD AND MSTR.SUBAREA EQ EPUS(R) AND DATE_2YEAR(PERIOD_2DATE(MSTR.PERIOD)) EQ YR AND MSTR.SENSOR EQ SENSORS(S) AND MSTR.MATH EQ AMATH,/NULL,COUNTM)] & IF COUNTM GT 12 THEN STOP
                MDATE = DATE_2JD('2100'+DATE_2MONTH(PERIOD_2DATE(STR.PERIOD)))
                RDATA = GET_TAG(STR,TAG)
                LDATA = LOWESS(DATE_2MONTH(PERIOD_2DATE(STR.PERIOD)),RDATA,WIDTH=7)
                ;IF HAS(PRODS(P),'RATIO') THEN YTICKS = MTKS(P) ELSE YTICKS = []
                P0 = PLOT(MDATE,RDATA,YLOG=LOGS,/NODATA,/CURRENT,POSITION=POSITION,OVERPLOT=S,XRANGE=AX.JD,YRANGE=MRG,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,XSTYLE=1,YMAJOR=MYMJR,YTICKV=MTKS)
                XRANGE = P0.XRANGE
                IF AMATH EQ 'RATIO' THEN PL = PLOT(XRANGE,[1,1],/OVERPLOT,COLOR='BLACK',THICK=3,TRANSPARENCY=90)
                P1 = PLOT(MDATE,RDATA,YLOG=LOGS,COLOR=CLRS(S),/CURRENT,POSITION=POSITION,/OVERPLOT,THICK=THICK,LINESTYLE=6,SYM_SIZE=0.25,SYMBOL='CIRCLE',SYM_FILLED=1);,XRANGE=AX.JD,YRANGE=[MR1(P),MR2(P)],XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,XSTYLE=1)
                P2 = PLOT(MDATE,LDATA,YLOG=LOGS,COLOR=CLRS(S),/CURRENT,POSITION=POSITION,/OVERPLOT,THICK=THICK);XRANGE=AX.JD,YRANGE=[MR1(P),MR2(P)],XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,XSTYLE=1)
                IF S EQ 0 THEN T = TEXT(POSITION(2)-0.01,POSITION(3)-0.03,EPUS(R),TARGET=P0,/NORMAL,FONT_SIZE=10,ALIGNMENT=1)
                T = TEXT(POSITION[0]+0.01,POSITION(3)-0.03-(S*0.015),SENSORS(S),COLOR=CLRS(S),TARGET=P0,/NORMAL,FONT_SIZE=10)
              ENDFOR
            ENDFOR
  
            AX = DATE_AXIS([YEARS[0],YEARS(-1)],/YEAR,/YY_YEAR,STEP=2,ROOM=2)
            AX.TICKNAME[0] = '' & AX.TICKNAME(-1) = ''
            FOR R=0, N_ELEMENTS(EPUS)-1 DO BEGIN
              FOR S=0, N_ELEMENTS(SENSORS) -1 DO BEGIN
                POSITION=[LF(R)+.015,BT(2)+.07,RT(R),TP(2)+.07]
                IF SENSORS(S) EQ 'OCCCI' THEN STR = ASTR[WHERE(ASTR.PROD EQ SPROD AND ASTR.SUBAREA EQ EPUS(R) AND ASTR.SENSOR EQ 'OCCCI' AND ASTR.MATH EQ AMATH,/NULL)] ELSE $
                                              STR = ASTR[WHERE(ASTR.PROD EQ SPROD AND ASTR.SUBAREA EQ EPUS(R) AND ASTR.SENSOR NE 'OCCCI' AND ASTR.MATH EQ AMATH,/NULL)] 
                
                YST = STR[WHERE(STR.PERIOD EQ PERIOD,/NULL)]
                RDATA = GET_TAG(STR,TAG)
                LDATA = LOWESS(DATE_2YEAR(PERIOD_2DATE(STR.PERIOD)),RDATA,WIDTH=7)
               ; IF HAS(PRODS(P),'RATIO') THEN YTICKS = YTKS(P) ELSE YTICKS = []
                P0 = PLOT(MDATE,RDATA,YLOG=LOGS,/NODATA,/CURRENT,POSITION=POSITION,OVERPLOT=S,XRANGE=AX.JD,YRANGE=YRG,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,XSTYLE=1,YMAJOR=YYMJR,YTICKV=YTKS,YSTYLE=1)
                XRANGE = P0.XRANGE
                PL = PLOT(PERIOD_2JD([YST.PERIOD,YST.PERIOD]),YRG,COLOR='YELLOW',THICK=THICK*1.5,/OVERPLOT,TRANSPARENCY=90)
                IF AMATH EQ 'RATIO' THEN PL = PLOT(XRANGE,[1,1],/OVERPLOT,COLOR='BLACK',THICK=3,TRANSPARENCY=90)
                P1 = PLOT(PERIOD_2JD(STR.PERIOD),RDATA,YLOG=LOGS,COLOR=CLRS(S),/CURRENT,POSITION=POSITION,/OVERPLOT,THICK=THICK,LINESTYLE=6,SYM_SIZE=0.25,SYMBOL='CIRCLE',SYM_FILLED=1);,XRANGE=AX.JD,YRANGE=[YR1(P),YR2(P)],XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=1,XSTYLE=1)
                P2 = PLOT(PERIOD_2JD(STR.PERIOD),LDATA,YLOG=LOGS,COLOR=CLRS(S),/CURRENT,POSITION=POSITION,/OVERPLOT,THICK=THICK);,XRANGE=AX.JD,YRANGE=[YR1(P),YR2(P)],XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=1,XSTYLE=1)
                IF R EQ 0 THEN T = TEXT(POSITION(2)-0.01,POSITION(3)-0.03,EPUS(R),TARGET=P0,/NORMAL,FONT_SIZE=10,ALIGNMENT=1)
                T = TEXT(POSITION[0]+0.01,POSITION(3)-0.03-(S*0.015),SENSORS(S),COLOR=CLRS(S),TARGET=P0,/NORMAL,FONT_SIZE=10)
              ENDFOR
            ENDFOR
  
            W.SAVE, PNGFILE
            W.CLOSE
            PFILE, PNGFILE
          ENDFOR ; YEARS
        ENDFOR
      ENDFOR ; SENS
    ENDIF ; ANNUAL_COMPARE    
    
    
; ********************************************************
    IF KEY(COMPARE_PRODS) THEN BEGIN
; ********************************************************
      SWITCHES,COMPARE_PRODS,STOPP=STOPP,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,INIT=INIT,R_FILES=R_FILES,R_DATASETS=R_DATASETS,R_MAPS=R_MAPS,DATERANGE=DATERANGE

      OMAP = 'NEC'
      CHL_ALG='PAN'
      PPD_ALG='VGPM2'
      PPD_PAN=0
      TXT_TAGS = [];['PERIOD','MATH']
      BUFFER=1

      SENSORS = (['SEAWIFS','MODISA','OCCCI','VIIRS'])  ; V2019_0 - Added OCCCI
      PRODS = LIST(['CHLOR_A-OCI','CHLOR_A-PAN']);,$
;        ['DIATOM_PERCENTAGE-PAN','DIATOM_PERCENTAGE-HIRATA'],$
;        ['MICRO_PERCENTAGE-PAN','MICRO_PERCENTAGE-HIRATA','MICRO_PERCENTAGE-UITZ'],$
;        ['NANO_PERCENTAGE-PAN','NANO_PERCENTAGE-HIRATA','NANO_PERCENTAGE-UITZ'],$
;        ['PICO_PERCENTAGE-PAN','PICO_PERCENTAGE-HIRATA','PICO_PERCENTAGE-UITZ'])
      FOR N=0, N_ELEMENTS(PRODS)-1 DO COMPARE_SAT_PRODS, PRODS(N), SENSORS=SENSORS, BUFFER=BUFFER

      PRODS = ['CHLOR_A-OCI','CHLOR_A-PAN','PPD-VGPM2'];,$
;        'DIATOM_PERCENTAGE-PAN','DIATOM_PERCENTAGE-HIRATA',$
;        'MICRO-PAN','MICRO_PERCENTAGE-PAN','MICRO_PERCENTAGE-HIRATA','MICRO_PERCENTAGE-UITZ',$
;        'NANO-PAN','NANO_PERCENTAGE-PAN','NANO_PERCENTAGE-HIRATA','NANO_PERCENTAGE-UITZ',$
;        'PICO-PAN','PICO_PERCENTAGE-PAN','PICO_PERCENTAGE-HIRATA','PICO_PERCENTAGE-UITZ',$
;        'RRS_412','RRS_443','RRS_490','RRS_555']
      COMPARE_SAT_SENSORS, SENSORS, PRODS=PRODS, BUFFER=BUFFER


    ENDIF ; COMAPRE_PRODS         


        
; ********************************************
    IF KEY(MONTHLY_TIMESERIES) THEN BEGIN
; ********************************************
      SNAME = 'MONTHLY_TIMESERIES'
      PRINT, 'Running: ' + SNAME + ' for ' + SOE_YR
      SWITCHES,MONTHLY_TIMESERIES,STOPP=STOPP,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,INIT=INIT,R_FILES=R_FILES,R_DATASETS=R_DATASETS,R_MAPS=R_MAPS,DATERANGE=DATERANGE
      
      AMAP    = 'L3B2' & MAP4 = 'L3B4'
      PALG    = 'VGPM2'
      CALG    = 'PAN'
      BUFFER  = 1
      VERBOSE = 0
      PERIOD  = 'M'
      SATS    = ['SEAWIFS','MODISA','OCCCI']
      PSTATS  = ['MED','GMEAN','AMEAN']
      MATHS   = ['STATS'];,'ANOM']
      YEARS   = YEAR_RANGE('1998','2017',/STRING)
      
      FOR RTH=0, N_ELEMENTS(MATHS)-1 DO BEGIN
        MATH = MATHS(RTH)
        
        FOR P=0, N_ELEMENTS(CALG)-1 DO BEGIN
          PSAT = REPLACE(SAT,'_PAN','')
                
          FILES2 = []
          FILES4 = []
          FOR STH=0, N_ELEMENTS(SATS)-1 DO BEGIN
            SAT = SATS(STH)
            CASE SAT OF
              'MODISA':  BEGIN & PREFIX='A' & DR=['2008','2017'] & END
              'SEAWIFS': BEGIN & PREFIX='S' & DR=['1998','2007'] & END
              'OCCCI':   BEGIN & PREFIX='O' & DR=['1998','2017'] & END
            ENDCASE
            
            PRODS = ['SST','CHLOR_A-OCI','CHLOR_A-PAN','PPD-'+PALG,'DIATOM-PAN','MICRO-PAN','NANO-PAN','PICO-PAN','NANOPICO-PAN','DIATOM-HIRATA','MICRO-HIRATA','NANO-HIRATA','PICO-HIRATA','MICRO-UITZ','NANO-UITZ','PICO-UITZ']
            TITLES = PRODS + ' ' + UNITS(VALIDS('PRODS',PRODS),/NO_NAME)
            RANGES = LIST([0,25],[0,2],[0,2],[0,2],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1],[0,1])
            
            FOR R=0, N_ELEMENTS(PRODS)-1 DO BEGIN
              DIR = !S.OC
              IF HAS(PRODS(R),'PPD') THEN DIR = !S.PP 
              IF HAS(PRODS(R),'SST') AND SAT EQ 'OCCCI' THEN FILES4 = [FILES4,FLS(!S.SST + 'AVHRR'   + SL + MAP4   + SL + MATH + SL + PRODS(R) + SL + PERIOD + '_*.SAV',DATERANGE=['1998','2002'])]
              IF SAT EQ 'OCCCI' THEN FILES4 = [FILES4,FLS(DIR + SAT + SL + MAP4 + SL + MATH + SL + PRODS(R) + SL + PERIOD + '_*.SAV',DATERANGE=DR)] ELSE BEGIN
                IF HAS(PRODS(R),'SST') AND SAT EQ 'SEAWIFS' THEN BEGIN
                  FILES2 = [FILES2,FLS(!S.SST + 'MUR'   + SL + AMAP   + SL + MATH + SL + PRODS(R) + SL + PERIOD + '_*.SAV',DATERANGE=['2003','2017'])]
                ENDIF
                FILES2 = [FILES2,FLS(DIR + SAT + SL + AMAP + SL + MATH + SL + PRODS(R) + SL + PERIOD + '_*.SAV',DATERANGE=DR)]
              ENDELSE
            ENDFOR
          ENDFOR

          AFILES = [FILES2,FILES4]
    ;      FOR N=0, N_ELEMENTS(AFILES)-1 DO PRODS_2PNG, AFILES(N), PROD=PROD, MAPP='NEC', /THUMBNAIL, DIR_OUT=DIR_THUMBS, PNGFILE=PNGFILE, BUFFER=1, /ADD_CB

          B2SAVE = DIR_DATA+PERIOD+'-'+SUBAREA+'-CHLOR_A-'+CALG+'_PPD-'+PALG+'-PHYTO'+MATH+'-SUBAREAS.SAV'
          SUBAREAS_EXTRACT, FILES2, SHP_FILES=SHP_FILES, INIT=INIT, VERBOSE=VERBOSE, DIR_OUT=DIR_DATA, STRUCT=STRUCT2, SAVEFILE=B2SAVE
          
          B4SAVE = DIR_DATA+PERIOD+'-'+SUBAREA+'-CHLOR_A-'+CALG+'_PPD-'+PALG+'-PHYTO'+MATH+'-SUBAREAS.SAV'
          SUBAREAS_EXTRACT, FILES4, SHP_FILES=SHP_FILES, INIT=INIT, VERBOSE=VERBOSE, DIR_OUT=DIR_DATA, STRUCT=STRUCT4, SAVEFILE=B4SAVE
          
          STRUCT = STRUCT_CONCAT(STRUCT2,STRUCT4)
          
          YRS  = YEAR_RANGE('1998','2017')
          AX   = DATE_AXIS(['1998','2018'],/YEAR,STEP=5)
          MONS = MONTH_RANGE()
          XDIS = 1/13. & XSP = 1/12.-XDIS
          XPOS1 = FINDGEN(12)*XDIS+(XDIS/2)+XSP*2
          XPOS2 = XPOS1 + XDIS - XSP

          SAT_PLOTS = ['SEAWIFS_MODIS'];,'OCCCI']
          FOR S=0, N_ELEMENTS(SAT_PLOTS)-1 DO BEGIN
            SP = SAT_PLOTS(S)
            CASE SP OF 
              'SEAWIFS_MODIS': OK = WHERE(STRUCT.SENSOR EQ 'SEAWIFS' OR STRUCT.SENSOR EQ 'MODISA',COUNT)
              'OCCCI':         OK = WHERE(STRUCT.SENSOR EQ 'OCCCI',COUNT)
            ENDCASE
            IF COUNT EQ 0 THEN MESSAGE, 'ERROR'
            STR = STRUCT[OK]  
            FOR N=0, N_ELEMENTS(NAMES)-1 DO BEGIN
              ANAME = NAMES(N)
              STITLE = SUBTITLES(N)
              FOR R=0, N_ELEMENTS(PRODS)-1 DO BEGIN
                APROD = PRODS(R)
                SUBS = WHERE_STRING(STR.NAME,APROD,COUNT)
              ;  SUBS = WHERE(STR.PROD EQ VALIDS('PRODS',APROD),/NULL,COUNT)
                IF COUNT GE 1 THEN SET  = STR(SUBS) ELSE CONTINUE
                MONTH = DATE_2MONTH(PERIOD_2DATE(SET.PERIOD))
                PNGFILE = DIR_PLOTS + SP + '-' + ANAME + '-' + APROD + '-' + MATH + '-MONTHLY_TIMESERIES.PNG'
                IF FILE_MAKE(ESAVE,PNGFILE,OVERWRITE=OVERWRITE) EQ 0 THEN CONTINUE
                W = WINDOW(DIMENSIONS=[1100,850], BUFFER=BUFFER)
                TTXT = TEXT(0.5,0.96,STITLE,ALIGNMENT=0.5,FONT_SIZE=16,FONT_STYLE='BOLD')
                FOR M=0, N_ELEMENTS(MONS)-1 DO BEGIN
                  MON = MONS(M)
                  MNAME = STRUPCASE(MONTH_NAMES(MON,/SHORT))
                  MSET = SET[WHERE(MONTH EQ MON AND SET.SUBAREA EQ ANAME AND SET.MED NE MISSINGS(0.0),/NULL)]
                  IF MSET EQ [] THEN CONTINUE
                  MSET = SORTED(MSET,TAG='PERIOD')
                  YR   = DATE_2JD(DATE_2YEAR(PERIOD_2DATE(MSET.PERIOD)))
                  
                  IF M NE 0 THEN YTICKNAMES = REPLICATE('',5) ELSE YTICKNAMES=[]
                  IF M EQ 0 THEN YTITLE = TITLES(R) ELSE YTITLE = ''
                  
                  PL = PLOT(YR,MSET.MED,BACKGROUND_COLOR='GAINSBORO',SYMBOL='CIRCLE',/SYM_FILLED,SYM_SIZE=0.4,SYM_COLOR='RED',POSITION=[XPOS1(M),0.1,XPOS2(M),0.9],/CURRENT,XTICKVALUE=AX.TICKV,XTICKNAME=AX.TICKNAME,XTEXT_ORIENTATION=90,YRANGE=RANGES(R),YMAJOR=5,YTICKNAME=YTICKNAMES,YTITLE=YTITLE,LINESTYLE=6)
              ;    PLT_GRIDS, PL,COLOR='WHITE',THICK=1,LINESTYLE=6,XTICKV=XTICKV,YTICKV=YTICKV
                  XY = STATS2(YR, MSET.MED, MODEL='LSY')
                  XX = YR*XY.SLOPE + XY.INT
                  PX = PLOT(YR,XX,COLOR='BLACK',THICK=2,/OVERPLOT)
                  TX = TEXT(XPOS1(M)+(XPOS2-XPOS1)/2,0.91,MNAME,ALIGNMENT=0.5,FONT_SIZE=12,FONT_STYLE='BOLD')
                  
                ENDFOR ; MONS
                W.SAVE, PNGFILE
                W.CLOSE
                PFILE, PNGFILE
              ENDFOR ; PRODS
              
              
           ;   IF FILE_MAKE(EFILES,PNGFILE,OVERWRITE=OVERWRITE) EQ 0 THEN CONTINUE
              


              SPRODS = ['DIATOM','MICRO','NANO','PICO']
              SUBS = WHERE(STR.PROD EQ 'MICRO' OR STR.PROD EQ 'NANO' OR STR.PROD EQ 'PICO' OR STR.PROD EQ 'DIATOM' AND STR.SUBAREA EQ ANAME,COUNT)
              SR = STR(SUBS)
              SR(WHERE_STRING(SR.NAME,'PAN')).ALG = 'PAN'
              SR(WHERE_STRING(SR.NAME,'UITZ')).ALG = 'UITZ'
              SR(WHERE_STRING(SR.NAME,'HIRATA')).ALG = 'HIRATA'
              SETS = WHERE_SETS(SR.PROD)
              XDIM      = 790
              YDIM      = 256 * N_ELEMENTS(SPRODS)
              NPLOTS = N_ELEMENTS(SETS)
              
              AXM  = DATE_AXIS(['1998','2018'],/MONTH, /YY_YEAR,STEP_SIZE=12) & AYR = DATE_AXIS(X,/YEAR)
              XTICKNAMES = REPLICATE(' ',N_ELEMENTS(AXM.TICKNAME))
              COLORS = ['RED','CYAN','BLUE','SPRING_GREEN','ORANGE','DARK_BLUE','MAGENTA']
              YMINOR=1
              FONTSIZE = 8.5
              SYMSIZE = 0.45
              THICK = 2
              FONT = 0
              YMARGIN = [0.3,0.3]
              XMARGIN = [4,1]
              
              SC = 0.03
              X1 = 0.08
              X2 = 0.96
              YS = (1.0-(SC*(NPLOTS+2)))/NPLOTS
              Y1 = 1.0-SC-YS
              Y2 = 1.0-SC
              ALGS = ['PAN','UITZ','HIRATA']
              YRANGE = [0,1]

              PNGFILE = DIR_PLOTS + 'COMPARE-' + SP + '-' + ANAME + '-' + 'PHYTO_COMPARE' + '-' + MATH + '-MONTHLY_TIMESERIES.PNG'
              W = WINDOW(DIMENSIONS=[XDIM,YDIM],BUFFER=0)
              FOR B=0, N_ELEMENTS(SETS)-1 DO BEGIN
                SET = SR(WHERE_SETS_SUBS(SETS(B)))
                TPROD = SET[0].PROD
                IF B GT 0 THEN Y1 = Y1 - YS - SC
                IF B GT 0 THEN Y2 = Y2 - YS - SC
                POSITION = [X1,Y1,X2,Y2]

                IF B EQ N_ELEMENTS(SETS)-1 THEN XTICKNAME=AXM.TICKNAME ELSE XTICKNAME=XTICKNAMES
                PD = PLOT(AXM.JD,YRANGE,YTITLE=UNITS(TPROD),FONT_SIZE=FONTSIZE,YMINOR=YMINOR,XMAJOR=AXM.TICKS,XMINOR=3,XTICKNAME=XTICKNAME,XTICKVALUES=AXM.TICKV,POSITION=POSITION,/NODATA,/CURRENT)
                POS = PD.POSITION
                XTICKV = PD.XTICKVALUES & OK = WHERE(JD_2MONTH(XTICKV) EQ '01',COUNT)
                FOR G=1,COUNT-1 DO GR = PLOT([XTICKV(OK(G)),XTICKV(OK(G))],YRANGE,COLOR='GREY',/OVERPLOT,XRANGE=AXM.JD,YRANGE=YRANGE)

                FOR S=0, N_ELEMENTS(ALGS)-1 DO BEGIN
                  AA = SET[WHERE(SET.ALG EQ ALGS(S) AND SET.MED NE MISSINGS(0.0),/NULL)]
                  IF AA EQ [] THEN CONTINUE
                  AA = SORTED(AA,TAG='PERIOD')
                  P1 = PLOT(PERIOD_2JD(AA.PERIOD),AA.MED,XRANGE=AXM.JD,YRANGE=YRANGE,/OVERPLOT,/CURRENT,LINESTYLE=0,COLOR=COLORS(S),SYMBOL='CIRCLE',SYM_SIZE=0.25,/SYM_FILLED)
                  TS = TEXT(0.095,POS(3)-0.03-(0.015*S),ALGS(S),FONT_COLOR=COLORS(S),FONT_SIZE=FONTSIZE+2,FONT_STYLE='BOLD')
                ENDFOR
                TD = TEXT(.94,POS(3)-0.03,SET[0].SUBAREA,FONT_SIZE=FONTSIZE+2,FONT_STYLE='BOLD',ALIGNMENT=1)
              ENDFOR
              
              W.SAVE, PNGFILE;, RESOLUTION=300
              W.CLOSE
              PFILE, PNGFILE
            ENDFOR    
          ENDFOR
          
        ENDFOR ; CALG
      ENDFOR ; MATHS
    ENDIF ; MONTHLY TIMESERIES      
    
    
; ********************************************
    IF KEY(WEEKLY_ANOMS) THEN BEGIN
; ********************************************
      SNAME = 'WEEKLY_ANOMS'
      PRINT, 'Running: ' + SNAME + ' for ' + SOE_YR
      SWITCHES,WEEKLY_ANOMS,STOPP=STOPP,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,INIT=INIT,R_FILES=R_FILES,R_DATASETS=R_DATASETS,R_MAPS=R_MAPS,DATERANGE=DATERANGE

      BUFFER = 1
      STRUCT = IDL_RESTORE(DATFILE)
      
      DIR_OUT = DIR_COMP + 'WEEKLY' + SL & DIR_TEST, DIR_OUT
      
      OK_OCCCI = WHERE(STRUCT.SENSOR EQ 'OCCCI',COMPLEMENT=OK_SEAMOD)

      SENS = ['SEAWIFS_MODISA','OCCCI']
      FOR S=0, N_ELEMENTS(SENS)-1 DO BEGIN
        SEN = SENS(S)
        CASE SEN OF
          'SEAWIFS_MODISA': SET = STRUCT(OK_SEAMOD)
          'OCCCI': SET = STRUCT(OK_OCCCI)
        ENDCASE

        WSTR = SET[WHERE(SET.PERIOD_CODE EQ 'W'    AND SET.MATH EQ 'STATS',/NULL)]
        KSTR = SET[WHERE(SET.PERIOD_CODE EQ 'WEEK' AND SET.MATH EQ 'STATS',/NULL)]
      
        PRODS = ['CHLOR_A-PAN','PPD-VGPM2']
        TITLES = UNITS(['CHLOROPHYLL','PRIMARY_PRODUCTION'])
        YRNG  = LIST([0.0,1.6],[0.0,2.2])
        AX = DATE_AXIS([210001,210012],/MONTH,/FYEAR,STEP=1,/MID)
        MTHICK = 3
        PSTATS = 'MED'
        YEARS = YEAR_RANGE(DATE_RANGE[0],DATE_RANGE[1],/STRING)
        FOR STH=0, N_ELEMENTS(PSTATS)-1 DO BEGIN
          GIFS = []
          FOR S=0, N_ELEMENTS(YEARS)-1 DO BEGIN
            YEAR = YEARS(S)
            GFILE = DIR_OUT + 'W_' + YEAR +'-SEASONAL_CLIMATOLOGY-'+STRJOIN(PRODS,'_')+'-'+PSTATS(STH)+'.gif'
            GIFS = [GIFS,GFILE]
            IF FILE_MAKE(DATFILE,GFILE,OVERWRITE=OVERWRITE) EQ 0 THEN CONTINUE
            W = WINDOW(DIMENSIONS=[800,1200],BUFFER=BUFFER)
            T = TEXT(0.5,0.98,YEAR,ALIGNMENT=0.5,FONT_SIZE=14,FONT_STYLE='BOLD',/NORMAL)
            LO = 0
            FOR FTH=0L, N_ELEMENTS(NAMES)-1 DO BEGIN
              FOR PTH=0, N_ELEMENTS(PRODS)-1 DO BEGIN
                LO = LO+1
                PROD = PRODS(PTH)
                YRANGE = YRNG(PTH)
                YSTR = WSTR[WHERE(DATE_2YEAR(PERIOD_2DATE(WSTR.PERIOD)) EQ YEAR AND WSTR.SUBAREA EQ NAMES(FTH) AND WSTR.PROD EQ VALIDS('PRODS',PROD),/NULL)]
                RSTR = KSTR[WHERE(KSTR.SUBAREA EQ NAMES(FTH) AND KSTR.PROD EQ VALIDS('PRODS',PROD),/NULL)]
  
                WDATE = DATE_2JD(YDOY_2DATE('2100',DATE_2DOY(PERIOD_2DATE(YSTR.PERIOD))))
                WDATA = GET_TAG(YSTR,PSTATS(STH))
  
                KDATE = DATE_2JD(YDOY_2DATE('2100',DATE_2DOY(PERIOD_2DATE(RSTR.PERIOD))))
                KDATA = GET_TAG(RSTR,PSTATS(STH)) & ADATA = KDATA & BDATA = KDATA
                KSTD  = GET_TAG(RSTR,'STD')
  
                OKA = WHERE(WDATA GE KDATA,COUNTA) & OKB = WHERE(WDATA LE KDATA,COUNTB)
                ADATA(OKA) = WDATA(OKA) & BDATA(OKB) = WDATA(OKB)
  
                P0 = PLOT(WDATE,WDATA,/NODATA,/CURRENT,LAYOUT=[2,3,LO],XRANGE=AX.JD,YRANGE=YRANGE,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,XSTYLE=1,YMAJOR=YMAJOR,YTICKV=YTICKS,YTITLE=TITLES(PTH),MARGIN=[0.13,0.05,0.05,0.07])
            ;    P1 = POLYGON([KDATE,REVERSE(KDATE)],[KDATA+KSTD,  REVERSE(KDATA-KSTD)],  FILL_COLOR='LIGHT_GREY',FILL_TRANSPARENCY=65,LINESTYLE=6,/OVERPLOT,/DATA,TARGET=P0)
            ;    P2 = POLYGON([KDATE,REVERSE(KDATE)],[KDATA+KSTD*2,REVERSE(KDATA-KSTD*2)],FILL_COLOR='LIGHT_GREY',FILL_TRANSPARENCY=75,LINESTYLE=6,/OVERPLOT,/DATA,TARGET=P0)
                PA = POLYGON([KDATE,REVERSE(KDATE)],[KDATA,REVERSE(ADATA)],FILL_COLOR='SPRING_GREEN',FILL_TRANSPARENCY=50,LINESTYLE=6,/OVERPLOT,/DATA,TARGET=P0)
                PB = POLYGON([KDATE,REVERSE(KDATE)],[KDATA,REVERSE(BDATA)],FILL_COLOR='MEDIUM_BLUE', FILL_TRANSPARENCY=50,LINESTYLE=6,/OVERPLOT,/DATA,TARGET=P0)
                PM = PLOT(KDATE,KDATA,COLOR='BLACK',/CURRENT,/OVERPLOT,THICK=MTHICK);,XRANGE=AX.JD,YRANGE=[MR1(P),MR2(P)],XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,XSTYLE=1)
                TN = TEXT(KDATE(2),MAX(YRANGE)*.9,NAMES(FTH),TARGET=PM,FONT_SIZE=12,/DATA)
              ENDFOR ; PRODS
            ENDFOR ; NAMES
            W.SAVE, GFILE
            W.CLOSE
            PFILE, GFILE
          ENDFOR  ; YEARS
        ENDFOR ; PSTATS 
      ENDFOR ; SENSORS   
              
      IF FILE_MAKE(GIFS,DIR_OUT+'WEEKLY_ANOMS.gif',OVERWRITE=OVERWRITE) EQ 1 AND GIFS NE [] THEN BEGIN
        CD, DIR_OUT
        PFILE, 'WEEKLY_ANOMS.gif'
        IF EXISTS('WEEKLY_ANOMS.gif') THEN FILE_DELETE,'WEEKLY_ANOMS.gif'
        DELAY = '4'
        CMD = 'gifsicle --delay=' + delay + ' --loop '+'W_*.gif>'+'WEEKLY_ANOMS.gif'
        SPAWN, CMD, LOG, ERR
        CD, !S.PROGRAMS
      ENDIF
      
    ENDIF ; WEEKLY_ANOMS  


; ********************************************
    IF KEY(STATS_GIF) THEN BEGIN
; ********************************************

      SNAME = STATS_GIF
      PRINT, 'Running: ' + 'STATS_GIF'
      SWITCHES,STATS_GIF,STOPP=STOPP,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,INIT=INIT,R_FILES=R_FILES,R_DATASETS=R_DATASETS,R_MAPS=R_MAPS,DATASETS=DATASETS,DATERANGE=DATERANGE

      DIR = !S.PROJECTS + 'EDAB' + SL + 'IEA_WEBSITE' + SL + 'GIFS' + SL
      
      CLRS = LIST([217,241,253],[193,232,251],[0,173,238],[0,83,159],[37,64,143],[255,255,255])
      LOGO = !S.PROJECTS + 'EDAB' + SL + 'IEA_WEBSITE' + SL + 'NOAA2.png'
      LG = READ_PNG(LOGO) & LG = LG(*,*,380:999)
      
      EPUS      = 'EPUS_'+['EXTENDED']
      SHP_FILES = FLS(!S.IDL_SHAPEFILES + 'NES_ECOREGIONS' + SL + EPUS + '.shp')
      STRUCT = READ_SHPFILE(SHP_FILES, MAPP='NEC', COLOR=COLORS, VERBOSE=VERBOSE)
      SHPS=STRUCT.(0)
      OUTLINE = [SHPS.GB.OUTLINE,SHPS.MAB.OUTLINE,SHPS.GOM.OUTLINE]
      
      PRODS   = ['PPD','CHL','SST','MICRO']
      PERIODS = ['ANNUAL','MONTHLY','SEASONAL']
      TYPES   = ['STATS','ANOMS']
      OTHER   = ['UPWELLING']
      SUBS    = (['MUR-NEC','OCCCI-NEC'])
      FOR P=0, N_ELEMENTS(PRODS)-1 DO FOR R=0, N_ELEMENTS(PERIODS)-1 DO FOR T=0, N_ELEMENTS(TYPES)-1 DO SUBS = [SUBS,STRJOIN([PRODS(P),PERIODS(R),TYPES(T)],'_')]
      
      FOR S=0, N_ELEMENTS(SUBS)-1 DO BEGIN
        BUFFER = 1
        OVERWRITE = 0
        GIFS = []
        OCOLOR = 0
        NCOLOR = CLRS(5)
        DELAY = '100'
        D = DIR + SUBS(S) + SL
   ;     IF HAS(SUBS(S),'OCCCI')   THEN GOTO, OCCCI
   ;     IF HAS(SUBS(S),'MUR-')    THEN GOTO, MUR
        SUB = STR_SEP(SUBS(S),'_')
        IF SUB[1] EQ 'MONTHLY' AND SUB(2) EQ 'ANOMS' THEN CONTINUE
        DIR_TEST, D
      
        CASE SUB[1] OF
          'ANNUAL':   PER = 'A_'
          'MONTHLY':  BEGIN & PER='MONTH_' & DELAY = '75' & END
          'SEASONAL': PER='M3_'
        ENDCASE
      
        CASE SUB[0] OF
          'PPD': BEGIN
            F = FLS(!S.PP + 'MODISA/L3B2/'+SUB(2)+'/PPD-VGPM2/' + PER + '*',DATERANGE=[2002,2018])
            IF PER EQ 'A_' OR PER EQ 'M3_' THEN BEGIN
              F = DATE_SELECT(F,[2008,2017])
              F = [FLS(!S.PP + 'SEAWIFS/L3B2/'+SUB(2)+'/PPD-VGPM2/' + PER + '*',DATERANGE=[1998,2007]),F]
            ENDIF
            CASE SUB(2) OF
              'STATS': BEGIN & APROD='PPD_0.1_10' & CB_TITLE=UNITS('PRIMARY_PRODUCTION')          & PAL='PAL_BR'       & DCOLOR='WHITE' & END
              'ANOMS': BEGIN & APROD='RATIO'      & CB_TITLE='Primary Production Anomaly (ratio)' & PAL='PAL_ANOM_BGR' & DCOLOR=CLRS(4) & NCOLOR=CLRS(4) & END
            ENDCASE
          END ; CHL
      
          'CHL': BEGIN
            F = FLS(!S.OC + 'MODISA/L3B2/'+SUB(2)+'/CHLOR_A-PAN/' + PER + '*',DATERANGE=[2002,2018])
            IF PER EQ 'A_' OR PER EQ 'M3_' THEN BEGIN
              F = DATE_SELECT(F,[2008,2017])
              F = [FLS(!S.OC + 'SEAWIFS/L3B2/'+SUB(2)+'/CHLOR_A-PAN/' + PER + '*',DATERANGE=[1998,2007]),F]
            ENDIF
            CASE SUB(2) OF
              'STATS': BEGIN & APROD='CHLOR_A_0.1_30' & CB_TITLE=UNITS('CHLOROPHYLL')          & PAL='PAL_BR'       & DCOLOR='WHITE' & END
              'ANOMS': BEGIN & APROD='RATIO'          & CB_TITLE='Chlorophyll Anomaly (ratio)' & PAL='PAL_ANOM_BGR' & DCOLOR=CLRS(4) & NCOLOR=CLRS(4) & END
            ENDCASE
          END ; CHL
      
          'SST': BEGIN
            F = FLS(!S.SST + 'AVHRR/L3B4/'+SUB(2)+'/SST/' + PER + '*',DATERANGE=[1981,2018])
            IF PER EQ 'A_' THEN F = DATE_SELECT(F,[1982,2017])
            CASE SUB(2) OF
              'STATS': BEGIN & APROD='SST_0_30' & CB_TITLE=UNITS('TEMP')                                & PAL='PAL_BLUE_RED' & DCOLOR='WHITE' & END
              'ANOMS': BEGIN & APROD='DIF_-5_5' & CB_TITLE='Temperature Anomaly '+UNITS('SST',/NO_NAME) & PAL='PAL_ANOM_BWR' & DCOLOR=CLRS(4) & NCOLOR=CLRS(4) & DELAY='75' & END
            ENDCASE
          END ; SST
        ENDCASE
      
        IF SUB[1] EQ 'SEASONAL' AND N_ELEMENTS(F) GT 0 THEN BEGIN
          FP = PARSE_IT(F)
          WIN = F[WHERE(FP.MONTH_START EQ '01',/NULL,CWN)]
          FOR N=0, N_ELEMENTS(WIN)-1 DO BEGIN
            WN = WIN(N)
            WFP = PARSE_IT(WN)
            T = WFP[0].YEAR_START
            SP = F[WHERE(FP.MONTH_START EQ '04' AND FP.YEAR_START EQ T,/NULL,CSP)]
            SU = F[WHERE(FP.MONTH_START EQ '07' AND FP.YEAR_START EQ T,/NULL,CSU)]
            FA = F[WHERE(FP.MONTH_START EQ '10' AND FP.YEAR_START EQ T,/NULL,CFA)]
      
            FF = [WN,SP,SU,FA]
            IF N_ELEMENTS(FF) NE 4 THEN CONTINUE
            PF = PARSE_IT(FF)
            IF SAME(PF.YEAR_START) EQ 0 THEN STOP
            GIF = D + 'SEASONAL_'+ T + '.gif'
            GIFS = [GIFS,GIF]
            IF FILE_MAKE(FF,GIF,OVERWRITE=OVERWRITE) EQ 0 THEN CONTINUE
      
            W = WINDOW(DIMENSIONS=[512,512],BUFFER=BUFFER)
            OPROD = APROD
            PRODS_2PNG,FF[0],SPROD=OPROD,MAPP='NEC',OUTLINE=OUTLINE,OUT_COLOR=OCOLOR,/CURRENT,IMG_POS=[0,0.5,0.5,1.0],  PAL=PAL, CB_SIZE=7, CB_POS=[0.05,0.9,0.48,0.92], /ADD_CB, CB_TYPE=3, CB_TITLE=CB_TITLE
            PRODS_2PNG,FF[1],SPROD=OPROD,MAPP='NEC',OUTLINE=OUTLINE,OUT_COLOR=OCOLOR,/CURRENT,IMG_POS=[0.5,0.5,1.0,1.0],PAL=PAL
            PRODS_2PNG,FF(2),SPROD=OPROD,MAPP='NEC',OUTLINE=OUTLINE,OUT_COLOR=OCOLOR,/CURRENT,IMG_POS=[0,0,0.5,0.5],    PAL=PAL
            PRODS_2PNG,FF(3),SPROD=OPROD,MAPP='NEC',OUTLINE=OUTLINE,OUT_COLOR=OCOLOR,/CURRENT,IMG_POS=[0.5,0,1.0,0.5],  PAL=PAL
      
            T  = TEXT(0.98,0.02, T,        FONT_SIZE=10, FONT_STYLE='BOLD', FONT_COLOR=DCOLOR, ALIGNMENT=1.0)
            S1 = TEXT(0.01,0.97, 'WINTER', FONT_SIZE=10, FONT_STYLE='BOLD', FONT_COLOR=DCOLOR, ALIGNMENT=0)
            S2 = TEXT(0.51,0.97, 'SPRING', FONT_SIZE=10, FONT_STYLE='BOLD', FONT_COLOR=DCOLOR, ALIGNMENT=0)
            S3 = TEXT(0.01,0.47, 'SUMMER', FONT_SIZE=10, FONT_STYLE='BOLD', FONT_COLOR=DCOLOR, ALIGNMENT=0)
            S4 = TEXT(0.51,0.47, 'FALL',   FONT_SIZE=10, FONT_STYLE='BOLD', FONT_COLOR=DCOLOR, ALIGNMENT=0)
      
            TM = IMAGE(LG, RGB_TABLE=ARR,DIMENSIONS=[25,5025], POSITION=[5,30,30,55],/CURRENT,/DEVICE)
            T1 = TEXT(6,  20, 'NOAA FISHERIES',                      FONT_COLOR=NCOLOR, FONT_SIZE=7,/DEVICE,FONT_STYLE='BOLD')
            T3 = TEXT(6,  5, 'Northeast Fisheries !CScience Center', FONT_COLOR=NCOLOR, FONT_SIZE=5, /DEVICE,FONT_STYLE='BOLD')
            W.SAVE, GIF
            W.CLOSE
            GONE, FF
          ENDFOR ; WIN
        ENDIF ; SEASONAL
      ENDFOR ; SUBS
    ENDIF ; STATS_GIF    


; ********************************************
    IF KEY(ANOMALY_MAP) THEN BEGIN
; ********************************************
      
      SWITCHES,ANOMALY_MAP,STOPP=STOPP,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,INIT=INIT,R_FILES=R_FILES,R_DATASETS=R_DATASETS,R_MAPS=R_MAPS,DATERANGE=DATERANGE
      
      BUFFER = 0      
      YR = MAX(DATE_2YEAR(DATE_RANGE))
      
      APA = FLS(!S.PP + 'SA/L3B2/ANOMS/PPD-VGPM2/A_' + YR + '*SA_MODISA*')   & GPA = !S.GLOBAL_PRODS + 'MODISA-PPD-VGPM2-GLOBAL.SAV'
      ACA = FLS(!S.OC  + 'SA/L3B2/ANOMS/CHLOR_A-PAN/A_' + YR + '*SA_MODISA*') & GCA = !S.GLOBAL_PRODS + 'MODISA-CHLOR_A-PAN-GLOBAL.SAV'
      APS = FLS(!S.PP + 'MODISA/L3B2/STATS/PPD-VGPM2/A_' + YR + '*')         & GPS = !S.GLOBAL_PRODS + 'MODISA-PPD-VGPM2-GLOBAL.SAV'
      ACS = FLS(!S.OC  + 'MODISA/L3B2/STATS/CHLOR_A-PAN/A_' + YR + '*')       & GCS = !S.GLOBAL_PRODS + 'MODISA-CHLOR_A-PAN-GLOBAL.SAV'

      DIR_CDF = DIR_PRO + 'DATA' + SL + 'NETCDF' + SL + 'CHL_PP' + SL & DIR_TEST,DIR_CDF
      WRITE_NC, ACS, OUTPROD='CHLOR_A', DIR_OUT=DIR_CDF, LONLAT=1, MAP_OUT='NES', GLOBAL_FILE=GCS, TAGS_STAT=['MEAN'], OVERWRITE=OVERWRITE, /VERBOSE
      WRITE_NC, APS, OUTPROD='PPD',     DIR_OUT=DIR_CDF, LONLAT=1, MAP_OUT='NES', GLOBAL_FILE=GPS, TAGS_STAT=['MEAN'], OVERWRITE=OVERWRITE, /VERBOSE
      WRITE_NC, ACA, OUTPROD='CHLOR_A', DIR_OUT=DIR_CDF, LONLAT=1, MAP_OUT='NES', GLOBAL_FILE=GCA, TAGS_STAT=['ANOMALY'], OVERWRITE=OVERWRITE, /VERBOSE
      WRITE_NC, APA, OUTPROD='PPD',     DIR_OUT=DIR_CDF, LONLAT=1, MAP_OUT='NES', GLOBAL_FILE=GPA, TAGS_STAT=['ANOMALY'],OVERWRITE=OVERWRITE, /VERBOSE
      
      LF = [0,.5,0,.5]
      RT = [.5,1,.5,1]
      TP = [1,1,.5,.5]
      BT = [.5,.5,0,0]
      CL = LF[0] + 0.035
      CR = LF[0] + 0.49
      CT = TP[0] - 0.05
      CB = TP[0] - 0.02
      CB_TYPE = 3

      CSPROD = 'CHLOR_A_0.1_30' & CSTITLE = UNITS('CHLOROPHYLL')        & CSPAL = 'PAL_BR'
      CAPROD = 'RATIO'          & CATITLE = 'CHL Anomaly (ratio)'       & CAPAL = 'PAL_ANOM_GREY'
      PSPROD = 'PPD_0.1_10'     & PSTITLE = UNITS('PRIMARY_PRODUCTION') & PSPAL = 'PAL_BR'
      PAPROD = 'RATIO'          & PATITLE = 'PP Anomaly (ratio)'        & PAPAL = 'PAL_ANOM_GREY'

      MAPS = ['NEC','MAB','GOMN']
      FOR M=0, N_ELEMENTS(MAPS)-1 DO BEGIN
        OMAP = MAPS(M)
        
        STRUCT = READ_SHPFILE(SHP_FILES, MAPP=OMAP, COLOR=COLOR, VERBOSE=VERBOSE, NORMAL=NORMAL, AROUND=AROUND)
        SHPS=STRUCT.(0)
        EOUTLINE = []
        CASE OMAP OF
          'NEC':  NAMES = ['GOM','GB','MAB']
          'MAB':  NAMES = ['MAB']
          'GOMN': NAMES = ['GOM','GB']
        ENDCASE
        FOR F=0, N_ELEMENTS(NAMES)-1 DO BEGIN
          POS = WHERE(TAG_NAMES(SHPS) EQ STRUPCASE(NAMES(F)),/NULL)
          EOUTLINE = [EOUTLINE,SHPS.(POS).OUTLINE]
        ENDFOR
       
        PNGFILE = DIR_PNGS + YR + '_CHL_PP_COMPOSITE-' + OMAP + '.PNG'
        IF FILE_MAKE([ACS,ACA,APS,APA],PNGFILE,OVERWRITE=OVERWRITE) EQ 1 THEN BEGIN
          W = WINDOW(DIMENSIONS=[1024,1024],BUFFER=BUFFER)
          IF ACS NE [] THEN PRODS_2PNG,ACS,MAPP=OMAP,PROD=CSPROD,OUTLINE=EOUTLINE,OUT_COLOR=0,OUT_THICK=4,CB_TITLE=CSTITLE,TXT_TAGS=TXT_TAGS,VERBOSE=VERBOSE,/CURRENT,IMG_POS=[LF[0],BT[0],RT[0],TP[0]],CB_POS=[CL,CT,CR,CB],CB_TYPE=CB_TYPE,CB_RELATIVE=CB_RELATIVE,PAL=CSPAL,/ADD_CB
          IF ACA NE [] THEN PRODS_2PNG,ACA,MAPP=OMAP,PROD=CAPROD,OUTLINE=EOUTLINE,OUT_COLOR=0,OUT_THICK=4,CB_TITLE=CATITLE,TXT_TAGS=TXT_TAGS,VERBOSE=VERBOSE,/CURRENT,IMG_POS=[LF[1],BT[1],RT[1],TP[1]],CB_POS=[CL,CT,CR,CB],CB_TYPE=CB_TYPE,CB_RELATIVE=CB_RELATIVE,PAL=CAPAL,/ADD_CB
          IF APS NE [] THEN PRODS_2PNG,APS,MAPP=OMAP,PROD=PSPROD,OUTLINE=EOUTLINE,OUT_COLOR=0,OUT_THICK=4,CB_TITLE=PSTITLE,TXT_TAGS=TXT_TAGS,VERBOSE=VERBOSE,/CURRENT,IMG_POS=[LF(2),BT(2),RT(2),TP(2)],CB_POS=[CL,CT,CR,CB],CB_TYPE=CB_TYPE,CB_RELATIVE=CB_RELATIVE,PAL=PSPAL,/ADD_CB
          IF APA NE [] THEN PRODS_2PNG,APA,MAPP=OMAP,PROD=PAPROD,OUTLINE=EOUTLINE,OUT_COLOR=0,OUT_THICK=4,CB_TITLE=PATITLE,TXT_TAGS=TXT_TAGS,VERBOSE=VERBOSE,/CURRENT,IMG_POS=[LF(3),BT(3),RT(3),TP(3)],CB_POS=[CL,CT,CR,CB],CB_TYPE=CB_TYPE,CB_RELATIVE=CB_RELATIVE,PAL=PAPAL,/ADD_CB
          W.SAVE, PNGFILE
          W.CLOSE
        ENDIF
        
        PRODS_2PNG,ACS,MAPP=OMAP,PROD=CSPROD,DIR_OUT=DIR_PNGS,OUTLINE=EOUTLINE,OUT_COLOR=0,OUT_THICK=4,CB_TITLE=CSTITLE,TXT_TAGS=TXT_TAGS,VERBOSE=VERBOSE,CB_TYPE=CB_TYPE,CB_RELATIVE=CB_RELATIVE,PAL=CSPAL,CB_POS=[CL,CT,CR,CB],/ADD_CB
        PRODS_2PNG,ACA,MAPP=OMAP,PROD=CAPROD,DIR_OUT=DIR_PNGS,OUTLINE=EOUTLINE,OUT_COLOR=0,OUT_THICK=4,CB_TITLE=CATITLE,TXT_TAGS=TXT_TAGS,VERBOSE=VERBOSE,CB_TYPE=CB_TYPE,CB_RELATIVE=CB_RELATIVE,PAL=CAPAL,CB_POS=[CL,CT,CR,CB],/ADD_CB
        PRODS_2PNG,APS,MAPP=OMAP,PROD=PSPROD,DIR_OUT=DIR_PNGS,OUTLINE=EOUTLINE,OUT_COLOR=0,OUT_THICK=4,CB_TITLE=PSTITLE,TXT_TAGS=TXT_TAGS,VERBOSE=VERBOSE,CB_TYPE=CB_TYPE,CB_RELATIVE=CB_RELATIVE,PAL=PSPAL,CB_POS=[CL,CT,CR,CB],/ADD_CB
        PRODS_2PNG,APA,MAPP=OMAP,PROD=PAPROD,DIR_OUT=DIR_PNGS,OUTLINE=EOUTLINE,OUT_COLOR=0,OUT_THICK=4,CB_TITLE=PATITLE,TXT_TAGS=TXT_TAGS,VERBOSE=VERBOSE,CB_TYPE=CB_TYPE,CB_RELATIVE=CB_RELATIVE,PAL=PAPAL,CB_POS=[CL,CT,CR,CB],/ADD_CB
      
      
        ; *** SEASONS ***
        SEAS = ['WIN','SPR','SUM','FAL']
        NAME = ['Winter','Spring','Summer','Fall']
        SEASONS = [YR+'01_',YR+'04_',YR+'07_',YR+'10_']
        FOR S=0, N_ELEMENTS(SEASONS)-1 DO BEGIN
          SEASON = SEASONS(S)
          CS = FLS(!S.OC  + 'MODISA/L3B2/STATS/CHLOR_A-PAN/M3_' + SEASON + '*')       & IF CS EQ [] THEN CS = '' & GCS = !S.GLOBAL_PRODS + 'MODISA-CHLOR_A-PAN-GLOBAL.SAV'
          CA = FLS(!S.OC  + 'SA/L3B2/ANOMS/CHLOR_A-PAN/M3_' + SEASON + '*SA_MODISA*') & IF CA EQ [] THEN CA = '' & GCA = !S.GLOBAL_PRODS + 'MODISA-CHLOR_A-PAN-GLOBAL.SAV'
          PS = FLS(!S.PP + 'MODISA/L3B2/STATS/PPD-VGPM2/M3_' + SEASON + '*')         & IF PS EQ [] THEN PS = '' & GPS = !S.GLOBAL_PRODS + 'MODISA-PPD-VGPM2-GLOBAL.SAV'
          PA = FLS(!S.PP + 'SA/L3B2/ANOMS/PPD-VGPM2/M3_' + SEASON + '*SA_MODISA*')   & IF PA EQ [] THEN PA = '' & GPA = !S.GLOBAL_PRODS + 'MODISA-PPD-VGPM2-GLOBAL.SAV'
          
          IF CS NE '' THEN WRITE_NC, CS, OUTPROD='CHLOR_A', DIR_OUT=DIR_CDF, LONLAT=1, MAP_OUT='NES', GLOBAL_FILE=GCS, TAGS_STAT=['MEAN'],   OVERWRITE=OVERWRITE, /VERBOSE
          IF CA NE '' THEN WRITE_NC, CA, OUTPROD='CHLOR_A', DIR_OUT=DIR_CDF, LONLAT=1, MAP_OUT='NES', GLOBAL_FILE=GCA, TAGS_STAT=['ANOMALY'],OVERWRITE=OVERWRITE, /VERBOSE
          IF PS NE '' THEN WRITE_NC, PS, OUTPROD='PPD',     DIR_OUT=DIR_CDF, LONLAT=1, MAP_OUT='NES', GLOBAL_FILE=GPS, TAGS_STAT=['MEAN'],   OVERWRITE=OVERWRITE, /VERBOSE
          IF PA NE '' THEN WRITE_NC, PA, OUTPROD='PPD',     DIR_OUT=DIR_CDF, LONLAT=1, MAP_OUT='NES', GLOBAL_FILE=GPA, TAGS_STAT=['ANOMALY'],OVERWRITE=OVERWRITE, /VERBOSE

          CASE SEAS(S) OF
            'WIN': WIN = [CS,CA,PS,PA]
            'SPR': SPR = [CS,CA,PS,PA]
            'SUM': SUM = [CS,CA,PS,PA]
            'FAL': FAL = [CS,CA,PS,PA]
          ENDCASE

          PNGFILE = DIR_PNGS + YR + '_' + SEAS(S) + '-CHL_PP_COMPOSITE-' + OMAP + '.PNG'
          IF FILE_MAKE([CS,CA,PS,PA],PNGFILE,OVERWRITE=OVERWRITE) EQ 1 THEN BEGIN
            W = WINDOW(DIMENSIONS=[1024,1024],BUFFER=BUFFER)
            IF CS NE '' THEN PRODS_2PNG,CS,MAPP=OMAP,PROD=CSPROD,OUTLINE=EOUTLINE,OUT_COLOR=0,OUT_THICK=4,CB_TITLE=CSTITLE,TXT_TAGS=TXT_TAGS,VERBOSE=VERBOSE,/CURRENT,IMG_POS=[LF[0],BT[0],RT[0],TP[0]],CB_POS=[CL,CT,CR,CB],CB_TYPE=CB_TYPE,CB_RELATIVE=CB_RELATIVE,PAL=CSPAL,/ADD_CB
            IF CA NE '' THEN PRODS_2PNG,CA,MAPP=OMAP,PROD=CAPROD,OUTLINE=EOUTLINE,OUT_COLOR=0,OUT_THICK=4,CB_TITLE=CATITLE,TXT_TAGS=TXT_TAGS,VERBOSE=VERBOSE,/CURRENT,IMG_POS=[LF[1],BT[1],RT[1],TP[1]],CB_POS=[CL,CT,CR,CB],CB_TYPE=CB_TYPE,CB_RELATIVE=CB_RELATIVE,PAL=CAPAL,/ADD_CB
            IF PS NE '' THEN PRODS_2PNG,PS,MAPP=OMAP,PROD=PSPROD,OUTLINE=EOUTLINE,OUT_COLOR=0,OUT_THICK=4,CB_TITLE=PSTITLE,TXT_TAGS=TXT_TAGS,VERBOSE=VERBOSE,/CURRENT,IMG_POS=[LF(2),BT(2),RT(2),TP(2)],CB_POS=[CL,CT,CR,CB],CB_TYPE=CB_TYPE,CB_RELATIVE=CB_RELATIVE,PAL=PSPAL,/ADD_CB
            IF PA NE '' THEN PRODS_2PNG,PA,MAPP=OMAP,PROD=PAPROD,OUTLINE=EOUTLINE,OUT_COLOR=0,OUT_THICK=4,CB_TITLE=PATITLE,TXT_TAGS=TXT_TAGS,VERBOSE=VERBOSE,/CURRENT,IMG_POS=[LF(3),BT(3),RT(3),TP(3)],CB_POS=[CL,CT,CR,CB],CB_TYPE=CB_TYPE,CB_RELATIVE=CB_RELATIVE,PAL=PAPAL,/ADD_CB
            TXT = TEXT(0.5,0.97,NAME(S),ALIGNMENT=0.5,FONT_STYLE='BOLD',FONT_SIZE=18)
            W.SAVE, PNGFILE
            W.CLOSE
          ENDIF
        ENDFOR ; SEASONS
        
        
        PRODS = ['CHL_STATS','CHL_ANOM','PP_STATS','PP_ANOM']
        FOR P=0, N_ELEMENTS(PRODS)-1 DO BEGIN
          CASE PRODS(P) OF 
            'CHL_STATS': BEGIN & PROD=CSPROD & TITLE=CSTITLE & PAL=CSPAL & END
            'CHL_ANOM' : BEGIN & PROD=CAPROD & TITLE=CATITLE & PAL=CAPAL & END
            'PP_STATS' : BEGIN & PROD=PSPROD & TITLE=PSTITLE & PAL=PSPAL & END
            'PP_ANOM'  : BEGIN & PROD=PAPROD & TITLE=PATITLE & PAL=PAPAL & END
          ENDCASE
          
          PNGFILE = DIR_PNGS + YR + '_SEASONAL-'+ PRODS(P) + '-' + OMAP + '.PNG'
          FILES = [WIN(P),SPR(P),SUM(P),FAL(P)]
          IF FILE_MAKE(FILES,PNGFILE,OVERWRITE=OVERWRITE) EQ 1 THEN BEGIN
            W = WINDOW(DIMENSIONS=[1024,1024],BUFFER=BUFFER)
            LI, FILES
            IF FILES[0] NE '' THEN PRODS_2PNG,FILES[0],MAPP=OMAP,PROD=PROD,OUTLINE=EOUTLINE,OUT_COLOR=0,OUT_THICK=4,CB_TITLE=NAME[0]+' ' +TITLE,TXT_TAGS=TXT_TAGS,VERBOSE=VERBOSE,/CURRENT,IMG_POS=[LF[0],BT[0],RT[0],TP[0]],CB_POS=[CL,CT,CR,CB],CB_TYPE=CB_TYPE,CB_RELATIVE=CB_RELATIVE,PAL=PAL,/ADD_CB
            IF FILES[1] NE '' THEN PRODS_2PNG,FILES[1],MAPP=OMAP,PROD=PROD,OUTLINE=EOUTLINE,OUT_COLOR=0,OUT_THICK=4,CB_TITLE=NAME[1]+' ' +TITLE,TXT_TAGS=TXT_TAGS,VERBOSE=VERBOSE,/CURRENT,IMG_POS=[LF[1],BT[1],RT[1],TP[1]],CB_POS=[CL,CT,CR,CB],CB_TYPE=CB_TYPE,CB_RELATIVE=CB_RELATIVE,PAL=PAL,/ADD_CB
            IF FILES(2) NE '' THEN PRODS_2PNG,FILES(2),MAPP=OMAP,PROD=PROD,OUTLINE=EOUTLINE,OUT_COLOR=0,OUT_THICK=4,CB_TITLE=NAME(2)+' ' +TITLE,TXT_TAGS=TXT_TAGS,VERBOSE=VERBOSE,/CURRENT,IMG_POS=[LF(2),BT(2),RT(2),TP(2)],CB_POS=[CL,CT,CR,CB],CB_TYPE=CB_TYPE,CB_RELATIVE=CB_RELATIVE,PAL=PAL,/ADD_CB
            IF FILES(3) NE '' THEN PRODS_2PNG,FILES(3),MAPP=OMAP,PROD=PROD,OUTLINE=EOUTLINE,OUT_COLOR=0,OUT_THICK=4,CB_TITLE=NAME(3)+' ' +TITLE,TXT_TAGS=TXT_TAGS,VERBOSE=VERBOSE,/CURRENT,IMG_POS=[LF(3),BT(3),RT(3),TP(3)],CB_POS=[CL,CT,CR,CB],CB_TYPE=CB_TYPE,CB_RELATIVE=CB_RELATIVE,PAL=PAL,/ADD_CB
            IF ANY(FILES) THEN W.SAVE, PNGFILE
            W.CLOSE
          ENDIF
        ENDFOR ; SEASONAL PRODS  
        
      ENDFOR ; MAPS
      
      
      
    ENDIF

STOP


; ********************************************
    IF KEY(SOE_2018) THEN BEGIN
; ********************************************
      SNAME = 'SOE_2018'
      PRINT, 'Running: ' + SNAME
      SWITCHES,SOE_2018,STOPP=STOPP,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,INIT=INIT,R_FILES=R_FILES,R_DATASETS=R_DATASETS,R_MAPS=R_MAPS,DATERANGE=DATERANGE
  
  
      VERSION = 'V2018_2'
      DIR_PRO = DIR_PROJECTS + VERSION + SL
      DIR_DATA   = DIR_PRO + 'DATA_EXTRACTS' + SL & DIR_TEST, DIR_DATA
      DIR_COMP   = DIR_PRO + 'COMPOSITES'    + SL & DIR_TEST, DIR_COMP
      DIR_PNGS   = DIR_PRO + 'PNGS'          + SL & DIR_TEST, DIR_PNGS
  
      ANOMALY_MAP         = '';Y_2017'
      TIMESERIES_PLOTS    = ''
      DATA_EXTRACTS       = ''
      PERCENT_PRODUCTION  = ''
      SST_FILES_FOR_VINCE = ''
  
  
      OMAP = 'NEC'
      SUBAREA = 'NES_ECOREGIONS'
      EPUS    = 'EPU_'+['NOESTUARIES']
      SHP_FILES = FLS(!S.IDL_SHAPEFILES + 'NES_ECOREGIONS' + SL + EPUS + '.shp')
      NAMES = ['MAB','GOM','SS','GB']
      SUBTITLES = ['Northeast Shelf LME','Scotian Shelf','Gulf of Maine','Georges Bank','Mid-Atlantic Bight']
      STRUCT = READ_SHPFILE(SHP_FILES, MAPP=OMAP, COLOR=COLOR, VERBOSE=VERBOSE, NORMAL=NORMAL, AROUND=AROUND)
      SHPS=STRUCT.(0)
      EPU_OUTLINE = []
      FOR F=0, N_ELEMENTS(NAMES)-1 DO BEGIN
        POS = WHERE(TAG_NAMES(SHPS) EQ STRUPCASE(NAMES(F)),/NULL)
        EPU_OUTLINE = [EPU_OUTLINE,SHPS.(POS).OUTLINE]
      ENDFOR
     
  
      
  
      IF KEY(TIMESERIES_PLOTS) THEN BEGIN
        AMAP = 'L3B2'
        PALG = 'VGPM2'
        CALG = 'PAN'
        BUFFER = 1
        VERBOSE = 0
        PERIODS = ['DAILY','WEEKLY']
        SATS = ['SEAWIFS','MODISA']
        PSTATS = ['MED','GMEAN','AMEAN']
  
        SUBAREA = 'NES_ECOREGIONS'
        EPUS    = 'EPU_'+['NOESTUARIES']
        SHP_FILES = FLS(!S.IDL_SHAPEFILES + 'NES_ECOREGIONS' + SL + EPUS + '.shp')
        YEARS = YEAR_RANGE('1998','2017',/STRING)
        NAMES = ['GOM','GB','MAB']
        SUBTITLES = ['Gulf of Maine','Georges Bank','Mid-Atlantic Bight'] ; 'Scotian Shelf'
        
        FOR RTH=0, N_ELEMENTS(PERIODS)-1 DO BEGIN
          PER = PERIODS(RTH)
          CASE PER OF
            'DAILY': BEGIN & PERIOD_CODE = 'D8' & CLIM_PERIOD = 'DOY' & END
            'WEEKLY': BEGIN & PERIOD_CODE = 'W' & CLIM_PERIOD = 'WEEK' & END
          ENDCASE
        
          FOR P=0, N_ELEMENTS(CALG)-1 DO BEGIN
            PSAT = REPLACE(SAT,'_PAN','')
            CHL_PROD = []
            CASE CALG(P) OF
              'OCI': BEGIN & SPROD = 'CHLOR_A-OCI' & NPROD = 'CHL' & CHL_PROD = 'chlor_a' & END
              'OCX': BEGIN & SPROD = 'CHLOR_A-OCX' & NPROD = 'CHL' & CHL_PROD = 'chl_ocx' & END
              'PAN': BEGIN & SPROD = 'CHLOR_A-PAN' & NPROD = 'CHL_PAN' & END
            ENDCASE
            
            DIR_COMP   = DIR_PRO + 'COMPOSITES' + SL & DIR_TEST, DIR_COMP
            DIR_CCLIM  = !S.OC  + 'SA' + SL + AMAP + SL + 'STATS' + SL + SPROD + SL
            DIR_PCLIM  = !S.PP + 'SA' + SL + AMAP + SL + 'STATS' + SL + 'PPD-' + PALG + SL
            FILES = []
            FILES = [FILES,FLS(DIR_CCLIM + CLIM_PERIOD + '_*.SAV')]
            FILES = [FILES,FLS(DIR_PCLIM + CLIM_PERIOD + '_*.SAV')]
            FOR STH=0, N_ELEMENTS(SATS)-1 DO BEGIN
              SAT = SATS(STH)
              CASE SAT OF
                'MODISA':  BEGIN & PREFIX='A' & DR=['2008','2017'] & END
                'SEAWIFS': BEGIN & PREFIX='S' & DR=['1998','2007'] & END
              ENDCASE
    
              DIR_CSTAT  = !S.OC  + SAT  + SL + AMAP + SL + 'STATS' + SL + SPROD + SL
              DIR_PSTAT  = !S.PP + SAT  + SL + AMAP + SL + 'STATS' + SL + 'PPD-' + PALG + SL
              FILES = [FILES,FLS(DIR_CSTAT + PERIOD_CODE + '_*.SAV',DATERANGE=DR)]
              FILES = [FILES,FLS(DIR_PSTAT + PERIOD_CODE + '_*.SAV',DATERANGE=DR)]
            ENDFOR  
            
            WSAVE = DIR_DATA + PER + '-' + SUBAREA + '-CHLOR_A-'+CALG+'_PPD-'+PALG+'-STATS-SUBAREAS.SAV'
            SUBAREAS_EXTRACT, FILES, SHP_FILES=SHP_FILES, INIT=INIT, VERBOSE=VERBOSE, DIR_OUT=DIR_DATA, STRUCT=STRUCT, SAVEFILE=WSAVE
           
            WSTR = STRUCT[WHERE(STRUCT.PERIOD_CODE EQ PERIOD_CODE,/NULL)]
            KSTR = STRUCT[WHERE(STRUCT.PERIOD_CODE EQ CLIM_PERIOD,/NULL)]
            
            PRODS = ['CHLOR_A','PPD']
            FOR P=0, N_ELEMENTS(PRODS)-1 DO BEGIN
              PSTR = WSTR[WHERE(WSTR.PROD EQ PRODS(P))] 
              CASE PER OF   
                'WEEKLY': WSETS = WHERE_SETS(PSTR.SUBAREA + '_'+ PSTR.PROD+'_'+DATE_2WEEK(PERIOD_2DATE(PSTR.PERIOD)))
                'DAILY':  WSETS = WHERE_SETS(PSTR.SUBAREA + '_'+ PSTR.PROD+'_'+DATE_2DOY(PERIOD_2DATE(PSTR.PERIOD),/PAD))
              ENDCASE  
              FOR W=0, N_ELEMENTS(WSETS)-1 DO BEGIN
                SET = PSTR(WHERE_SETS_SUBS(WSETS(W)))
                BRK = STR_BREAK(WSETS(W).VALUE,'_')
                IF BRK(-1) EQ '366' THEN CONTINUE
                WST = []
                FOR S=0, N_ELEMENTS(PSTATS)-1 DO BEGIN
                  DAT = GET_TAG(SET,PSTATS(S))
                  WSTAT = STATS(SET.MED,/BASIC)
                  WST = CREATE_STRUCT(WST,'STD_'+PSTATS(S),WSTAT.STD)
                ENDFOR
                IF W+P EQ 0 THEN WSTATS=                     CREATE_STRUCT('PERIOD',CLIM_PERIOD+'_'+BRK(-1),'PROD',PRODS(P),'SUBAREA',BRK[0],WST) $
                            ELSE WSTATS=STRUCT_CONCAT(WSTATS,CREATE_STRUCT('PERIOD',CLIM_PERIOD+'_'+BRK(-1),'PROD',PRODS(P),'SUBAREA',BRK[0],WST))              
              ENDFOR ; WSETS  
            ENDFOR  
            KPER = KSTR.PERIOD
            BRK = STR_BREAK(KSTR.PERIOD,'_')
            KSTR.PERIOD = BRK(*,0) + '_' + BRK(*,1)
            KSTR = STRUCT_JOIN(KSTR,WSTATS,TAGNAMES=['PERIOD','PROD','SUBAREA'])
            KSTR.PERIOD = KPER
               
            PRODS = ['CHLOR_A-'+CALG,'PPD-'+PALG]
            TITLES = UNITS(['CHLOROPHYLL','PRIMARY_PRODUCTION'])
            YRNG  = LIST([0.0,1.6],[0.0,2.2])                  
            AX = DATE_AXIS([210001,210012],/MONTH,/FYEAR,STEP=1,/MID)
            IF PER EQ 'DAILY' THEN MTHICK = 1 ELSE MTHICK = 3
            FOR STH=0, N_ELEMENTS(PSTATS)-1 DO BEGIN
              FOR S=0, N_ELEMENTS(YEARS)-1 DO BEGIN
                YEAR = YEARS(S)
                SPERIOD = PERIOD_CODE + '_' + YEAR
                PNGFILE = DIR_COMP+SPERIOD+'-SEASONAL_CLIMATOLOGY-'+STRJOIN(PRODS,'_')+'-'+PSTATS(STH)+'.PNG'
                IF FILE_MAKE(WSAVE,PNGFILE,OVERWRITE=OVERWRITE) EQ 0 THEN CONTINUE
                W = WINDOW(DIMENSIONS=[800,1200],BUFFER=BUFFER)
                T = TEXT(0.5,0.98,YEAR,ALIGNMENT=0.5,FONT_SIZE=14,FONT_STYLE='BOLD',/NORMAL)
                LO = 0
                FOR FTH=0L, N_ELEMENTS(NAMES)-1 DO BEGIN
                  FOR PTH=0, N_ELEMENTS(PRODS)-1 DO BEGIN
                    LO = LO+1
                    PROD = PRODS(PTH)
                    YRANGE = YRNG(PTH)
                    YSTR = WSTR[WHERE(DATE_2YEAR(PERIOD_2DATE(WSTR.PERIOD)) EQ YEAR AND WSTR.SUBAREA EQ NAMES(FTH) AND WSTR.PROD EQ VALIDS('PRODS',PROD),/NULL)]
                    RSTR = KSTR[WHERE(KSTR.SUBAREA EQ NAMES(FTH) AND KSTR.PROD EQ VALIDS('PRODS',PROD),/NULL)]
                    
                    WDATE = DATE_2JD(YDOY_2DATE('2100',DATE_2DOY(PERIOD_2DATE(YSTR.PERIOD))))
                    WDATA = GET_TAG(YSTR,PSTATS(STH))
                    
                    KDATE = DATE_2JD(YDOY_2DATE('2100',DATE_2DOY(PERIOD_2DATE(RSTR.PERIOD))))
                    KDATA = GET_TAG(RSTR,PSTATS(STH)) & ADATA = KDATA & BDATA = KDATA 
                    KSTD  = GET_TAG(RSTR,'STD_'+PSTATS(STH))
                    
                    OKA = WHERE(WDATA GE KDATA,COUNTA) & OKB = WHERE(WDATA LE KDATA,COUNTB)
                    ADATA(OKA) = WDATA(OKA) & BDATA(OKB) = WDATA(OKB) 
                    
                    P0 = PLOT(WDATE,WDATA,/NODATA,/CURRENT,LAYOUT=[2,3,LO],XRANGE=AX.JD,YRANGE=YRANGE,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,XSTYLE=1,YMAJOR=YMAJOR,YTICKV=YTICKS,YTITLE=TITLES(PTH),MARGIN=[0.13,0.05,0.05,0.07])
                    P1 = POLYGON([KDATE,REVERSE(KDATE)],[KDATA+KSTD,  REVERSE(KDATA-KSTD)],  FILL_COLOR='LIGHT_GREY',FILL_TRANSPARENCY=65,LINESTYLE=6,/OVERPLOT,/DATA,TARGET=P0)
                ;    P2 = POLYGON([KDATE,REVERSE(KDATE)],[KDATA+KSTD*2,REVERSE(KDATA-KSTD*2)],FILL_COLOR='LIGHT_GREY',FILL_TRANSPARENCY=75,LINESTYLE=6,/OVERPLOT,/DATA,TARGET=P0)               
                    PA = POLYGON([KDATE,REVERSE(KDATE)],[KDATA,REVERSE(ADATA)],FILL_COLOR='SPRING_GREEN',FILL_TRANSPARENCY=50,LINESTYLE=6,/OVERPLOT,/DATA,TARGET=P0)
                    PB = POLYGON([KDATE,REVERSE(KDATE)],[KDATA,REVERSE(BDATA)],FILL_COLOR='MEDIUM_BLUE', FILL_TRANSPARENCY=50,LINESTYLE=6,/OVERPLOT,/DATA,TARGET=P0)
                    PM = PLOT(KDATE,KDATA,COLOR='BLACK',/CURRENT,/OVERPLOT,THICK=MTHICK);,XRANGE=AX.JD,YRANGE=[MR1(P),MR2(P)],XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,XSTYLE=1)
                    TN = TEXT(KDATE(2),MAX(YRANGE)*.9,NAMES(FTH),TARGET=PM,FONT_SIZE=12,/DATA)
                  ENDFOR ; PRODS    
                ENDFOR ; NAMES
                W.SAVE, PNGFILE
                W.CLOSE
                PFILE, PNGFILE
              ENDFOR  ; YEARS
            ENDFOR ; PSTATS  
          ENDFOR ; ALGS
        ENDFOR ; PERIODS      
      ENDIF ; TIMESERIES_PLOTS
  
      
  
      IF KEY(PERCENT_PRODUCTION) THEN BEGIN
        AMAP = 'L3B2'
        OMAP = 'NEC'
        APROD = 'PPD-VGPM2'
  
        SATS = (['MODISA','SEAWIFS'])
        BUFFER = 1
        VERBOSE = 1
        DS = '-'
        SKIP_PAR = 1
  
        IF KEY(SKIP_PAR) THEN GOTO, SKIP
        FOR S=0, N_ELEMENTS(SATS)-1 DO BEGIN
          CPROD = 'PAR'
          DR = [20030101,20030131]
          NFILES = FLS(!S.OC + SATS(S) + SL + AMAP + SL + 'NC' + SL + CPROD + SL + '*' + CPROD + '*nc',DATERANGE=DR)           & NP = PARSE_IT(NFILES)
          DFILES = FLS(!S.OC + SATS(S) + SL + AMAP + SL + 'INTERP_SAVE' + SL + CPROD + SL + '*' + CPROD + '*SAV',DATERANGE=DR) & DP = PARSE_IT(DFILES)
          FFILES = FLS(!S.OC + SATS(S) + SL + AMAP + SL + 'FILLED_SAVE' + SL + CPROD + SL + '*' + CPROD + '*SAV',DATERANGE=DR) & FP = PARSE_IT(FFILES)
  
          PDIR = !S.OC + SATS(S) + SL + OMAP + SL + 'PNGS' + SL + CPROD + SL & DIR_TEST, PDIR
          FOR N=0, N_ELEMENTS(NFILES)-1 DO BEGIN
            DR = DFILES[WHERE(DP.PERIOD EQ NP(N).PERIOD,/NULL,COUNTD)] & D3 = PARSE_IT(DR,/ALL)
            FR = FFILES[WHERE(FP.PERIOD EQ NP(N).PERIOD,/NULL,COUNTF)] & FF = PARSE_IT(DR,/ALL)
            PR = NFILES(N)
  
            PNGFILE = PDIR + REPLACE(D3.NAME,D3.MAP,OMAP) + '-COMPARE.PNG'
            IF FILE_MAKE([DR,PR,FR],PNGFILE) EQ 0 THEN CONTINUE
  
            W = WINDOW(DIMENSIONS=[768,256],BUFFER=BUFFER)
            IF PR NE [] THEN PRODS_2PNG,PR,MAPP='NEC',PROD=CPROD,TXT_TAGS=['PERIOD','MATH'],VERBOSE=VERBOSE,/CURRENT,/ADD_NAME,IMG_POS=[0,0,0.333,1]
            IF DR NE [] THEN PRODS_2PNG,DR,MAPP='NEC',PROD=CPROD,TXT_TAGS=['PERIOD','MATH'],VERBOSE=VERBOSE,/CURRENT,/ADD_NAME,IMG_POS=[.333,0,0.666,1]
            IF FR NE [] THEN PRODS_2PNG,FR,MAPP='NEC',PROD=CPROD,TXT_TAGS=['PERIOD','MATH'],VERBOSE=VERBOSE,/CURRENT,/ADD_NAME,IMG_POS=[.666,0,1,1]
            W.SAVE, PNGFILE
            W.CLOSE
            PFILE, PNGFILE
          ENDFOR
        ENDFOR
        SKIP:
  
  
  
        FOR S=0, N_ELEMENTS(SATS)-1 DO BEGIN
          INTERP_CHL = 1
          INTERP_PAR = 0
          PERIOD = 'D'
          TXT_TAGS = 'DATE_CREATED'
          CHL_ALG='OCI'
          PPD_ALG='VGPM2'
          SAT = SATS(S)
          CASE SAT OF
            'MODISA':  PREFIX='A'
            'SEAWIFS': PREFIX='S'
          ENDCASE
          FOR P=0, N_ELEMENTS(CHL_ALG)-1 DO BEGIN
            PSAT = REPLACE(SAT,'_PAN','')
            CHL_PROD = []
            CASE CHL_ALG(P) OF
              'OCI': BEGIN & SPROD = 'CHLOR_A-OCI' & NPROD = 'CHL' & CHL_PROD = 'chlor_a' & END
              'OCX': BEGIN & SPROD = 'CHLOR_A-OCX' & NPROD = 'CHL' & CHL_PROD = 'chl_ocx' & END
              'PAN': BEGIN & SPROD = 'CHLOR_A-PAN' & NPROD = 'CHL_PAN' & END
            ENDCASE
  
            DIR_NC     = !S.OC  + SAT + SL + AMAP + SL + 'NC' + SL
            DIR_SAV    = !S.OC  + SAT + SL + AMAP + SL + 'SAVE' + SL
            DIR_INTERP = !S.OC  + SAT + SL + AMAP + SL + 'INTERP_SAVE' + SL
            DIR_PP     = !S.PP + SAT + SL + AMAP + SL + 'SAVE' + SL + APROD + SL
            DIR_OUT    = !S.PP + SAT + SL + OMAP + SL + 'INPUT_DATA_COMPOSITES' + SL + APROD + SL & DIR_TEST, DIR_OUT
            DIR        = DIR_NC ; DEFAULTS
  
            VFILES = FLS(DIR_PP + 'D_*.SAV',DATERANGE=DATERANGE,COUNT=VNUM)
  
            IF VNUM EQ 0 THEN STOP
  
            FOR FTH=0L, N_ELEMENTS(VFILES)-1 DO BEGIN
              VFILE  = VFILES(FTH)
              FP_PPD = PARSE_IT(VFILE,/ALL)
              INFILES = STRUCT_READ(VFILE,TAG='INFILE')
  
              FP_IN = PARSE_IT(INFILES,/ALL)
              CFILE = INFILES[WHERE(FP_IN.PROD EQ 'CHLOR_A')]
              RFILE = INFILES[WHERE(FP_IN.PROD EQ 'PAR')]
              SFILE = INFILES[WHERE(FP_IN.PROD EQ 'SST')]
  
              IF MIN(FILE_TEST(INFILES)) EQ 0 THEN STOP
  
              PNGFILE = DIR_OUT+REPLACE(FP_PPD.NAME,FP_PPD.MAP,OMAP)+'-INFILES.PNG'
              IF FILE_MAKE([VFILE,CFILE,RFILE,SFILE],PNGFILE,OVERWRITE=OVERWRITE) EQ 0 THEN CONTINUE
  
              W = WINDOW(DIMENSIONS=[800,800],BUFFER=BUFFER)
              PRODS_2PNG,VFILE,MAPP='NEC',PROD='PPD',    TXT_TAGS=TXT_TAGS,/ADD_NAME,VERBOSE=VERBOSE,/CURRENT,IMG_POS=[0,0.5,0.5,1]
              PRODS_2PNG,CFILE,MAPP='NEC',PROD='CHLOR_A',TXT_TAGS=TXT_TAGS,/ADD_NAME,VERBOSE=VERBOSE,/CURRENT,IMG_POS=[0.5,0.5,1,1]
              PRODS_2PNG,SFILE,MAPP='NEC',PROD='SST',    TXT_TAGS=TXT_TAGS,/ADD_NAME,VERBOSE=VERBOSE,/CURRENT,IMG_POS=[0,0,0.5,0.5]
              PRODS_2PNG,RFILE,MAPP='NEC',PROD='PAR',    TXT_TAGS=TXT_TAGS,/ADD_NAME,VERBOSE=VERBOSE,/CURRENT,IMG_POS=[0.5,0,1,0.5]
              W.SAVE, PNGFILE
              W.CLOSE
              PFILE, PNGFILE
            ENDFOR
          ENDFOR
  
          continue
          CPROD = 'PPD-VGPM2'
          CH = FLS(!S.PP + SATS(S) + SL + AMAP + SL + 'SAVE' + SL + CPROD + SL + 'D*SAV',DATERANGE=['20020101','20020714'])
          PDIR = !S.PP + SATS(S) + SL + 'NEC' + SL + 'PNGS' + SL + CPROD + SL & DIR_TEST, PDIR
          ;  FOR N=0, N_ELEMENTS(CH)-1 DO PRODS_2PNG,CH(N),MAPP='NEC',PROD='PPD',DATA_TAG=DATA_TAG,LOG=LOG,DIR_OUT=PDIR,/OVERWRITE,BUFFER=BUFFER,TXT_TAGS='PERIOD',VERBOSE=VERBOSE;
  
          CPROD = 'CHLOR_A-OCI'
          CH = FLS(!S.OC + SATS(S) + SL + AMAP + SL + 'INTERP_SAVE' + SL + CPROD + SL + 'D_2009010*SAV')
          PDIR = !S.OC + SATS(S) + SL + 'NEC' + SL + 'INTERP_PNGS' + SL + CPROD + SL & DIR_TEST, PDIR
          FOR N=0, N_ELEMENTS(CH)-1 DO PRODS_2PNG,CH(N),MAPP='NEC',PROD='CHLOR_A',DATA_TAG=DATA_TAG,LOG=LOG,DIR_OUT=PDIR,/OVERWRITE,BUFFER=BUFFER,TXT_TAGS='PERIOD',VERBOSE=VERBOSE;
  
  
          CPROD = 'CHLOR_A'
          CH = FLS(!S.OC + SATS(S) + SL + AMAP + SL + 'NC' + SL + 'CHL' + SL + 'A*CHL*nc',DATERANGE=[20090101,20091231])
          PDIR = !S.OC + SATS(S) + SL + 'NEC' + SL + 'PNGS' + SL + CPROD + SL & DIR_TEST, PDIR
  
          FOR N=0, N_ELEMENTS(CH)-1 DO BEGIN
            PR = REPLACE(CH(N),'CHL','PAR')
            IF EXISTS(PR) EQ 0 THEN CONTINUE
            W = WINDOW(DIMENSIONS=[1024,512],BUFFER=BUFFER)
            PRODS_2PNG,CH(N),MAPP='NEC',PROD=CPROD,DATA_TAG=DATA_TAG,LOG=LOG,TXT_TAGS='PERIOD',VERBOSE=VERBOSE,/CURRENT,IMG_POS=[0,0,0.5,1]
            PRODS_2PNG,PR   ,MAPP='NEC',PROD='PAR',DATA_TAG=DATA_TAG,LOG=LOG,TXT_TAGS='PERIOD',VERBOSE=VERBOSE,/CURRENT,IMG_POS=[.5,0,1,1]
            W.SAVE, PDIR + (FILE_PARSE(PR)).NAME + '.PNG'
            W.CLOSE
          ENDFOR
  
          CH = FLS(!S.OC + SATS(S) + SL + AMAP + SL + 'STATS' + SL + CPROD + SL + ['M_','A_'] + '*SAV')
          PDIR = !S.OC + SATS(S) + SL + 'NEC' + SL + 'STATS_PNGS' + SL + CPROD + SL & DIR_TEST, PDIR
          FOR N=0, N_ELEMENTS(CH)-1 DO PRODS_2PNG,CH(N),MAPP='NEC',PROD=CPROD,DATA_TAG=DATA_TAG,LOG=LOG,DIR_OUT=PDIR,/OVERWRITE,BUFFER=BUFFER,TXT_TAGS='PERIOD',VERBOSE=VERBOSE;
  
          CH = FLS(!S.OC + SATS(S) + SL + AMAP + SL + 'INTERP_SAVES' + SL + CPROD + SL + 'D_*SAV')
          PDIR = !S.OC + SATS(S) + SL + 'NEC' + SL + 'INTERP_PNGS' + SL + CPROD + SL & DIR_TEST, PDIR
          FOR N=0, N_ELEMENTS(CH)-1 DO PRODS_2PNG,CH(N),MAPP='NEC',PROD=CPROD,DATA_TAG=DATA_TAG,LOG=LOG,DIR_OUT=PDIR,/OVERWRITE,BUFFER=BUFFER,TXT_TAGS='PERIOD',VERBOSE=VERBOSE;
  
  
          CPROD = 'PAR'
          CH = FLS(!S.OC + SATS(S) + SL + AMAP + SL + 'NC' + SL + 'A*PAR*nc',DATERANGE=[20160101,20171231])
          PDIR = !S.OC + SATS(S) + SL + 'NEC' + SL + 'PNGS' + SL + CPROD + SL & DIR_TEST, PDIR
          FOR N=0, N_ELEMENTS(CH)-1 DO PRODS_2PNG,CH(N),MAPP='NEC',PROD='PAR',DATA_TAG=DATA_TAG,LOG=LOG,DIR_OUT=PDIR,/OVERWRITE,BUFFER=BUFFER,TXT_TAGS='PERIOD',VERBOSE=VERBOSE;
  
          CPROD = 'PAR'
          CH = FLS(!S.OC + SATS(S) + SL + AMAP + SL + 'STATS' + SL + CPROD + SL + ['M_','A_'] + '*SAV')
          PDIR = !S.OC + SATS(S) + SL + 'NEC' + SL + 'STATS_PNGS' + SL + CPROD + SL & DIR_TEST, PDIR
          FOR N=0, N_ELEMENTS(CH)-1 DO PRODS_2PNG,CH(N),MAPP='NEC',PROD='PAR',DATA_TAG=DATA_TAG,LOG=LOG,DIR_OUT=PDIR,/OVERWRITE,BUFFER=BUFFER,TXT_TAGS='PERIOD',VERBOSE=VERBOSE;
  
  
          stop
          PP = FLS(!S.PP + SATS(S) + SL + AMAP + SL + 'STATS' + SL + APROD + SL + ['M_','A_'] + '*SAV')
          PDIR = !S.PP + SATS(S) + SL + 'NEC' + SL + 'STATS_PNGS' + SL + APROD + SL & DIR_TEST, PDIR
  
          FOR N=0, N_ELEMENTS(PP)-1 DO PRODS_2PNG,PP(N),MAPP='NEC',PROD='PPD',DATA_TAG=DATA_TAG,LOG=LOG,DIR_OUT=PDIR,MARGIN=0,BUFFER=BUFFER,/ADD_NAME,TXT_TAGS=['PERIOD','SENSOR'],VERBOSE=VERBOSE;
  
          SPP = FLS(!S.PP + SATS(S) + SL + AMAP + SL + 'ANOMS' + SL + APROD + SL + 'M*A_*')
          PDIR = !S.PP + SATS(S) + SL + 'NEC' + SL + 'ANOM_PNGS' + SL + APROD + SL & DIR_TEST, PDIR
          FOR N=0, N_ELEMENTS(SPP)-1 DO PRODS_2PNG,SPP(N),MAPP='NEC',PROD='RATIO',DATA_TAG=DATA_TAG,LOG=LOG,DIR_OUT=PDIR,MARGIN=0,CB_TITLE='Anomaly Ratio',TXT_TAGS='PERIOD',BUFFER=BUFFER,VERBOSE=VERBOSE;===> MAIN INPUTS
  
  
          OUTLINE = []
          FOR F=0, N_ELEMENTS(NAMES)-1 DO BEGIN
            POS = WHERE(TAG_NAMES(SHPS) EQ STRUPCASE(NAMES(F)),/NULL)
            POS2 = WHERE(TAG_NAMES(SHPS.(POS)) EQ STRUPCASE(NAMES(F))+'_OUTLINE',/NULL)
            OUTLINE = [OUTLINE,SHPS.(POS).(POS2)]
          ENDFOR
          stop
          SUBAREAS_EXTRACT, SPP, SHP_FILES=SUBAREAFILES,INIT=INIT,VERBOSE=VERBOSE ; SAVEFILE=ECOS_SAV,
          stop
          ;  IF FILE_MAKE(ECOS_SAV,ECOS_CSV) EQ 1 THEN SAVE_2CSV,ECOS_SAV
  
  
          ; W = WINDOW(DIMENSIONS=[1024,1024])
          ;     PRODS_2PNG,PP[1],MAPP='NEC',PROD='PPD',BUFFER=0,/CURRENT,IMG_POS=[0,0,.5,.5],/VERBOSE,DIR_OUT=PDIR,DATA_TAG=DATA_TAG,LOG=LOG,/ADD_AUTH,/ADD_NAME,TXT_TAGS=['PERIOD','SENSOR'];,/RETURN_IMAGE,OBJ=OBJ,VERBOSE=VERBOSE
  
  
  
        ENDFOR
      ENDIF ; PERCENT PRODUCTION
  
  
      stop
  
      IF KEY(SST_FILES_FOR_VINCE) THEN BEGIN
        BUFFER = 1
        PERIOD = 'M'
        STAT = 'MEAN'
        MP = 'NES'
        L = READ_LANDMASK(MP,/STRUCT)
  
        ASST = FLS(!S.DATASETS + 'SST-AVHRR-4KM' + SL + MP + SL + 'STATS' + SL + 'SST' + SL + PERIOD + '_*.SAV',DATERANGE=['1982','2002'])
        MSST = FLS(!S.DATASETS + 'SST-MUR-1KM'   + SL + MP + SL + 'STATS' + SL + 'SST' + SL + PERIOD + '_*.SAV',DATERANGE=['2002','2017'])
  
        DIR_OUT = DIR_PRO + 'DATA' + SL
        DIR_CDF = DIR_OUT + 'NETCDF' + SL
        DIR_PNG = DIR_OUT + 'PNG' + SL
        DIR_TEST, [DIR_CDF,DIR_PNG]
  
        WRITE_NC, ASST,  OUTPROD='SST', DIR_OUT=DIR_CDF+'AVHRR'+SL, LONLAT=1, MAP_OUT='NES', OVERWRITE=OVERWRITE, /VERBOSE
        WRITE_NC, MSST,  OUTPROD='SST', DIR_OUT=DIR_CDF+'MUR'+SL,   LONLAT=1, MAP_OUT='NES', OVERWRITE=OVERWRITE, /VERBOSE
  
        NFILES = FILE_SEARCH(DIR_CDF + ['AVHRR','MUR'] + SL + '*.NC',COUNT=COUNT)
        nfiles = reverse(nfiles)
        FOR I=0, COUNT-1 DO BEGIN
          FPROD = VALIDS('PRODS','SST')
          PNGFILE = REPLACE(NFILES(I),[DIR_CDF,'.NC'],[DIR_PNG,'.PNG'])
          FP = FILE_PARSE(PNGFILE) & DIR_TEST, FP.DIR
          IF FILE_MAKE(NFILES(I),PNGFILE,OVERWRITE=OVERWRITE) EQ 0 THEN CONTINUE
          D = READ_NC(NFILES(I))
          T = D.SD.TIME
          TAG = WHERE_STRING(TAG_NAMES(D.SD),FPROD+'_'+STAT[0])
          B = PRODS_2BYTE(D.SD.(TAG).IMAGE,PROD='SST')
          IF IDLTYPE(L) NE 'STRING' THEN BEGIN
            B(L.LAND) = 253
            B(L.COAST) = 0
          ENDIF
          W = WINDOW(DIMENSIONS=[684,784],BUFFER=BUFFER)
          IM = IMAGE(B,RGB_TABLE=CPAL_READ('PAL_BR'),MARGIN=0,POSITION=[0,100,684,784],BUFFER=BUFFER,/CURRENT,/DEVICE)
          PRODS_COLORBAR, FPROD, IMG=IM, LOG=1, ORIENTATION=0, TITLE=TITLE, FONT_SIZE=12, POSITION=[50,55,634,95], TEXTPOS=0, /DEVICE, PAL='PAL_BR'
          TXT = TEXT(10,720,'Monthly Mean!C'+DATE_FORMAT(T.YEAR_START+T.MONTH_START+T.DAY_START,/DAY) + ' to ' + DATE_FORMAT(T.YEAR_END+T.MONTH_END+T.DAY_END,/DAY),FONT_SIZE=16,FONT_STYLE='BOLD',/DEVICE)
          W.SAVE, PNGFILE
          W.CLOSE
          PFILE, PNGFILE,/W
        ENDFOR
      ENDIF
      STOP
    ENDIF ; SOE_2018

; ********************************************
    IF KEY(SOE_2017) THEN BEGIN
; ********************************************
      SNAME = 'SOE_2017'
      PRINT, 'Running: ' + SNAME
      SWITCHES,SOE_2017,STOPP=STOPP,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,INIT=INIT,DATASETS=DATASETS,R_FILES=R_FILES,R_DATASETS=R_DATASETS,R_MAPS=R_MAPS,DATERANGE=DATERANGE
  
      VERSION = 'V2017_1'
      FINAL_DATA    = 'Y'
      COMPARE_PLOTS = ''
  
      IF KEY(FINAL_DATA) THEN BEGIN
        BUFFER = 1
  
        DATERANGE = ['1998','2016']
        MAP_IN  = 'L3B2'
        MAP_OUT = 'NEC'
        CPROD = 'CHLOR_A'
        PPROD = 'PPD-VGPM2'
        CALGS = ['PAN','OCI']
        FILES = []
        SERVERS  = [!S.SEADAS,!S.MODIS,!S.DATASETS]
        DATASETS = ['SEAWIFS','MODISA','SA_MERGE']
  
        FOR A=0, N_ELEMENTS(CALGS)-1 DO BEGIN
          FOR D=0, N_ELEMENTS(DATASETS)-1 DO BEGIN
            IF CALGS(A) EQ 'PAN' THEN ALGADD = '_PAN' ELSE ALGADD = ''
            IF DATASETS(D) EQ 'SA_MERGE' THEN CONTINUE
            FILES = [FILES,FLS(SERVERS(D) +'OC-'+DATASETS(D)+'-1KM'+SL+MAP_IN+SL+'STATS'+SL+CPROD+'-'+CALGS(A)+SL+['A_*','M_*']+CPROD+'-'+CALGS(A)+'-STATS.SAV',DATERANGE=DATERANGE),FLS(SERVERS(D) +'OC-'+DATASETS(D)+'-1KM'+SL+MAP_IN+SL+'STATS'+SL+CPROD+SL+['ANNUAL*','MONTH*']+CPROD+'-STATS.SAV')]
            FILES = [FILES,FLS(SERVERS(D) +'OC-'+DATASETS(D)+'-1KM'+SL+MAP_IN+SL+'ANOMS'+SL+CPROD+'-'+CALGS(A)+SL+['A*ANNUAL*']+CPROD+'-'+CALGS(A)+'-RATIO.SAV',DATERANGE=DATERANGE)]
            FILES = [FILES,FLS(!S.PP  +'PP-'+DATASETS(D)+ALGADD+'-1KM'+SL+MAP_IN+SL+'STATS'+SL+PPROD+SL+['A_*','M_*']+PPROD+'-STATS.SAV',DATERANGE=DATERANGE),FLS(SERVERS(D) +'OC-'+DATASETS(D)+'-1KM'+SL+MAP_IN+SL+'STATS'+SL+PPROD+SL+['ANNUAL*','MONTH*']+PPROD+'-STATS.SAV')]
            FILES = [FILES,FLS(!S.PP  +'PP-'+DATASETS(D)+ALGADD+'-1KM'+SL+MAP_IN+SL+'ANOMS'+SL+PPROD+SL+['A*ANNUAL*']+PPROD+'-RATIO.SAV',DATERANGE=DATERANGE)]
          ENDFOR
          FILES = FILES[WHERE(FILES NE '')]
          ECOS_SAV = DIR_ESR_DATA + 'CHL_PP_DATA_NES_ECOREGIONS.SAV'
          ECOS = []
  
          SUBAREA = 'NES_ECOREGIONS'
          NAMES    = ['NES','SS','GOM','GB','MAB'] + '_full'
          SUBAREAFILES = FLS(!S.IDL_SHAPEFILES + 'NES_ECOREGIONS' + SL + [NAMES] + '.shp')
          SUBTITLES = ['Northeast Shelf LME','Scotian Shelf','Gulf of Maine','Georges Bank','Mid-Atlantic Bight']
          READ_SHPFILE, SUBAREAFILES, MAPP=MAP_OUT, COLOR=COLOR, FILL=1, THICK=THICK, VERBOSE=VERBOSE, GET_RANGE=GET_RANGE, TAGNAME=TAGNAME, VALUE=VALUE, RANGE_LON=RANGE_LON, RANGE_LAT=RANGE_LAT, $
            STRUCT=STRUCT, NORMAL=NORMAL, DO_ALL=DO_ALL, AUTO=AUTO, LONS=LONS, LATS=LATS, AROUND=AROUND, PSYM=PSYM, SYMSIZE=SYMSIZE, _EXTRA=_EXTRA, OVERWRITE=OVERWRITE
          SHPS=STRUCT
          OUTLINE = []
          FOR F=0, N_ELEMENTS(NAMES)-1 DO BEGIN
            POS = WHERE(TAG_NAMES(SHPS) EQ STRUPCASE(NAMES(F)),/NULL)
            POS2 = WHERE(TAG_NAMES(SHPS.(POS)) EQ STRUPCASE(NAMES(F))+'_OUTLINE',/NULL)
            OUTLINE = [OUTLINE,SHPS.(POS).(POS2)]
          ENDFOR
  
          SUBAREAS_EXTRACT, FILES, SHP_FILES=SUBAREAFILES,SAVEFILE=ECOS_SAV,INIT=INIT,VERBOSE=VERBOSE
          IF FILE_MAKE(ECOS_SAV,ECOS_CSV) EQ 1 THEN SAVE_2CSV,ECOS_SAV
  
          ECODATA = IDL_RESTORE(ECOS_SAV)
          RESOLUTION=300
          L = READ_LANDMASK(MAP_OUT,/STRUCT)
          MS = MAPS_SIZE(MAP_OUT,PX=MPX,PY=MPY)
          LCOLOR = 252
          CCOLOR = 0
  
          COLORS = ['DARK_GRAY','BLUE','CYAN','RED','SPRING_GREEN']
          YEARS = ['1998','2016']
          SAX = DATE_AXIS([19970101,20170101],/YEAR,/YY_YEAR)
          SAS = DATE_AXIS([19980101,20160101],/YEAR,/YY_YEAR,STEP=2)
          AAX = DATE_AXIS([20200101,20201231],/MONTH,/FYEAR,/MID)
          PAL = 'PAL_BR'
  
          CPRODA = 'CHLOR_A-'+CALGS(A) & CPROD = 'CHLOR_A_0.1_10.0' & CRANGE = [0.4,1.4]
          PPRODA = 'PPD-VGPM2'         & PPROD = 'PPD_0.2_4.0'      & PRANGE = [0.2,1.0]
          CTITLE = UNITS('CHLOROPHYLL',       /NO_UNIT)+', '+UNITS('CHLOR_A',/NO_NAME,/NO_PAREN) & CTITLE = REPLACE(CTITLE,['(',')'],['','']) ; CTITLE = UNITS('CHLOROPHYLL')
          PTITLE = UNITS('PRIMARY_PRODUCTION',/NO_UNIT)+', '+UNITS('PPD',    /NO_NAME,/NO_PAREN) & PTITLE = REPLACE(PTITLE,['(',')'],['','']) ; PTITLE = UNITS('PRIMARY_PRODUCTION')
  
          FOR N=0, N_ELEMENTS(DATASETS)-1 DO BEGIN
            DATASET = DATASETS(N)
            IF DATASET EQ 'SA_MERGE' THEN BEGIN
              CHLD = !S.DATASETS + 'OC-SA-1KM' + SL + MAP_IN + SL
              PPDD = !S.PP      + 'PP-SA-1KM' + SL + MAP_IN + SL
              SDATA = ECODATA[WHERE(ECODATA.SENSOR EQ 'SEAWIFS' OR ECODATA.SENSOR EQ 'SEAWIFS'+ALGADD,/NULL)] & STMP = DATE_SELECT(SDATA.PERIOD,['1998','2007'],SUBS=SUBS1)
              MDATA = ECODATA[WHERE(ECODATA.SENSOR EQ 'MODISA'  OR ECODATA.SENSOR EQ 'MODISA' +ALGADD,/NULL)] & MTMP = DATE_SELECT(MDATA.PERIOD,['2008','2016'],SUBS=SUBS2)
              ECOS = [SDATA(SUBS1),MDATA(SUBS2)]
            ENDIF ELSE BEGIN
              CHLD = SERVERS(N) + 'OC-'+DATASET+'-1KM' + SL + MAP_IN + SL
              PPDD = !S.PP     + 'PP-'+DATASET+ALGADD+'-1KM' + SL + MAP_IN + SL
              ECOS = ECODATA[WHERE(ECODATA.SENSOR EQ DATASET OR ECODATA.SENSOR EQ DATASET+ALGADD,/NULL)]
              IF DATASET EQ 'SA' THEN ECOS = ECODATA[WHERE(ECODATA.SENSOR EQ 'SA' OR ECODATA.SENSOR EQ 'SA_PAN',/NULL)]
            ENDELSE
  
            CSTAT =  FLS(CHLD[0] + 'STATS' + SL + CPRODA + SL + 'ANNUAL_*-STATS.SAV') & APERIOD = (PARSE_IT(CSTAT)).PERIOD
            PSTAT =  FLS(PPDD[0] + 'STATS' + SL + PPRODA + SL + 'ANNUAL_*-STATS.SAV')
            PNGFILE = DIR_ESR_PLOTS + APERIOD + '-' + DATASET + '-' + MAP_OUT+ '-CHL_PPD-STATS-COMPOSITE_WITH_LINE_PLOT-DPI_'+NUM2STR(RESOLUTION)+'.PNG'
            IF FILE_MAKE([CSTAT,PSTAT,ECOS_SAV],PNGFILE,OVERWRITE=OVERWRITE) EQ 0 THEN CONTINUE
  
            IF FILE_MAKE(CSTAT,REPLACE(CSTAT,MAP_IN,MAP_OUT)) EQ 1 THEN CHL = STRUCT_READ(CSTAT,MAP_OUT=MAP_OUT) $
            ELSE CHL = STRUCT_READ(REPLACE(CSTAT,MAP_IN,MAP_OUT))
            IF FILE_MAKE(PSTAT,REPLACE(PSTAT,MAP_IN,MAP_OUT)) EQ 1 THEN PPD = STRUCT_READ(PSTAT,MAP_OUT=MAP_OUT) $
            ELSE PPD = STRUCT_READ(REPLACE(PSTAT,MAP_IN,MAP_OUT))
  
            BCHL = PRODS_2BYTE(CHL,PROD=CPROD) & BCHL(L.LAND) = LCOLOR & BCHL(L.COAST) = CCOLOR & BCHL(OUTLINE) = CCOLOR
            BPPD = PRODS_2BYTE(PPD,PROD=PPROD) & BPPD(L.LAND) = LCOLOR & BPPD(L.COAST) = CCOLOR & BPPD(OUTLINE) = CCOLOR
  
            DIMS = [1024,1034]
            W = WINDOW(DIMENSIONS=DIMS,BUFFER=BUFFER)
            TXC = TEXT(512,995,STRJOIN(YEARS,'-'),/DEVICE,FONT_SIZE=20,ALIGNMENT=0.5)
  
            MAR  = 25
            CPOS = [    MAR,512+MAR,512 -MAR,1012-MAR] & CBPOS = [    MAR*2,512,512 -MAR*2,512+MAR]
            PPOS = [512+MAR,512+MAR,1024-MAR,1012-MAR] & PBPOS = [512+MAR*2,512,1024-MAR*2,512+MAR]
            IMC = IMAGE(BCHL,RGB_TABLE=CPAL_READ(PAL),MARGIN=0,POSITION=CPOS,/DEVICE,BUFFER=BUFFER,/CURRENT)
            IMP = IMAGE(BPPD,RGB_TABLE=CPAL_READ(PAL),MARGIN=0,POSITION=PPOS,/DEVICE,BUFFER=BUFFER,/CURRENT)
            PRODS_COLORBAR, CPROD, IMG=IMC, LOG=1, ORIENTATION=0, TITLE=CTITLE, FONT_SIZE=14, POSITION=CBPOS, TEXTPOS=0, /DEVICE, PAL=PAL
            PRODS_COLORBAR, PPROD, IMG=IMP, LOG=1, ORIENTATION=0, TITLE=PTITLE, FONT_SIZE=14, POSITION=PBPOS, TEXTPOS=0, /DEVICE, PAL=PAL
  
            LMAR = 50
            LDIF = 18
            LCPOS = [    LMAR*1.5,LMAR,512 -LMAR*0.5,512-LMAR*1.5]
            LPPOS = [512+LMAR*1.5,LMAR,1024-LMAR*0.5,512-LMAR*1.5]
            TXTC = LMAR*2
            TXTP = 512+LMAR*2
            TXTY = 512-LMAR*2
  
            CTITLE = UNITS('CHLA',/NO_UNIT) + ' ' + UNITS('CHLOR_A',/NO_NAME)
            PTITLE = 'Primary productivity ' + UNITS('PPD',/NO_NAME)
  
            CP = PLOT(SAX.JD,CRANGE,XRANGE=SAX.JD,XTICKNAME=SAS.TICKNAME,XTICKVALUES=SAS.TICKV,YRANGE=CRANGE,XMINOR=0,XTICKLEN=0.03,YTICKLEN=0.03,YMINOR=0,AXIS_STYLE=1,/CURRENT,/DEVICE,POSITION=LCPOS,/NODATA,YTITLE=CTITLE)
            IF DATASET EQ 'SA_MERGE' THEN BEGIN
              SALINE = PLOT(DATE_2JD([2007,2007]),CRANGE,XRANGE=SAX.JD,YRANGE=CRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=5,THICK=2,COLOR='GREY',/CURRENT,/DEVICE,POSITION=LCPOS,/OVERPLOT)
              SEATXT = TEXT(DATE_2JD(200606),CRANGE[0]*1.1,'SeaWiFS',   /DATA,ALIGNMENT=1,COLOR='GREY',FONT_SIZE=11,FONT_NAME='HELVITICA',TARGET=CP)
              MODTXT = TEXT(DATE_2JD(200706),CRANGE[0]*1.1,'MODIS-Aqua',/DATA,ALIGNMENT=0,COLOR='GREY',FONT_SIZE=11,FONT_NAME='HELVITICA',TARGET=CP)
            ENDIF
            PLOTPERIOD = 'A_'
            FOR C=0, N_ELEMENTS(NAMES)-1 DO BEGIN
              OK = WHERE(ECOS.SUBAREA EQ STRUPCASE(NAMES(C)) AND ECOS.PROD+'-'+ECOS.ALG EQ CPRODA AND ECOS.AMEAN NE MISSINGS(0.0) AND STRMID(ECOS.PERIOD,0,STRLEN(PLOTPERIOD)) EQ PLOTPERIOD AND ECOS.MATH EQ 'STATS',COUNT)
              IF COUNT LE 1 THEN STOP
              CDATA = ECOS[OK] & CDATA = CDATA[SORT(PERIOD_2JD(CDATA.PERIOD))]
              CMEAN = MEAN(FLOAT(CDATA.AMEAN),/NAN)
              LDATA = LOWESS(DATE_2YEAR(PERIOD_2DATE(CDATA.PERIOD)),FLOAT(CDATA.AMEAN),WIDTH=7)
              CP0 = PLOT(PERIOD_2JD(CDATA.PERIOD),FLOAT(CDATA.AMEAN),XRANGE=SAX.JD,YRANGE=CRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=6,COLOR=COLORS(C),SYMBOL='CIRCLE',SYM_SIZE=0.8,/SYM_FILLED,/CURRENT,/DEVICE,POSITION=LCPOS,/OVERPLOT)
              CPL = PLOT(PERIOD_2JD(CDATA.PERIOD),LDATA,             XRANGE=SAX.JD,YRANGE=CRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=0,COLOR=COLORS(C),                THICK=2,                 /CURRENT,/DEVICE,POSITION=LCPOS,/OVERPLOT)
              TXT = TEXT(TXTC, TXTY-(LDIF*C),REPLACE(NAMES(C),'_full','')+' = ' + NUM2STR(CMEAN,DECIMALS=2),COLOR=COLORS(C),FONT_SIZE=12,FONT_NAME='HELVITICA',FONT_STYLE='BOLD',/DEVICE)
            ENDFOR
            XAXIS = AXIS('X',LOCATION=MAX(CP.YRANGE),MAJOR=0,TARGET=CP,MINOR=0)
            YAXIS = AXIS('Y',LOCATION=MAX(SAX.JD),   MAJOR=0,TARGET=CP,MINOR=0)
  
            PP = PLOT(SAX.JD,PRANGE,XRANGE=SAX.JD,XTICKNAME=SAS.TICKNAME,XTICKVALUES=SAS.TICKV,YRANGE=PRANGE,XMINOR=0,XTICKLEN=0.03,YTICKLEN=0.03,YMINOR=0,AXIS_STYLE=1,/CURRENT,/DEVICE,POSITION=LPPOS,/NODATA,YTITLE=PTITLE)
            IF DATASET EQ 'SA_MERGE' THEN BEGIN
              SALINE = PLOT(DATE_2JD([2007,2007]),PRANGE,XRANGE=SAX.JD,YRANGE=CRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=5,THICK=2,COLOR='GREY',/CURRENT,/DEVICE,POSITION=LCPOS,/OVERPLOT)
              SEATXT = TEXT(DATE_2JD(200606),PRANGE[0]*1.1,'SeaWiFS',   /DATA,ALIGNMENT=1,COLOR='GREY',FONT_SIZE=11,FONT_NAME='HELVITICA',TARGET=PP)
              MODTXT = TEXT(DATE_2JD(200706),PRANGE[0]*1.1,'MODIS-Aqua',/DATA,ALIGNMENT=0,COLOR='GREY',FONT_SIZE=11,FONT_NAME='HELVITICA',TARGET=PP)
            ENDIF
            FOR C=0, N_ELEMENTS(NAMES)-1 DO BEGIN
              OK = WHERE(ECOS.SUBAREA EQ STRUPCASE(NAMES(C)) AND ECOS.PROD+'-'+ECOS.ALG EQ PPRODA AND ECOS.AMEAN NE MISSINGS(0.0) AND STRMID(ECOS.PERIOD,0,STRLEN(PLOTPERIOD)) EQ PLOTPERIOD AND ECOS.MATH EQ 'STATS',COUNT)
              IF COUNT LE 1 THEN STOP
              PDATA = ECOS[OK] & PDATA = PDATA[SORT(PERIOD_2JD(PDATA.PERIOD))]
              PMEAN = MEAN(FLOAT(PDATA.AMEAN),/NAN)
              LDATA = LOWESS(DATE_2YEAR(PERIOD_2DATE(PDATA.PERIOD)),FLOAT(PDATA.AMEAN),WIDTH=7)
              PP0 = PLOT(PERIOD_2JD(PDATA.PERIOD),FLOAT(PDATA.AMEAN),XRANGE=SAX.JD,YRANGE=PRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=6,COLOR=COLORS(C),SYMBOL='CIRCLE',SYM_SIZE=0.8,/SYM_FILLED,/CURRENT,/DEVICE,POSITION=LPPOS,/OVERPLOT)
              PPL = PLOT(PERIOD_2JD(PDATA.PERIOD),LDATA,             XRANGE=SAX.JD,YRANGE=PRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=0,COLOR=COLORS(C),                THICK=2,                 /CURRENT,/DEVICE,POSITION=LPPOS,/OVERPLOT)
              TXT = TEXT(TXTP, TXTY-(LDIF*C),REPLACE(NAMES(C),'_full','')+' = ' + NUM2STR(PMEAN,DECIMALS=2),COLOR=COLORS(C),FONT_SIZE=12,FONT_NAME='HELVITICA',FONT_STYLE='BOLD',/DEVICE)
            ENDFOR
            IF DATASET EQ 'SA_MERGE' THEN SALINE = PLOT(DATE_2JD([2007,2007]),CRANGE,/OVERPLOT,LINESTYLE=1,COLOR='LIGHT_GREY')
            XAXIS = AXIS('X',LOCATION=MAX(PP.YRANGE),MAJOR=0,TARGET=PP,MINOR=0)
            YAXIS = AXIS('Y',LOCATION=MAX(SAX.JD),   MAJOR=0,TARGET=PP,MINOR=0)
  
            PFILE, PNGFILE, /W
            W.SAVE,PNGFILE,RESOLUTION=RESOLUTION
            W.CLOSE
          ENDFOR
        ENDFOR ; ALGS LOOP
        stop
  
        CSCALE = '.1_10'
        PSCALE = '.2_4'
        CPROD = 'CHLOR_A'
        PPROD = 'PPD'
        CSTAT = 'MEAN'
        PSTAT = 'MEAN'
        AX = SAX
        AS = SAS
        CRANGE = [0.4,1.4]
        PRANGE = [0.2,1.2]
        PLOTPERIOD = 'A_'
  
        CANOMS =  FLS(CHLD[0] + 'ANOMS' + SL + CHLPROD + SL + 'A_*ANNUAL*-RATIO.SAV',DATERANGE=[YEARS[0],YEARS[1]]) & FC = PARSE_IT(CANOMS)
        PANOMS =  FLS(PPDD[0] + 'ANOMS' + SL + PPDPROD + SL + 'A_*ANNUAL*-RATIO.SAV',DATERANGE=[YEARS[0],YEARS[1]]) & FA = PARSE_IT(PANOMS)
  
        FOR N=0, N_ELEMENTS(CANOMS)-1 DO BEGIN
          CANOM = CANOMS(N)
          APERIOD = FC(N).PERIOD
          YEAR = DATE_2YEAR(PERIOD_2DATE(APERIOD))
          PAL    = 'PAL_ANOM_GREY'
          CTITLE = 'Chlorophyll ratio anomaly'
          PTITLE = 'Primary production ratio anomaly'
          TXT = STRMID(APERIOD,2,4)
          CPROD = 'RATIO'
          PPROD = 'RATIO'
          CSTAT = 'MEAN-RATIO'
          PSTAT = 'RATIO'
          AX = AAX
          AS = AAX
          CRANGE = [0.0,3.0]
          PRANGE = [0.0,1.5]
          PLOTPERIOD = 'M_' + STRMID(APERIOD,2,4)
  
          OK = WHERE(FA.PERIOD EQ APERIOD,COUNT)
          IF COUNT EQ 1 THEN PANOM = PANOMS[OK] ELSE PANOM = []
          PNGFILE = DIR_ESR_PLOTS + APERIOD + '-' + MAP_OUT+ '-CHL_PPD_COMPOSITE_WITH_LINE_PLOT'+FILEEXTRA+'-DPI_'+NUM2STR(RESOLUTION)+'.PNG'
          IF FILE_MAKE([CANOMS(N),PANOM],PNGFILE,OVERWRITE=OVERWRITE) EQ 0 THEN CONTINUE
  
          CHL = STRUCT_READ(CANOM,STRUCT=CSTRUCT,MAP_OUT=MAP_OUT)
          PPD = STRUCT_READ(PANOM,STRUCT=PSTRUCT,MAP_OUT=MAP_OUT)
  
          BCHL = PRODS_2BYTE(CHL,PROD=CPROD) & BCHL(L.LAND) = LCOLOR & BCHL(L.COAST) = CCOLOR
          BPPD = PRODS_2BYTE(PPD,PROD=PPROD) & BPPD(L.LAND) = LCOLOR & BPPD(L.COAST) = CCOLOR
  
          DIMS = [1024,1034]
          W = WINDOW(DIMENSIONS=DIMS,BUFFER=BUFFER)
          TXC = TEXT(512,995,TXT,/DEVICE,FONT_SIZE=20,ALIGNMENT=0.5)
  
          MAR  = 25
          CPOS = [    MAR,512+MAR,512 -MAR,1012-MAR] & CBPOS = [    MAR*2,512,512-MAR*4,1012-MAR*2]
          PPOS = [512+MAR,512+MAR,1024-MAR,1012-MAR] & PBPOS = [512+MAR*2,512,512-MAR*4,1012-MAR*2]
          IMC = IMAGE(BCHL,RGB_TABLE=CPAL_READ(PAL),MARGIN=0,IMG_POSITION=CPOS,BUFFER=BUFFER,/CURRENT)
          PRODS_COLORBAR, CCOLOR, IMG=IM, LOG=1, ORIENTATION=0, TITLE=CTITLE, FONT_SIZE=12, POSITION=CPOS, TEXTPOS=0, /DEVICE, PAL=PAL
          IMP = IMAGE(BPPD,RGB_TABLE=CPAL_READ(PAL),MARGIN=0,IMG_POSITION=PPOS,BUFFER=BUFFER,/CURRENT)
          PRODS_COLORBAR, PCOLOR, IMG=IM, LOG=1, ORIENTATION=0, TITLE=PTITLE, FONT_SIZE=12, POSITION=PPOS, TEXTPOS=0, /DEVICE, PAL=PAL
  
  
          MAR = 50
          DIF = 18
          CPOS = [    MAR*1.5,MAR,512 -MAR*0.5,512-MAR*1.5]
          PPOS = [512+MAR*1.5,MAR,1024-MAR*0.5,512-MAR*1.5]
          TXTC = MAR*2
          TXTP = 512+MAR*2
          TXTY = 512-MAR*2
  
          CTITLE = UNITS('CHLA',/NO_UNIT) + ' ' + UNITS('CHLOR_A',/NO_NAME)
          PTITLE = 'Primary productivity ' + UNITS('PPD',/NO_NAME)
  
          CP = PLOT(AX.JD,CRANGE,XRANGE=AX.JD,XTICKNAME=AS.TICKNAME,XTICKVALUES=AS.TICKV,YRANGE=CRANGE,XMINOR=0,XTICKLEN=0.03,YTICKLEN=0.03,YMINOR=0,AXIS_STYLE=1,/CURRENT,/DEVICE,POSITION=CPOS,/NODATA,YTITLE=CTITLE)
          FOR C=0, N_ELEMENTS(CODES)-1 DO BEGIN
            CPOSM = WHERE(TAG_NAMES(ECOS) EQ REPLACE(CHLPROD,'-','_')+'_MEAN')
            CPOSL = WHERE(TAG_NAMES(ECOS) EQ REPLACE(CHLPROD,'-','_')+'_LOWESS')
            OK = WHERE(ECOS.SUBAREA_CODE EQ CODES(C) AND ECOS.(CPOSM) NE MISSINGS(0.0) AND STRMID(ECOS.PERIOD,0,STRLEN(PLOTPERIOD)) EQ PLOTPERIOD)
            CDATA = ECOS[OK]
            CMEAN = MEAN(CDATA.(CPOSM),/NAN)
            CDATA = CDATA[SORT(PERIOD_2JD(CDATA.PERIOD))]
            IF APERIOD EQ 'MONTH' THEN CDATA = CDATA[SORT(DATE_2MONTH(PERIOD_2DATE(CDATA.PERIOD)))]
            IF APERIOD EQ 'ANNUAL' THEN BEGIN
              LDATA = LOWESS(DATE_2YEAR(PERIOD_2DATE(CDATA.PERIOD)),CDATA.(CPOSM),WIDTH=7)
              CP0 = PLOT(PERIOD_2JD(CDATA.PERIOD),CDATA.(CPOSM),XRANGE=AX.JD,YRANGE=CRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=6,COLOR=COLORS(C),SYMBOL='CIRCLE',SYM_SIZE=0.8,/SYM_FILLED,/CURRENT,/DEVICE,POSITION=CPOS,/OVERPLOT)
              ; CPL = PLOT(PERIOD_2JD(CDATA.PERIOD),LDATA,       XRANGE=AX.JD,YRANGE=CRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=0,COLOR=COLORS(C),                THICK=2,                 /CURRENT,/DEVICE,POSITION=CPOS,/OVERPLOT)
              CPL = PLOT(PERIOD_2JD(CDATA.PERIOD),CDATA.(CPOSL),XRANGE=AX.JD,YRANGE=CRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=0,COLOR=COLORS(C),                THICK=2,                 /CURRENT,/DEVICE,POSITION=CPOS,/OVERPLOT)
            ENDIF ELSE BEGIN
              LDATA = LOWESS(DATE_2MONTH(PERIOD_2DATE(CDATA.PERIOD)),CDATA.(CPOSM),WIDTH=7)
              CP0 = PLOT(JD_ADD(YDOY_2JD('2020',JD_2DOY(PERIOD_2JD(CDATA.PERIOD))),15,/DAY),CDATA.(CPOSM),XRANGE=AX.JD,YRANGE=CRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=6,COLOR=COLORS(C),SYMBOL='CIRCLE',SYM_SIZE=0.8,/SYM_FILLED,/CURRENT,/DEVICE,POSITION=CPOS,/OVERPLOT)
              ; CPL = PLOT(JD_ADD(YDOY_2JD('2020',JD_2DOY(PERIOD_2JD(CDATA.PERIOD))),15,/DAY),LDATA,       XRANGE=AX.JD,YRANGE=CRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=0,COLOR=COLORS(C),                THICK=2,                 /CURRENT,/DEVICE,POSITION=CPOS,/OVERPLOT)
              CPL = PLOT(JD_ADD(YDOY_2JD('2020',JD_2DOY(PERIOD_2JD(CDATA.PERIOD))),15,/DAY),CDATA.(CPOSL),XRANGE=AX.JD,YRANGE=CRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=0,COLOR=COLORS(C),                THICK=2,                 /CURRENT,/DEVICE,POSITION=CPOS,/OVERPLOT)
            ENDELSE
            TXT = TEXT(TXTC, TXTY-(DIF*C),NAMES(C)+' = ' + NUM2STR(CMEAN,DECIMALS=2),COLOR=COLORS(C),FONT_SIZE=12,FONT_NAME='HELVITICA',FONT_STYLE='BOLD',/DEVICE)
          ENDFOR
          XAXIS = AXIS('X',LOCATION=MAX(CP.YRANGE),MAJOR=0,TARGET=CP,MINOR=0)
          YAXIS = AXIS('Y',LOCATION=MAX(AX.JD), MAJOR=0,TARGET=CP,MINOR=0)
  
          PP = PLOT(AX.JD,PRANGE,XRANGE=AX.JD,XTICKNAME=AS.TICKNAME,XTICKVALUES=AS.TICKV,YRANGE=PRANGE,XMINOR=0,XTICKLEN=0.03,YTICKLEN=0.03,YMINOR=0,AXIS_STYLE=1,/CURRENT,/DEVICE,POSITION=PPOS,/NODATA,YTITLE=PTITLE)
          FOR C=0, N_ELEMENTS(CODES)-1 DO BEGIN
            PPOSM = WHERE(TAG_NAMES(ECOS) EQ REPLACE(PPDPROD,'-','_')+'_MEAN')
            PPOSL = WHERE(TAG_NAMES(ECOS) EQ REPLACE(PPDPROD,'-','_')+'_LOWESS')
            OK = WHERE(ECOS.SUBAREA_CODE EQ CODES(C) AND ECOS.(PPOSM) NE MISSINGS(0.0) AND STRMID(ECOS.PERIOD,0,STRLEN(PLOTPERIOD)) EQ PLOTPERIOD)
            PDATA = ECOS[OK]
            PMEAN = MEAN(PDATA.(PPOSM),/NAN)
            PDATA = PDATA[SORT(PERIOD_2JD(PDATA.PERIOD))]
            IF APERIOD EQ 'MONTH' THEN PDATA = PDATA[SORT(DATE_2MONTH(PERIOD_2DATE(PDATA.PERIOD)))]
            IF APERIOD EQ 'ANNUAL' THEN BEGIN
              ; LDATA = LOWESS(DATE_2YEAR(PERIOD_2DATE(PDATA.PERIOD)),PDATA.(PPOSM),WIDTH=7)
              PP0 = PLOT(PERIOD_2JD(PDATA.PERIOD),PDATA.(PPOSM),XRANGE=AX.JD,YRANGE=PRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=6,COLOR=COLORS(C),SYMBOL='CIRCLE',SYM_SIZE=0.8,/SYM_FILLED,/CURRENT,/DEVICE,POSITION=PPOS,/OVERPLOT)
              ;PPL = PLOT(PERIOD_2JD(PDATA.PERIOD),LDATA,       XRANGE=AX.JD,YRANGE=PRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=0,COLOR=COLORS(C),                THICK=2,                 /CURRENT,/DEVICE,POSITION=PPOS,/OVERPLOT)
              PPL = PLOT(PERIOD_2JD(PDATA.PERIOD),PDATA.(PPOSL),XRANGE=AX.JD,YRANGE=PRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=0,COLOR=COLORS(C),                THICK=2,                 /CURRENT,/DEVICE,POSITION=PPOS,/OVERPLOT)
            ENDIF ELSE BEGIN
              ;  LDATA = LOWESS(DATE_2MONTH(PERIOD_2DATE(PDATA.PERIOD)),PDATA.(PPOSM),WIDTH=7)
              PP0 = PLOT(JD_ADD(YDOY_2JD('2020',JD_2DOY(PERIOD_2JD(PDATA.PERIOD))),15,/DAY),PDATA.(PPOSM),XRANGE=AX.JD,YRANGE=PRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=6,COLOR=COLORS(C),SYMBOL='CIRCLE',SYM_SIZE=0.8,/SYM_FILLED,/CURRENT,/DEVICE,POSITION=PPOS,/OVERPLOT)
              ;  PPL = PLOT(JD_ADD(YDOY_2JD('2020',JD_2DOY(PERIOD_2JD(PDATA.PERIOD))),15,/DAY),LDATA,       XRANGE=AX.JD,YRANGE=PRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=0,COLOR=COLORS(C),                THICK=2,                 /CURRENT,/DEVICE,POSITION=PPOS,/OVERPLOT)
              PPL = PLOT(JD_ADD(YDOY_2JD('2020',JD_2DOY(PERIOD_2JD(PDATA.PERIOD))),15,/DAY),PDATA.(PPOSL),XRANGE=AX.JD,YRANGE=PRANGE,AXIS_STYLE=1,XMINOR=0,YMINOR=0,LINESTYLE=0,COLOR=COLORS(C),                THICK=2,                 /CURRENT,/DEVICE,POSITION=PPOS,/OVERPLOT)
            ENDELSE
            TXT = TEXT(TXTP, TXTY-(DIF*C),NAMES(C)+' = ' + NUM2STR(PMEAN,DECIMALS=2),COLOR=COLORS(C),FONT_SIZE=12,FONT_NAME='HELVITICA',FONT_STYLE='BOLD',/DEVICE)
          ENDFOR
          XAXIS = AXIS('X',LOCATION=MAX(PP.YRANGE),MAJOR=0,TARGET=PP,MINOR=0)
          YAXIS = AXIS('Y',LOCATION=MAX(AX.JD), MAJOR=0,TARGET=PP,MINOR=0)
  
          W.SAVE,PNGFILE,RESOLUTION=RESOLUTION
          W.CLOSE
        ENDFOR
      ENDIF ; FINAL_DATA
  
      IF KEY(COMPARE_PLOTS) THEN BEGIN
        MAP = 'NEC'
        L = READ_LANDMASK(MAP,/STRUCT)
  
        PERIOD_IN = 'D'
        PERIOD_OUT = 'M'
      ;  DATERANGE = ['1998','2016']
  
        IF DATASETS EQ [] THEN BEGIN
          DO_MODISA_NEW     = 0 & IF KEY(DO_MODISA_NEW)     THEN DATASETS = [DATASETS,'OC-MODISA-1KM']
          DO_MODISA_OLD     = 1 & IF KEY(DO_MODISA_OLD)     THEN DATASETS = [DATASETS,'OC-MODIS-LAC']
          DO_SEAWIFS_NEW    = 1 & IF KEY(DO_SEAWIFS_NEW)    THEN DATASETS = [DATASETS,'OC-SEAWIFS-1KM']
          DO_SEAWIFS_OLD    = 1 & IF KEY(DO_SEAWIFS_OLD)    THEN DATASETS = [DATASETS,'OC-SEAWIFS-MLAC']
  
          DO_PP_MODISA_NEW  = 1 & IF KEY(DO_PP_MODISA_NEW)  THEN DATASETS = [DATASETS,'PP-MODISA_PAN-1KM']
          DO_PP_MODISA_OLD  = 1 & IF KEY(DO_PP_MODISA_OLD)  THEN DATASETS = [DATASETS,'PP-MODIS_PAN-PAT-LAC']
          DO_PP_SEAWIFS_NEW = 1 & IF KEY(DO_PP_SEAWIFS_NEW) THEN DATASETS = [DATASETS,'PP-SEAWIFS_PAN-1KM']
          DO_PP_SEAWIFS_OLD = 1 & IF KEY(DO_PP_SEAWIFS_OLD) THEN DATASETS = [DATASETS,'PP-SEAWIFS_PAN-PAT-MLAC']
        ENDIF
  
        BUFFER = 0
  
        FOR NTH = 0L, N_ELEMENTS(DATASETS)-1 DO BEGIN
          DATASET = DATASETS[NTH]
          CASE DATASET OF
            'OC-MODISA-1KM':   BEGIN & SENSOR='MODISA'  & SERVER=!S.MODIS   & PRODS='CHLOR_A-PAN' & SUBDIR='L3B2' & END
            'OC-MODIS-LAC':    BEGIN & SENSOR='MODISA'  & SERVER=!S.ARCHIVE & PRODS='CHLOR_A-PAN' & SUBDIR='NEC'  & END
            'OC-SEAWIFS-1KM':  BEGIN & SENSOR='SEAWIFS' & SERVER=!S.SEADAS  & PRODS='CHLOR_A-PAN' & SUBDIR='L3B2' & END
            'OC-SEAWIFS-MLAC': BEGIN & SENSOR='SEAWIFS' & SERVER=!S.ARCHIVE & PRODS='CHLOR_A-PAN' & SUBDIR='NEC'  & END
  
            'PP-MODISA_PAN-1KM':       BEGIN & SENSOR='MODISA'  & SERVER=!S.PP     & PRODS='PPD-VGPM2' & SUBDIR='L3B2' & END
            'PP-MODIS_PAN-PAT-LAC':    BEGIN & SENSOR='MODISA'  & SERVER=!S.ARCHIVE & PRODS='PPD-VGPM2' & SUBDIR='NEC'  & END
            'PP-SEAWIFS_PAN-1KM':      BEGIN & SENSOR='SEAWIFS' & SERVER=!S.PP     & PRODS='PPD-VGPM2' & SUBDIR='L3B2' & END
            'PP-SEAWIFS_PAN-PAT-MLAC': BEGIN & SENSOR='SEAWIFS' & SERVER=!S.ARCHIVE & PRODS='PPD-VGPM2' & SUBDIR='NEC'  & END
          ENDCASE
  
          FOR PTH=0, N_ELEMENTS(PRODS)-1 DO BEGIN
            APROD = PRODS(PTH)
            DIR_AREAS  = !S.PROJECTS + 'ECOAP' + SL + 'SOE'  + SL + 'SUBAREAS' + SL       & DIR_TEST,DIR_AREAS
            DIR_STATS  = SERVER + DATASET + SL + SUBDIR + SL + 'STATS' + SL + APROD + SL
            DIR_ANOMS  = SERVER + DATASET + SL + SUBDIR + SL + 'ANOMS' + SL + APROD + SL
  
            FILES = FILE_SEARCH(DIR_ANOMS + 'A_*' + APROD + '*RATIO.SAV')
            FILES = [FILES,FILE_SEARCH(DIR_STATS + 'A_*' + APROD + ['*STATS.SAV','*MEAN.SAVE'])]
            FILES = FILES[WHERE(FILES NE '')]
            FILES = DATE_SELECT(FILES,DATERANGE,COUNT=COUNT)
            IF COUNT EQ 0 THEN STOP
  
            FA = PARSE_IT(FILES[0],/ALL)
            SAVEFILE = DIR_AREAS + INAME_MAKE(SENSOR=FA[0].SENSOR, SATELLITE=FA[0].SATELLITE, METHOD=FA[0].METHOD, COVERAGE=FA[0].COVERAGE, MAP=FA[0].MAP) + '-' + APROD + '-SUBAREAS.SAV'
            SFILES = FILE_SEARCH(!S.IDL_SHAPEFILES +'NES_ECOREGIONS_EXTENDED' + SL,'EPU_extended.shp',COUNT=COUNT_FILES)
            SUBAREAS_EXTRACT,FILES,SUBREGIONS=SUBREGIONS,SHP_FILES=SFILES,DIR_OUT=DIR_OUT,DIR_SHP=DIR_SHP,SAVEFILE=SAVEFILE,INIT=INIT,VERBOSE=VERBOSE
  
            DAT = IDL_RESTORE(SAVEFILE)
            FP = FILE_PARSE(SAVEFILE)
            DSETS = WHERE_SETS(DAT.MATH)
            FOR DTH=0, N_ELEMENTS(DSETS)-1 DO BEGIN
              NEW = DAT[WHERE_SETS_SUBS(DSETS(DTH))]
              SETS = WHERE_SETS(NEW.SENSOR,NEW.SUBAREA,NEW.PROD,NEW.MATH,/JOIN)
              PLTFILE = DIR_AREAS + FP.NAME + '-' + 'TIMESERIES.PNG'
              IF FILE_MAKE(SAVEFILE,PLTFILE,OVERWRITE=OVERWRITE) EQ 0 THEN CONTINUE
              W = WINDOW(DIMENSIONS=[1500,1100],BUFFER=BUFFER)
              TITLE = ''
              MARGIN=[0.1,0.15,0.05,0.1]
              FOR S = 0,N_ELEMENTS(SETS) -1 DO BEGIN
                D = NEW(WHERE_SETS_SUBS(SETS(S)))
                TXT = REPLACE(D[0].SUBAREA + '-' + D[0].SENSOR,'_','')
                LAYOUT = [1, N_ELEMENTS(SETS), S+1]
  
                DATES=DATE_2YEAR(PERIOD_2DATE(D.PERIOD))
                AX = DATE_AXIS([MIN(DATES),MAX(DATES)+1],/YEAR)
                Y = FLOAT(D.AMEAN)
                X = PERIOD_2JD(D.PERIOD)
  
                SUBAREA = FIRST(D.SUBAREA)
                IF DSETS(DTH).VALUE EQ 'RATIO_ANOMALY' THEN YRANGE = [0.75,1.25] ELSE YRANGE = []
                IF DSETS(DTH).VALUE EQ 'RATIO_ANOMALY' THEN YTITLE = UNITS(FIRST(D.PROD),/NO_UNIT) + ' Ratio Anomaly' ELSE YTITLE = UNITS(FIRST(D.PROD))
                PLT = PLOT(X,Y,BUFFER=BUFFER, CURRENT=1, LAYOUT=LAYOUT, MARGIN=MARGIN, TITLE=TITLE, $
                  XTITLE=XTITLE, XRANGE=AX.JD,  XSTYLE=XSTYLE, XTICKNAME=AX.TICKNAME,  XTICKV=AX.TICKV,  XMINOR=XMINOR, XCOLOR=AXES_COLOR, XTHICK=AXES_THICK,$
                  YTITLE=YTITLE, YRANGE=YRANGE, YSTYLE=YSTYLE, YTICKNAME=YTICKNAME,    YTICKV=YTICKV,    YMINOR=YMINOR, YCOLOR=AXES_COLOR, YTHICK= AXES_THICK, $
                  FONT_SIZE=16, LINESTYLE=LINESTYLE, COLOR='BLUE', THICK=2, SYMBOL='CIRCLE', SYM_FILLED=1, SYM_COLOR='BLUE', SYM_FILL_COLOR=SYM_FILL_COLOR, SYM_SIZE=0.4, SYM_THICK=SYM_THICK, CLIP=CLIP)
                IF DSETS(DTH).VALUE EQ 'RATIO_ANOMALY' THEN OPLT = PLOT(AX.JD,[1.0,1.0],COLOR='BLACK',/OVERPLOT,/CURRENT)
                POS = PLT.POSITION
              ENDFOR ; SETS
              W.SAVE, PLTFILE
              W.CLOSE
              PFILE, PLTFILE, /W
            ENDFOR ; DSETS
          ENDFOR ; PRODS
        ENDFOR ; DATASETS
      ENDIF ; COMPARE_PLOTS
    ENDIF ; SOE_2017
  ENDFOR ; SOE_YEAR




END; #####################  End of Routine ################################


