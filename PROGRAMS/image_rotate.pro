; $ID:	IMAGE_ROTATE.PRO,	2020-07-08-15,	USER-KJWH	$
PRO IMAGE_ROTATE, FILES, DIR_OUT=dir_out, ROT=ROT

; ROT OF 1 MEANS ROTATE COUNTER CLOCKWISE 90 DEGREES

	IF N_ELEMENTS(ROT) NE 1 THEN _ROT = 1 ELSE _ROT = ROT

	FOR _FILE = 0L,N_ELEMENTS(FILES)-1L DO BEGIN
		AFILE=FILES(_FILE)
 		IMAGE = READ_PNG(AFILE,R,G,B)
 		FN=PARSE_IT(AFILE)
 		IF N_ELEMENTS(DIR_OUT) NE 1 THEN _DIR_OUT=FN.DIR ELSE _DIR_OUT = DIR_OUT
 		PNGFILE=_DIR_OUT + FN.NAME + '-ROT.' + FN.EXT


; 	===> Get type to see if filenames or arrays
  	SZ=SIZE(IMAGE,/STRUCT) & TYPE = SZ.TYPE

; 	===> Determine if normal 2d or true color (3,*,*)
  	TRUE_COLOR = SZ.N_DIMENSIONS EQ 3

  	IF TRUE_COLOR THEN BEGIN
  		N_PLANES = 3
  		IMAGE0=IMAGE(0,*,*) & IMAGE0=REFORM(IMAGE0) & IMAGE0=ROTATE(IMAGE0,_ROT)
  		IMAGE1=IMAGE(1,*,*) & IMAGE1=REFORM(IMAGE1) & IMAGE1=ROTATE(IMAGE1,_ROT)
  		IMAGE2=IMAGE(2,*,*) & IMAGE2=REFORM(IMAGE2) & IMAGE2=ROTATE(IMAGE2,_ROT)
  		SZ=SIZE(IMAGE0,/STRUCT)
  		PX = SZ.DIMENSIONS[0] & PY = SZ.DIMENSIONS[1]
  		IMAGE = REPLICATE(IMAGE[0],3,PX,PY)

  		IMAGE(0,*,*) = IMAGE0
  		IMAGE(1,*,*) = IMAGE1
  		IMAGE(2,*,*) = IMAGE2
  	ENDIF ELSE BEGIN
  		N_PLANES = 1
  		IMAGE=ROTATE(IMAGE,_ROT)
  	ENDELSE
  	WRITE_PNG,PNGFILE,IMAGE

	ENDFOR ; FILES
;
END
