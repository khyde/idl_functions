; $ID:	STRUCT_READ_WRITE_DEMO.PRO,	2020-07-01-12,	USER-KJWH	$
; 
PRO STRUCT_READ_WRITE_DEMO

; #########################################################################; 
;+
; THIS PROGRAM IS A DEMO FOR STRUCT_WRITE


; HISTORY:
;     MAY 25,2004  WRITTEN BY: J.E. O'REILLY
;     MAR 28,2016,JEOR: FIXED STRUCT WRITE AND STEP DO_STRUCT_PLUS_EXTRA
;     MAY 29,2016,JEOR: UPDATED WITH SWITCHES [ REMOVED HAS CODE]
;-
; #########################################################################

;**************************************
ROUTINE_NAME  = 'STRUCT_READ_WRITE_DEMO'
;**************************************
DIR= !S.DEMO+ ROUTINE_NAME + PATH_SEP() &  DIR_TEST, DIR

; ================>
; SWITCHES CONTROLLING WHICH PROCESSING STEPS TO DO:
  DO_STRUCT_PLUS_EXTRA  =	'SV';
  DO_STATS_ARRAYS 	    = ''
  DO_PLAIN_ARRAY        = ''
  DO_SPREAD 	          = ''
  DO_NO_STRUCT          = ''
  DO_NESTED             = ''
  DO_SD_WRITE           = ''
  DO_MAP_OUT            = ''
 
;SSSSS     END OF SWITCHES     SSSSS

; ***************************************
 	IF KEY(DO_STRUCT_PLUS_EXTRA) THEN BEGIN
; ***************************************
    , 'DO_STRUCT_PLUS_EXTRA'
    SWITCHES,DO_STRUCT_PLUS_EXTRA,STOPP=STOPP,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,INIT=INIT,R_FILES=R_FILES,R_DATASETS=R_DATASETS,R_MAPS=R_MAPS,R_PRODS=R_PRODS,DATERANGE=DATERANGE
    IF STOPP THEN STOP
    STRUCT = CREATE_STRUCT('CAT','CAT','DOG','DOG')
    S2 = CREATE_STRUCT('NUM',INDGEN(9))
    IMG = BINDGEN([5,6])    
    FILE = DIR +'DO_STRUCT_PLUS_EXTRA.SAV' 
    PRINT,' PASS STRUCT [AND TEST,S2,AND IMG] AS KEYWORDS TO STRUCT_WRITE'
    STRUCT_WRITE,STRUCT,TEST = 'TEST',S2=S2,IMG = IMG,FILE=FILE,NAME='JUNK'
    PLINES
    DATA = STRUCT_READ(FILE,STRUCT=STRUCT)
    ST,STRUCT
   
    IF STOPP THEN STOP
    , 'DO_STRUCT_PLUS_EXTRA'
  ENDIF ;   IF KEY(DO_STRUCT_PLUS_EXTRA) THEN BEGIN
;|||||||||||||||||||||||||||||||||||||||||||||||||||


; **********************************
  IF KEY(DO_STATS_ARRAYS) THEN BEGIN
; **********************************
    , 'DO_STATS_ARRAYS'
    SWITCHES,DO_STATS_ARRAYS,STOPP=STOPP,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,INIT=INIT,R_FILES=R_FILES,R_DATASETS=R_DATASETS,R_MAPS=R_MAPS,R_PRODS=R_PRODS,DATERANGE=DATERANGE
    IF STOPP THEN STOP
    ARR = FINDGEN([20,10])
    IF VERBOSE THEN PRINT,'MINMAX OF DATA  :',MM(ARR)

    S = STATS_ARRAYS(ARR,/START,/CALC)
    IF VERBOSE THEN ST,S
    FILE = DIR + 'DO_STATS_ARRAYS.SAV'
    STRUCT_WRITE,S,FILE = FILE 
    IF VERBOSE THEN PRINT,' USE STRUCT_READ TO EXTRACT THE MEAN'
    
      DATA = STRUCT_READ(FILE, TAG='MEAN',STRUCT=STRUCT)
    IF VERBOSE THEN PRINT,'MINMAX OF DATA  :',MM(DATA)
    IF VERBOSE THEN ST,STRUCT
    IF STOPP THEN STOP
    , 'DO_STATS_ARRAYS'
  ENDIF ;   IF KEY(DO_STATS_ARRAYS) THEN BEGIN
; ||||||||||||||||||||||||||||||||||||||||||||

;*********************************
IF KEY(DO_PLAIN_ARRAY) THEN BEGIN
;**************************
  , 'DO_PLAIN_ARRAY'
  PRINT, 'PLAIN NUMERIC ARRAYS [NON STRUCTURES] ARE COMBINED INTO STRUCTURES BY  STRUCT_WRITE'
  SWITCHES,DO_PLAIN_ARRAY,STOPP=STOPP,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,INIT=INIT,R_FILES=R_FILES,R_DATASETS=R_DATASETS,R_MAPS=R_MAPS,R_PRODS=R_PRODS,DATERANGE=DATERANGE
  IF STOPP THEN STOP
  ARR = FINDGEN([4320,2160])
  FILE = DIR + 'DO_SMI_ARRAY.SAV'
  STRUCT_WRITE,ARR,FILE=FILE
  DATA = STRUCT_READ(FILE,STRUCT=STRUCT) 
  IF VERBOSE THEN BEGIN
    
    HELP,DATA & ST,STRUCT
  ENDIF;IF VERBOSE THEN BEGIN
  , 'DO_PLAIN_ARRAY'
  IF STOPP THEN STOP
ENDIF ; IF KEY(DO_PLAIN_ARRAY) THEN BEGIN
; |||||||||||||||||||||||||||||||||||||||

;***************************
IF KEY(DO_SPREAD) THEN BEGIN
;***************************
  , 'DO_SPREAD'
  PRINT,'SPREADSHEET STRUCTURES ARE NOT ALTERED BY STRUCT_WRITE'
  SWITCHES,DO_SPREAD,STOPP=STOPP,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,INIT=INIT,R_FILES=R_FILES,R_DATASETS=R_DATASETS,R_MAPS=R_MAPS,R_PRODS=R_PRODS,DATERANGE=DATERANGE
  IF STOPP THEN STOP  
  DB = PRODS_READ()
  IF VERBOSE THEN BEGIN
    HELP,DB
    ST,DB
    PN,DB
  ENDIF;IF VERBOSE THEN BEGIN
  FILE = DIR + 'DO_SPREAD.SAV'
  STRUCT_WRITE,DB,FILE=FILE
  S = STRUCT_READ(FILE, TAG=TAG,STRUCT=S)
  IF VERBOSE THEN BEGIN
    HELP,S
    ST,S  
    PN,S  
  ENDIF;IF VERBOSE THEN BEGIN
  
  IF HAS(DO_SPREAD,'S') THEN STOP
  , 'DO_SPREAD'
ENDIF ; IF KEY(DO_SPREAD) THEN BEGIN
; ||||||||||||||||||||||||||||||||||

;***************************
IF KEY(DO_SD_WRITE) THEN BEGIN
  ;***************************
  , 'DO_SD_WRITE'
  PRINT, 'COMPARING STRUCT_WRITE WITH STRUCT_SD_WRITE'
  SWITCHES,DO_SD_WRITE,STOPP=STOPP,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,INIT=INIT,R_FILES=R_FILES,R_DATASETS=R_DATASETS,R_MAPS=R_MAPS,R_PRODS=R_PRODS,DATERANGE=DATERANGE
  IF STOPP THEN STOP  
  SAVEFILE = DIR + "M_199709-SEAWIFS-R2010-MLAC-NEC-CHLOR_A-OC4-MEAN.SAVE"
      
  OLD_DATA = STRUCT_SD_READ(SAVEFILE,STRUCT=OLD_STRUCT)
  
  NEW_DATA = STRUCT_READ(SAVEFILE,STRUCT=NEW_STRUCT)
  ST,OLD_STRUCT
  PLINES
  ST,NEW_STRUCT  
  FN = FILE_PARSE(SAVEFILE)
  FILE = DIR + FN.NAME_EXT
  STRUCT_WRITE,NEW_STRUCT,FILE=FILE,NAME = 'JUNK'
  DATA = STRUCT_READ(FILE, TAG='IMAGE',STRUCT=STRUCT)
  P,MM(DATA)
  IF STOPP THEN STOP  
  , 'DO_SD_WRITE'
ENDIF ; IF KEY(DO_SD_WRITE) THEN BEGIN
; ||||||||||||||||||||||||||||||||||||
; 
;***************************
IF KEY(DO_NESTED) THEN BEGIN
  ;***************************
  ;===> MAKE A NESTED STRUCTURE WITH MIXED DATA ARRAYS
  PRINT,'NESTED STRUCTURES ARE KEPT AS NESTED BY STRUCT_WRITE'
  , 'DO_NESTED'
  SWITCHES,DO_NESTED,STOPP=STOPP,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,INIT=INIT,R_FILES=R_FILES,R_DATASETS=R_DATASETS,R_MAPS=R_MAPS,R_PRODS=R_PRODS,DATERANGE=DATERANGE
  IF STOPP THEN STOP
  PROD = 'DAT'
  INFO = 'DAT'
  ARRAY= FINDGEN(11)
  FIRST=CREATE_STRUCT(PROD,CREATE_STRUCT('DATA',PROD,'INFO',INFO,'ARRAY',ARRAY))
  FIRST=CREATE_STRUCT('FIRST',FIRST)
  ST,FIRST
  PROD = 'LET'
  INFO = 'LET'
  ARRAY= ALPHABET()
  SECOND=CREATE_STRUCT(PROD,CREATE_STRUCT('DATA',PROD,'INFO',INFO,'ARRAY',ARRAY))
  SECOND=CREATE_STRUCT('SECOND',SECOND)
  ST,SECOND
  ; ===> COMBINE INTO A NESTED STRUCTURE
  STRUCT=CREATE_STRUCT( FIRST,SECOND)
  FILE = DIR + 'DO_NESTED.SAV'
  STRUCT_WRITE,STRUCT,FILE = FILE  
  DATA = STRUCT_READ(FILE,STRUCT=STRUCT)
  IF VERBOSE THEN  ST,STRUCT    
    
ENDIF;IF KEY(DO_NESTED) THEN BEGIN
;|||||||||||||||||||||||||||||||||


;***************************
IF DO_SPREAD GE 1 THEN BEGIN
;***************************
  , 'DO_SPREAD'
  DB = PRODS_READ()
  ST,DB
  FILE = DIR + 'DO_SPREAD.SAV'
  STRUCT_WRITE,DB,FILE=FILE
  S = STRUCT_READ(FILE, TAG=TAG,STRUCT=STRUCT)
  HELP,S
  ST,S
  STOP
  , 'DO_SPREAD'
ENDIF ; IF DO_SPREAD GE 1 THEN BEGIN
; ||||||||||||||||||||||||||||||||||||


;**********************************
IF KEY(DO_NO_STRUCT) THEN BEGIN
;**********************************
,'DO_NO_STRUCT'
SWITCHES,DO_NO_STRUCT,STOPP=STOPP,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,INIT=INIT,R_FILES=R_FILES,R_DATASETS=R_DATASETS,R_MAPS=R_MAPS,R_PRODS=R_PRODS,DATERANGE=DATERANGE
IF STOPP THEN STOP
  FILE = DIR + 'DO_NO_STRUCT.SAV'
  STRUCT_WRITE,FILE=FILE
  IF VERBOSE THEN BEGIN
    S = STRUCT_READ(FILE)
    ST,S    
  ENDIF;IF VERBOSE THEN BEGIN   
  IF STOPP THEN STOP 
ENDIF;IF KEY(DO_NO_STRUCT) THEN BEGIN
;||||||||||||||||||||||||||||||||||||

;**********************************
IF KEY(DO_MAP_OUT) THEN BEGIN
  ;**********************************
  ,'DO_MAP_OUT'
  SWITCHES,DO_MAP_OUT,STOPP=STOPP,OVERWRITE=OVERWRITE,VERBOSE=VERBOSE,INIT=INIT,R_FILES=R_FILES,R_DATASETS=R_DATASETS,R_MAPS=R_MAPS,R_PRODS=R_PRODS,DATERANGE=DATERANGE
  IF STOPP THEN STOP
  ARR = FINDGEN([4320,2160])
  FILE = DIR +'S_20130101181000-MODIS-AQUA-R2013-SMI-CHLOR_A-OC4.SAVE
  STRUCT_WRITE,ARR,FILE=FILE
  DATA = STRUCT_READ(FILE,STRUCT=STRUCT,MAP_OUT = 'NEC')
  IF VERBOSE THEN BEGIN
    ST,STRUCT
    PRINT
    HELP,DATA
  ENDIF;IF VERBOSE THEN BEGIN
  IF STOPP THEN STOP
ENDIF;IF KEY(DO_MAP_OUT) THEN BEGIN
;||||||||||||||||||||||||||||||||||||



END; #####################  END OF ROUTINE ################################
