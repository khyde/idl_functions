; $ID:	MM.PRO,	2020-06-26-15,	USER-KJWH	$
;##################################################################################
FUNCTION MM,_DATA, SUBS=SUBS,FIN=FIN,TXT=TXT, MISSING=MISSING;+
;NAME:
;   MM [A SHORTCUT FOR MINMAX]
;
;PURPOSE:
;		COMPUTE THE MINIMUM, MAXIMUM (AND SUBSCRIPTS OF THE MINIMUM AND MAXIMUM)
;
;CATEGORY:
;	MATH
;
;INPUTS:
;		_DATA:	NUMERICAL DATA
;
;KEYWORDS:
;		SUBS..... SUBSCRIPTS OF THE MINIMUM AND MAXIMUM DATA VALUES
;		FIN...... EXCLUDE DATA MATCHING NAN AND INFINITY DATA FROM THE MINMAX
;		MISSING.. EXCLUDE DATA MATCHING THE MISSING VALUE FROM THE MINMAX
;		TXT...... CONVERT OUTPUT MIN,MAX, TO A STRING [FOR REPORT]
;
;EXAMPLES:
;		PRINT, MM(FINDGEN(11))
;		PRINT, MM(FINDGEN(11),SUBS=SUBS) & PRINT, SUBS
;		X=[1,2,-9,3,!VALUES.F_INFINITY] & PRINT, MM(X,SUBS=SUBS) & PRINT, SUBS
;		X=[1,2,-9,3,!VALUES.F_INFINITY] & PRINT, MM(X,SUBS=SUBS,/FIN) & PRINT, SUBS;
;		X=[1,2,-9,3,!VALUES.F_INFINITY] & PRINT, MM(X,SUBS=SUBS,MISSING= -9) & PRINT, SUBS
;		X=[1,2,-9,3,!VALUES.F_INFINITY] & PRINT, MM(X,SUBS=SUBS,/FIN,MISSING= -9) & PRINT, SUBS
;   X=[1,2,-9,3,!VALUES.F_NAN] 			& PRINT, MM(X,SUBS=SUBS,/FIN,MISSING= -9) & PRINT, SUBS
;		X=[1,2,-9,3,!VALUES.F_NAN]      & PRINT, MM(X,SUBS=SUBS,MISSING= -999) & PRINT, SUBS
;
;HISTORY:
; 	OCT 6, 2003,	WRITTEN BY:	J.E. O'REILLY, NOAA, 28 TARZWELL DRIVE, NARRAGANSETT, RI 02882
; 	FEB 15,2013,JOR, FIN = 1 DEFAULT
; 	JUL 0,2015,JOR ADDED KEY TXT
; 	AUG 31,2015,JOR CHANGED DATA TO _DATA
;##################################################################################
;-
; *************************************************************************

  
;****************  
ROUTINE_NAME='MM'
;****************
IF NONE(FIN) THEN FIN = 1
IF NONE(_DATA) THEN BEGIN
  PRINT,'ERROR: YOU MUST PROVIDE DATA'
  RETURN,[]
ENDIF;IF NONE(_DATA) THEN BEGIN

GOOD=REPLICATE(1B,N_ELEMENTS(_DATA))


IF N_ELEMENTS(MISSING) EQ 1 THEN BEGIN
	OK=WHERE(_DATA EQ MISSING,COUNT)
	IF COUNT GE 1 THEN GOOD[OK] = 0
ENDIF

IF KEYWORD_SET(FIN) EQ 1 THEN BEGIN
	OK=WHERE(FINITE(_DATA) EQ 0,COUNT)
	IF COUNT GE 1 THEN GOOD[OK] = 0
ENDIF


;	===> NOW FIND JUST THE GOOD VALUES
OK=WHERE(GOOD EQ 1,COUNT)

IF COUNT GE 1 THEN BEGIN
	MAXIMUM = MAX( _DATA[OK], SUB_MAX,MIN= MINIMUM, SUBSCRIPT_MIN=SUB_MIN)
	 SUB_MAX = OK[SUB_MAX]
	 SUB_MIN = OK[SUB_MIN]
ENDIF ELSE BEGIN
	SUB_MIN	= -1L
	SUB_MAX = -1L
	MINIMUM = !VALUES.F_NAN
	MAXIMUM = !VALUES.F_NAN
ENDELSE


SUBS = [SUB_MIN,SUB_MAX]

IF KEY(TXT) THEN BEGIN
 RETURN,'MIN: '+ STRTRIM(MINIMUM,2) + '  MAX: '+ STRTRIM(MAXIMUM,2) 
ENDIF ELSE BEGIN
  RETURN, [MINIMUM,MAXIMUM]  
ENDELSE;IF KEY(TXT) THEN BEGIN


END; #####################  END OF ROUTINE ################################
