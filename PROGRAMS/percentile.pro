; $ID:	PERCENTILE.PRO,	2020-06-30-17,	USER-KJWH	$
;###############################################################################
FUNCTION PERCENTILE,ARRAY,PERCENT=PERCENT,NORMAL=NORMAL,STRUCT=STRUCT,MISSING=MISSING,VERBOSE=VERBOSE,PLT=PLT,CSV=CSV,FREQ=FREQ,_EXTRA=_EXTRA
;+
;##################################################################################################
;	PURPOSE:	THIS FUNCTION RETURNS THE VALUES OF ARRAY CORRESPONDING TO INPUT PERCENTILES
;							NOTE: THE VALUES RETURNED ARE LINEAR INTERPOLATES OF THE SORTED ARRAY
;
;; KEYWORDS:
;          
;          PERCENT..... DESIRED OUTPUT PERCENTILES [DEFAULT = [0,100 %]
;          NORMAL...... GIVES PERCENTILES FOR A NORMAL DISTRIBUTION
;          STRUCT...... A STRUCTURE WITH DATA, PERCENTILES, AND CUMULATIVE PERCENTILES
;          VERBOSE...... PRINTS PROGRAM PROGRESS
;          MISSING...... VALUE TO IGNORE 
;          PLT......... PLOT THE PERCENTILES USING PLT_PERCENTILE
;          CSV......... WRITE THE STRUCTURE TO  A CSV FILE 
;          FREQ........ FREQUENCY OF DATA IN EACH PERCENTILE
;          _EXTRA...... KEYWORD PARAMETERS PASSED TO THE PLOT FUNCTION
;
;
; EXAMPLES: PRINT, PERCENTILE(FINDGEN(11))
;           PRINT, PERCENTILE(FINDGEN(101))
;           PRINT, PERCENTILE(FINDGEN(101),/PLT,/CSV)
;           PRINT, PERCENTILE(FINDGEN(101),PERCENT = [0,5,50,95,99])
;           PRINT, PERCENTILE(FINDGEN(10001),PERCENT = [0.01,99.9])
;           PRINT, PERCENTILE(FINDGEN(1001),PERCENT=[0,0.01,1,10,50,98,99.9,100.0])
;           PRINT, PERCENTILE(RANDOMN(SEED,100001),/NORMAL,/PLT,STRUCT = S)& ST,S
;           PRINT, PERCENTILE(RANDOMN(SEED,10000001),/NORMAL,/PLT,STRUCT = S)& ST,S
;           PRINT, PERCENTILE(RANDOMN(SEED,1000001),/PLT,STRUCT = S)& ST,S
;           PRINT, PERCENTILE(RANDOMN(SEED,100001),/NORMAL,/PLT,/CSV)
;           

;           
; HISTORY:	MAY 28, 2003 WRITTEN BY:	J.E. O'REILLY
;           APR 1,2012,JOR ERROR IS NOW AN ERROR STRING IF ERRORS ARE ENCOUNTERED
;           AUG 4,2014,JOR ADDED KEYWORD NORMAL,EXAMPLES, FORMATTING
;           AUG 9,2014,JOR, ADDED KEYWORD STRUCT
;           MAY 18, 2015 - KJWH: ADDED KEYWORD VERBOSE
;           MAY 19, 2015 - KJWH: FIXED BUG WHEN REPLICATING THE STRUCTURE - 
;                                CHANGED FROM N_ELEMENTS(ARRAY) TO 
;                                N_ELEMENTS(_DATA) SO THAT THERE ARE NO CONFLICTING STRUCTURE SIZES WHEN FINITE DATA IS PRESENT
;           NOV 02, 2015 - JEOR: CHANGED DATA TO ARRAY TO AVOID CONFLICT WITH IDL'S DATA FUNCTION
;                                ADDED A NUMBER OF KEYWORDS
;                                MAJOR CHANGE IN METHOD TO ; MATT RIGBY METHOD:
;                                https://code.google.com/p/mr-idl-library/source/browse/trunk/percentile.pro?r=5
;           NOV 14, 2016 - JEOR: ADDED KEY FREQ
;              NOTE              NOT SURE ABOUT CORRECTNESS OF CUM

;-
;##################################################################################################


;*********************
ROUTINE ='PERCENTILE'
;********************* 
ERROR = ''

IF NONE(ARRAY) THEN BEGIN
	ERROR = 'ERROR: NO INPUT ARRAY PROVIDED'
	RETURN,ERROR
ENDIF;IF NONE(ARRAY) THEN BEGIN
 

IF  KEY(NORMAL)  THEN PERCENT = CUMULATE([0.13D,2.14,13.59,34.13,34.13,13.59,2.14,0.13])
IF NONE(PERCENT)THEN PERCENT = FINDGEN(101)

IF NONE(MISSING)THEN MISSING = MISSINGS(ARRAY)

IF MIN(PERCENT) LT 0.0 OR MAX(PERCENT) GT 100.0 THEN  RETURN,'ERROR: PERCENT MUST BE BETWEEN 0 AND 100'
	
	OK=WHERE(ARRAY NE MISSING AND FINITE(ARRAY),COUNT)
	IF COUNT GE 1 THEN BEGIN
		_DATA = ARRAY[OK]
    ;===> SORT _DATA
    _DATA = DOUBLE(_DATA(SORT(_DATA)))
  
    ;===> REPLACING FOLLOWING WITH CODE FROM MATT RIGBY
    ;####################################################
;		===> NORMALIZE PERCENTILES FROM 0 TO 100 PERCENT
;		PERCENTILES  = INTERPOL([0.0,100.0],N_ELEMENTS(_DATA))
;		VALUES = INTERPOL(_DATA ,PERCENTILES , PERCENT)
;   ||||||||||||||||||||||||||||||||||||||||||||||||||||||
;   CODE FROM MATT RIGBY
;
;ARRAY=ARRAY_IN[SORT(ARRAY_IN)]
;OUTPUT=ARRAY[FLOAT(PERCENTILE)/100.*N_ELEMENTS(ARRAY)]
PERCENTILES=_DATA[DOUBLE(PERCENT)/100.*N_ELEMENTS(_DATA)]
;===> ACCUMULATE  
; C = [0.0,CUMULATE(Y)/TOTAL(Y)]
; CUM =CUMULATE(_DATA)/TOTAL(_DATA)
;===< FREQUENCIES
FREQ = REPLICATE(0L,NOF(PERCENTILES))
;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FOR I = 0,NOF(PERCENTILES)-2 DO BEGIN
  LOW = PERCENTILES(I) 
  UPP = PERCENTILES(I+1)
  OK = WHERE(_DATA GE LOW AND _DATA LT UPP,COUNT)
  FREQ(I) = COUNT
  
ENDFOR;FOR I = 0,NOF(PERCENTILES)-2 DO BEGIN
;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
CUM = 100.0 *CUMULATE(FREQ)/TOTAL(FREQ)
STRUCT = REPLICATE(CREATE_STRUCT('DATA',0.0D,'PERCENTILE',0.0,'CUM',0.0,'FREQ',0L),N_ELEMENTS(PERCENT))
STRUCT.DATA = PERCENTILES
STRUCT.PERCENTILE = PERCENT  
STRUCT.CUM = CUM    
STRUCT.FREQ = FREQ

IF KEY(VERBOSE) THEN PL,STRUCT.PERCENTILE,STRUCT.DATA
IF KEY(PLT) THEN BEGIN  
  IF IDLTYPE(PLT) NE 'STRING' THEN FILE = !S.IDL_TEMP + ROUTINE + '.PNG' ELSE FILE = PLT
  P = PLOT(STRUCT.DATA,STRUCT.PERCENTILE,$
  COLOR = 'BLUE',THICK = 5,YTITLE = 'PERCENTILES',XTITLE = 'DATA',AXIS_STYLE = 1,_EXTRA=_EXTRA)
   P = PLOT(STRUCT.DATA,STRUCT.CUM,COLOR = 'GREEN',/CURRENT,/OVERPLOT,THICK = 7)
; STOP 
 YAXIS = AXIS('Y', LOCATION='RIGHT', $
  TITLE='Cumulative Frequency (%)', $
  COORD_TRANSFORM=[0, 100/MAX(STRUCT.PERCENTILE)], $
  AXIS_RANGE=[0,100],MINOR = 0)
 
  P.SAVE,FILE & PFILE,FILE
  P.CLOSE
ENDIF;IF KEY(PLT) THEN BEGIN
      
IF KEY(CSV) THEN BEGIN
  IF IDLTYPE(CSV) NE 'STRING' THEN FILE = !S.IDL_TEMP + ROUTINE + '.CSV'ELSE FILE = CSV
  CSV_WRITE,FILE,STRUCT
ENDIF; IF KEY(CSV) THEN BEGIN
    
IF N_ELEMENTS(PERCENTILES) EQ 1 THEN RETURN, PERCENTILES[0] ELSE RETURN, PERCENTILES
ENDIF ELSE BEGIN
	RETURN,'ERROR: NO VALID DATA'
ENDELSE


END; #####################  END OF ROUTINE ################################
