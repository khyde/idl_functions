; $ID:	REMOVE.PRO,	2020-06-30-17,	USER-KJWH	$
;#################################################################################################
FUNCTION REMOVE, ARRAY, SUBSCRIPTS, VALUES=VALUES, PHRASES=PHRASES,  FIRST = FIRST, LAST=LAST


;+
; NAME:
;       REMOVE
;
; PURPOSE:
;       TO MAKE A NEW ARRAY FROM AN OLD ARRAY BY REMOVING SPECIFIED ARRAY ELEMENTS
;
;
; EXAMPLES:
;       PRINT, REMOVE([1,2,3,4,5,6,7],3)     ; WILL RETURN [1,2,3,  5,6,7] ; REMOVING BASED ON SUBSCRIPT NUMBERS
;       PRINT, REMOVE(INDGEN(9),/FIRST)     ; REMOVE THE FIRST VALUE FROM THE ARRAY
;       PRINT, REMOVE(INDGEN(9),/LAST)     ; REMOVE THE LAST VALUE FROM THE ARRAY
;				PRINT, REMOVE(['CAT','DOG','BIRD'],VALUES= 'BIRD'); REMOVING BASED ON VALUES
;				PRINT, REMOVE(INDGEN(7),VALUES= [3,4])    ; REMOVING BASED ON VALUES
;				PRINT, REMOVE(['CAT','DOG','BIRD','BIRDDOG','MOUSE'],PHRASES= 'BIRD') ; REMOVING BASED ON FINDING A PHRASE
;				PRINT, REMOVE(['CAT','DOG','BIRD','BIRDDOG','MOUSE'],PHRASES= ['BIRD','CAT']) ; REMOVING BASED ON FINDING TWO PHRASES
;
; INPUTS:
;       ARRAY...... THE DATA/INFO
;       SUBSCRIPTS. THE SUBSCRIPTS TO REMOVE FROM THE ARRAY
;
; KEYWORD PARAMETERS:
;      VALUES     : TO REMOVE SPECIFIC ARRAY VALUES
;			 PHRASES		: TO REMOVE STRING ELEMENTS CONTAINING THE PHRASES
;      FIRST      : TO REMOVE JUST THE FIRST ELEMENT
;      LAST       : TO REMOVE JUST THE LAST  ELEMENT
;
; OUTPUTS:
;      A ARRAY WITH SPECIFIED ELEMENTS REMOVED
;
; 
; EXAMPLES:
;         PRINT,REMOVE(INDGEN(10), 2)
;          PRINT,REMOVE(INDGEN(10), /FIRST)
;          PRINT,REMOVE(INDGEN(10), /LAST)
;
; SIDE EFFECTS:
;			 IF ALL ELEMENTS IN THE ARRAY ARE REMOVED THE STANDARD MISSINGS CODE IS RETURNED[MISSINGS.PRO]
;
; MODIFICATION HISTORY:
;       WRITTEN BY:  J.E.O'REILLY, NOVEMBER 7,1998
;       NOVEMBER 30,1999,JOR, ADDED KEYWORD VALUES      
; 			                      RETURN MISSINGS() IF REQUIRED
; 			MAR 8,2012,JOR, UPPERCASE, REMOVED KEYWORD ERROR, NOW RETURNS ERROR STRING [INSTEAD OF -1]
;       FEB 21,2015,JOR, NOW RETURNS NULL [] INSTEAD OF ''
;       MAR 6,2015,JOR , REMOVED ALL PRINT STATEMENTS,ADDED NEW FUNCTIONS 
;                        
;#################################################################################################
;-
;************************
	ROUTINE_NAME = 'REMOVE'
;************************

	IF N_ELEMENTS(ARRAY) LT 1 THEN RETURN,'ERROR: MUST PROVIDE ARRAY'
	
; ===> MAKE A COPY OF ARRAY
  _ARRAY = ARRAY
  N = N_ELEMENTS(_ARRAY)

;	===> REMOVE SPECIFIC SUBSCRIPTS
	IF N_ELEMENTS(SUBSCRIPTS) GE 1 THEN BEGIN
		SUBS = LINDGEN(N)
		OK=WHERE_IN(SUBS,SUBSCRIPTS,COUNT,NCOMPLEMENT=NCOMPLEMENT,COMPLEMENT=COMPLEMENT)
  	IF COUNT EQ N THEN BEGIN  		
  		RETURN, []
  	ENDIF ELSE RETURN, _ARRAY(COMPLEMENT)
	ENDIF

	IF NONE(VALUES) AND NONE(PHRASES) AND NONE(FIRST) AND NONE(LAST) THEN RETURN,'ERROR: MUST PROVIDE SUBSCRIPTS OR VALUES PHRASES OR OTHER KEYWORDS)'
		 

; ===> REMOVE SPECIFIC VALUES ?
  IF N_ELEMENTS(VALUES) GE 1 THEN BEGIN
;		===> MAKE IDL TYPE FOR _VALUES AGREE WITH _ARRAY
   	_VALUES = REPLICATE(_ARRAY[0],N_ELEMENTS(VALUES)) & _VALUES(*) = VALUES

;		===> IF STRING THEN STRTRIM BOTH _ARRAY AND _VALUES BEFORE COMPARING THEM
   	IF IDLTYPE(_VALUES) EQ 'STRING' THEN BEGIN
   		_ARRAY=STRTRIM(_ARRAY,2)
   		_VALUES = STRTRIM(_VALUES,2)
   	ENDIF;IF IDLTYPE(_VALUES) EQ 'STRING' THEN BEGIN

  	OK=WHERE_IN(_ARRAY,_VALUES,COUNT,NCOMPLEMENT=NCOMPLEMENT,COMPLEMENT=COMPLEMENT)
  	IF COUNT EQ N THEN BEGIN
  		  RETURN, []
  	ENDIF ELSE RETURN, _ARRAY(COMPLEMENT)
  ENDIF

; ===> REMOVE ELEMENTS CONTAINING SPECIFIC PHRASES ?
  IF N_ELEMENTS(PHRASES) GE 1 THEN BEGIN
  	SUBS = LINDGEN(N)
;		===> MAKE IDL TYPE FOR _PHRASES AGREE WITH _ARRAY
   	_PHRASES = REPLICATE(_ARRAY[0],N_ELEMENTS(PHRASES)) & _PHRASES(*) = PHRASES
    FOR NTH = 0L,N_ELEMENTS(_PHRASES)-1L DO BEGIN
      OK = WHERE(STRPOS(_ARRAY,_PHRASES[NTH]) GE 0,COUNT)
      IF COUNT GE 1 THEN SUBS[OK] = -1L
    ENDFOR
     OK = WHERE(SUBS NE -1L,COUNT)
     IF COUNT EQ 0L THEN BEGIN
     	  RETURN, MISSINGS(_ARRAY)
     	ENDIF ELSE  RETURN, _ARRAY(SUBS[OK])
  ENDIF

; ===> CAN REMOVE FIRST, LAST, OR FIRST AND LAST ARRAY ELEMENTS
  IF KEYWORD_SET(FIRST) THEN _SUBS = 0
	IF KEYWORD_SET(LAST)  THEN _SUBS = N_ELEMENTS(_ARRAY)-1L
	IF KEYWORD_SET(FIRST) AND KEYWORD_SET(LAST) THEN _SUBS = [0L,_SUBS]
  RETURN, REMOVE(_ARRAY,_SUBS)




END; #####################  END OF ROUTINE ################################
