; $ID:	GRAPHICS_DEMO.PRO,	2021-04-15-17,	USER-KJWH	$

PRO GRAPHICS_DEMO

;+
; NAME:
;   GRAPHICS_DEMO
;
; PURPOSE:;
;   This procedure is to test the new plotting and image routines in IDL 8.0
;
; NOTES:
;
; MODIFICATION HISTORY:
;     Written May 16, 2011 by K.J.W.Hyde, 28 Tarzwell Drive, NMFS, NOAA 02882 (kimberly.hyde@noaa.gov)
;-
; ****************************************************************************************************
  ROUTINE_NAME = 'GRAPHICS_DEMO'
  
  DO_SAMPLES            = 0
  DO_SST_COMPARE        = 0
  DO_4_12_COMPOSITE     = 0
  DO_POLYGON_PLOT       = 0
  DO_TRUE_COLOR         = 0
  DO_GLOBAL_ANOM        = 0
  DO_MONTH_COMPOSITE    = 0
  DO_PP_COMPOSITE       = 0
  DO_PHYTO_COMPOSITE    = 0
  DO_BARPLOT            = 0
  DO_SIMPLE_TIMELINE    = 0
  CHLOR_COMPARISON      = 0
  DO_BYR_PAL            = 0
  WHITE_CENTERED_PAL    = 0
  RWB_GREY_PAL          = 0
  ANOM_PAL              = 0
  GRAY_REVERSE_PAL      = 0
  IMG_LOCATIONS         = 0  
  MARMAP_STATIONS       = 0
  DO_SD_COMPARISONS     = 0
  DO_COMPOSITE          = 0
  DO_NAFO_IMAGES        = 0
  DO_COLORS             = 0
  DO_GRIDDED_TIMESERIES = 1  
  DO_REGION_TIMESERIES  = 0
  DO_TIMESERIES         = 0
  DO_MARMAP_LIGHT       = 0
  DO_N2FIX_IMAGE        = 0
  DO_CHLOR_MAP          = 0
  DO_GLOBAL             = 0
  DO_REMAPS             = 0
  DO_COLOR_EXAMPLES     = 0
  DO_COLORBAR1          = 0
  DO_COLORBAR2          = 0
  DO_ELEVATION          = 0
  
  SL = DELIMITER(/PATH)

IF DO_SAMPLES GE 1 THEN BEGIN
  F = !S.DEMO+'ANNUAL_2002_2010-AT-NEC-SST-4UM-GRAD_MAG-MEAN.SAVE'
  D = STRUCT_SD_READ(F,STRUCT=S)
  I = STRUCT_SD_2IMAGE_NG(S,/ADD_LAND,/ADD_COAST,/ADD_BATHY,BATHS=100,BATHY_COLOR=0,BATHY_THICK=3,SPECIAL_SCALE='ANNUAL',/ADD_COLORBAR,COLORBAR_TITLE='SST Gradient Magnitude (!Uo!NC km!U-1!N)',PAL='PAL_BR',/ADD_SOURCE,/BUFFER)
  I.SAVE, !S.DEMO+'FRONTS.PNG'
  I.CLOSE
  
  
  STOP
  f  = '/nadata/DATASETS/SST-PAT-4/NEC/STATS/SST-N_11UM/MONTH_01_1997_2014-PAT-4-NEC-SST-N_11UM-MEAN.SAVE'
  D = STRUCT_SD_READ(F,STRUCT=S)
  I = STRUCT_SD_2IMAGE_NG(S,/ADD_LAND,/ADD_COAST,/ADD_BATHY,BATHS=100,BATHY_COLOR=255,SPECIAL_SCALE='LOW',/ADD_COLORBAR,COLORBAR_TITLE='Sea Surface '+UNITS('TEMP'),PAL='PAL_BR',/ADD_SOURCE,/BUFFER)
    
  I.SAVE, !S.DEMO+'SST.PNG'
  I.CLOSE
STOP 
ENDIF


; **********************************
  IF DO_SST_COMPARE GE 1 THEN BEGIN
; **********************************
    OVERWRITE = DO_SST_COMPARE GT 1
    
    PAL = 'PAL_SW3'
    PALD = 'PAL_ANOMG'
    YEARS = YEAR_RANGE(1998,2012,/STRING)
    MONTH = '03'
    PERIODS = 'M_'+YEARS+MONTH
    DATASETS = ['SST-AVHRR-4','SST-PAT-4']
    PRODS    = ['SST',        'SST-N_11UM']
    MAPS_IN  = ['GEQ','GEQ','NEC']
    MAPS_OUT = ['GEQ','NEC','NEC']
    FOR P=0, N_ELEMENTS(PERIODS)-1 DO BEGIN
      PERIOD = PERIODS(P)    
      FOR D=0, N_ELEMENTS(DATASETS)-1 DO BEGIN
        FOR M=0, N_ELEMENTS(MAPS_OUT)-1 DO BEGIN      
          MAP_OUT=MAPS_OUT(M)
          F1 = FILE_SEARCH(FIX_PATH(!S.DATASETS +       DATASETS(D) + SL + MAPS_IN(M) + SL + 'STATS' + SL + PRODS(D) + SL + PERIOD + '*MEAN.SAVE'))
          F2 = FILE_SEARCH(FIX_PATH(!S.DATASETS + '_' + DATASETS(D) + SL + MAPS_IN(M) + SL + 'STATS' + SL + PRODS(D) + SL + PERIOD + '*MEAN.SAVE'))
          IF F1 EQ '' OR F2 EQ '' THEN CONTINUE
          IF MAPS_IN(M) EQ MAP_OUT THEN MAP_TXT = MAP_OUT ELSE MAP_TXT = MAP_OUT + '_REMAPPED_FROM_' + MAPS_IN(M)
          PNGFILE = !S.DEMO + PERIOD + '-SST_COMPARE-' + DATASETS(D) + '-' + MAP_TXT + '.PNG'
          IF UPDATE_CHECK(INFILES=[F1,F2],OUTFILES=PNGFILE) EQ 0 AND NOT KEYWORD_SET(OVERWRITE) THEN CONTINUE
          IF MAP_OUT EQ 'GEQ' THEN BEGIN
            BUFFER = 1
            XDIM = 600
            YDIM = 1050          
            POS = LIST([20,740,580,1020],[20,400,580,680],[20,60,580,340])          
            CXDIM = 280
            CYDIM = 20
            CPX  = [160,160,160]
            CPY  = [720,380,40]
          ENDIF
          IF MAP_OUT EQ 'NEC' THEN BEGIN
            BUFFER = 1
            XDIM = 900
            YDIM = 300
            POS = LIST([20,20,280,280],[300,20,580,280],[600,20,880,280])
            CXDIM = 130
            CYDIM = 10
            CPX   = [30,310,610]
            CPY   = [260,260,260]
          ENDIF        
          
          D1 = STRUCT_SD_READ(F1,STRUCT=S1,MAP_OUT=MAP_OUT)
          D2 = STRUCT_SD_READ(F2,STRUCT=S2,MAP_OUT=MAP_OUT)
          DIF = D1-D2 & BDIF = SD_SCALES(DIF,PROD='DIF',SPECIAL_SCALE='10',/DATA2BIN)
          MASK = READ_LANDMASK(MAP=MAP_OUT,/STRUCT)
          BDIF(MASK.LAND) = 252
          
          W = WINDOW(DIMENSIONS=[XDIM,YDIM],BUFFER=BUFFER)
          T = TEXT(XDIM/2,YDIM-10,PERIOD,ALIGNMENT=0.5,/DEVICE,/CURRENT)
          I1 = STRUCT_SD_2IMAGE_NG(S1,/ADD_LAND,IMG_POSITION=POS[0],PAL=PAL,/CURRENT,/DEVICE)
          I2 = STRUCT_SD_2IMAGE_NG(S2,/ADD_LAND,IMG_POSITION=POS[1],PAL=PAL,/CURRENT,/DEVICE)
          ID = IMAGE(BDIF,RGB_TABLE=CPAL_READ(PALD),POSITION=POS(2),/CURRENT,/DEVICE)
          CBAR1 = COLOR_BAR_SCALE_NG(PROD='SST',                   PX=CPX[0],PY=CPY[0],CHARSIZE=10,BACKGROUND=255,XDIM=CXDIM,YDIM=CYDIM,PAL=PAL, TITLE='NEW '     + DATASETS(D) + '-' + UNITS('SST'),HORIZONTAL=1,BOTTOM=1,FONT='HELVETICA',/CURRENT)
          CBAR2 = COLOR_BAR_SCALE_NG(PROD='SST',                   PX=CPX[1],PY=CPY[1],CHARSIZE=10,BACKGROUND=255,XDIM=CXDIM,YDIM=CYDIM,PAL=PAL, TITLE='OLD '     + DATASETS(D) + '-' + UNITS('SST'),HORIZONTAL=1,BOTTOM=1,FONT='HELVETICA',/CURRENT)
          CBARD = COLOR_BAR_SCALE_NG(PROD='DIF',SPECIAL_SCALE='10',PX=CPX(2),PY=CPY(2),CHARSIZE=10,BACKGROUND=255,XDIM=CXDIM,YDIM=CYDIM,PAL=PALD,TITLE='NEW-OLD ' + DATASETS(D) + '-' + UNITS('SST'),HORIZONTAL=1,BOTTOM=1,FONT='HELVETICA',/CURRENT)
          W.SAVE, PNGFILE
          W.CLOSE
        ENDFOR
      ENDFOR
    ENDFOR  
    STOP
  ENDIF  ; DO_SST_COMPARE

; **********************************
  IF DO_4_12_COMPOSITE GE 1 THEN BEGIN
; **********************************
    OVERWRITE = DO_4_12_COMPOSITE GT 1
    
    DO_COLORBARS = 0
    NO_CBAR_OR_DATE = 0
    DIR = !S.DATASETS + 'OC-SEAWIFS-9\GULF_OF_MEXICO\'
    
    PAL = 'PAL_SW3'   
    TOP  = 30
    BOT  = 100
    SIDE = 2
    SPACE = 1
    XNUM = 12
    YNUM = 4
    XDIM = 300 & XDIMS = SIDE+FINDGEN(XNUM)*SPACE+FINDGEN(XNUM)*XDIM
    YDIM = 225 & YDIMS = BOT+FINDGEN(YNUM)*SPACE+FINDGEN(YNUM)*YDIM & YDIMS = REVERSE(YDIMS)    
    DIMS = [SIDE*2+XDIM*XNUM+SPACE*3,BOT+YDIM*YNUM+SPACE*11+TOP]
    
    TYPES = ['STATS']
    BUFFER = 1
    
;   ***** FIGURE 1 (12X4) *****   
    
    STAT_PERIODS = ['MONTH']        
    DIR_COMPS  = FIX_PATH(DIR + 'STATS_COMPOSITES\')
    DIR_TEST, DIR_COMPS
    
    FIGS = ['FIG_1','FIG_2']
    FOR FIG=0,N_ELEMENTS(FIGS)-1 DO BEGIN    
      CASE FIGS(FIG) OF 
        'FIG_1': BEGIN
          DATASETS       = ['OC-SEAWIFS-9', 'OC-SEAWIFS-9', 'OC-SEAWIFS-9', 'OC-SEAWIFS-9']
          STAT_PRODS     = ['CHLOR_A-PAN',  'MICRO-PAN',    'NANO-PAN',     'PICO-PAN']
          STAT_UPROD     = ['CHLOR_A',      'CHLOR_A',      'CHLOR_A',      'CHLOR_A']
          STATS_SS       = ['VERY_LOW',     'VERY_LOW',     'VERY_LOW',     'VERY_LOW']    
          STAT_TITLES    = ['Total',        'Micro',        'Nano',         'Pico']
          COLORBAR_PROD  = 'PERCENT'
          COLORBAR_SCALE = '0_100'
          OUTLABEL       = '-CHLOROPHYLL_COMPOSITION-GOMEX-TIMESERIES-'
        END  
        'FIG_2': BEGIN
          DATASETS       = ['OC-SEAWIFS-9', 'OC-SEAWIFS-9',         'OC-SEAWIFS-9',        'OC-SEAWIFS-9']
          STAT_PRODS     = ['CHLOR_A-PAN',  'MICRO_PERCENTAGE-PAN', 'NANO_PERCENTAGE-PAN', 'PICO_PERCENTAGE-PAN']
          STAT_UPROD     = ['CHLOR_A',      'PERCENT',              'PERCENT',             'PERCENT']
          STATS_SS       = ['VERY_LOW',     '0_100',                '0_100',               '0_100']
          STAT_TITLES    = ['Total',        'Micro',                'Nano',                'Pico']
          COLORBAR_PROD  = 'PERCENT'
          COLORBAR_SCALE = '0_100'
          OUTLABEL       = '-PERCENT_COMPOSITION-GOMEX-TIMESERIES-'
        END
      ENDCASE         
      
      FOR NTH = 0, N_ELEMENTS(STAT_PERIODS)-1 DO BEGIN
        APERIOD = STAT_PERIODS[NTH]
        PNGFILE = DIR_COMPS + APERIOD + OUTLABEL +NUM2STR(XNUM)+'_'+NUM2STR(YNUM)+'.PNG'
        IF FILE_TEST(PNGFILE) EQ 1 AND NOT KEYWORD_SET(OVERWRITE) THEN CONTINUE      
        W = WINDOW(DIMENSIONS=DIMS,BUFFER=BUFFER)             
        FOR PTH = 0, N_ELEMENTS(STAT_PRODS)-1 DO BEGIN
          YDIM0 = YDIMS(PTH)        
          T = TEXT(XDIMS[0]+3,YDIM0+YDIM-25,STAT_TITLES(PTH),ALIGNMENT=0,VERTICAL_ALIGNMENT=0,FONT_SIZE=20,FONT_NAME='Arial',/DEVICE,/CURRENT,BUFFER=BUFFER)
          APROD = STAT_PRODS(PTH)
          DIR = FIX_PATH(!S.DATASETS + DATASETS(PTH) + '\GULF_OF_MEXICO\STATS\'+APROD+'\')
          FILES = FILE_SEARCH(DIR+STAT_PERIODS[NTH]+'*'+APROD+'*-MEAN*.SAVE')
          IF FILES[0] EQ '' THEN CONTINUE
          FP = PARSE_IT(FILES)
          DP = DATE_PARSE(PERIOD_2DATE(FP.PERIOD))
          MONTHS = STRUPCASE(MONTH_NAMES(DP.MONTH,/SHORT))
          FILES = FILES[SORT(DP.MONTH)] & MONTHS = MONTHS[SORT(DP.MONTH)]
          
          FOR FTH=0L, N_ELEMENTS(FILES)-1 DO BEGIN
            XDIM0 = XDIMS(FTH)
            POSITION = [XDIM0,YDIM0,XDIM0+XDIM,YDIM0+YDIM]
            DATA = STRUCT_SD_READ(FILES(FTH),STRUCT=STRUCT)
            IMG = STRUCT_SD_2IMAGE_NG(STRUCT,SPECIAL_SCALE=STATS_SS(PTH),USE_PROD=STAT_UPROD(PTH),/CRITERIA_RANGE,ADDDATE=ADDDATE,FONT='Arial',$
              ADD_MASK=ADD_MASK,MASK_SUBS=OK_MASK,MASK_COLOR=MASK_COLOR,OVERWRITE=OVERWRITE,PAL=PAL,BUFFER=BUFFER,IMG_POSITION=POSITION,/CURRENT,/DEVICE)
            T = TEXT(XDIM0+3,YDIM0+YDIM-60,MONTHS(FTH),FONT_NAME='Arial',FONT_SIZE=16,FONT_STYLE='BOLD',TARGET=IMG,/DEVICE,BUFFER=BUFFER)
          ENDFOR                  
        ENDFOR
        BAR = COLOR_BAR_SCALE_NG(PROD=COLORBAR_PROD,SPECIAL_SCALE=COLORBAR_SCALE,PX=XDIMS(2),PY=BOT-35,CHARSIZE=20,BACKGROUND=252,XDIM=XDIM*(XNUM-4)+SPACE*4,YDIM=25,PAL=PAL,$
            NO_NAME=no_name,NO_UNIT=no_unit,TITLE=ACDOM_TITLE,HORIZONTAL=1,BOTTOM=1,FONT='HELVETICA',/CURRENT,BUFFER=BUFFER)
        W.SAVE,PNGFILE,RESOLUTION=300
        W.CLOSE
      ENDFOR
    ENDFOR  
    STOP
  ENDIF  ; DO_4_12_COMPOSITE

  IF DO_POLYGON_PLOT GE 1 THEN BEGIN
    RGB_TABLE = CPAL_READ('PAL_SW3',PALLIST=PALLIST)
   ; FAO = IDL_RESTORE(FIX_PATH(!S.PROJECTS + 'ECOAP\FISHERIES\SUBAREAS\NESLME.SAVE'))
    FAO = READALL(FIX_PATH(!S.PROJECTS + 'ECOAP\FISHERIES\SUBAREAS\FAO_minus.csv'))
  ;  FAO = FAO[WHERE(FAO.F_AREA EQ '57')]    
    BLL=WHERE_SETS(fao.ET_IDR)
    XRANGE = [-185,185]
    YRANGE = [-95,95]
    COLORS = SD_SCALES(FINDGEN(N_ELEMENTS(BLL)),PROD='NUM',SPECIAL_SCALE=NUM2STR(N_ELEMENTS(BLL)),/DATA2BIN)   
    P = PLOT(FLOAT(FAO.ET_X),FLOAT(FAO.ET_Y),XRANGE=XRANGE,YRANGE=YRANGE,XTITLE='Longitude',YTITLE='Latitude',TITLE='',/NODATA)
    FOR LL=0, N_ELEMENTS(BLL)-1 DO BEGIN
      SUBS = WHERE_SETS_SUBS(BLL(LL))
      SET  = FAO(SUBS)
      PP = PLOT(FLOAT([SET.ET_X,SET[0].ET_X]),FLOAT([SET.ET_Y,SET[0].ET_Y]),LINESTYLE=0,COLOR=PALLIST(COLORS(LL)),THICK=2,XRANGE=P.XRANGE,YRANGE=P.YRANGE,/OVERPLOT)
    ENDFOR
    
    
    STOP
    OLDDEVICE= !D.NAME
   
    ZWIN, [1024,1024]
    MAP_NEC
    PAL_36, R,G,B
    LANDMASK = READ_LANDMASK(MAP='NEC') 
    CODE = MAP_DEG2IMAGE(LANDMASK,FAO.ET_X,FAO.ET_Y,AROUND=0)
    TV,LANDMASK
    FOR LL=0, N_ELEMENTS(BLL)-1 DO BEGIN
      IF BLL(LL).N LT 100 THEN CONTINUE
      LSUBS = WHERE_SETS_SUBS(BLL(LL))
      IM = MAP_DEG2IMAGE(LANDMASK,FAO(LSUBS).ET_X,FAO(LSUBS).ET_Y, X=x, Y=y,AROUND=0)
   ;   IF MIN(X) EQ -1 OR MIN(Y) EQ -1 THEN STOP
      POLYFILL, X, Y, COLOR=COLORS(LL), /DEVICE
      ;PLOTS,FAO(LSUBS).ET_X,FAO(LSUBS).ET_Y,PSYM=7,COLOR=COLORS(LL),/NOCLIP,SYMSIZE=0.5, THICK=1.5
    ENDFOR
    PNG = TVRD()
    ZWIN
 STOP

 ;   FAO = FAO[WHERE(FAO.ET_ID EQ 28)]
 ;   FAO = FAO[SORT(FAO.ET_IDR)]        
    
    B = WHERE_SETS(fao.et_idr)
    COLORS = SD_SCALES(FINDGEN(N_ELEMENTS(B)),PROD='NUM',SPECIAL_SCALE=NUM2STR(N_ELEMENTS(B)),/DATA2BIN)
    P = PLOT(FLOAT(FAO.ET_X),FLOAT(FAO.ET_Y),LINESTYLE=0,COLOR='BLACK',THICK=1,XRANGE=XRANGE,XTITLE='Longitude',YTITLE='Latitude',TITLE='NOR_SEA')
 ;   P.SAVE,!S.PROJECTS + 'ECOAP\FISHERIES\SUBAREAS\FRAMES\LME_FAO_PLOT_TITLE.png',resolution=200
    CB = COLORBAR(RGB_TABLE=RGB_TABLE(*,1:250),POSITION=[0.5,0.85,0.85,0.87],RANGE=[0,N_ELEMENTS(B)],TITLE='Vertex #')
    FOR N=0, N_ELEMENTS(B)-1 DO BEGIN
   ;   SAVEFILE = !S.PROJECTS + 'ECOAP\FISHERIES\SUBAREAS\FRAMES\LME_FAO_PLOT_FRAME_'+STR_PAD(NUM2STR(N),3)+'.png'
   ;   IF FILE_TEST(SAVEFILE) EQ 1 AND NOT KEYWORD_SET(OVERWRITE) THEN CONTINUE
      SUBS = WHERE_SETS_SUBS(B(N))
      S = SYMBOL(FLOAT(FAO(SUBS).ET_X),FLOAT(FAO(SUBS).ET_Y),SYM_COLOR=PALLIST(COLORS(N)),/SYM_FILLED,SYMBOL='CIRCLE',SYM_SIZE=0.5,/DATA)
 ;     P.SAVE,SAVEFILE,resolution=200
    ENDFOR   
    PNGFILES = FILE_SEARCH(!S.PROJECTS + 'ECOAP\FISHERIES\SUBAREAS\FRAMES\LME_FAO_PLOT_FRAME_*.png')
    MOVIE_FILE = 'LME_FAO_PLOT_ANIMATION'+['.MP4','.AVI']  
    DIR_MOVIES = !S.PROJECTS + 'ECOAP\FISHERIES\SUBAREAS\FRAMES\'  
    FOR M=0, N_ELEMENTS(MOVIE_FILE)-1 DO MAKE_FF_MOVIE,FILES=PNGFILES,DIR_OUT=DIR_MOVIES,PAL='PAL_SW3',KBPS=KBPS,FPS=15,YOFFSET=YOFFSET,$
      TITLE_FILE_PNG=!S.PROJECTS + 'ECOAP\FISHERIES\SUBAREAS\FRAMES\LME_FAO_PLOT_TITLE.png',N_TITLE=15,TITLE_SLIDE=1,MOVIE_FILE=MOVIE_FILE(M)
    S1 = SYMBOL(FLOAT(FAO[0].POINT_X),FLOAT(FAO[0].POINT_Y),SYM_COLOR='RED',/SYM_FILLED,SYMBOL='STAR',SYM_SIZE=4,/DATA)
    S2 = SYMBOL(FLOAT(FAO(-1).POINT_X),FLOAT(FAO(-1).POINT_Y),SYM_COLOR='BLUE',/SYM_FILLED,SYMBOL='STAR',SYM_SIZE=4,/DATA)
    p.save, !S.PROJECTS + 'ECOAP\FISHERIES\SUBAREAS\LME_FAO_PLOT_EXAMPLE2.png',resolution=200
    STOP
  ENDIF ; DO_POLYGON_PLOT

  IF DO_TRUE_COLOR GE 1 THEN BEGIN
  
    D = READ_HDF_2STRUCT(!S.DATASETS + 'OC-SEAWIFS-MLAC\TEST\S2007113173207.hdf',PRODUCTS=['LONGITUDE','LATITUDE','RGB'])
    LONS = D.SD.LONGITUDE.IMAGE * D.SD.LONGITUDE.SLOPE[0] + D.SD.LONGITUDE.INTERCEPT[0]
    LATS = D.SD.LATITUDE.IMAGE  * D.SD.LATITUDE.SLOPE[0]  + D.SD.LATITUDE.INTERCEPT[0]
    R = MAP_REMAP(REFORM(D.SD.RGB.IMAGE(0,*,*)),MAP_IN='LONLAT',MAP_OUT='NEC',CONTROL_LONS=LONS,CONTROL_LATS=LATS,REFRESH=REFRESH,PX_OUT=1024,PY_OUT=1024)
    G = MAP_REMAP(REFORM(D.SD.RGB.IMAGE(1,*,*)),MAP_IN='LONLAT',MAP_OUT='NEC',CONTROL_LONS=LONS,CONTROL_LATS=LATS,REFRESH=REFRESH,PX_OUT=1024,PY_OUT=1024)
    B = MAP_REMAP(REFORM(D.SD.RGB.IMAGE(2,*,*)),MAP_IN='LONLAT',MAP_OUT='NEC',CONTROL_LONS=LONS,CONTROL_LATS=LATS,REFRESH=REFRESH,PX_OUT=1024,PY_OUT=1024)
    GONE, D
    GONE, LONS
    GONE, LATS
    RGB = BYTARR(3,1024,1024)
    RGB(0,*,*) = R
    RGB(1,*,*) = G
    RGB(2,*,*) = B
    W = WINDOW(DIMENSION=[2048,1024])
    RM = IMAGE(RGB,POSITION=[0,0,1024,1024],/CURRENT,/DEVICE)
    GONE,RGB
    CHL = STRUCT_SD_READ(!S.DATASETS + 'OC-SEAWIFS-MLAC\NEC\SAVE\CHLOR_A-OC4\S_20070423173207-SEAWIFS-OV2-R2010-MLAC-NEC-CHLOR_A-OC4.SAVE',STRUCT=CSTRUCT)
    CM = STRUCT_SD_2IMAGE_NG(CSTRUCT,/ADD_LAND,/ADD_COAST,COLORBAR_TITLE=UNITS('CHLOROPHYLL'),IMG_POSITION=[1024,0,2048,1024],/DEVICE,/CURRENT)
    GONE, CHL
    BAR = COLOR_BAR_SCALE_NG(PROD='CHLOR_A',SPECIAL_SCALE=SPECIAL_SCALE,PX=1050,PY=970,CHARSIZE=22,BACKGROUND=252,XDIM=600,YDIM=20,PAL='PAL_SW3',LAYOUT=LAYOUT,$
      NO_NAME=no_name,NO_UNIT=no_unit,TITLE=UNITS('CHLOROPHYLL'),HORIZONTAL=1,BOTTOM=1,FONT='HELVETICA')
    TD  = TEXT(20,950,'SeaWiFS!C23 April 2007',/CURRENT,/DEVICE,FONT_SIZE=24,FONT_STYLE=1)   
    W.SAVE, FIX_PATH(!S.PROJECTS + 'DEMO_PLOTS\TRUE_COLOR-CHLOROPHYLL-COMPOSITE.PNG'),RESOLUTION=600
    W.CLOSE
    


    MICRO = STRUCT_SD_READ(FILE_SEARCH(FIX_PATH(!S.DATASETS + 'OC-SEAWIFS-MLAC\NEC\STATS\MICRO-PAN\ANNUAL*MICRO-PAN-MEAN.SAVE')),STRUCT=MSTRUCT)
    NANO  = STRUCT_SD_READ(FILE_SEARCH(FIX_PATH(!S.DATASETS + 'OC-SEAWIFS-MLAC\NEC\STATS\NANO-PAN\ANNUAL*NANO-PAN-MEAN.SAVE')),STRUCT=NSTRUCT)
    PP    = STRUCT_SD_READ(FILE_SEARCH(FIX_PATH(!S.DATASETS + 'OC-SEAWIFS-MLAC\NEC\STATS\PICO-PAN\ANNUAL*PICO-PAN-MEAN.SAVE')),STRUCT=PSTRUCT)
    
    MAP_OUT = 'NEC'
    USE_PROD = 'CHLOR_A'
    SPECIAL_SCALE = 'LOW'
    W = WINDOW(DIMENSIONS=[1536,662])
    
    IMD = STRUCT_SD_2IMAGE_NG(MSTRUCT,/ADD_LAND,/ADD_COAST,MAP_OUT=MAP_OUT,SPECIAL_SCALE=SPECIAL_SCALE,USE_PROD=USE_PROD,IMG_POSITION=[0,150,512,662],MISS_COLOR=0,OUTSCAN_COLOR=0,OUTMAP_COLOR=0,/DEVICE,/CURRENT)
    IMD = STRUCT_SD_2IMAGE_NG(NSTRUCT,/ADD_LAND,/ADD_COAST,MAP_OUT=MAP_OUT,SPECIAL_SCALE=SPECIAL_SCALE,USE_PROD=USE_PROD,IMG_POSITION=[512,150,1024,662],MISS_COLOR=0,OUTSCAN_COLOR=0,OUTMAP_COLOR=0,/DEVICE,/CURRENT)
    IMD = STRUCT_SD_2IMAGE_NG(PSTRUCT,/ADD_LAND,/ADD_COAST,MAP_OUT=MAP_OUT,SPECIAL_SCALE=SPECIAL_SCALE,USE_PROD=USE_PROD,IMG_POSITION=[1024,150,1536,662],MISS_COLOR=0,OUTSCAN_COLOR=0,OUTMAP_COLOR=0,/DEVICE,/CURRENT)
    
    TD  = TEXT(20,620,'Microplankton',/CURRENT,/DEVICE,FONT_STYLE=1,FONT_SIZE=22)
    TD  = TEXT(532,620,'Nanoplankton',/CURRENT,/DEVICE,FONT_STYLE=1,FONT_SIZE=22)
    TD  = TEXT(1044,620,'Picoplankton',/CURRENT,/DEVICE,FONT_STYLE=1,FONT_SIZE=22)
    
    BAR = COLOR_BAR_SCALE_NG(PROD='CHLOR_A',SPECIAL_SCALE=SPECIAL_SCALE,PX=368,PY=100,CHARSIZE=22,BACKGROUND=252,XDIM=800,YDIM=25,PAL='PAL_SW3',LAYOUT=LAYOUT,$
      NO_NAME=no_name,NO_UNIT=no_unit,TITLE=UNITS('CHLOROPHYLL'),HORIZONTAL=1,BOTTOM=1,FONT='HELVETICA')
    W.SAVE,FIX_PATH(!S.PROJECTS + 'DEMO_PLOTS\PHYTOPLANKTON_COMPOSITION_FIG.PNG'),RESOLUTION=600
    W.CLOSE

    
   STOP
    
  ENDIF

  IF DO_GLOBAL_ANOM GE 1 THEN BEGIN
    FILES = FILE_SEARCH(FIX_PATH(!S.DATASETS + 'OC-SEAWIFS-9\GEQ\STATS\CHLOR_A-OC4\ANNUAL*CHLOR_A-OC4*MEAN.SAVE'))
    DATA = STRUCT_SD_READ(FILES[0],STRUCT=STRUCT)
    OK = WHERE(STRUCT.IMAGE GT 60)
    STRUCT.IMAGE[OK] = MISSINGS(0.0)
    OK = WHERE(STRUCT.IMAGE NE MISSINGS(0.0))
    STAT = STATS(STRUCT.IMAGE[OK],TRANSFORM='ALOG')
    STRUCT.IMAGE[OK] = STRUCT.IMAGE[OK]/STAT.MEAN
    MAP_OUT = 'ROBINSON'
    USE_PROD = 'RATIO'
    COLORBAR_TITLE = 'Chlorophyll Anomoly'
    PAL = 'pal_anom_GREY'
    SPECIAL_SCALE=10
    IM = STRUCT_SD_2IMAGE_NG(STRUCT,/ADD_LAND,MAP_OUT=MAP_OUT,SPECIAL_SCALE=SPECIAL_SCALE,USE_PROD=USE_PROD,COLORBAR_TITLE=COLORBAR_TITLE,/ADD_COLORBAR,PAL=PAL)
    IM.SAVE,FIX_PATH(!S.PROJECTS + 'DEMO_PLOTS\FIG_3-GLOBAL_ANOMALY.PNG'),RESOLUTION=600
    IM.CLOSE
  STOP
  ENDIF

  IF DO_MONTH_COMPOSITE GE 1 THEN BEGIN
    FILES = FILE_SEARCH(FIX_PATH(!S.DATASETS + 'OC-SEAWIFS-MLAC\NEC\STATS\CHLOR_A-OC4\MONTH*CHLOR_A-OC4*MEAN.SAVE'))
    FP = PARSE_IT(FILES)
    FILES = FILES[SORT(FP.MONTH_START)]
    
    USE_PROD = 'CHLOR_A'
    SPECIAL_SCALE = 'NARROW'
    MAP_OUT = 'GOMN'
    M = MAPS_SIZE(MAP_OUT)
    SCALE = 0.5
    CBARSZ = 125
    CBAR_WIDTH = 600
    CBAR_HEIGHT = 25
    
    XDIF = M.PX_OUT*SCALE
    YDIF = M.PY_OUT*SCALE
    XPOS = [0,XDIF,XDIF*2,XDIF*3,0,XDIF,XDIF*2,XDIF*3,0,XDIF,XDIF*2,XDIF*3]
    YPOS = CBARSZ+[YDIF*2,YDIF*2,YDIF*2,YDIF*2,YDIF,YDIF,YDIF,YDIF,0,0,0,0]     
    
    LABELS = STRUPCASE(MONTH_NAMES(/SHORT))
    W=WINDOW(DIMENSIONS=[XDIF*4,YDIF*3+CBARSZ])
    FOR N=0, N_ELEMENTS(FILES)-1 DO BEGIN
      D = STRUCT_SD_READ(FILES(N),STRUCT=MSTRUCT)
      POS = [XPOS(N),YPOS(N),XPOS(N)+XDIF,YPOS(N)+YDIF]
      IMD = STRUCT_SD_2IMAGE_NG(MSTRUCT,/ADD_LAND,/ADD_COAST,MAP_OUT=MAP_OUT,SPECIAL_SCALE=SPECIAL_SCALE,USE_PROD=USE_PROD,IMG_POSITION=POS,/DEVICE,/CURRENT)
      TD  = TEXT(XPOS(N)+10,YPOS(N)+YDIF-35,LABELS(N),/CURRENT,/DEVICE,FONT_STYLE=1,FONT_SIZE=22)
    ENDFOR
    
    PX = (XDIF*4-CBAR_WIDTH)/2
    PY = CBARSZ - CBAR_HEIGHT*2
    BAR = COLOR_BAR_SCALE_NG(PROD='CHLOR_A',SPECIAL_SCALE=SPECIAL_SCALE,PX=PX,PY=90,CHARSIZE=22,BACKGROUND=252,XDIM=CBAR_WIDTH,YDIM=CBAR_HEIGHT,PAL='PAL_SW3',LAYOUT=LAYOUT,$
      NO_NAME=no_name,NO_UNIT=no_unit,TITLE=UNITS('CHLOROPHYLL'),HORIZONTAL=1,BOTTOM=1,FONT='HELVETICA')
    W.SAVE,FIX_PATH(!S.PROJECTS + 'DEMO_PLOTS\GOM_TIMESERIES.PNG'),RESOLUTION=600
    W.CLOSE  
    STOP
  ENDIF


  IF DO_PP_COMPOSITE GE 1 THEN BEGIN
    MICRO = STRUCT_SD_READ(FILE_SEARCH(FIX_PATH(!S.DATASETS + 'PP-SEAWIFS-AVHRR-MLAC\NEC\STATS\MICROPP-MARMAP_PAN_VGPM2\ANNUAL*MICROPP-MARMAP_PAN_VGPM2-MEAN.SAVE')),STRUCT=MSTRUCT)
    NANO  = STRUCT_SD_READ(FILE_SEARCH(FIX_PATH(!S.DATASETS + 'PP-SEAWIFS-AVHRR-MLAC\NEC\STATS\NANOPICOPP-MARMAP_PAN_VGPM2\ANNUAL*NANOPICOPP-MARMAP_PAN_VGPM2-MEAN.SAVE')),STRUCT=NSTRUCT)
    PP    = STRUCT_SD_READ(FILE_SEARCH(FIX_PATH(!S.DATASETS + 'PP-SEAWIFS-AVHRR-MLAC\NEC\STATS\PPD-VGPM2\ANNUAL*PPD-VGPM2-MEAN.SAVE')),STRUCT=PSTRUCT)   
    
    MAP_OUT = 'NEC'
    USE_PROD = 'PPD'
    W = WINDOW(DIMENSIONS=[768,356])
    
    IMD = STRUCT_SD_2IMAGE_NG(PSTRUCT,/ADD_LAND,/ADD_COAST,MAP_OUT=MAP_OUT,SPECIAL_SCALE=SPECIAL_SCALE,USE_PROD=USE_PROD,IMG_POSITION=[0,100,256,356],MISS_COLOR=0,OUTSCAN_COLOR=0,OUTMAP_COLOR=0,/DEVICE,/CURRENT)
    IMD = STRUCT_SD_2IMAGE_NG(MSTRUCT,/ADD_LAND,/ADD_COAST,MAP_OUT=MAP_OUT,SPECIAL_SCALE=SPECIAL_SCALE,USE_PROD=USE_PROD,IMG_POSITION=[256,100,512,356],MISS_COLOR=0,OUTSCAN_COLOR=0,OUTMAP_COLOR=0,/DEVICE,/CURRENT)
    IMD = STRUCT_SD_2IMAGE_NG(NSTRUCT,/ADD_LAND,/ADD_COAST,MAP_OUT=MAP_OUT,SPECIAL_SCALE=SPECIAL_SCALE,USE_PROD=USE_PROD,IMG_POSITION=[512,100,768,356],MISS_COLOR=0,OUTSCAN_COLOR=0,OUTMAP_COLOR=0,/DEVICE,/CURRENT)
    
    TD  = TEXT(10,340,'Total',/CURRENT,/DEVICE,FONT_STYLE=1)
    TD  = TEXT(266,340,'Microplankton',/CURRENT,/DEVICE,FONT_STYLE=1)
    TD  = TEXT(522,340,'Nano+Picoplankton',/CURRENT,/DEVICE,FONT_STYLE=1)
    
    BAR = COLOR_BAR_SCALE_NG(PROD='PPD',SPECIAL_SCALE=SPECIAL_SCALE,PX=50,PY=70,CHARSIZE=14,BACKGROUND=252,XDIM=668,YDIM=20,PAL='PAL_SW3',LAYOUT=LAYOUT,$
      NO_NAME=no_name,NO_UNIT=no_unit,TITLE=UNITS('PPD'),HORIZONTAL=1,BOTTOM=1,FONT='HELVETICA')
    W.SAVE,FIX_PATH('N:\DATASETS\PP-SEAWIFS-AVHRR-MLAC\NEC\STATS\PP_PHYTOPLANKTON_COMPOSITION_FIG.PNG'),RESOLUTION=600
    STOP
  ENDIF


  IF DO_PHYTO_COMPOSITE GE 1 THEN BEGIN
;    DIATOM = STRUCT_SD_READ(FILE_SEARCH(FIX_PATH(!S.DATASETS + 'OC-SEAWIFS-MLAC\NEC\STATS\DIATOM-PAN\ANNUAL*DIATOM-PAN-MEAN.SAVE')),STRUCT=DSTRUCT)
;    DINO   = STRUCT_SD_READ(FILE_SEARCH(FIX_PATH(!S.DATASETS + 'OC-SEAWIFS-MLAC\NEC\STATS\DINOFLAGELLATE-PAN\ANNUAL*DINOFLAGELLATE-PAN-MEAN.SAVE')),STRUCT=NSTRUCT)
;    CRYPTO = STRUCT_SD_READ(FILE_SEARCH(FIX_PATH(!S.DATASETS + 'OC-SEAWIFS-MLAC\NEC\STATS\CRYPTOPHYTE-PAN\ANNUAL*CRYPTOPHYTE-PAN-MEAN.SAVE')),STRUCT=CSTRUCT)
;    
;    MAP_OUT = 'MAB'
;    SPECIAL_SCALE = 'MEDLOW'
;    W = WINDOW(DIMENSIONS=[702,380])
;    
;    IMD = STRUCT_SD_2IMAGE_NG(DSTRUCT,/ADD_LAND,/ADD_COAST,MAP_OUT=MAP_OUT,SPECIAL_SCALE=SPECIAL_SCALE,IMG_POSITION=[0,100,234,380],MISS_COLOR=0,OUTSCAN_COLOR=0,OUTMAP_COLOR=0,/DEVICE,/CURRENT)
;    IMD = STRUCT_SD_2IMAGE_NG(NSTRUCT,/ADD_LAND,/ADD_COAST,MAP_OUT=MAP_OUT,SPECIAL_SCALE=SPECIAL_SCALE,IMG_POSITION=[234,100,468,380],MISS_COLOR=0,OUTSCAN_COLOR=0,OUTMAP_COLOR=0,/DEVICE,/CURRENT)
;    IMD = STRUCT_SD_2IMAGE_NG(CSTRUCT,/ADD_LAND,/ADD_COAST,MAP_OUT=MAP_OUT,SPECIAL_SCALE=SPECIAL_SCALE,IMG_POSITION=[468,100,700,380],MISS_COLOR=0,OUTSCAN_COLOR=0,OUTMAP_COLOR=0,/DEVICE,/CURRENT)
;    
;    TD  = TEXT(10,360,'Diatoms',/CURRENT,/DEVICE,FONT_STYLE=1)
;    TD  = TEXT(244,360,'Dinoflagellates',/CURRENT,/DEVICE,FONT_STYLE=1)
;    TD  = TEXT(478,360,'Cryptophytes',/CURRENT,/DEVICE,FONT_STYLE=1)
;    
;    BAR = COLOR_BAR_SCALE_NG(PROD='CHLOR_A',SPECIAL_SCALE=SPECIAL_SCALE,PX=50,PY=70,CHARSIZE=14,BACKGROUND=252,XDIM=600,YDIM=20,PAL='PAL_SW3',LAYOUT=LAYOUT,$
;      NO_NAME=no_name,NO_UNIT=no_unit,TITLE=UNITS('CHLOROPHYLL'),HORIZONTAL=1,BOTTOM=1,FONT='HELVETICA')
;   W.SAVE,'N:\PROPOSALS\NASA-IDS-ECoS-2013\PHYTOPLANKTON_COMPOSITION_FIG.PNG',RESOLUTION=300
;   
   DIATOM = STRUCT_SD_READ(FILE_SEARCH(FIX_PATH(!S.DATASETS + 'OC-SEAWIFS-MLAC\NEC\STATS\DIATOM_PERCENTAGE-PAN\ANNUAL*DIATOM_PERCENTAGE-PAN-MEAN.SAVE')),STRUCT=DSTRUCT)
    DINO   = STRUCT_SD_READ(FILE_SEARCH(FIX_PATH(!S.DATASETS + 'OC-SEAWIFS-MLAC\NEC\STATS\DINOFLAGELLATE_PERCENTAGE-PAN\ANNUAL*DINOFLAGELLATE_PERCENTAGE-PAN-MEAN.SAVE')),STRUCT=NSTRUCT)
    CRYPTO = STRUCT_SD_READ(FILE_SEARCH(FIX_PATH(!S.DATASETS + 'OC-SEAWIFS-MLAC\NEC\STATS\CRYPTOPHYTE_PERCENTAGE-PAN\ANNUAL*CRYPTOPHYTE_PERCENTAGE-PAN-MEAN.SAVE')),STRUCT=CSTRUCT)
    BROWN = STRUCT_SD_READ(FILE_SEARCH(FIX_PATH(!S.DATASETS + 'OC-SEAWIFS-MLAC\NEC\STATS\BROWN_PERCENTAGE-PAN\ANNUAL*BROWN_PERCENTAGE-PAN-MEAN.SAVE')),STRUCT=BSTRUCT)
    GREEN = STRUCT_SD_READ(FILE_SEARCH(FIX_PATH(!S.DATASETS + 'OC-SEAWIFS-MLAC\NEC\STATS\GREEN_PERCENTAGE-PAN\ANNUAL*GREEN_PERCENTAGE-PAN-MEAN.SAVE')),STRUCT=GSTRUCT)
    
    MAP_OUT = 'MAB'
    USE_PROD = 'PERCENT'
    SPECIAL_SCALE = '50'
    W = WINDOW(DIMENSIONS=[1168,380])
    
    IMD = STRUCT_SD_2IMAGE_NG(DSTRUCT,/ADD_LAND,/ADD_COAST,MAP_OUT=MAP_OUT,SPECIAL_SCALE=SPECIAL_SCALE,IMG_POSITION=[0,100,234,380],MISS_COLOR=0,OUTSCAN_COLOR=0,OUTMAP_COLOR=0,/DEVICE,/CURRENT)
    IMD = STRUCT_SD_2IMAGE_NG(NSTRUCT,/ADD_LAND,/ADD_COAST,MAP_OUT=MAP_OUT,SPECIAL_SCALE=SPECIAL_SCALE,IMG_POSITION=[234,100,468,380],MISS_COLOR=0,OUTSCAN_COLOR=0,OUTMAP_COLOR=0,/DEVICE,/CURRENT)
    IMD = STRUCT_SD_2IMAGE_NG(CSTRUCT,/ADD_LAND,/ADD_COAST,MAP_OUT=MAP_OUT,SPECIAL_SCALE=SPECIAL_SCALE,IMG_POSITION=[468,100,702,380],MISS_COLOR=0,OUTSCAN_COLOR=0,OUTMAP_COLOR=0,/DEVICE,/CURRENT)
    IMD = STRUCT_SD_2IMAGE_NG(BSTRUCT,/ADD_LAND,/ADD_COAST,MAP_OUT=MAP_OUT,SPECIAL_SCALE=SPECIAL_SCALE,IMG_POSITION=[702,100,936,380],MISS_COLOR=0,OUTSCAN_COLOR=0,OUTMAP_COLOR=0,/DEVICE,/CURRENT)
    IMD = STRUCT_SD_2IMAGE_NG(GSTRUCT,/ADD_LAND,/ADD_COAST,MAP_OUT=MAP_OUT,SPECIAL_SCALE=SPECIAL_SCALE,IMG_POSITION=[936,100,1170,380],MISS_COLOR=0,OUTSCAN_COLOR=0,OUTMAP_COLOR=0,/DEVICE,/CURRENT)
    
    TD  = TEXT(10,360,'Diatoms',/CURRENT,/DEVICE,FONT_STYLE=1)
    TD  = TEXT(244,360,'Dinoflagellates',/CURRENT,/DEVICE,FONT_STYLE=1)
    TD  = TEXT(478,360,'Cryptophytes',/CURRENT,/DEVICE,FONT_STYLE=1)
    TD  = TEXT(712,360,'Brown Algae',/CURRENT,/DEVICE,FONT_STYLE=1)
    TD  = TEXT(946,360,'Green Algae',/CURRENT,/DEVICE,FONT_STYLE=1)
    
    BAR = COLOR_BAR_SCALE_NG(PROD='PERCENT',SPECIAL_SCALE=SPECIAL_SCALE,PX=184,PY=70,CHARSIZE=14,BACKGROUND=252,XDIM=800,YDIM=20,PAL='PAL_SW3',LAYOUT=LAYOUT,$
      NO_NAME=no_name,NO_UNIT=no_unit,TITLE='Percent Composition (%)',HORIZONTAL=1,BOTTOM=1,FONT='HELVETICA')
   W.SAVE,'N:\PROPOSALS\NASA-IDS-ECoS-2013\PHYTOPLANKTON_PERCENT_COMPOSITION_FIG.PNG',RESOLUTION=300
   
   STOP 
  ENDIF
  
  IF DO_BARPLOT GE 1 THEN BEGIN
    CDATA = IDL_RESTORE(FIX_PATH(!S.DATASETS + 'OC-CZCS-4\GEQ\TS_SUBAREAS\A_ANNUAL_MANNUAL-MASK_SUBAREA-GEQ-PXY_8640_4320-LME_UPWELLING-CZCS-4-CHLOR_A-OC3C.SAVE'))
    SDATA = IDL_RESTORE(FIX_PATH(!S.DATASETS + 'OC-SEAWIFS-9\GEQ\TS_SUBAREAS\A_ANNUAL_MANNUAL-MASK_SUBAREA-GEQ-PXY_8640_4320-LME_UPWELLING-SEAWIFS-R2010-9-CHLOR_A-GSM_CHLOR_A-OC4_CHLOR_A-PAN.SAVE'))
 
    COK = WHERE(CDATA.PERIOD_CODE EQ 'ANNUAL')
    SOK = WHERE(SDATA.PERIOD_CODE EQ 'ANNUAL')    
    BC = BARPLOT(FLOAT(CDATA(COK).MEAN_CHLOR_A_OC3C),INDEX=0,NBARS=2,FONT_NAME='ARIAL',FILL_COLOR='ORANGE_RED',YRANGE=[0,0.8],XMINOR=0,XRANGE=[-0.5,3.5],YTITLE=UNITS('CHLOROPHYLL'))
    BS = BARPLOT(FLOAT(SDATA(SOK).MEAN_CHLOR_A_OC4), INDEX=1,NBARS=2,FILL_COLOR='DARK_BLUE',/OVERPLOT)    
    BC.XTICKNAME = ['California','Humboldt','Iberian/Canary','Benguela']
    TC = TEXT(-0.4,0.72,'CZCS (1979-1985)', /CURRENT, COLOR='ORANGE_RED', /DATA)
    TS = TEXT(-0.4,0.68,'SeaWiFS (1998-2007)', /CURRENT, COLOR='DARK_BLUE', /DATA)
    BC.SAVE,'D:\PROJECTS\OVIATT\EBUE_BARPLOT.PNG'
  ENDIF
  
   IF DO_SIMPLE_TIMELINE GE 1 THEN BEGIN
    CDATA = IDL_RESTORE(FIX_PATH(!S.DATASETS + 'OC-CZCS-4\GEQ\TS_SUBAREAS\A_ANNUAL_MANNUAL-MASK_SUBAREA-GEQ-PXY_8640_4320-LME_UPWELLING-CZCS-4-CHLOR_A-OC3C.SAVE'))
    SDATA = IDL_RESTORE(FIX_PATH(!S.DATASETS + 'OC-SEAWIFS-9\GEQ\TS_SUBAREAS\A_ANNUAL_MANNUAL-MASK_SUBAREA-GEQ-PXY_8640_4320-LME_UPWELLING-SEAWIFS-R2010-9-CHLOR_A-GSM_CHLOR_A-OC4_CHLOR_A-PAN.SAVE'))
 
    CODES = ['5','6','7','8']
    COLORS = ['ORANGE_RED','NAVY','LIME_GREEN','DEEP_SKY_BLUE']
    AX = ['','79','80','81','82','83','84','85','','98','99','00','01','02','03','04','05','06','07','']    
    P = PLOT([1978,1997],[0,1],YRANGE=[0,1],/NODATA,XMINOR=0,XMAJOR=20,XRANGE=[1978,1997],XSTYLE=1,YTITLE=UNITS('CHLOROPHYLL'))
    FOR N=0, N_ELEMENTS(CODES)-1 DO BEGIN
      COK = WHERE(CDATA.PERIOD_CODE EQ 'A' AND CDATA.SUBAREA_CODE EQ CODES(N))
      SOK = WHERE(SDATA.PERIOD_CODE EQ 'A' AND SDATA.SUBAREA_CODE EQ CODES(N) AND DATE_2YEAR(PERIOD_2DATE(SDATA.PERIOD)) LT 2008)      
      DATE = [DATE_2YEAR(PERIOD_2DATE(CDATA(COK).PERIOD)),DATE_2YEAR(PERIOD_2DATE(SDATA(SOK).PERIOD))-10]
      DATA = [FLOAT(CDATA(COK).MEAN_CHLOR_A_OC3C),FLOAT(SDATA(SOK).MEAN_CHLOR_A_OC4)]
      P1 = PLOT(FIX(DATE),DATA,/OVERPLOT,SYMBOL='CIRCLE',SYM_COLOR=COLORS(N),/SYM_FILLED,XRANGE=[1978,1999],XSTYLE=1)
    ENDFOR 
    P.XTICKNAME=AX 
    TC = TEXT(1980,0.1,'CZCS (1979-1985)', /CURRENT,  /DATA)
    TS = TEXT(1990,0.1,'SeaWiFS (1998-2007)', /CURRENT,/DATA)
    P.SAVE,'D:\PROJECTS\OVIATT\EBUE_TIMESERIES.PNG'
  ENDIF
  
  IF CHLOR_COMPARISON GE 1 THEN BEGIN
    DATA = READALL(FIX_PATH(!S.PROJECTS + 'CliVEC\DATA\CRUISE_DATA\CLIVEC_CRUISE_DATA_042012.csv'))
    
  ENDIF
  
  IF DO_BYR_PAL GE 1 THEN BEGIN
  	
;  	RGB = CPAL_READ('PAL_SW3')
;  	R = RGB(0,*) & RR = R(1:250) & RR = REVERSE(RR) & R(1:250) = RR
;  	G = RGB(1,*) & GG = G(1:250) & GG = REVERSE(GG) & G(1:250) = GG
;  	B = RGB(2,*) & BB = B(1:250) & BB = REVERSE(BB) & B(1:250) = BB
;  	
;  	RGB(0,*) = R
;  	RGB(1,*) = G
;  	RGB(2,*) = B
;  	
;  	W = WINDOW(DIMENSIONS=[800,200])
;  	ARR    = FLTARR(200,200)
;  	FOR I = 0, 199 DO ARR(*,I) = (0+(100/199.)*FINDGEN(200))            ; scale the array to 200 intervals ranging from 0 to 100 (adapted from the jhuapl routine maken)
;  	X = [MIN(ARR),MAX(ARR)]
;  	IM = IMAGE(ARR,/CURRENT,RGB_TABLE=RGB,LAYOUT=[2,1,1],TITLE='LINEAR')
;  	
  	
  	RGB = CPAL_READ('PAL_ANOMG')
    R = RGB(0,*)  
    G = RGB(1,*)  
    B = RGB(2,*)  
      	
    INTERVALS  = [0,      1,   50,   110,   125,   140,   250,    251,252,253,254,255]
    RR = INTERPOL([0,  R(10),R(50),R(110),R(125),R(140),R(225),   128,160,192,224,255],INTERVALS,INDGEN(256))
    GG = INTERPOL([0,  G(10),G(50),G(110),G(125),G(140),G(225),   128,160,192,224,255],INTERVALS,INDGEN(256))
    BB = INTERPOL([0,  B(10),B(50),B(110),B(125),B(140),B(225),   128,160,192,224,255],INTERVALS,INDGEN(256))
    
    PAL = BYTARR(3,N_ELEMENTS(RR))
    PAL(0,*) = RR
    PAL(1,*) = GG
    PAL(2,*) = BB
    
    PALLIST = LIST()
    FOR I = 0, N_ELEMENTS(R)-1 DO PALLIST.ADD,REFORM(PAL[*,I])
    
  ;  W = WINDOW(DIMENSIONS=[800,800],LAYOUT=[2,1,1])
    ARR    = FLTARR(500,500)
    FOR I = 0, 499 DO ARR(*,I) = (0+(100/499.)*FINDGEN(500))            ; scale the array to 200 intervals ranging from 0 to 100 (adapted from the jhuapl routine maken)
    X = [MIN(ARR),MAX(ARR)]
    IM = IMAGE(ARR,RGB_TABLE=PAL,TITLE='LINEAR')
    
    WRITEPAL,'pal_anom_grey',RR,GG,BB

  	
  STOP
    INTERVALS  = [0,1,  120,128, 250,251,252,253,254,255]
    R = INTERPOL([0,0,  255,255,245,128,160,192,224,255],INTERVALS,INDGEN(256)) 
    G = INTERPOL([0,0,  255,255,0,  128,160,192,224,255],INTERVALS,INDGEN(256)) 
    B = INTERPOL([0,255,204,204,0,  128,160,192,224,255],INTERVALS,INDGEN(256)) 

    PAL = BYTARR(3,N_ELEMENTS(R))
    PAL(0,*) = R
    PAL(1,*) = G
    PAL(2,*) = B
    
    PALLIST = LIST()
    FOR I = 0, N_ELEMENTS(R)-1 DO PALLIST.ADD,REFORM(PAL[*,I])
        
    W = WINDOW(DIMENSIONS=[800,800],LAYOUT=[2,1,1])
    ARR    = FLTARR(200,200) 
    FOR I = 0, 199 DO ARR(*,I) = (0+(100/199.)*FINDGEN(200))            ; scale the array to 200 intervals ranging from 0 to 100 (adapted from the jhuapl routine maken)     
    X = [MIN(ARR),MAX(ARR)]
    IM = IMAGE(ARR,/CURRENT,RGB_TABLE=PAL,LAYOUT=[2,1,1],TITLE='LINEAR')
    
    WRITEPAL,'pal_dif_byr',R,G,B
   
 STOP
  
  ENDIF
  
  IF WHITE_CENTERED_PAL GE 1 THEN BEGIN
    INTERVALS  = [0,1,  20, 80, 100,105,145,170,195,250,251,252,253,254,255]
    R = INTERPOL([0,0,  0,  51, 230,255,255,255,255,255,128,160,192,224,255],INTERVALS,INDGEN(256)) 
    G = INTERPOL([0,255,191,0,  230,255,255,0,  153,255,128,160,192,224,255],INTERVALS,INDGEN(256)) 
    B = INTERPOL([0,255,255,255,250,255,255,0,  18, 0,  128,160,192,224,255],INTERVALS,INDGEN(256)) 

    PAL = BYTARR(3,N_ELEMENTS(R))
    PAL(0,*) = R
    PAL(1,*) = G
    PAL(2,*) = B
    
    PALLIST = LIST()
    FOR I = 0, N_ELEMENTS(R)-1 DO PALLIST.ADD,REFORM(PAL[*,I])
        
    W = WINDOW(DIMENSIONS=[800,800],LAYOUT=[2,1,1])
    ARR    = FLTARR(200,200) 
    FOR I = 0, 199 DO ARR(*,I) = (0+(100/199.)*FINDGEN(200))            ; scale the array to 200 intervals ranging from 0 to 100 (adapted from the jhuapl routine maken)     
    X = [MIN(ARR),MAX(ARR)]
    IM = IMAGE(ARR,/CURRENT,RGB_TABLE=PAL,LAYOUT=[2,1,1],TITLE='LINEAR')
    
    WRITEPAL,'pal_anomcy',R,G,B
   
 STOP 
  ENDIF
  
  IF RWB_GREY_PAL GE 1 THEN BEGIN
    INTERVALS  = [0, 1,  110,140,250,251,252,253,254,255]
    R = INTERPOL([0, 0,  240,240,245,128,160,192,224,255],INTERVALS,INDGEN(256))
    G = INTERPOL([0, 0,  240,240,0,  128,160,192,224,255],INTERVALS,INDGEN(256))
    B = INTERPOL([0, 245,240,240,0,  128,160,192,224,255],INTERVALS,INDGEN(256))
    
    PAL = BYTARR(3,N_ELEMENTS(R))
    PAL(0,*) = R
    PAL(1,*) = G
    PAL(2,*) = B
    
    PALLIST = LIST()
    FOR I = 0, N_ELEMENTS(R)-1 DO PALLIST.ADD,REFORM(PAL[*,I])
    
    W = WINDOW(DIMENSIONS=[800,800],LAYOUT=[2,1,1])
    ARR    = FLTARR(200,200)
    FOR I = 0, 199 DO ARR(*,I) = (0+(100/199.)*FINDGEN(200))            ; scale the array to 200 intervals ranging from 0 to 100 (adapted from the jhuapl routine maken)
    X = [MIN(ARR),MAX(ARR)]
    IM = IMAGE(ARR,/CURRENT,RGB_TABLE=PAL,LAYOUT=[2,1,1],TITLE='LINEAR')
    
    WRITEPAL,'pal_anom_rgb',R,G,B
    
    STOP
  ENDIF
  
  IF ANOM_PAL GE 1 THEN BEGIN
    INTERVALS  = [0, 1,   25, 50, 75,100,110,115,135,140,150,160,175,200,225,250,251,252,253,254,255]
    R = INTERPOL([0, 132, 75, 12,  0,  0,  0,236,236,233,255,255,255,255,255,255,128,160,192,224,255],INTERVALS,INDGEN(256))
    G = INTERPOL([0, 0,    0,  0,125,239,255,236,236,255,234,202,150, 70,  0,  0,128,160,192,224,255],INTERVALS,INDGEN(256))
    B = INTERPOL([0, 124,181,244,255,255,221,236,236,  0,  0,  0,  0,  0, 23,255,128,160,192,224,255],INTERVALS,INDGEN(256))
    
    PAL = BYTARR(3,N_ELEMENTS(R))
    PAL(0,*) = R
    PAL(1,*) = G
    PAL(2,*) = B
    
    PALLIST = LIST()
    FOR I = 0, N_ELEMENTS(R)-1 DO PALLIST.ADD,REFORM(PAL[*,I])
     
    W = WINDOW(DIMENSIONS=[800,800],LAYOUT=[2,1,1])
    ARR    = FLTARR(200,200)
    FOR I = 0, 199 DO ARR(*,I) = (0+(100/199.)*FINDGEN(200))            ; scale the array to 200 intervals ranging from 0 to 100 (adapted from the jhuapl routine maken)
    X = [MIN(ARR),MAX(ARR)]
    IM = IMAGE(ARR,/CURRENT,RGB_TABLE=PAL,LAYOUT=[2,1,1],TITLE='LINEAR')
    
    WRITEPAL,'pal_anomg',R,G,B
    FILE_DOC,'pal_anomg' 
    STOP
    IM.CLOSE
  ENDIF
  
  IF GRAY_REVERSE_PAL GE 1 THEN BEGIN
    PAL_GRAY_IDL,R,G,B
    RR = REVERSE(R)
    GG = REVERSE(G)
    BB = REVERSE(B)
    
    I = [0,251,252,253,254,255]
    C = [0,128,160,192,224,255]
    
    FOR N=0, N_ELEMENTS(I)-1 DO BEGIN
      RR(I(N)) = C(N)
      GG(I(N)) = C(N)
      BB(I(N)) = C(N)
    ENDFOR
    
    PAL = BYTARR(3,N_ELEMENTS(RR))
    PAL(0,*) = RR
    PAL(1,*) = GG
    PAL(2,*) = BB
    
    W = WINDOW(DIMENSIONS=[800,800],LAYOUT=[2,1,1])
    ARR    = FLTARR(200,200)
    FOR I = 0, 199 DO ARR(*,I) = (0+(100/199.)*FINDGEN(200))            ; scale the array to 200 intervals ranging from 0 to 100 (adapted from the jhuapl routine maken)
    X = [MIN(ARR),MAX(ARR)]
    IM = IMAGE(ARR,/CURRENT,RGB_TABLE=PAL,LAYOUT=[2,1,1],TITLE='LINEAR')
    
    WRITEPAL,'pal_gray_reverse',RR,GG,BB
    FILE_DOC,'pal_gray_reverse'
    STOP
    IM.CLOSE
  ENDIF  
  
  IF IMG_LOCATIONS GE 1 THEN BEGIN
    W = WINDOW(DIMENSIONS=[1024,712])
    N = READ_LANDMASK(MAP='NEC')
    E = READ_LANDMASK(MAP='EC')
    IN = IMAGE(N,/CURRENT,POSITION=[000,000,612,612],IMAGE_DIMENSIONS=[512,512],RGB_TABLE=CPAL_READ('PAL_36'),/DEVICE);IMAGE_LOCATION=[600,100],DIMENSIONS=[1024,1024],
    IE = IMAGE(E,/CURRENT,POSITION=[500,100,1012,712],IMAGE_DIMENSIONS=[512,512],RGB_TABLE=CPAL_READ('PAL_36'),/DEVICE);IMAGE_LOCATION=[600,100],DIMENSIONS=[1024,1024],  
    BAR = COLOR_BAR_SCALE_NG(PROD='NUM',SPECIAL_SCALE=SPECIAL_SCALE,PX=200,PY=10,CHARSIZE=14,BACKGROUND=252,XDIM=200,YDIM=20,PAL='PAL_36',LAYOUT=LAYOUT,$
          NO_NAME=no_name,NO_UNIT=no_unit,TITLE='LANDMASK',VERTICAL=VERTICAL,HORIZONTAL=HORIZONTAL,BOTTOM=BOTTOM,TOP=TOP,LEFT=LEFT,RIGHT=RIGHT,FONT='HELVETICA')

  STOP
  ENDIF  
  
  IF MARMAP_STATIONS GE 1 THEN BEGIN
    DATA = READALL(FIX_PATH(!S.PROJECTS+'MARMAP_OPAL\DATA\MARMAP_INTEGRATED_PP.CSV'))
       
    SUBAREAFILE     = !S.IMAGES+'MASK_SUBAREA-NEC-PXY_1024_1024-GFISH4.SAVE'    
    D = STRUCT_SD_READ(SUBAREAFILE,STRUCT=STRUCT)  
    ZWIN, [1024,1024]
    MAP_NEC    
    PXPY = MAP_DEG2IMAGE(D,FLOAT(DATA.LON),FLOAT(DATA.LAT),X=X,Y=Y,AROUND=0)
    ZWIN
    
    IM = STRUCT_SD_2IMAGE_NG(STRUCT,/ADD_LAND,/ADD_COAST)
    T  = TEXT(30,970,'MARMAP Primary Production Stations',/DEVICE,FONT_SIZE=20)
    FOR N=0,N_ELEMENTS(DATA)-1 DO BEGIN
      PRINT, N
      S = SYMBOL(X(N),Y(N),'STAR',/DEVICE,SYM_COLOR='BLACK',/SYM_FILLED,SYM_SIZE=1.25)
    ENDFOR      
    STOP
  ENDIF
  
  IF DO_SD_COMPARISONS GE 1 THEN BEGIN
     
     ADIR = 'D:\DATASETS\SST-AVHRR-4-GEQ\STATS\'
     BDIR = 'D:\DATASETS\SST-4-NEC\STATS\'
     CDIR = 'D:\DATASETS\SST-4-NEC\COMPARISONS\'
     
     PERIOD_CODE = 'A'
     MAP = 'NEC'
     
     BUFFER = 0
     
     AFILES = FILE_SEARCH(ADIR+PERIOD_CODE+'_2*AVHRR-PFQ3-4-GEQ-SST-MEAN.SAVE')
     BFILES = FILE_SEARCH(BDIR+PERIOD_CODE+'_2*PAT11-4-NEC-SST-N_11UM-MEAN.SAVE')
         
     SD_COMPARISONS,AFILES,BFILES,MAP_OUT=MAP,DIR_OUT=CDIR,OVERWRITE=OVERWRITE,BUFFER=BUFFER
  STOP
  ENDIF
  
  IF DO_COMPOSITE GE 1 THEN BEGIN
    DIR      = 'D:\DATASETS\OC-SEAWIFS-MLAC\NEC\STATS\'
    DIR_OUT  = 'D:\DATASETS\OC-SEAWIFS-MLAC\NEC\STATS_BROWSE\'
    DIATOM   = STRUCT_SD_READ(DIR+'DIATOM_PERCENTAGE-PAN\MANNUAL_1997_2005-SEAWIFS-R2010-MLAC-NEC-DIATOM_PERCENTAGE-PAN-MEAN.SAVE',STRUCT=DIATSTRUCT,SUBS=SUBS)
    DINO     = STRUCT_SD_READ(DIR+'DINOFLAGELLATE_PERCENTAGE-PAN\MANNUAL_1997_2010-SEAWIFS-R2010-MLAC-NEC-DINOFLAGELLATE_PERCENTAGE-PAN-MEAN.SAVE',STRUCT=DINOSTRUCT,SUBS=SUBS)
    PICO     = STRUCT_SD_READ(DIR+'PICO_PERCENTAGE-PAN\MANNUAL_1997_2005-SEAWIFS-R2010-MLAC-NEC-PICO_PERCENTAGE-PAN-MEAN.SAVE',STRUCT=PICOSTRUCT,SUBS=SUBS)
    ;W = WINDOW(DIMENSIONS=[1536,512],LAYOUT=[3,1,0])
    LME_MASK        = 'D:\IDL\IMAGES\MASK_SUBAREA-NEC-PXY_1024_1024-ESTUARY_SHELF-MASK.PNG'
    MASK = READALL(LME_MASK)
    OK_MASK = WHERE(MASK NE 32,COUNT_MASK)
    DIATSTRUCT.IMAGE(OK_MASK) = MISSINGS(0.0)
    DINOSTRUCT.IMAGE(OK_MASK) = MISSINGS(0.0)
    PICOSTRUCT.IMAGE(OK_MASK) = MISSINGS(0.0)
    SPECIAL_SCALE='50'
    IMAGE1 = STRUCT_SD_2IMAGE_NG(DIATSTRUCT,/ADD_LAND,/ADD_COAST,MISS_COLOR=253,/ADD_BATHY,BATHS=200,BATHY_THICK=3,BATHY_COLOR=251,SPECIAL_SCALE=SPECIAL_SCALE,/ADD_COLORBAR,USE_PROD='PERCENT',COLORBAR_TITLE='Percent Contribution (%)',ADD_LABEL='Diatoms');,/CURRENT,LAYOUT=[3,1,1])  
    IMAGE2 = STRUCT_SD_2IMAGE_NG(DINOSTRUCT,/ADD_LAND,/ADD_COAST,MISS_COLOR=253,/ADD_BATHY,BATHS=200,BATHY_THICK=3,BATHY_COLOR=255,SPECIAL_SCALE=SPECIAL_SCALE,/ADD_COLORBAR,USE_PROD='PERCENT',COLORBAR_TITLE='Percent Contribution (%)',ADD_LABEL='Dinoflagellates');,/CURRENT,LAYOUT=[3,1,2])
    IMAGE3 = STRUCT_SD_2IMAGE_NG(PICOSTRUCT,/ADD_LAND,/ADD_COAST,MISS_COLOR=253,/ADD_BATHY,BATHS=200,BATHY_THICK=3,BATHY_COLOR=255,SPECIAL_SCALE=SPECIAL_SCALE,/ADD_COLORBAR,USE_PROD='PERCENT',COLORBAR_TITLE='Percent Contribution (%)',ADD_LABEL='Picoplankton');,/CURRENT,LAYOUT=[3,1,3])
    IMAGE1.SAVE,DIR_OUT + 'DIATOM_PERCENTAGE-PAN\MANNUAL_1997_2005-SEAWIFS-R2010-MLAC-NEC-DIATOM_PERCENTAGE-PAN-MEAN.PNG',RESOLUTION=300
    IMAGE2.SAVE,DIR_OUT + 'DINOFLAGELLATE_PERCENTAGE-PAN\MANNUAL_1997_2010-SEAWIFS-R2010-MLAC-NEC-DINOFLAGELLATE_PERCENTAGE-PAN-MEAN.PNG',RESOLUTION=300
    IMAGE3.SAVE,DIR_OUT + 'PICO_PERCENTAGE-PAN\MANNUAL_1997_2005-SEAWIFS-R2010-MLAC-NEC-PICO_PERCENTAGE-PAN-MEAN.PNG',RESOLUTION=300
    
    FILES = DIR_OUT + ['DIATOM_PERCENTAGE-PAN\MANNUAL_1997_2005-SEAWIFS-R2010-MLAC-NEC-DIATOM_PERCENTAGE-PAN-MEAN.PNG',$
                       'DINOFLAGELLATE_PERCENTAGE-PAN\MANNUAL_1997_2010-SEAWIFS-R2010-MLAC-NEC-DINOFLAGELLATE_PERCENTAGE-PAN-MEAN.PNG',$
                       'PICO_PERCENTAGE-PAN\MANNUAL_1997_2005-SEAWIFS-R2010-MLAC-NEC-PICO_PERCENTAGE-PAN-MEAN.PNG']
    OUTFILE = DIR_OUT + 'PERCENT_PHYTOPLANKTON_COMPOSITE.PNG'                   
    IMAGE_WELD_PAGE,FILES=FILES,ROWS=1,COLS=3,PAL='PAL_SW3',PNGFILE=OUTFILE,SPACE=20,PX=px,py=py,BACKGROUND=255,/NOTRIM
    
  ENDIF ; DO_COMPOSITE


  IF DO_NAFO_IMAGES GE 1 THEN BEGIN
    PAL_36,R,G,B
    
    LAND_COLOR  = 32
    OCEAN_COLOR = 36
    COAST_COLOR = 0
    BATH_COLOR  = 31
    TEXT_COLOR  = 0
    SUB_COLOR   = [2,4,10,12,18,23]
    
    MAP = 'LME_NEWFOUNDLAND_LABRADOR_SHELF'
    LME_NAME = 'NEWFOUNDLAND_LABRADOR_SHELF'
    PNGFILES = !S.IMAGES + 'MASK_SUBAREA-LME_NEWFOUNDLAND_LABRADOR_SHELF-PXY_600_600-NAFO_'+['1_2J3K','2_2J3KL','3_2J3KLNO','4_3LNO','5_3M','6_NS']+'.PNG'
    OUTPNGS  = !S.IMAGES + 'MASK_SUBAREA-LME_NEWFOUNDLAND_LABRADOR_SHELF-PXY_600_600-NAFO_'+['1_2J3K','2_2J3KL','3_2J3KLNO','4_3LNO','5_3M','6_NS']+'-DISPLAY.PNG'
    TXT      = ['2J3K','2J3KL','2J3KLNO','3LNO','3M','NS']
    XPOS     = [0.33,0.66,0.99,0.33,0.66,0.99]
    YPOS     = [0.53,0.53,0.53,0.03,0.03,0.03]
    IM_SUB   = [2,2,2,2,3,2]
    MASK     = READ_LANDMASK(MAP=MAP,/STRUCT)
    IMG      = READ_LANDMASK(MAP=MAP)    
    BATH     = MAP_ADD_BATHY(IMG,BATHS=[1000],COLOR=BATH_COLOR,THICK=1,MAP='LMES',LME_NAME=LME_NAME)
    OK_BATH = WHERE(BATH EQ BATH_COLOR) 
    W = WINDOW(DIMENSIONS=[900,600]) 
    FOR NTH=0, N_ELEMENTS(PNGFILES)-1 DO BEGIN      
      IM_SUBS = READ_PNG(PNGFILES[NTH])
      IM_SUBS = IM_SUBS(0:2,*,*)
      IM_SUBS = COLOR_QUAN(IM_SUBS,1,R,G,B)
      OK_SUBS = WHERE(IM_SUBS EQ IM_SUB[NTH],COMPLEMENT=COMPLEMENT) ; NOTE: This value may change depending on the file.          
      PAL_36,R,G,B      
      DISIMG             = IMG      
      DISIMG(MASK.OCEAN) = OCEAN_COLOR
      DISIMG(MASK.LAND)  = LAND_COLOR
      DISIMG(MASK.COAST) = COAST_COLOR
      DISIMG(OK_SUBS)    = SUB_COLOR[NTH]
      DISIMG(OK_BATH)    = BATH_COLOR              
   ;   WRITE_PNG,OUTPNGS(NTH),DISIMG,R,G,B
      I = IMAGE(DISIMG,LAYOUT=[3,2,NTH+1],/CURRENT,MARGIN=0.01,RGB_TABLE=CPAL_READ('PAL_36'))
;      W = WINDOW(DIMENSIONS=[600,600])
;      I = IMAGE(DISIMG,MARGIN=0.0,RGB_TABLE=CPAL_READ('PAL_36'),/CURRENT)
      T = TEXT(XPOS[NTH],YPOS[NTH],'NAFO Subregion ' + NUM2STR(NTH+1) + ' (' + TXT[NTH] + ')',ALIGNMENT=1)
   ;   T = TEXT(0.99,0.03,'NAFO Subregion ' + NUM2STR(NTH+1) + ' (' + TXT(NTH) + ')',ALIGNMENT=1)
;      I.SAVE,OUTPNGS[NTH],RESOLUTION=300
;      I.CLOSE
    ENDFOR  
    W.SAVE,'D:\PROJECTS\EcoAP\NAFO\NAFO_SUBAREA-COMPOSITE.PNG',RESOLUTION=600
    I.CLOSE
    
  ENDIF ; DO_NAFO_IMAGES

  IF DO_COLORS GE 1 THEN BEGIN
    COLORS = TAG_NAMES(!COLOR)
    W = WINDOW(DIMENSIONS=[1024,1024])
    XPOS = 0.02
    YPOS = 0.97
    XCOUNT = 0
    FOR C = 0, N_ELEMENTS(COLORS)-1 DO BEGIN
      T = TEXT(XPOS,YPOS-(XCOUNT*0.025),COLORS(C),COLOR=!COLOR.(C),FONT_SIZE=18,FONT_STYLE='BOLD',/NORMAL,/CURRENT)
      XCOUNT = XCOUNT+1
      IF C EQ 37  THEN BEGIN & XPOS = 0.27 & XCOUNT = 0 & ENDIF
      IF C EQ 75  THEN BEGIN & XPOS = 0.52 & XCOUNT = 0 & ENDIF
      IF C EQ 112 THEN BEGIN & XPOS = 0.78 & XCOUNT = 0 & ENDIF 
    ENDFOR
STOP    
  ENDIF


  IF DO_GRIDDED_TIMESERIES GE 1 THEN BEGIN
  
    MINDATE = '20200101000000'
    MAXDATE = '20210101000000'
    PAL = 'PAL_SW3'
    VRANGE=[0.1,6]
    AX = DATE_AXIS([MINDATE,MAXDATE], /FYEAR)    
    X2TICKNAME = REPLICATE(' ',N_ELEMENTS(AX.TICKNAME))    
    YTICKNAMES=[' ',' ',' ']
    CHARSIZE = 2.5
    CCHARSIZE = 1.25
    MARGIN = [0.07,0.0,0.125,0.0]    
    YTITLE        = 'Chlorophyll !8a!7 (mg m!E-3!N)'
  
    SUBAREA_MAPS   = LIST('ECOREGIONS_FULL_NO_ESTUARIES','ESTUARY_SHELF_LME')
    SUBAREA_CODES  = LIST(['7','5','6','8'],'32')
    SUBAREA_TITLES = LIST(['Mid-Atlantic Bight','Georges Bank','Gulf of Maine','Scotian Shelf'],'Northeast Shelf LME')
    
    WTITLE = ['OC Algorithms','Pan Algorithm','','']
    DATE_RANGE = ['19980101','20101231']
    YRANGE  = LIST([0,3],[0,3],[0,0.5],[0,80])
    Y2RANGE = LIST([0.8,1.6],[0.4,1.2],[0,0.5],[0,80])    
    PROD_TAGS = ['CHLOR_A_OC'];, 'CHLOR_A_PAN']
    PRODS     = ['CHLOR_A'];,'CHLOROPHYLL']
    SPECIAL_SCALES = ['NARROW','NARROW','','']
    FOR R =0L, N_ELEMENTS(PRODS)-1 DO BEGIN
      APROD = VALIDS('PRODS',PRODS(R))
      IF PROD_TAGS(R) EQ 'CHLOR_A_OC' THEN BEGIN & CPROD = 'MEAN_CHLOR_A_OC'    & CNAME = 'FIRST_NAME_CHLOR_A_OC' & ENDIF $
                                      ELSE BEGIN & CPROD = 'MEAN_'+PROD_TAGS(R) & CNAME = 'FIRST_NAME_'+PROD_TAGS(R) & ENDELSE
      DIR_C = !S.DATASETS + 'OC-SEA_AQU-NEC'   + SL + 'TS_SUBAREAS' + SL
      
      FOR N=0L, N_ELEMENTS(SUBAREA_MAPS)-1 DO BEGIN
        CODES   = SUBAREA_CODES[N]
        TITLES  = SUBAREA_TITLES[N]        
        COMBO   = IDL_RESTORE(FILE_SEARCH(DIR_C + 'MULTI_PERIODS-*D_*' + SUBAREA_MAPS(N) + '*.SAVE')) & CTAGS = TAG_NAMES(COMBO) 
        CDATA   = COMBO[WHERE(STRMID(COMBO.PERIOD,0,2) EQ 'D_' AND COMBO.(WHERE(CTAGS EQ CNAME)) NE '')]  & FP = PARSE_IT(CDATA.(WHERE(CTAGS EQ CNAME)))          
      
        IF N_ELEMENTS(CODES) GT 1 THEN N_PLOTS = 61   ELSE N_PLOTS = 17
        IF N_ELEMENTS(CODES) GT 1 THEN YDIM    = 1140 ELSE YDIM    = 360
        W = WINDOW(DIMENSIONS=[900,YDIM],LAYOUT=[1,N_PLOTS,1],MARGIN=MARGIN)                              
        COUNTER = 3
        FOR CTH = 0L, N_ELEMENTS(CODES)-1 DO BEGIN
          OK  = WHERE(CDATA.SUBAREA_CODE EQ CODES(CTH) AND FP.YEAR_START GE '1998' AND FP.YEAR_START LE '2010')
          T   = CDATA[OK]
          TFP = FP[OK]
          YSET = WHERE_SETS(TFP.YEAR_START)
          FOR YTH = 0L, N_ELEMENTS(YSET)-1 DO BEGIN
            SUBS = WHERE_SETS_SUBS(YSET(YTH))
            YRSET = T(SUBS)
            YFP = TFP(SUBS)
            DATE = YDOY_2DATE('2020',DATE_2DOY(YFP.DATE_START))
            DATA = YRSET.(WHERE(CTAGS EQ CPROD)) 
            DEPTH = REPLICATE(0.5,N_ELEMENTS(DATA))
            LAYOUT=[1,N_PLOTS,COUNTER]            
            OK = WHERE(DATA NE MISSINGS(0.0)) 
            XTICKNAME = AX.TICKNAME
            IF YTH EQ N_ELEMENTS(YSET)-1 THEN NOXDATES = 0 ELSE NOXDATES = 1
            IF YTH EQ 0 THEN TITLE = TITLES(CTH) ELSE TITLE = ' '
            TIME_DEPTH_GRID_NG,DATE[OK],DEPTH[OK],DATA[OK],LOG=TDLOG,DEPTH_INTERVAL=0.5,MDATE=[MINDATE,MAXDATE],MDEPTH=[1,0],VRANGE=VRANGE,YRANGE=[0,25],CUTOFF=[1,0],YMAJOR=0,YMINOR=0,XMAJOR=AX.TICKS,XMINOR=0,XTICKVALUES=AX.TICKV,XTICKNAME=XTICKNAME,PAL=PAL,$
              /NODEPTH,DIMENSIONS=[365,10],NOXDATES=NOXDATES,AX_INTERVAL='MONTH',AY_GRID='YEAR',/FYEAR,YTITLE=YSET(YTH).VALUE+' ',TITLE=TITLE,MARGIN=MARGIN,FONT_SIZE=CHARSIZE,/INTERPOLATE,PROD=APROD, SPECIAL_SCALE=SPECIAL_SCALES(R),LAYOUT=LAYOUT,TARGET=TARGET

;            IF CTH EQ N_ELEMENTS(SCODES)-1 AND YTH EQ N_ELEMENTS(YSET)-1 THEN $
;            BAR=COLOR_BAR_SCALE(PROD=APROD,SPECIAL_SCALE=SPECIAL_SCALE,POSITION=[0.92, 0.095, 0.945, 0.998],CHARSIZE=2.25,/VERTICAL)
            COUNTER = COUNTER+1
          ENDFOR ; FOR YTH = 0L, N_ELEMENTS(YSET)-1 DO BEGIN   
          COUNTER = COUNTER+2   
        ENDFOR ; FOR CTH = 0L, N_ELEMENTS(SCODES)-1 DO BEGIN   
        IF N_ELEMENTS(CODES) GT 1 THEN BAR = COLOR_BAR_SCALE_NG(PROD=APROD,SPECIAL_SCALE=SPECIAL_SCALES(R),PX=800,PY=1080,CHARSIZE=12,BACKGROUND=BACKGROUND,XDIM=30,YDIM=1000,PAL='PAL_SW3',TITLE=UNITS('CHLOROPHYLL'),/VERTICAL,/RIGHT) $
                                  ELSE BAR = COLOR_BAR_SCALE_NG(PROD=APROD,SPECIAL_SCALE=SPECIAL_SCALES(R),PX=800,PY=320, CHARSIZE=12,BACKGROUND=BACKGROUND,XDIM=30,YDIM=280, PAL='PAL_SW3',TITLE=UNITS('CHLOROPHYLL'),/VERTICAL,/RIGHT) 
      ENDFOR ; FOR N=1L, N_ELEMENTS(SUBAREA_MAPS)-1 DO BEGIN       
    ENDFOR ; FOR R =0L, N_ELEMENTS(PRODS)-1 DO BEGIN              
  ENDIF 
  
  IF DO_REGION_TIMESERIES GE 1 THEN BEGIN
    SUBAREA_MAPS   = LIST('ESTUARY_SHELF_LME','ECOREGIONS_FULL_NO_ESTUARIES')
    SUBAREA_CODES  = LIST('32',                 ['7','5','6','8'])
    SUBAREA_TITLES = LIST('Northeast Shelf LME',['Mid-Atlantic Bight','Georges Bank','Gulf of Maine','Scotian Shelf'])
    WTITLE = ['OC Algorithms','Pan Algorithm','','']
    DATE_RANGE = ['19970101','20121201']
    
    PROD_TAGS = ['CHLOR_A_OC','CHLOR_A_PAN','A_CDOM_443_GSM','PAR']
    PRODS = ['CHLOROPHYLL','CHLOROPHYLL','A_CDOM','PAR']
    YRANGE  = LIST([0,3],[0,3],[0,0.5],[0,80])
    Y2RANGE = LIST([0.8,1.6],[0.4,1.2],[0,0.5],[0,80])
    COLORS = LIST('GREY',['BLUE','CYAN','RED','YELLOW_GREEN'])
    DO_M     = [0,0,0,0]
    DO_A     = [0,0,0,0]
    DO_MONTH = [0,0,0,0]
    DO_DOY   = [0,0,0,0]
    DO_WEEK  = [0,0,0,0]
    DO_DAY   = [1,0,0,0]
    DIR_S = !S.DATASETS + 'OC-SEAWIFS-9' + SL + 'TS_SUBAREAS' + SL
    DIR_M = !S.DATASETS + 'OC-MODIS-4'   + SL + 'TS_SUBAREAS' + SL  
    DIR_C = !S.DATASETS + 'OC-SEA_AQU'   + SL + 'TS_SUBAREAS' + SL      
    
    FOR R =0L, N_ELEMENTS(PRODS)-1 DO BEGIN
      APROD = PRODS(R)
      IF PROD_TAGS(R) EQ 'CHLOR_A_OC' THEN BEGIN & SPROD = 'MEAN_CHLOR_A_OC4'   & SNAME = 'FIRST_NAME_CHLOR_A_OC4'   & SN = 'N_CHLOR_A_OC4'   & SMIN = 'MIN_CHLOR_A_OC4'   & SMAX = 'MAX_CHLOR_A_OC4'   & SSTD = 'STD_CHLOR_A_OC4'    & $
                                                   MPROD = 'MEAN_CHLOR_A_OC3M'  & MNAME = 'FIRST_NAME_CHLOR_A_OC3M'  & MN = 'N_CHLOR_A_OC3M'  & MMIN = 'MIN_CHLOR_A_OC3M'  & MMAX = 'MAX_CHLOR_A_OC3M'  & MSTD = 'STD_CHLOR_A_OC3M'   & $
                                                   CPROD = 'MEAN_CHLOR_A_OC'    & CNAME = 'FIRST_NAME_CHLOR_A_OC'    & CN = 'N_CHLOR_A_OC'    & CMIN = 'MIN_CHLOR_A_OC'    & CMAX = 'MAX_CHLOR_A_OC'    & CSTD = 'STD_CHLOR_A_OC'     & ENDIF ELSE BEGIN $
                                                   SPROD = 'MEAN_'+PROD_TAGS(R) & SNAME = 'FIRST_NAME_'+PROD_TAGS(R) & SN = 'N_'+PROD_TAGS(R) & SMIN = 'MIN_'+PROD_TAGS(R) & SMAX = 'MAX_'+PROD_TAGS(R) & SSTD = 'MEAN_'+PROD_TAGS(R) & $
                                                   MPROD = 'MEAN_'+PROD_TAGS(R) & MNAME = 'FIRST_NAME_'+PROD_TAGS(R) & MN = 'N_'+PROD_TAGS(R) & MMIN = 'MIN_'+PROD_TAGS(R) & MMAX = 'MAX_'+PROD_TAGS(R) & MSTD = 'MEAN_'+PROD_TAGS(R) & $
                                                   CPROD = 'MEAN_'+PROD_TAGS(R) & CNAME = 'FIRST_NAME_'+PROD_TAGS(R) & CN = 'N_'+PROD_TAGS(R) & CMIN = 'MIN_'+PROD_TAGS(R) & CMAX = 'MAX_'+PROD_TAGS(R) & CSTD = 'MEAN_'+PROD_TAGS(R) & ENDELSE  
      
      IF DO_DAY(R) GE 1 THEN FOR N=0, N_ELEMENTS(SUBAREA_MAPS)-1 DO BEGIN      
        CODES   = SUBAREA_CODES(N)
        TITLES  = SUBAREA_TITLES(N)
        SEAWIFS = IDL_RESTORE(FILE_SEARCH(DIR_S + '*D_DOY*' + SUBAREA_MAPS(N) + '*.SAVE')) & STAGS = TAG_NAMES(SEAWIFS)
        MODIS   = IDL_RESTORE(FILE_SEARCH(DIR_M + '*D_DOY*' + SUBAREA_MAPS(N) + '*.SAVE')) & MTAGS = TAG_NAMES(MODIS)
        COMBO   = IDL_RESTORE(FILE_SEARCH(DIR_C + '*D_DOY*' + SUBAREA_MAPS(N) + '*.SAVE')) & CTAGS = TAG_NAMES(COMBO) 
      
        SDATA   = SEAWIFS[WHERE(STRMID(SEAWIFS.PERIOD,0,6) EQ 'D_2010' AND SEAWIFS.(WHERE(STAGS EQ SPROD)) NE MISSINGS(0.0))] 
        MDATA   = MODIS[WHERE(STRMID(MODIS.PERIOD,0,6)     EQ 'D_2010' AND MODIS.(WHERE(MTAGS EQ MPROD))   NE MISSINGS(0.0))]             
        CDATA   = COMBO[WHERE(STRMID(COMBO.PERIOD,0,6)     EQ 'D_2010' AND COMBO.(WHERE(CTAGS EQ CPROD))   NE MISSINGS(0.0))]     
        
        SPOS    = WHERE(STAGS EQ SPROD)
        MPOS    = WHERE(MTAGS EQ MPROD)
        CPOS    = WHERE(CTAGS EQ CPROD)
        
        SNUM    = SDATA.(WHERE(STAGS EQ SN))
        MNUM    = MDATA.(WHERE(MTAGS EQ MN))
        CNUM    = CDATA.(WHERE(CTAGS EQ CN))
        
        YTITLE = UNITS(APROD)         
        AX = DATE_AXIS(['20100101','20110101'],/MONTH)
        PAL_SW3,RED,GREEN,BLUE      
        IF N EQ 0 THEN BEGIN 
          W = WINDOW(DIMENSIONS=[1024,1024],WINDOW_TITLE=WTITLE(R))
   ;       P = PLOT(AX.JD,YRANGE(R),YTITLE=YTITLE,FONT_SIZE=14,XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,LAYOUT=[2,2,1],/NODATA,/CURRENT)
   ;       XTICKV = P.XTICKVALUES & OK = WHERE(JD_2MONTH(XTICKV) EQ '01',COUNT)
   ;       FOR G=1,COUNT-1 DO GR = PLOT([XTICKV(OK(G)),XTICKV(OK(G))],YRANGE(R),COLOR='GREY',/OVERPLOT,XRANGE=AX.JD,YRANGE=YRANGE(R))
   ;       T = TEXT(0.18,0.96,TITLES,COLOR='BLACK',FONT_SIZE=12,/NORMAL,TARGET=P)          
   ;       OK = WHERE(SDATA.SUBAREA_CODE EQ CODES(0)) & P1 = PLOT(PERIOD_2JD(SDATA[OK].PERIOD),SDATA[OK].(SPOS),XRANGE=AX.JD,YRANGE=[0,10],/OVERPLOT,COLOR='BLUE' ,SYMBOL='CIRCLE',SYM_SIZE=0.65,NAME='SeaWiFS')
   ;       OK = WHERE(MDATA.SUBAREA_CODE EQ CODES(0)) & P2 = PLOT(PERIOD_2JD(MDATA[OK].PERIOD),MDATA[OK].(MPOS),XRANGE=AX.JD,YRANGE=[0,10],/OVERPLOT,COLOR='RED'  ,SYMBOL='CIRCLE',SYM_SIZE=0.65,NAME='MODIS')
   ;       OK = WHERE(CDATA.SUBAREA_CODE EQ CODES(0)) & P3 = PLOT(PERIOD_2JD(CDATA[OK].PERIOD),CDATA[OK].(CPOS),XRANGE=AX.JD,YRANGE=[0,10],/YLOG,/OVERPLOT,COLOR='GREEN',SYMBOL='CIRCLE',SYM_SIZE=0.4, NAME='Merged',/SYM_FILLED)        
   ;       L = LEGEND(TARGET=[P1,P2,P3],POSITION=[.785,.97],/NORMAL,FONT_SIZE=9,SAMPLE_WIDTH=.075,VERTICAL_SPACING=0.004)
        ENDIF ELSE BEGIN  
          FOR C=0, N_ELEMENTS(CODES)-1 DO BEGIN        
            P = PLOT(AX.JD,YRANGE(R),YTITLE=YTITLE,FONT_SIZE=14,XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,LAYOUT=[2,2,C+1],/NODATA,/CURRENT)
            XTICKV = P.XTICKVALUES & OK = WHERE(JD_2MONTH(XTICKV) EQ '01',COUNT)
            FOR G=1,COUNT-1 DO GR = PLOT([XTICKV(OK(G)),XTICKV(OK(G))],YRANGE(R),COLOR='GREY',/OVERPLOT,XRANGE=AX.JD,YRANGE=YRANGE(R))
            ;T = TEXT(0.18,0.96-(.2*(C+1)),TITLES(C),COLOR='BLACK',FONT_SIZE=12,/NORMAL,TARGET=P)            
    ;        OK = WHERE(SDATA.SUBAREA_CODE EQ CODES(C)) & P1 = PLOT(PERIOD_2JD(SDATA[OK].PERIOD),SDATA[OK].(SPOS),XRANGE=AX.JD,YRANGE=[0,10],/OVERPLOT,COLOR='BLUE' ,SYMBOL='CIRCLE',SYM_SIZE=0.65,NAME='SeaWiFS')
    ;        OK = WHERE(MDATA.SUBAREA_CODE EQ CODES(C)) & P2 = PLOT(PERIOD_2JD(MDATA[OK].PERIOD),MDATA[OK].(MPOS),XRANGE=AX.JD,YRANGE=[0,10],/OVERPLOT,COLOR='RED'  ,SYMBOL='CIRCLE',SYM_SIZE=0.65,NAME='MODIS')              
                        
            OK = WHERE(CDATA.SUBAREA_CODE EQ CODES(C) AND (FLOAT(CNUM)/CDATA.N_SUBAREA) GT .01)
            CPER = SD_SCALES((FLOAT(CNUM[OK])/CDATA[OK].N_SUBAREA)*100,PROD='NUM',SPECIAL_SCALE='100',/DATA2BIN)
            VC = BYTARR(3,N_ELEMENTS(CPER))            
            FOR RR=0,N_ELEMENTS(CPER)-1 DO VC(0,RR) = RED(CPER(RR))
            FOR GG=0,N_ELEMENTS(CPER)-1 DO VC(1,GG) = GREEN(CPER(GG))
            FOR BB=0,N_ELEMENTS(CPER)-1 DO VC(2,BB) = BLUE(CPER(BB))
            P3 = PLOT(PERIOD_2JD(CDATA[OK].PERIOD),CDATA[OK].(CPOS),TITLE=TITLES(C),XRANGE=AX.JD,YRANGE=[0.1,100],/YLOG,XMINOR=0,/OVERPLOT,COLOR='GREY',THICK=0.75)            
            P3 = PLOT(PERIOD_2JD(CDATA[OK].PERIOD),CDATA[OK].(CPOS),TITLE=TITLES(C),XRANGE=AX.JD,YRANGE=[0.1,15],/YLOG,XMINOR=0,/OVERPLOT,VERT_COLORS=VC,RGB_TABLE=PAL,SYM_TRANSPARENCY=25,LINESTYLE=6,SYMBOL='CIRCLE',SYM_SIZE=0.5, NAME='Merged',/SYM_FILLED)                     
          ENDFOR
          BAR = COLOR_BAR_SCALE_NG(PROD='NUM',SPECIAL_SCALE='100',PX=312,PY=510,CHARSIZE=12,BACKGROUND=BACKGROUND,XDIM=400,YDIM=20,PAL='PAL_SW3',TITLE='Percent Subarea Pixels',/HORIZONTAL,/BOTTOM)
        ENDELSE          
      ENDFOR     
      
      IF DO_WEEK(R) GE 1 THEN FOR N=0L, N_ELEMENTS(SUBAREA_MAPS)-1 DO BEGIN
        CODES   = SUBAREA_CODES(N)
        TITLES  = SUBAREA_TITLES(N)
        ACOLOR  = COLORS(N)        
        COMBO   = IDL_RESTORE(FILE_SEARCH(DIR_C + 'MULTI_PERIODS-*' + SUBAREA_MAPS(N) + '*.SAVE')) & CTAGS = TAG_NAMES(COMBO)
        CDATA   = COMBO[WHERE(STRMID(COMBO.PERIOD,0,5)     EQ 'WEEK_' AND COMBO.(WHERE(CTAGS EQ CNAME)) NE '')]         
        ;CDATA = CDATA[SORT(DATE_2DOY(CFP.DATE_START))] 
        CFP = PARSE_IT(CDATA.(WHERE(CTAGS EQ CNAME))) & CPOS    = WHERE(CTAGS EQ CPROD)   
        SETS = WHERE_SETS(CFP.DATE_START)
        FOR STH = 0, N_ELEMENTS(SETS)-1 DO BEGIN
          IF SETS(STH).N EQ 1 THEN CONTINUE
          SUBS = WHERE_SETS_SUBS(SETS(STH))
          OK = WHERE(CFP(SUBS).DATE_END EQ MIN(CFP(SUBS).DATE_END),COUNT)
          CDATA(SUBS[OK]).(CPOS) = MISSINGS(0.0)          
        ENDFOR  
        YTITLE = UNITS(APROD)         
        AX = DATE_AXIS([20200101,20201227],/MONTH,/FYEAR,/MID)
        WT = 5      
        IF N EQ 0 THEN BEGIN 
          W = WINDOW(DIMENSIONS=[1024,1024],WINDOW_TITLE=WTITLE(R))
          P = PLOT(AX.JD,YRANGE(R),YTITLE=YTITLE,FONT_SIZE=14,XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,/NODATA,/CURRENT,LAYOUT=[1,2,1])          
          XTICKV = P.XTICKVALUES 
          FOR G=0,N_ELEMENTS(XTICKV)-1 DO GR = PLOT([JD_ADD(XTICKV(G),-15,/DAY),JD_ADD(XTICKV(G),-15,/DAY)],YRANGE(R),COLOR='GREY',/OVERPLOT,XRANGE=AX.JD,YRANGE=YRANGE(R))                       
          OK = WHERE(CDATA.SUBAREA_CODE EQ CODES[0] AND CDATA.(CPOS) NE MISSINGS(0.0))
          P0 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(CDATA[OK].PERIOD))),CDATA[OK].(CPOS),XRANGE=AX.JD,YRANGE=YRANGE(R),XMINOR=0,LINESTYLE=6,/OVERPLOT,COLOR=ACOLOR,SYMBOL='CIRCLE',SYM_SIZE=0.4, NAME='Merged',/SYM_FILLED)
          PS = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(CDATA[OK].PERIOD))),SMOOTH_DOY(DATE_2DOY(PERIOD_2DATE(CDATA[OK].PERIOD)),CDATA[OK].(CPOS),WIDTH=WIDTH,/SMO),XRANGE=AX.JD,YRANGE=YRANGE(R),THICK=2,/OVERPLOT,COLOR='RED')        
          PM = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(CDATA[OK].PERIOD))),SMOOTH_DOY(DATE_2DOY(PERIOD_2DATE(CDATA[OK].PERIOD)),CDATA[OK].(CPOS),WIDTH=WIDTH,/MED),XRANGE=AX.JD,YRANGE=YRANGE(R),THICK=2,/OVERPLOT,COLOR='BLUE')
          PF = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(CDATA[OK].PERIOD))),SMOOTH_DOY(DATE_2DOY(PERIOD_2DATE(CDATA[OK].PERIOD)),CDATA[OK].(CPOS),WIDTH=WIDTH,/FILL),XRANGE=AX.JD,YRANGE=YRANGE(R),THICK=2,/OVERPLOT,COLOR='GREEN')
          PL = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(CDATA[OK].PERIOD))),SMOOTH_DOY(DATE_2DOY(PERIOD_2DATE(CDATA[OK].PERIOD)),CDATA[OK].(CPOS),WIDTH=WIDTH,/LOWE),XRANGE=AX.JD,YRANGE=YRANGE(R),THICK=2,/OVERPLOT,COLOR='PURPLE')
          T = TEXT(0.2,0.92,TITLES,COLOR=ACOLOR,FONT_SIZE=12,/NORMAL,TARGET=P)    
        ENDIF ELSE BEGIN  
;          FOR C=0, N_ELEMENTS(CODES)-1 DO BEGIN                    
;            OK = WHERE(CDATA.SUBAREA_CODE EQ CODES(C))
;            P0 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(CDATA[OK].PERIOD))),CDATA[OK].(CPOS),XRANGE=AX.JD,YRANGE=YRANGE(R),XMINOR=0,LINESTYLE=6,/OVERPLOT,COLOR=ACOLOR(C),SYMBOL='CIRCLE',SYM_SIZE=0.4, NAME='Merged',/SYM_FILLED)            
;            P1 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(CDATA[OK].PERIOD))),MEDIAN(CDATA[OK].(CPOS),WT),XRANGE=AX.JD,YRANGE=YRANGE(R),THICK=2,/OVERPLOT,COLOR=ACOLOR(C))
;            T = TEXT(0.2,0.90-(C*.02),TITLES(C),COLOR=ACOLOR(C),FONT_SIZE=12,/NORMAL,TARGET=P)   
;          ENDFOR
        ENDELSE          
      ENDFOR     
      
      IF DO_DOY(R) GE 1 THEN FOR N=0L, N_ELEMENTS(SUBAREA_MAPS)-1 DO BEGIN
        CODES   = SUBAREA_CODES(N)
        TITLES  = SUBAREA_TITLES(N)
        ACOLOR  = COLORS(N)        
        COMBO   = IDL_RESTORE(FILE_SEARCH(DIR_C + 'MULTI_PERIODS-A_ANNUAL_DOY_M_MONTH_STUDY_W_WEEK_Y_YEAR*' + SUBAREA_MAPS(N) + '*.SAVE')) & CTAGS = TAG_NAMES(COMBO)
        CDATA   = COMBO[WHERE(STRMID(COMBO.PERIOD,0,4)     EQ 'DOY_' AND COMBO.(WHERE(CTAGS EQ CNAME)) NE '')]         
        CFP = PARSE_IT(CDATA.(WHERE(CTAGS EQ CNAME))) & CDATA = CDATA[SORT(DATE_2DOY(CFP.DATE_START))] & CPOS    = WHERE(CTAGS EQ CPROD)               
        YTITLE = UNITS(APROD)         
        AX = DATE_AXIS([20200101,20201227],/MONTH,/FYEAR,/MID)
        WT = 15      
        IF N EQ 0 THEN BEGIN 
          IF DO_WEEK(R) EQ 0 THEN W = WINDOW(DIMENSIONS=[1024,1024],WINDOW_TITLE=WTITLE(R))
          P = PLOT(AX.JD,YRANGE(R),YTITLE=YTITLE,FONT_SIZE=14,XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,/NODATA,/CURRENT,LAYOUT=[1,2,2])          
          XTICKV = P.XTICKVALUES 
          FOR G=0,N_ELEMENTS(XTICKV)-1 DO GR = PLOT([JD_ADD(XTICKV(G),-15,/DAY),JD_ADD(XTICKV(G),-15,/DAY)],YRANGE(R),COLOR='GREY',/OVERPLOT,XRANGE=AX.JD,YRANGE=YRANGE(R))                       
          OK = WHERE(CDATA.SUBAREA_CODE EQ CODES[0])
          P0 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(CDATA[OK].PERIOD))),CDATA[OK].(CPOS),XRANGE=AX.JD,YRANGE=YRANGE(R),XMINOR=0,LINESTYLE=6,/OVERPLOT,COLOR=ACOLOR,SYMBOL='CIRCLE',SYM_SIZE=0.4, NAME='Merged',/SYM_FILLED)
          P1 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(CDATA[OK].PERIOD))),MEDIAN(CDATA[OK].(CPOS),WT),XRANGE=AX.JD,YRANGE=YRANGE(R),THICK=2,/OVERPLOT,COLOR=ACOLOR)        
          T = TEXT(0.2,0.92,TITLES,COLOR=ACOLOR,FONT_SIZE=12,/NORMAL,TARGET=P)    
        ENDIF ELSE BEGIN  
          FOR C=0, N_ELEMENTS(CODES)-1 DO BEGIN                    
            OK = WHERE(CDATA.SUBAREA_CODE EQ CODES(C))
            P0 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(CDATA[OK].PERIOD))),CDATA[OK].(CPOS),XRANGE=AX.JD,YRANGE=YRANGE(R),XMINOR=0,LINESTYLE=6,/OVERPLOT,COLOR=ACOLOR(C),SYMBOL='CIRCLE',SYM_SIZE=0.4, NAME='Merged',/SYM_FILLED)            
            P1 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(CDATA[OK].PERIOD))),MEDIAN(CDATA[OK].(CPOS),WT),XRANGE=AX.JD,YRANGE=YRANGE(R),THICK=2,/OVERPLOT,COLOR=ACOLOR(C))
            T = TEXT(0.2,0.90-(C*.02),TITLES(C),COLOR=ACOLOR(C),FONT_SIZE=12,/NORMAL,TARGET=P)   
          ENDFOR
        ENDELSE          
      ENDFOR           
      
      IF DO_M(R) GE 1 THEN FOR N=0L, N_ELEMENTS(SUBAREA_MAPS)-1 DO BEGIN
        CODES   = SUBAREA_CODES(N)
        TITLES  = SUBAREA_TITLES(N)
        SEAWIFS = IDL_RESTORE(FILE_SEARCH(DIR_S + '*' + SUBAREA_MAPS(N) + '*.SAVE'))
        MODIS   = IDL_RESTORE(FILE_SEARCH(DIR_M + '*' + SUBAREA_MAPS(N) + '*.SAVE'))
        COMBO   = IDL_RESTORE(FILE_SEARCH(DIR_C + '*' + SUBAREA_MAPS(N) + '*.SAVE')) 
      
        SDATA   = SEAWIFS[WHERE(STRMID(SEAWIFS.PERIOD,0,2) EQ 'M_')] & STAGS = TAG_NAMES(SDATA)
        MDATA   = MODIS[WHERE(STRMID(MODIS.PERIOD,0,2) EQ 'M_')]     & MTAGS = TAG_NAMES(MDATA)        
        CDATA   = COMBO[WHERE(STRMID(COMBO.PERIOD,0,2) EQ 'M_')]     & CTAGS = TAG_NAMES(CDATA)
        
        SPOS    = WHERE(STAGS EQ SPROD)
        MPOS    = WHERE(MTAGS EQ MPROD)
        CPOS    = WHERE(CTAGS EQ CPROD)
        
        YTITLE = UNITS(APROD)         
        AX = DATE_AXIS(DATE_RANGE,/MONTH,/YY_YEAR)      
        IF N EQ 0 THEN BEGIN 
          W = WINDOW(DIMENSIONS=[1024,1024],WINDOW_TITLE=WTITLE(R))
          P = PLOT(AX.JD,YRANGE(R),YTITLE=YTITLE,FONT_SIZE=14,XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,LAYOUT=[1,5,1],/NODATA,/CURRENT)
          XTICKV = P.XTICKVALUES & OK = WHERE(JD_2MONTH(XTICKV) EQ '01',COUNT)
          FOR G=1,COUNT-1 DO GR = PLOT([XTICKV(OK(G)),XTICKV(OK(G))],YRANGE(R),COLOR='GREY',/OVERPLOT,XRANGE=AX.JD,YRANGE=YRANGE(R))
          T = TEXT(0.18,0.96,TITLES,COLOR='BLACK',FONT_SIZE=12,/NORMAL,TARGET=P)          
          OK = WHERE(SDATA.SUBAREA_CODE EQ CODES[0]) & P1 = PLOT(PERIOD_2JD(SDATA[OK].PERIOD),SDATA[OK].(SPOS),XRANGE=AX.JD,YRANGE=YRANGE(R),/OVERPLOT,COLOR='BLUE' ,SYMBOL='CIRCLE',SYM_SIZE=0.65,NAME='SeaWiFS')
          OK = WHERE(MDATA.SUBAREA_CODE EQ CODES[0]) & P2 = PLOT(PERIOD_2JD(MDATA[OK].PERIOD),MDATA[OK].(MPOS),XRANGE=AX.JD,YRANGE=YRANGE(R),/OVERPLOT,COLOR='RED'  ,SYMBOL='CIRCLE',SYM_SIZE=0.65,NAME='MODIS')
          OK = WHERE(CDATA.SUBAREA_CODE EQ CODES[0]) & P3 = PLOT(PERIOD_2JD(CDATA[OK].PERIOD),CDATA[OK].(CPOS),XRANGE=AX.JD,YRANGE=YRANGE(R),/OVERPLOT,COLOR='GREEN',SYMBOL='CIRCLE',SYM_SIZE=0.4, NAME='Merged',/SYM_FILLED)        
          L = LEGEND(TARGET=[P1,P2,P3],POSITION=[.785,.97],/NORMAL,FONT_SIZE=9,SAMPLE_WIDTH=.075,VERTICAL_SPACING=0.004)
        ENDIF ELSE BEGIN  
          FOR C=0, N_ELEMENTS(CODES)-1 DO BEGIN        
            P = PLOT(AX.JD,YRANGE(R),YTITLE=YTITLE,FONT_SIZE=14,XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,LAYOUT=[1,5,C+2],/NODATA,/CURRENT)
            XTICKV = P.XTICKVALUES & OK = WHERE(JD_2MONTH(XTICKV) EQ '01',COUNT)
            FOR G=1,COUNT-1 DO GR = PLOT([XTICKV(OK(G)),XTICKV(OK(G))],YRANGE(R),COLOR='GREY',/OVERPLOT,XRANGE=AX.JD,YRANGE=YRANGE(R))
            T = TEXT(0.18,0.96-(.2*(C+1)),TITLES(C),COLOR='BLACK',FONT_SIZE=12,/NORMAL,TARGET=P)            
            OK = WHERE(SDATA.SUBAREA_CODE EQ CODES(C)) & P1 = PLOT(PERIOD_2JD(SDATA[OK].PERIOD),SDATA[OK].(SPOS),XRANGE=AX.JD,YRANGE=YRANGE(R),/OVERPLOT,COLOR='BLUE' ,SYMBOL='CIRCLE',SYM_SIZE=0.65,NAME='SeaWiFS')
            OK = WHERE(MDATA.SUBAREA_CODE EQ CODES(C)) & P2 = PLOT(PERIOD_2JD(MDATA[OK].PERIOD),MDATA[OK].(MPOS),XRANGE=AX.JD,YRANGE=YRANGE(R),/OVERPLOT,COLOR='RED'  ,SYMBOL='CIRCLE',SYM_SIZE=0.65,NAME='MODIS')
            OK = WHERE(CDATA.SUBAREA_CODE EQ CODES(C)) & P3 = PLOT(PERIOD_2JD(CDATA[OK].PERIOD),CDATA[OK].(CPOS),XRANGE=AX.JD,YRANGE=YRANGE(R),/OVERPLOT,COLOR='GREEN',SYMBOL='CIRCLE',SYM_SIZE=0.4, NAME='Merged',/SYM_FILLED)            
          ENDFOR
        ENDELSE          
      ENDFOR     
 ;     W.SAVE,!S.PROJECTS + 'ECOAP' + SL + 'DOC' + SL + 'EcosystemStatusReport-2011' + SL + 'PLOTS' + SL + 'SATELLITE_MONTHLY_TIME_SERIES-'+APROD+'.PNG'       
            
      IF DO_A(R) EQ 1 THEN FOR N=0L, N_ELEMENTS(SUBAREA_MAPS)-1 DO BEGIN
        CODES   = SUBAREA_CODES(N)
        TITLES  = SUBAREA_TITLES(N)
        
        SEAWIFS = IDL_RESTORE(FILE_SEARCH(DIR_S + '*' + SUBAREA_MAPS(N) + '*.SAVE'))
        MODIS   = IDL_RESTORE(FILE_SEARCH(DIR_M + '*' + SUBAREA_MAPS(N) + '*.SAVE'))
        COMBO   = IDL_RESTORE(FILE_SEARCH(DIR_C + '*' + SUBAREA_MAPS(N) + '*.SAVE')) 
      
        SDATA   = SEAWIFS[WHERE(STRMID(SEAWIFS.PERIOD,0,2) EQ 'A_')] & STAGS = TAG_NAMES(SDATA)
        MDATA   = MODIS[WHERE(STRMID(MODIS.PERIOD,0,2) EQ 'A_')]     & MTAGS = TAG_NAMES(MDATA)        
        CDATA   = COMBO[WHERE(STRMID(COMBO.PERIOD,0,2) EQ 'A_')]     & CTAGS = TAG_NAMES(CDATA)
        
        SPOS    = WHERE(STAGS EQ SPROD)
        MPOS    = WHERE(MTAGS EQ MPROD)
        CPOS    = WHERE(CTAGS EQ CPROD)
        
        DATE_RANGE = [19980101,20100605] 
        YTITLE = UNITS(APROD)         
        SYM_SIZE = 1.5
        AX = DATE_AXIS(DATE_RANGE,/YEAR,/YY_YEAR)      
        IF N EQ 0 THEN BEGIN 
          W = WINDOW(DIMENSIONS=[1024,1024])
          P = PLOT(AX.JD,Y2RANGE(R),YTITLE=YTITLE,TITLE=TITLES,FONT_SIZE=14,XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,YMAJOR=5,LAYOUT=[2,2,1],/NODATA,/CURRENT)
          
;          XTICKV = P.XTICKVALUES & OK = WHERE(JD_2MONTH(XTICKV) EQ '01',COUNT)
;          FOR G=1,COUNT-1 DO GR = PLOT([XTICKV(OK(G)),XTICKV(OK(G))],YRANGE(R),COLOR='GREY',/OVERPLOT,XRANGE=AX.JD,YRANGE=YRANGE(R))
;          T  = TEXT(0.18,0.96,TITLES,COLOR='BLACK',FONT_SIZE=12,/NORMAL,TARGET=P)
          T2 = TEXT(0.5,0.98,WTITLE(R),FONT_SIZE=14,/NORMAL,TARGET=W,ALIGNMENT=0.5)          
          OK = WHERE(SDATA.SUBAREA_CODE EQ CODES[0]) & P4 = PLOT(PERIOD_2JD(SDATA[OK].PERIOD),SDATA[OK].(SPOS),XRANGE=P.XRANGE,YRANGE=Y2RANGE(R),/OVERPLOT,COLOR='BLUE' ,SYMBOL='CIRCLE',SYM_SIZE=SYM_SIZE,            NAME='SeaWiFS',XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,YMAJOR=5)
          OK = WHERE(MDATA.SUBAREA_CODE EQ CODES[0]) & P5 = PLOT(PERIOD_2JD(MDATA[OK].PERIOD),MDATA[OK].(MPOS),XRANGE=P.XRANGE,YRANGE=Y2RANGE(R),/OVERPLOT,COLOR='RED'  ,SYMBOL='CIRCLE',SYM_SIZE=SYM_SIZE,            NAME='MODIS',  XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,YMAJOR=5)
          OK = WHERE(CDATA.SUBAREA_CODE EQ CODES[0]) & P6 = PLOT(PERIOD_2JD(CDATA[OK].PERIOD),CDATA[OK].(CPOS),XRANGE=P.XRANGE,YRANGE=Y2RANGE(R),/OVERPLOT,COLOR='GREEN',SYMBOL='CIRCLE',SYM_SIZE=1.0,/SYM_FILLED,NAME='Merged', XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,YMAJOR=5)        
          L = LEGEND(TARGET=[P4,P5,P6],POSITION=[.775,.925],/NORMAL,FONT_SIZE=9,SAMPLE_WIDTH=.2,VERTICAL_SPACING=0.012)
        ENDIF ELSE BEGIN  
          FOR C=0, N_ELEMENTS(CODES)-2 DO BEGIN        
            P = PLOT(AX.JD,Y2RANGE(R),YTITLE=YTITLE,TITLE=TITLES(C),FONT_SIZE=14,XMAJOR=AX.TICKS/2,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,LAYOUT=[2,2,C+2],/NODATA,/CURRENT)
;            XTICKV = P.XTICKVALUES & OK = WHERE(JD_2MONTH(XTICKV) EQ '01',COUNT)
;            FOR G=1,COUNT-1 DO GR = PLOT([XTICKV(OK(G)),XTICKV(OK(G))],YRANGE(R),COLOR='GREY',/OVERPLOT,XRANGE=AX.JD,YRANGE=YRANGE(R))
;            T = TEXT(0.18,0.96-(.2*(C+1)),TITLES(C),COLOR='BLACK',FONT_SIZE=12,/NORMAL,TARGET=P)
            OK = WHERE(SDATA.SUBAREA_CODE EQ CODES(C)) & P4 = PLOT(PERIOD_2JD(SDATA[OK].PERIOD),SDATA[OK].(SPOS),XRANGE=P.XRANGE,YRANGE=Y2RANGE(R),/OVERPLOT,COLOR='BLUE' ,SYMBOL='CIRCLE',SYM_SIZE=SYM_SIZE,            NAME='SeaWiFS',XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,YMAJOR=5)
            OK = WHERE(MDATA.SUBAREA_CODE EQ CODES(C)) & P5 = PLOT(PERIOD_2JD(MDATA[OK].PERIOD),MDATA[OK].(MPOS),XRANGE=P.XRANGE,YRANGE=Y2RANGE(R),/OVERPLOT,COLOR='RED'  ,SYMBOL='CIRCLE',SYM_SIZE=SYM_SIZE,            NAME='MODIS',  XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,YMAJOR=5)
            OK = WHERE(CDATA.SUBAREA_CODE EQ CODES(C)) & P6 = PLOT(PERIOD_2JD(CDATA[OK].PERIOD),CDATA[OK].(CPOS),XRANGE=P.XRANGE,YRANGE=Y2RANGE(R),/OVERPLOT,COLOR='GREEN',SYMBOL='CIRCLE',SYM_SIZE=1.0,/SYM_FILLED,NAME='Merged', XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,YMAJOR=5)            
          ENDFOR
        ENDELSE          
      ENDFOR     
   ;   W.SAVE,!S.PROJECTS + 'ECOAP' + SL + 'DOC' + SL + 'EcosystemStatusReport-2011' + SL + 'PLOTS' + SL + 'SATELLITE_MONTHLY_TIME_SERIES-'+APROD+'.PNG'    
   
      IF DO_MONTH(R) EQ 1 THEN FOR N=0L, N_ELEMENTS(SUBAREA_MAPS)-1 DO BEGIN
        CODES   = SUBAREA_CODES(N)
        TITLES  = SUBAREA_TITLES(N)
        
        SEAWIFS = IDL_RESTORE(FILE_SEARCH(DIR_S + '*' + SUBAREA_MAPS(N) + '*.SAVE'))
        MODIS   = IDL_RESTORE(FILE_SEARCH(DIR_M + '*' + SUBAREA_MAPS(N) + '*.SAVE'))
        COMBO   = IDL_RESTORE(FILE_SEARCH(DIR_C + '*' + SUBAREA_MAPS(N) + '*.SAVE')) 
      
        SDATA   = SEAWIFS[WHERE(STRMID(SEAWIFS.PERIOD,0,6) EQ 'MONTH_')] & STAGS = TAG_NAMES(SDATA)
        MDATA   = MODIS[WHERE(STRMID(MODIS.PERIOD,0,6)     EQ 'MONTH_')] & MTAGS = TAG_NAMES(MDATA)        
        CDATA   = COMBO[WHERE(STRMID(COMBO.PERIOD,0,6)     EQ 'MONTH_')] & CTAGS = TAG_NAMES(CDATA)
        
        SPOS    = WHERE(STAGS EQ SPROD)
        MPOS    = WHERE(MTAGS EQ MPROD)
        CPOS    = WHERE(CTAGS EQ CPROD)
        
        DATE_RANGE = [20200101,20201231] 
        YTITLE = UNITS(APROD)         
        SYM_SIZE = 1.5
        AX = DATE_AXIS(DATE_RANGE,/FYEAR)      
        IF N EQ 0 THEN BEGIN 
          W = WINDOW(DIMENSIONS=[1024,1024])
          P = PLOT(AX.JD,Y2RANGE(R),YTITLE=YTITLE,TITLE=TITLES,FONT_SIZE=14,XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,YMAJOR=5,LAYOUT=[2,2,1],/NODATA,/CURRENT)
          
;          XTICKV = P.XTICKVALUES & OK = WHERE(JD_2MONTH(XTICKV) EQ '01',COUNT)
;          FOR G=1,COUNT-1 DO GR = PLOT([XTICKV(OK(G)),XTICKV(OK(G))],YRANGE(R),COLOR='GREY',/OVERPLOT,XRANGE=AX.JD,YRANGE=YRANGE(R))
;          T  = TEXT(0.18,0.96,TITLES,COLOR='BLACK',FONT_SIZE=12,/NORMAL,TARGET=P)
          T2 = TEXT(0.5,0.98,WTITLE(R),FONT_SIZE=14,/NORMAL,TARGET=W,ALIGNMENT=0.5)          
          OK = WHERE(SDATA.SUBAREA_CODE EQ CODES[0]) & P4 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(SDATA[OK].PERIOD))),SDATA[OK].(SPOS),XRANGE=P.XRANGE,YRANGE=Y2RANGE(R),/OVERPLOT,COLOR='BLUE' ,SYMBOL='CIRCLE',SYM_SIZE=SYM_SIZE,            NAME='SeaWiFS',XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,YMAJOR=5)
          OK = WHERE(MDATA.SUBAREA_CODE EQ CODES[0]) & P5 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(MDATA[OK].PERIOD))),MDATA[OK].(MPOS),XRANGE=P.XRANGE,YRANGE=Y2RANGE(R),/OVERPLOT,COLOR='RED'  ,SYMBOL='CIRCLE',SYM_SIZE=SYM_SIZE,            NAME='MODIS',  XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,YMAJOR=5)
          OK = WHERE(CDATA.SUBAREA_CODE EQ CODES[0]) & P6 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(CDATA[OK].PERIOD))),CDATA[OK].(CPOS),XRANGE=P.XRANGE,YRANGE=Y2RANGE(R),/OVERPLOT,COLOR='GREEN',SYMBOL='CIRCLE',SYM_SIZE=1.0,/SYM_FILLED,NAME='Merged', XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,YMAJOR=5)        
          L = LEGEND(TARGET=[P4,P5,P6],POSITION=[.775,.925],/NORMAL,FONT_SIZE=9,SAMPLE_WIDTH=.2,VERTICAL_SPACING=0.012)
        ENDIF ELSE BEGIN  
          FOR C=0, N_ELEMENTS(CODES)-2 DO BEGIN        
            P = PLOT(AX.JD,Y2RANGE(R),YTITLE=YTITLE,TITLE=TITLES(C),FONT_SIZE=14,XMAJOR=AX.TICKS/2,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,LAYOUT=[2,2,C+2],/NODATA,/CURRENT)
;            XTICKV = P.XTICKVALUES & OK = WHERE(JD_2MONTH(XTICKV) EQ '01',COUNT)
;            FOR G=1,COUNT-1 DO GR = PLOT([XTICKV(OK(G)),XTICKV(OK(G))],YRANGE(R),COLOR='GREY',/OVERPLOT,XRANGE=AX.JD,YRANGE=YRANGE(R))
;            T = TEXT(0.18,0.96-(.2*(C+1)),TITLES(C),COLOR='BLACK',FONT_SIZE=12,/NORMAL,TARGET=P)
            OK = WHERE(SDATA.SUBAREA_CODE EQ CODES(C)) & P4 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(SDATA[OK].PERIOD))),SDATA[OK].(SPOS),XRANGE=P.XRANGE,YRANGE=Y2RANGE(R),/OVERPLOT,COLOR='BLUE' ,SYMBOL='CIRCLE',SYM_SIZE=SYM_SIZE,            NAME='SeaWiFS',XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,YMAJOR=5)
            OK = WHERE(MDATA.SUBAREA_CODE EQ CODES(C)) & P5 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(MDATA[OK].PERIOD))),MDATA[OK].(MPOS),XRANGE=P.XRANGE,YRANGE=Y2RANGE(R),/OVERPLOT,COLOR='RED'  ,SYMBOL='CIRCLE',SYM_SIZE=SYM_SIZE,            NAME='MODIS',  XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,YMAJOR=5)
            OK = WHERE(CDATA.SUBAREA_CODE EQ CODES(C)) & P6 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(CDATA[OK].PERIOD))),CDATA[OK].(CPOS),XRANGE=P.XRANGE,YRANGE=Y2RANGE(R),/OVERPLOT,COLOR='GREEN',SYMBOL='CIRCLE',SYM_SIZE=1.0,/SYM_FILLED,NAME='Merged', XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,YMAJOR=5)            
          ENDFOR
        ENDELSE          
      ENDFOR     
   ;   W.SAVE,!S.PROJECTS + 'ECOAP' + SL + 'DOC' + SL + 'EcosystemStatusReport-2011' + SL + 'PLOTS' + SL + 'SATELLITE_MONTHLY_TIME_SERIES-'+APROD+'.PNG'    
    ENDFOR  
  ENDIF
  
   
  IF DO_TIMESERIES GE 1 THEN BEGIN
    SUBAREA_MAPS   = LIST('ESTUARY_SHELF_LME','ECOREGIONS_FULL_NO_ESTUARIES')
    SUBAREA_CODES  = LIST('32',                 ['7','5','6','8'])
    SUBAREA_TITLES = LIST('Northeast Shelf LME',['Mid-Atlantic Bight','Georges Bank','Gulf of Maine','Scotian Shelf'])
    WTITLE = ['OC Algorithms','Pan Algorithm','','']
    DATE_RANGE = ['19970101','20111201']
    YRANGE  = LIST([0,3],[0,3],[0,0.5],[0,80])
    Y2RANGE = LIST([0.8,1.6],[0.4,1.2],[0,0.5],[0,80])
    DO_M     = [0,0,0,0]
    DO_A     = [0,0,0,0]
    DO_MONTH = [0,0,0,0]
    DO_DOY   = [1,0,0,0]
    DO_WEEK  = [1,0,0,0]
  
    DIR_S = !S.DATASETS + 'OC-SEAWIFS-9-NEC' + SL + 'TS_SUBAREAS' + SL
    DIR_M = !S.DATASETS + 'OC-MODIS-4-NEC'   + SL + 'TS_SUBAREAS' + SL
    DIR_C = !S.DATASETS + 'OC-SEA_AQU-NEC'   + SL + 'TS_SUBAREAS' + SL
    
    PROD_TAGS = ['CHLOR_A_OC','CHLOR_A_PAN','A_CDOM_443_GSM','PAR']
    PRODS = ['CHLOROPHYLL','CHLOROPHYLL','A_CDOM','PAR']
    FOR R=0L, N_ELEMENTS(PRODS)-1 DO BEGIN
      APROD = PRODS(R)
      IF PROD_TAGS(R) EQ 'CHLOR_A_OC' THEN BEGIN
        SPROD = 'MEAN_CHLOR_A_OC4'   & SNAME = 'FIRST_NAME_CHLOR_A_OC4'   & SMIN = 'MIN_CHLOR_A_OC4'  & SMAX = 'MAX_CHLOR_A_OC4'  & SSTD = 'STD_CHLOR_A_OC4'
        MPROD = 'MEAN_CHLOR_A_OC3M'  & MNAME = 'FIRST_NAME_CHLOR_A_OC3M'  & MMIN = 'MIN_CHLOR_A_OC3M' & MMAX = 'MAX_CHLOR_A_OC3M' & MSTD = 'STD_CHLOR_A_OC3M'
        CPROD = 'MEAN_CHLOR_A_OC'    & CNAME = 'FIRST_NAME_CHLOR_A_OC'    & CMIN = 'MIN_CHLOR_A_OC'   & CMAX = 'MAX_CHLOR_A_OC'   & CSTD = 'STD_CHLOR_A_OC'
      ENDIF ELSE BEGIN
        SPROD = 'MEAN_'+PROD_TAGS(R) & SNAME = 'FIRST_NAME_'+PROD_TAGS(R) 
        MPROD = 'MEAN_'+PROD_TAGS(R) & MNAME = 'FIRST_NAME_'+PROD_TAGS(R)
        CPROD = 'MEAN_'+PROD_TAGS(R) & CNAME = 'FIRST_NAME_'+PROD_TAGS(R)
      ENDELSE  
      
      IF DO_WEEK(R) GE 1 THEN FOR N=0L, N_ELEMENTS(SUBAREA_MAPS)-1 DO BEGIN
        CODES   = SUBAREA_CODES(N)
        TITLES  = SUBAREA_TITLES(N)
        SEAWIFS = IDL_RESTORE(FILE_SEARCH(DIR_S + 'MULTI_PERIODS-A_ANNUAL_M_MONTH_W_WEEK*' + SUBAREA_MAPS(N) + '*.SAVE')) & STAGS = TAG_NAMES(SEAWIFS)
        MODIS   = IDL_RESTORE(FILE_SEARCH(DIR_M + 'MULTI_PERIODS-A_ANNUAL_M_MONTH_W_WEEK*' + SUBAREA_MAPS(N) + '*.SAVE')) & MTAGS = TAG_NAMES(MODIS) 
        COMBO   = IDL_RESTORE(FILE_SEARCH(DIR_C + 'MULTI_PERIODS-A_ANNUAL_M_MONTH_W_WEEK*' + SUBAREA_MAPS(N) + '*.SAVE')) & CTAGS = TAG_NAMES(COMBO)
      
        SDATA   = SEAWIFS[WHERE(STRMID(SEAWIFS.PERIOD,0,5) EQ 'WEEK_' AND SEAWIFS.(WHERE(CTAGS EQ CNAME)) NE '')] 
        MDATA   = MODIS[WHERE(STRMID(MODIS.PERIOD,0,5)     EQ 'WEEK_' AND MODIS.(WHERE(CTAGS EQ CNAME)) NE '')]        
        CDATA   = COMBO[WHERE(STRMID(COMBO.PERIOD,0,5)     EQ 'WEEK_' AND COMBO.(WHERE(CTAGS EQ CNAME)) NE '')] 
        
        SFP = PARSE_IT(SDATA.(WHERE(STAGS EQ SNAME))) & SDATA = SDATA[SORT(DATE_2DOY(SFP.DATE_START))] & SPOS    = WHERE(STAGS EQ SPROD)
        MFP = PARSE_IT(MDATA.(WHERE(MTAGS EQ MNAME))) & MDATA = MDATA[SORT(DATE_2DOY(MFP.DATE_START))] & MPOS    = WHERE(MTAGS EQ MPROD)
        CFP = PARSE_IT(CDATA.(WHERE(CTAGS EQ CNAME))) & CDATA = CDATA[SORT(DATE_2DOY(CFP.DATE_START))] & CPOS    = WHERE(CTAGS EQ CPROD)       
        
        YTITLE = UNITS(APROD)         
        AX = DATE_AXIS([20200101,20201231],/MONTH,/FYEAR,/MID)
        WT = 5      
        IF N EQ 0 THEN BEGIN 
          W = WINDOW(DIMENSIONS=[1024,1024],WINDOW_TITLE=WTITLE(R))
          P = PLOT(AX.JD,YRANGE(R),YTITLE=YTITLE,FONT_SIZE=14,XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,LAYOUT=[1,5,1],/NODATA,/CURRENT)          
          XTICKV = P.XTICKVALUES 
          FOR G=0,N_ELEMENTS(XTICKV)-1 DO GR = PLOT([JD_ADD(XTICKV(G),-15,/DAY),JD_ADD(XTICKV(G),-15,/DAY)],YRANGE(R),COLOR='GREY',/OVERPLOT,XRANGE=AX.JD,YRANGE=YRANGE(R))
          T = TEXT(0.18,0.96,TITLES,COLOR='BLACK',FONT_SIZE=12,/NORMAL,TARGET=P)          
          OK = WHERE(SDATA.SUBAREA_CODE EQ CODES[0]) & P1 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(SDATA[OK].PERIOD))),SDATA[OK].(SPOS),XRANGE=AX.JD,YRANGE=YRANGE(R),LINESTYLE=6,/OVERPLOT,COLOR='BLUE' ,SYMBOL='CIRCLE',SYM_SIZE=0.65,NAME='SeaWiFS')
          P1 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(SDATA[OK].PERIOD))),MEDIAN(SDATA[OK].(SPOS),WT),XRANGE=AX.JD,YRANGE=YRANGE(R),THICK=2,/OVERPLOT,COLOR='BLUE')
          OK = WHERE(MDATA.SUBAREA_CODE EQ CODES[0]) & P2 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(MDATA[OK].PERIOD))),MDATA[OK].(MPOS),XRANGE=AX.JD,YRANGE=YRANGE(R),LINESTYLE=6,/OVERPLOT,COLOR='RED'  ,SYMBOL='CIRCLE',SYM_SIZE=0.65,NAME='MODIS')
          P2 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(MDATA[OK].PERIOD))),MEDIAN(MDATA[OK].(MPOS),WT),XRANGE=AX.JD,YRANGE=YRANGE(R),THICK=2,/OVERPLOT,COLOR='RED')
          OK = WHERE(CDATA.SUBAREA_CODE EQ CODES[0]) & P3 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(CDATA[OK].PERIOD))),CDATA[OK].(CPOS),XRANGE=AX.JD,YRANGE=YRANGE(R),LINESTYLE=6,/OVERPLOT,COLOR='GREEN',SYMBOL='CIRCLE',SYM_SIZE=0.4, NAME='Merged',/SYM_FILLED)
          P3 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(CDATA[OK].PERIOD))),MEDIAN(CDATA[OK].(CPOS),WT),XRANGE=AX.JD,YRANGE=YRANGE(R),THICK=2,/OVERPLOT,COLOR='GREEN')        
;          L = LEGEND(TARGET=[P1,P2,P3],POSITION=[.785,.97],/NORMAL,FONT_SIZE=9,SAMPLE_WIDTH=.075,VERTICAL_SPACING=0.004)
        ENDIF ELSE BEGIN  
          FOR C=0, N_ELEMENTS(CODES)-1 DO BEGIN        
            P = PLOT(AX.JD,YRANGE(R),YTITLE=YTITLE,FONT_SIZE=14,XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,LAYOUT=[1,5,C+2],/NODATA,/CURRENT)
            XTICKV = P.XTICKVALUES & OK = WHERE(JD_2MONTH(XTICKV) EQ '01',COUNT)
            FOR G=0,N_ELEMENTS(XTICKV)-1 DO GR = PLOT([JD_ADD(XTICKV(G),-15,/DAY),JD_ADD(XTICKV(G),-15,/DAY)],YRANGE(R),COLOR='GREY',/OVERPLOT,XRANGE=AX.JD,YRANGE=YRANGE(R))
            T = TEXT(0.18,0.96-(.2*(C+1)),TITLES(C),COLOR='BLACK',FONT_SIZE=12,/NORMAL,TARGET=P)            
            OK = WHERE(SDATA.SUBAREA_CODE EQ CODES(C)) & P1 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(SDATA[OK].PERIOD))),SDATA[OK].(SPOS),XRANGE=AX.JD,YRANGE=YRANGE(R),LINESTYLE=6,/OVERPLOT,COLOR='BLUE' ,SYMBOL='CIRCLE',SYM_SIZE=0.65,NAME='SeaWiFS')
            P1 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(SDATA[OK].PERIOD))),MEDIAN(SDATA[OK].(SPOS),WT),XRANGE=AX.JD,YRANGE=YRANGE(R),THICK=2,/OVERPLOT,COLOR='BLUE')
            OK = WHERE(MDATA.SUBAREA_CODE EQ CODES(C)) & P2 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(MDATA[OK].PERIOD))),MDATA[OK].(MPOS),XRANGE=AX.JD,YRANGE=YRANGE(R),LINESTYLE=6,/OVERPLOT,COLOR='RED'  ,SYMBOL='CIRCLE',SYM_SIZE=0.65,NAME='MODIS')
            P2 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(MDATA[OK].PERIOD))),MEDIAN(MDATA[OK].(MPOS),WT),XRANGE=AX.JD,YRANGE=YRANGE(R),THICK=2,/OVERPLOT,COLOR='RED')
            OK = WHERE(CDATA.SUBAREA_CODE EQ CODES(C)) & P3 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(CDATA[OK].PERIOD))),CDATA[OK].(CPOS),XRANGE=AX.JD,YRANGE=YRANGE(R),LINESTYLE=6,/OVERPLOT,COLOR='GREEN',SYMBOL='CIRCLE',SYM_SIZE=0.4, NAME='Merged',/SYM_FILLED)            
            P3 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(CDATA[OK].PERIOD))),MEDIAN(CDATA[OK].(CPOS),WT),XRANGE=AX.JD,YRANGE=YRANGE(R),THICK=2,/OVERPLOT,COLOR='GREEN')
          ENDFOR
        ENDELSE          
      ENDFOR     
      
      
      IF DO_DOY(R) GE 1 THEN FOR N=0L, N_ELEMENTS(SUBAREA_MAPS)-1 DO BEGIN
        CODES   = SUBAREA_CODES(N)
        TITLES  = SUBAREA_TITLES(N)
;        SEAWIFS = IDL_RESTORE(FILE_SEARCH(DIR_S + 'MULTI_PERIODS-A_ANNUAL_DOY*' + SUBAREA_MAPS(N) + '*.SAVE')) & STAGS = TAG_NAMES(SEAWIFS)
;        MODIS   = IDL_RESTORE(FILE_SEARCH(DIR_M + 'MULTI_PERIODS-A_ANNUAL_DOY*' + SUBAREA_MAPS(N) + '*.SAVE')) & MTAGS = TAG_NAMES(MODIS) 
        COMBO   = IDL_RESTORE(FILE_SEARCH(DIR_C + 'MULTI_PERIODS-A_ANNUAL_DOY*' + SUBAREA_MAPS(N) + '*.SAVE'))  & CTAGS = TAG_NAMES(COMBO)
      
;        SDATA   = SEAWIFS[WHERE(STRMID(SEAWIFS.PERIOD,0,4) EQ 'DOY_'AND SEAWIFS.(WHERE(CTAGS EQ CNAME)) NE '')] 
;        MDATA   = MODIS[WHERE(STRMID(MODIS.PERIOD,0,4)     EQ 'DOY_'AND MODIS.(WHERE(CTAGS EQ CNAME)) NE '')]        
        CDATA   = COMBO[WHERE(STRMID(COMBO.PERIOD,0,4)     EQ 'DOY_' AND COMBO.(WHERE(CTAGS EQ CNAME)) NE '')] 
        
        CFP = PARSE_IT(CDATA.(WHERE(CTAGS EQ CNAME))) & CDATA = CDATA[SORT(DATE_2DOY(CFP.DATE_START))]
        
;        SPOS    = WHERE(STAGS EQ SPROD)
;        MPOS    = WHERE(MTAGS EQ MPROD)
        CPOS    = WHERE(CTAGS EQ CPROD)
        
        YTITLE = UNITS(APROD)         
        AX = DATE_AXIS([20200101,20201231],/MONTH,/FYEAR)      
        IF N EQ 0 THEN BEGIN 
          W = WINDOW(DIMENSIONS=[1024,1024],WINDOW_TITLE=WTITLE(R))
          P = PLOT(AX.JD,YRANGE(R),YTITLE=YTITLE,FONT_SIZE=14,XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,LAYOUT=[1,5,1],/NODATA,/CURRENT)          
          XTICKV = P.XTICKVALUES & OK = WHERE(JD_2MONTH(XTICKV) EQ '01',COUNT)
          FOR G=1,COUNT-1 DO GR = PLOT([XTICKV(OK(G)),XTICKV(OK(G))],YRANGE(R),COLOR='GREY',/OVERPLOT,XRANGE=AX.JD,YRANGE=YRANGE(R))
          T = TEXT(0.18,0.96,TITLES,COLOR='BLACK',FONT_SIZE=12,/NORMAL,TARGET=P)          
;          OK = WHERE(SDATA.SUBAREA_CODE EQ CODES[0]) & P1 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(SDATA[OK].PERIOD))),SDATA[OK].(SPOS),XRANGE=AX.JD,YRANGE=YRANGE(R),/OVERPLOT,COLOR='BLUE' ,SYMBOL='CIRCLE',SYM_SIZE=0.65,NAME='SeaWiFS')
;          OK = WHERE(MDATA.SUBAREA_CODE EQ CODES[0]) & P2 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(MDATA[OK].PERIOD))),MDATA[OK].(MPOS),XRANGE=AX.JD,YRANGE=YRANGE(R),/OVERPLOT,COLOR='RED'  ,SYMBOL='CIRCLE',SYM_SIZE=0.65,NAME='MODIS')
          OK = WHERE(CDATA.SUBAREA_CODE EQ CODES[0]) & P3 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(CDATA[OK].PERIOD))),CDATA[OK].(CPOS),XRANGE=AX.JD,YRANGE=YRANGE(R),/OVERPLOT,COLOR='GREEN',SYMBOL='CIRCLE',SYM_SIZE=0.4, NAME='Merged',/SYM_FILLED)
          P3 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(CDATA[OK].PERIOD))),SMOOTH(CDATA[OK].(CPOS),10,/EDGE_WRAP),XRANGE=AX.JD,YRANGE=YRANGE(R),THICK=2,/OVERPLOT,COLOR='RED')        
;          L = LEGEND(TARGET=[P1,P2,P3],POSITION=[.785,.97],/NORMAL,FONT_SIZE=9,SAMPLE_WIDTH=.075,VERTICAL_SPACING=0.004)
        ENDIF ELSE BEGIN  
          FOR C=0, N_ELEMENTS(CODES)-1 DO BEGIN        
            P = PLOT(AX.JD,YRANGE(R),YTITLE=YTITLE,FONT_SIZE=14,XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,LAYOUT=[1,5,C+2],/NODATA,/CURRENT)
            XTICKV = P.XTICKVALUES & OK = WHERE(JD_2MONTH(XTICKV) EQ '01',COUNT)
            FOR G=1,COUNT-1 DO GR = PLOT([XTICKV(OK(G)),XTICKV(OK(G))],YRANGE(R),COLOR='GREY',/OVERPLOT,XRANGE=AX.JD,YRANGE=YRANGE(R))
            T = TEXT(0.18,0.96-(.2*(C+1)),TITLES(C),COLOR='BLACK',FONT_SIZE=12,/NORMAL,TARGET=P)            
;            OK = WHERE(SDATA.SUBAREA_CODE EQ CODES(C)) & P1 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(SDATA[OK].PERIOD))),SDATA[OK].(SPOS),XRANGE=AX.JD,YRANGE=YRANGE(R),/OVERPLOT,COLOR='BLUE' ,SYMBOL='CIRCLE',SYM_SIZE=0.65,NAME='SeaWiFS')
;            OK = WHERE(MDATA.SUBAREA_CODE EQ CODES(C)) & P2 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(MDATA[OK].PERIOD))),MDATA[OK].(MPOS),XRANGE=AX.JD,YRANGE=YRANGE(R),/OVERPLOT,COLOR='RED'  ,SYMBOL='CIRCLE',SYM_SIZE=0.65,NAME='MODIS')
            OK = WHERE(CDATA.SUBAREA_CODE EQ CODES(C)) 
              P3 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(CDATA[OK].PERIOD))),CDATA[OK].(CPOS),XRANGE=AX.JD,YRANGE=YRANGE(R),/OVERPLOT,COLOR='GREEN',SYMBOL='CIRCLE',SYM_SIZE=0.4, NAME='Merged',/SYM_FILLED)            
;              XX = [YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(CDATA[OK].PERIOD))),REVERSE(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(CDATA[OK].PERIOD))))]
;              YY = [CDATA[OK].(CPOS)-(2*CDATA[OK].(WHERE(CTAGS EQ CSTD))),CDATA[OK].(CPOS)+2*(REVERSE(CDATA[OK].(WHERE(CTAGS EQ CSTD))))]
;              POLY = POLYGON(XX,YY,FILL_TRANSPARENCY=75,FILL_COLOR='GREEN',/FILL_BACKGROUND,TARGET=P3,/DATA)              
              P3 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(CDATA[OK].PERIOD))),SMOOTH(CDATA[OK].(CPOS),10,/EDGE_WRAP),XRANGE=AX.JD,YRANGE=YRANGE(R),THICK=2,/OVERPLOT,COLOR='RED')
          ENDFOR
        ENDELSE          
      ENDFOR     
      
      
      IF DO_M(R) GE 1 THEN FOR N=0L, N_ELEMENTS(SUBAREA_MAPS)-1 DO BEGIN
        CODES   = SUBAREA_CODES(N)
        TITLES  = SUBAREA_TITLES(N)
        SEAWIFS = IDL_RESTORE(FILE_SEARCH(DIR_S + '*' + SUBAREA_MAPS(N) + '*.SAVE'))
        MODIS   = IDL_RESTORE(FILE_SEARCH(DIR_M + '*' + SUBAREA_MAPS(N) + '*.SAVE'))
        COMBO   = IDL_RESTORE(FILE_SEARCH(DIR_C + '*' + SUBAREA_MAPS(N) + '*.SAVE')) 
      
        SDATA   = SEAWIFS[WHERE(STRMID(SEAWIFS.PERIOD,0,2) EQ 'M_')] & STAGS = TAG_NAMES(SDATA)
        MDATA   = MODIS[WHERE(STRMID(MODIS.PERIOD,0,2) EQ 'M_')]     & MTAGS = TAG_NAMES(MDATA)        
        CDATA   = COMBO[WHERE(STRMID(COMBO.PERIOD,0,2) EQ 'M_')]     & CTAGS = TAG_NAMES(CDATA)
        
        SPOS    = WHERE(STAGS EQ SPROD)
        MPOS    = WHERE(MTAGS EQ MPROD)
        CPOS    = WHERE(CTAGS EQ CPROD)
        
        YTITLE = UNITS(APROD)         
        AX = DATE_AXIS(DATE_RANGE,/MONTH,/YY_YEAR)      
        IF N EQ 0 THEN BEGIN 
          W = WINDOW(DIMENSIONS=[1024,1024],WINDOW_TITLE=WTITLE(R))
          P = PLOT(AX.JD,YRANGE(R),YTITLE=YTITLE,FONT_SIZE=14,XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,LAYOUT=[1,5,1],/NODATA,/CURRENT)
          XTICKV = P.XTICKVALUES & OK = WHERE(JD_2MONTH(XTICKV) EQ '01',COUNT)
          FOR G=1,COUNT-1 DO GR = PLOT([XTICKV(OK(G)),XTICKV(OK(G))],YRANGE(R),COLOR='GREY',/OVERPLOT,XRANGE=AX.JD,YRANGE=YRANGE(R))
          T = TEXT(0.18,0.96,TITLES,COLOR='BLACK',FONT_SIZE=12,/NORMAL,TARGET=P)          
          OK = WHERE(SDATA.SUBAREA_CODE EQ CODES[0]) & P1 = PLOT(PERIOD_2JD(SDATA[OK].PERIOD),SDATA[OK].(SPOS),XRANGE=AX.JD,YRANGE=YRANGE(R),/OVERPLOT,COLOR='BLUE' ,SYMBOL='CIRCLE',SYM_SIZE=0.65,NAME='SeaWiFS')
          OK = WHERE(MDATA.SUBAREA_CODE EQ CODES[0]) & P2 = PLOT(PERIOD_2JD(MDATA[OK].PERIOD),MDATA[OK].(MPOS),XRANGE=AX.JD,YRANGE=YRANGE(R),/OVERPLOT,COLOR='RED'  ,SYMBOL='CIRCLE',SYM_SIZE=0.65,NAME='MODIS')
          OK = WHERE(CDATA.SUBAREA_CODE EQ CODES[0]) & P3 = PLOT(PERIOD_2JD(CDATA[OK].PERIOD),CDATA[OK].(CPOS),XRANGE=AX.JD,YRANGE=YRANGE(R),/OVERPLOT,COLOR='GREEN',SYMBOL='CIRCLE',SYM_SIZE=0.4, NAME='Merged',/SYM_FILLED)        
          L = LEGEND(TARGET=[P1,P2,P3],POSITION=[.785,.97],/NORMAL,FONT_SIZE=9,SAMPLE_WIDTH=.075,VERTICAL_SPACING=0.004)
        ENDIF ELSE BEGIN  
          FOR C=0, N_ELEMENTS(CODES)-1 DO BEGIN        
            P = PLOT(AX.JD,YRANGE(R),YTITLE=YTITLE,FONT_SIZE=14,XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,LAYOUT=[1,5,C+2],/NODATA,/CURRENT)
            XTICKV = P.XTICKVALUES & OK = WHERE(JD_2MONTH(XTICKV) EQ '01',COUNT)
            FOR G=1,COUNT-1 DO GR = PLOT([XTICKV(OK(G)),XTICKV(OK(G))],YRANGE(R),COLOR='GREY',/OVERPLOT,XRANGE=AX.JD,YRANGE=YRANGE(R))
            T = TEXT(0.18,0.96-(.2*(C+1)),TITLES(C),COLOR='BLACK',FONT_SIZE=12,/NORMAL,TARGET=P)            
            OK = WHERE(SDATA.SUBAREA_CODE EQ CODES(C)) & P1 = PLOT(PERIOD_2JD(SDATA[OK].PERIOD),SDATA[OK].(SPOS),XRANGE=AX.JD,YRANGE=YRANGE(R),/OVERPLOT,COLOR='BLUE' ,SYMBOL='CIRCLE',SYM_SIZE=0.65,NAME='SeaWiFS')
            OK = WHERE(MDATA.SUBAREA_CODE EQ CODES(C)) & P2 = PLOT(PERIOD_2JD(MDATA[OK].PERIOD),MDATA[OK].(MPOS),XRANGE=AX.JD,YRANGE=YRANGE(R),/OVERPLOT,COLOR='RED'  ,SYMBOL='CIRCLE',SYM_SIZE=0.65,NAME='MODIS')
            OK = WHERE(CDATA.SUBAREA_CODE EQ CODES(C)) & P3 = PLOT(PERIOD_2JD(CDATA[OK].PERIOD),CDATA[OK].(CPOS),XRANGE=AX.JD,YRANGE=YRANGE(R),/OVERPLOT,COLOR='GREEN',SYMBOL='CIRCLE',SYM_SIZE=0.4, NAME='Merged',/SYM_FILLED)            
          ENDFOR
        ENDELSE          
      ENDFOR     
 ;     W.SAVE,!S.PROJECTS + 'ECOAP' + SL + 'DOC' + SL + 'EcosystemStatusReport-2011' + SL + 'PLOTS' + SL + 'SATELLITE_MONTHLY_TIME_SERIES-'+APROD+'.PNG'       
            
      IF DO_A(R) EQ 1 THEN FOR N=0L, N_ELEMENTS(SUBAREA_MAPS)-1 DO BEGIN
        CODES   = SUBAREA_CODES(N)
        TITLES  = SUBAREA_TITLES(N)
        
        SEAWIFS = IDL_RESTORE(FILE_SEARCH(DIR_S + '*' + SUBAREA_MAPS(N) + '*.SAVE'))
        MODIS   = IDL_RESTORE(FILE_SEARCH(DIR_M + '*' + SUBAREA_MAPS(N) + '*.SAVE'))
        COMBO   = IDL_RESTORE(FILE_SEARCH(DIR_C + '*' + SUBAREA_MAPS(N) + '*.SAVE')) 
      
        SDATA   = SEAWIFS[WHERE(STRMID(SEAWIFS.PERIOD,0,2) EQ 'A_')] & STAGS = TAG_NAMES(SDATA)
        MDATA   = MODIS[WHERE(STRMID(MODIS.PERIOD,0,2) EQ 'A_')]     & MTAGS = TAG_NAMES(MDATA)        
        CDATA   = COMBO[WHERE(STRMID(COMBO.PERIOD,0,2) EQ 'A_')]     & CTAGS = TAG_NAMES(CDATA)
        
        SPOS    = WHERE(STAGS EQ SPROD)
        MPOS    = WHERE(MTAGS EQ MPROD)
        CPOS    = WHERE(CTAGS EQ CPROD)
        
        DATE_RANGE = [19980101,20100605] 
        YTITLE = UNITS(APROD)         
        SYM_SIZE = 1.5
        AX = DATE_AXIS(DATE_RANGE,/YEAR,/YY_YEAR)      
        IF N EQ 0 THEN BEGIN 
          W = WINDOW(DIMENSIONS=[1024,1024])
          P = PLOT(AX.JD,Y2RANGE(R),YTITLE=YTITLE,TITLE=TITLES,FONT_SIZE=14,XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,YMAJOR=5,LAYOUT=[2,2,1],/NODATA,/CURRENT)
          
;          XTICKV = P.XTICKVALUES & OK = WHERE(JD_2MONTH(XTICKV) EQ '01',COUNT)
;          FOR G=1,COUNT-1 DO GR = PLOT([XTICKV(OK(G)),XTICKV(OK(G))],YRANGE(R),COLOR='GREY',/OVERPLOT,XRANGE=AX.JD,YRANGE=YRANGE(R))
;          T  = TEXT(0.18,0.96,TITLES,COLOR='BLACK',FONT_SIZE=12,/NORMAL,TARGET=P)
          T2 = TEXT(0.5,0.98,WTITLE(R),FONT_SIZE=14,/NORMAL,TARGET=W,ALIGNMENT=0.5)          
          OK = WHERE(SDATA.SUBAREA_CODE EQ CODES[0]) & P4 = PLOT(PERIOD_2JD(SDATA[OK].PERIOD),SDATA[OK].(SPOS),XRANGE=P.XRANGE,YRANGE=Y2RANGE(R),/OVERPLOT,COLOR='BLUE' ,SYMBOL='CIRCLE',SYM_SIZE=SYM_SIZE,            NAME='SeaWiFS',XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,YMAJOR=5)
          OK = WHERE(MDATA.SUBAREA_CODE EQ CODES[0]) & P5 = PLOT(PERIOD_2JD(MDATA[OK].PERIOD),MDATA[OK].(MPOS),XRANGE=P.XRANGE,YRANGE=Y2RANGE(R),/OVERPLOT,COLOR='RED'  ,SYMBOL='CIRCLE',SYM_SIZE=SYM_SIZE,            NAME='MODIS',  XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,YMAJOR=5)
          OK = WHERE(CDATA.SUBAREA_CODE EQ CODES[0]) & P6 = PLOT(PERIOD_2JD(CDATA[OK].PERIOD),CDATA[OK].(CPOS),XRANGE=P.XRANGE,YRANGE=Y2RANGE(R),/OVERPLOT,COLOR='GREEN',SYMBOL='CIRCLE',SYM_SIZE=1.0,/SYM_FILLED,NAME='Merged', XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,YMAJOR=5)        
          L = LEGEND(TARGET=[P4,P5,P6],POSITION=[.775,.925],/NORMAL,FONT_SIZE=9,SAMPLE_WIDTH=.2,VERTICAL_SPACING=0.012)
        ENDIF ELSE BEGIN  
          FOR C=0, N_ELEMENTS(CODES)-2 DO BEGIN        
            P = PLOT(AX.JD,Y2RANGE(R),YTITLE=YTITLE,TITLE=TITLES(C),FONT_SIZE=14,XMAJOR=AX.TICKS/2,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,LAYOUT=[2,2,C+2],/NODATA,/CURRENT)
;            XTICKV = P.XTICKVALUES & OK = WHERE(JD_2MONTH(XTICKV) EQ '01',COUNT)
;            FOR G=1,COUNT-1 DO GR = PLOT([XTICKV(OK(G)),XTICKV(OK(G))],YRANGE(R),COLOR='GREY',/OVERPLOT,XRANGE=AX.JD,YRANGE=YRANGE(R))
;            T = TEXT(0.18,0.96-(.2*(C+1)),TITLES(C),COLOR='BLACK',FONT_SIZE=12,/NORMAL,TARGET=P)
            OK = WHERE(SDATA.SUBAREA_CODE EQ CODES(C)) & P4 = PLOT(PERIOD_2JD(SDATA[OK].PERIOD),SDATA[OK].(SPOS),XRANGE=P.XRANGE,YRANGE=Y2RANGE(R),/OVERPLOT,COLOR='BLUE' ,SYMBOL='CIRCLE',SYM_SIZE=SYM_SIZE,            NAME='SeaWiFS',XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,YMAJOR=5)
            OK = WHERE(MDATA.SUBAREA_CODE EQ CODES(C)) & P5 = PLOT(PERIOD_2JD(MDATA[OK].PERIOD),MDATA[OK].(MPOS),XRANGE=P.XRANGE,YRANGE=Y2RANGE(R),/OVERPLOT,COLOR='RED'  ,SYMBOL='CIRCLE',SYM_SIZE=SYM_SIZE,            NAME='MODIS',  XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,YMAJOR=5)
            OK = WHERE(CDATA.SUBAREA_CODE EQ CODES(C)) & P6 = PLOT(PERIOD_2JD(CDATA[OK].PERIOD),CDATA[OK].(CPOS),XRANGE=P.XRANGE,YRANGE=Y2RANGE(R),/OVERPLOT,COLOR='GREEN',SYMBOL='CIRCLE',SYM_SIZE=1.0,/SYM_FILLED,NAME='Merged', XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,YMAJOR=5)            
          ENDFOR
        ENDELSE          
      ENDFOR     
   ;   W.SAVE,!S.PROJECTS + 'ECOAP' + SL + 'DOC' + SL + 'EcosystemStatusReport-2011' + SL + 'PLOTS' + SL + 'SATELLITE_MONTHLY_TIME_SERIES-'+APROD+'.PNG'    
   
      IF DO_MONTH(R) EQ 1 THEN FOR N=0L, N_ELEMENTS(SUBAREA_MAPS)-1 DO BEGIN
        CODES   = SUBAREA_CODES(N)
        TITLES  = SUBAREA_TITLES(N)
        
        SEAWIFS = IDL_RESTORE(FILE_SEARCH(DIR_S + '*' + SUBAREA_MAPS(N) + '*.SAVE'))
        MODIS   = IDL_RESTORE(FILE_SEARCH(DIR_M + '*' + SUBAREA_MAPS(N) + '*.SAVE'))
        COMBO   = IDL_RESTORE(FILE_SEARCH(DIR_C + '*' + SUBAREA_MAPS(N) + '*.SAVE')) 
      
        SDATA   = SEAWIFS[WHERE(STRMID(SEAWIFS.PERIOD,0,6) EQ 'MONTH_')] & STAGS = TAG_NAMES(SDATA)
        MDATA   = MODIS[WHERE(STRMID(MODIS.PERIOD,0,6)     EQ 'MONTH_')] & MTAGS = TAG_NAMES(MDATA)        
        CDATA   = COMBO[WHERE(STRMID(COMBO.PERIOD,0,6)     EQ 'MONTH_')] & CTAGS = TAG_NAMES(CDATA)
        
        SPOS    = WHERE(STAGS EQ SPROD)
        MPOS    = WHERE(MTAGS EQ MPROD)
        CPOS    = WHERE(CTAGS EQ CPROD)
        
        DATE_RANGE = [20200101,20201231] 
        YTITLE = UNITS(APROD)         
        SYM_SIZE = 1.5
        AX = DATE_AXIS(DATE_RANGE,/FYEAR)      
        IF N EQ 0 THEN BEGIN 
          W = WINDOW(DIMENSIONS=[1024,1024])
          P = PLOT(AX.JD,Y2RANGE(R),YTITLE=YTITLE,TITLE=TITLES,FONT_SIZE=14,XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,YMAJOR=5,LAYOUT=[2,2,1],/NODATA,/CURRENT)
          
;          XTICKV = P.XTICKVALUES & OK = WHERE(JD_2MONTH(XTICKV) EQ '01',COUNT)
;          FOR G=1,COUNT-1 DO GR = PLOT([XTICKV(OK(G)),XTICKV(OK(G))],YRANGE(R),COLOR='GREY',/OVERPLOT,XRANGE=AX.JD,YRANGE=YRANGE(R))
;          T  = TEXT(0.18,0.96,TITLES,COLOR='BLACK',FONT_SIZE=12,/NORMAL,TARGET=P)
          T2 = TEXT(0.5,0.98,WTITLE(R),FONT_SIZE=14,/NORMAL,TARGET=W,ALIGNMENT=0.5)          
          OK = WHERE(SDATA.SUBAREA_CODE EQ CODES[0]) & P4 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(SDATA[OK].PERIOD))),SDATA[OK].(SPOS),XRANGE=P.XRANGE,YRANGE=Y2RANGE(R),/OVERPLOT,COLOR='BLUE' ,SYMBOL='CIRCLE',SYM_SIZE=SYM_SIZE,            NAME='SeaWiFS',XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,YMAJOR=5)
          OK = WHERE(MDATA.SUBAREA_CODE EQ CODES[0]) & P5 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(MDATA[OK].PERIOD))),MDATA[OK].(MPOS),XRANGE=P.XRANGE,YRANGE=Y2RANGE(R),/OVERPLOT,COLOR='RED'  ,SYMBOL='CIRCLE',SYM_SIZE=SYM_SIZE,            NAME='MODIS',  XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,YMAJOR=5)
          OK = WHERE(CDATA.SUBAREA_CODE EQ CODES[0]) & P6 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(CDATA[OK].PERIOD))),CDATA[OK].(CPOS),XRANGE=P.XRANGE,YRANGE=Y2RANGE(R),/OVERPLOT,COLOR='GREEN',SYMBOL='CIRCLE',SYM_SIZE=1.0,/SYM_FILLED,NAME='Merged', XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,YMAJOR=5)        
          L = LEGEND(TARGET=[P4,P5,P6],POSITION=[.775,.925],/NORMAL,FONT_SIZE=9,SAMPLE_WIDTH=.2,VERTICAL_SPACING=0.012)
        ENDIF ELSE BEGIN  
          FOR C=0, N_ELEMENTS(CODES)-2 DO BEGIN        
            P = PLOT(AX.JD,Y2RANGE(R),YTITLE=YTITLE,TITLE=TITLES(C),FONT_SIZE=14,XMAJOR=AX.TICKS/2,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,LAYOUT=[2,2,C+2],/NODATA,/CURRENT)
;            XTICKV = P.XTICKVALUES & OK = WHERE(JD_2MONTH(XTICKV) EQ '01',COUNT)
;            FOR G=1,COUNT-1 DO GR = PLOT([XTICKV(OK(G)),XTICKV(OK(G))],YRANGE(R),COLOR='GREY',/OVERPLOT,XRANGE=AX.JD,YRANGE=YRANGE(R))
;            T = TEXT(0.18,0.96-(.2*(C+1)),TITLES(C),COLOR='BLACK',FONT_SIZE=12,/NORMAL,TARGET=P)
            OK = WHERE(SDATA.SUBAREA_CODE EQ CODES(C)) & P4 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(SDATA[OK].PERIOD))),SDATA[OK].(SPOS),XRANGE=P.XRANGE,YRANGE=Y2RANGE(R),/OVERPLOT,COLOR='BLUE' ,SYMBOL='CIRCLE',SYM_SIZE=SYM_SIZE,            NAME='SeaWiFS',XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,YMAJOR=5)
            OK = WHERE(MDATA.SUBAREA_CODE EQ CODES(C)) & P5 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(MDATA[OK].PERIOD))),MDATA[OK].(MPOS),XRANGE=P.XRANGE,YRANGE=Y2RANGE(R),/OVERPLOT,COLOR='RED'  ,SYMBOL='CIRCLE',SYM_SIZE=SYM_SIZE,            NAME='MODIS',  XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,YMAJOR=5)
            OK = WHERE(CDATA.SUBAREA_CODE EQ CODES(C)) & P6 = PLOT(YDOY_2JD('2020',DATE_2DOY(PERIOD_2DATE(CDATA[OK].PERIOD))),CDATA[OK].(CPOS),XRANGE=P.XRANGE,YRANGE=Y2RANGE(R),/OVERPLOT,COLOR='GREEN',SYMBOL='CIRCLE',SYM_SIZE=1.0,/SYM_FILLED,NAME='Merged', XMAJOR=AX.TICKS,XTICKNAME=AX.TICKNAME,XTICKVALUES=AX.TICKV,XMINOR=0,YMAJOR=5)            
          ENDFOR
        ENDELSE          
      ENDFOR     
   ;   W.SAVE,!S.PROJECTS + 'ECOAP' + SL + 'DOC' + SL + 'EcosystemStatusReport-2011' + SL + 'PLOTS' + SL + 'SATELLITE_MONTHLY_TIME_SERIES-'+APROD+'.PNG'    
    ENDFOR  
  ENDIF
  
  
  ;  Y = SIN(2.0*FINDGEN(201)*!PI/25.0)
;  W = WINDOW(DIMENSIONS=[1024,1024])
;  FOR N=0,3 DO BEGIN
;    Y = SIN((N+1)*FINDGEN(201)*!PI/25.0)
;    P = PLOT(Y,/CURRENT,LAYOUT=[1,4,N+1])
;    T = TEXT(5,0.8,'N = '+STRING(N+1),/DATA,TARGET=P)
;  ENDFOR  
  
  
  IF DO_MARMAP_LIGHT GE 1 THEN BEGIN
    DATA = IDL_RESTORE(!S.PROJECTS + 'MARMAP_OPAL' + SL + 'SAVE' + SL + 'MARMAP-OPAL-PPD-SURFACE.SAVE')
    DATA = DATA[WHERE(DATA.LIGHT_PERCENT NE '' AND DATA.SUBAREA_CODE GE 1 AND DATA.SUBAREA_CODE LE 4)]
    SETS = WHERE_SETS(DATA.SUBAREA_CODE)
    COLORS = ['BLUE','RED','GREEN','ORANGE','MIDNIGHT_BLUE','MEDIUM_VIOLET_RED']
    W=WINDOW(DIMENSIONS=[1024,1024],LAYOUT=[2,2,0])    
    T = TEXT(0.925,0.003,'MARMAP Data!CCourtesy of Kimberly Hyde!CNOAA/NMFSC Narragansett, RI',/NORMAL,FONT_SIZE=7,ALIGNMENT=0.5)
    FOR S=0,N_ELEMENTS(SETS)-1 DO BEGIN
      SET = DATA(WHERE_SETS_SUBS(SETS(S)))      
      LP = LIST()
      LD = LIST()
      LV = LIST()
      FOR N=0,N_ELEMENTS(SET)-1 DO BEGIN
        LP.ADD,FLOAT(STRSPLIT(SET(N).LIGHT_PERCENT,';',/EXTRACT)),/EXTRACT
        LD.ADD,FLOAT(STRSPLIT(SET(N).LIGHT_DEPTH,  ';',/EXTRACT)),/EXTRACT
        LV.ADD,FLOAT(STRSPLIT(SET(N).LIGHT_VALUE,  ';',/EXTRACT)),/EXTRACT
      ENDFOR
      LP = LP.TOARRAY()
      LD = LD.TOARRAY()
      LV = LV.TOARRAY()
      X = FLOAT([100,69,46,25,10,3,1])              
      P = PLOT(LP*100,LD,XTICKVALUES=X,/XLOG,SYMBOL='CIRCLE',COLOR=COLORS(S),LINESTYLE=6,LAYOUT=[2,2,S+1],/CURRENT,DIMENSIONS=[1024,1024],FONT_SIZE=16,YCOLOR='BLACK',YTITLE='Depth (m)',XTITLE='Percent Light (%)',XRANGE=[100,0],YRANGE=[80,0],YMAJOR=9,YMINOR=1,YSUBTICKLEN=0.03,YTICKLEN=0.5,XTICKLEN=0.5,XSUBTICKLEN=0.03)
      P.XRANGE=[100,1]
      P.YRANGE=[80,0]
      P.TITLE = SET[0].SUBAREA_NAME
      P.FONT_SIZE=18
      _STATS = STATS2(ALOG(LP*100),LD,MODEL='LSY')            
      MODEL_LIN = (FINDGEN(81)-_STATS.INT)/_STATS.SLOPE
      P2 = PLOT(EXP(MODEL_LIN),FINDGEN(81),COLOR='GREY',/OVERPLOT,/CURRENT)      
    ENDFOR  
    
    RANGES = [0,25,50,100,150,200,300]
    W=WINDOW(DIMENSIONS=[1024,1024])    
    T = TEXT(0.925,0.003,'MARMAP Data!CCourtesy of Kimberly Hyde!CNOAA/NMFSC Narragansett, RI',/NORMAL,FONT_SIZE=7,ALIGNMENT=0.5)
    FOR S=0,N_ELEMENTS(RANGES)-2 DO BEGIN
      OK = WHERE(DATA.BOTTOM_DEPTH GE RANGES(S) AND DATA.BOTTOM_DEPTH LT RANGES(S+1))
      SET = DATA[OK]      
      LP = LIST()
      LD = LIST()
      LV = LIST()
      FOR N=0,N_ELEMENTS(SET)-1 DO BEGIN
        LP.ADD,FLOAT(STRSPLIT(SET(N).LIGHT_PERCENT,';',/EXTRACT)),/EXTRACT
        LD.ADD,FLOAT(STRSPLIT(SET(N).LIGHT_DEPTH,  ';',/EXTRACT)),/EXTRACT
        LV.ADD,FLOAT(STRSPLIT(SET(N).LIGHT_VALUE,  ';',/EXTRACT)),/EXTRACT
      ENDFOR
      LP = LP.TOARRAY()
      LD = LD.TOARRAY()
      LV = LV.TOARRAY()
      X = FLOAT([100,69,46,25,10,3,1])            
      P = PLOT(LP*100,LD,XTICKVALUES=X,/XLOG,SYMBOL='CIRCLE',COLOR=COLORS(S),LINESTYLE=6,LAYOUT=[2,3,S+1],/CURRENT,DIMENSIONS=[1024,1024],FONT_SIZE=14,YCOLOR='BLACK',YTITLE='Depth (m)',XTITLE='Percent Light (%)',XRANGE=[100,0],YRANGE=[80,0],YMAJOR=9,YMINOR=1,YSUBTICKLEN=0.03,YTICKLEN=0.5,XTICKLEN=0.5,XSUBTICKLEN=0.03)
      P.XRANGE=[100,1]
      P.YRANGE=[80,0]
      P.TITLE = 'Bottom Depth ' + NUM2STR(RANGES(S)) + ' - ' + NUM2STR(RANGES(S+1)) + '(m)'
      P.FONT_SIZE=18
      _STATS = STATS2(ALOG(LP*100),LD,MODEL='LSY')            
      MODEL_LIN = (FINDGEN(81)-_STATS.INT)/_STATS.SLOPE
      P2 = PLOT(EXP(MODEL_LIN),FINDGEN(81),COLOR='GREY',/OVERPLOT,/CURRENT)      
    ENDFOR
  ENDIF  
  
  IF DO_N2FIX_IMAGE GE 1 THEN BEGIN
    PAL = 'PAL_SW3'
    SPECIAL_SCALE = 'VERY_HIGH'
    CSV = READALL(!S.TEST+'CV1_N2fix_Cfix.csv')
    NFILE = !S.TEST+'CV1_N2_FIX.PNG'
    CFILE = !S.TEST+'CV1_CARBON_FIX.PNG'
    DATA = STRUCT_SD_READ(!S.TEST+'DD_20090817_20090828-AT-LAC-NEC-SST-MEAN.SAVE',STRUCT=STRUCT)
    ZWIN,DATA
    MAP_NEC
    PXPY=MAP_DEG2IMAGE(DATA,CSV.LON,CSV.LAT,  X=x, Y=y,AROUND=around, SUBS=subs)
    ZWIN
    
    NIMAGE = STRUCT_SD_2IMAGE_NG(STRUCT,/ADD_LAND,/ADD_COAST,SPECIAL_SCALE=SPECIAL_SCALE,/ADD_COLORBAR,PAL=PAL,/ADD_BATHY,BATHS=100,LAND_COLOR=255,COAST_COLOR=251,BATHY_COLOR=255,COLORBAR_TITLE=UNITS('SST')+' - August 17-28, 2009')
    FOR N=0,N_ELEMENTS(CSV)-1 DO S = SYMBOL(X(N),Y(N),'CIRCLE',/DEVICE,SYM_COLOR='BLACK',/SYM_FILLED,SYM_SIZE=CSV(N).N2_SYMBOL*1)
    BOX = POLYLINE([8,201,201,8,8],[570,570,890,890,570],/DEVICE,COLOR='BLACK',THICK=2)        
    SET = WHERE_SETS(CSV.N2_SYMBOL) & SYMS = SET.VALUE
    TXT = ['0 - 25','25 - 50','50 - 100','100 - 200','200 - 400','400 - 800'] 
    FOR N=0,N_ELEMENTS(SYMS)-1 DO S = SYMBOL(50,815-(N*44),'CIRCLE',/DEVICE,SYM_COLOR='BLACK',/SYM_FILLED,SYM_SIZE=SYMS(N)*1) 
    FOR N=0,N_ELEMENTS(TXT) -1 DO T = TEXT(80,805-(N*44),/DEVICE,TXT(N),COLOR='BLACK', FONT_SIZE=16)    
    T2 = TEXT(106,865,/DEVICE,'$N_2 Fixation$',FONT_SIZE=18,ALIGNMENT=0.5)
    T3 = TEXT(106,835,/DEVICE,'($\mu mol N m^{-2} d^{-1})$',FONT_SIZE=18,ALIGNMENT=0.5)
    NIMAGE.SAVE,NFILE,RESOLUTION=600
    
    CIMAGE = STRUCT_SD_2IMAGE_NG(STRUCT,/ADD_LAND,/ADD_COAST,SPECIAL_SCALE=SPECIAL_SCALE,/ADD_COLORBAR,PAL=PAL,/ADD_BATHY,BATHS=100,LAND_COLOR=255,COAST_COLOR=251,BATHY_COLOR=255,COLORBAR_TITLE=UNITS('SST')+' - August 17-28, 2009',/BUFFER)
    FOR N=0,N_ELEMENTS(CSV)-1 DO S = SYMBOL(X(N),Y(N),'CIRCLE',/DEVICE,SYM_COLOR='BLACK',/SYM_FILLED,SYM_SIZE=CSV(N).C_SYMBOL*1)
    BOX = POLYLINE([8,201,201,8,8],[610,610,890,890,610],/DEVICE,COLOR='BLACK',THICK=2)        
    SET = WHERE_SETS(CSV.C_SYMBOL) & SYMS = SET.VALUE
    TXT = ['0 - 25','25 - 50','50 - 100','100 - 200','> 200'] 
    FOR N=0,N_ELEMENTS(SYMS)-1 DO S = SYMBOL(50,800-(N*40),'CIRCLE',/DEVICE,SYM_COLOR='BLACK',/SYM_FILLED,SYM_SIZE=SYMS(N)*1) 
    FOR N=0,N_ELEMENTS(TXT) -1 DO T = TEXT(80,790-(N*40),/DEVICE,TXT(N),COLOR='BLACK', FONT_SIZE=16)    
    T2 = TEXT(105,850,/DEVICE,'$Carbon Fixation$',FONT_SIZE=18,ALIGNMENT=0.5)
    T3 = TEXT(105,820,/DEVICE,'($mmol C m^{-2} d^{-1})$',FONT_SIZE=18,ALIGNMENT=0.5)
    CIMAGE.SAVE,CFILE,RESOLUTION=600
        
  
  ENDIF  

  
  IF DO_CHLOR_MAP GE 1 THEN BEGIN
    CHARSIZE = 22
    COLOR = 'BLACK'
    DATA = STRUCT_SD_READ(FIX_PATH(!S.DATASETS + 'OC-SEAWIFS-MLAC/NEC/STATS/ANNUAL-SEA_AQU-LAC-NEC-CHLOR_A-MEAN.SAVE'),STRUCT=STRUCT)
    IM = STRUCT_SD_2IMAGE_NG(STRUCT,/ADD_LAND,/ADD_COAST,SPECIAL_SCALE='MEDIUM',/ADD_COLORBAR,/ADD_BATHY,BATHS=100,BATHY_THICK=2)
    T1 = TEXT(0.09, 0.35,'Mid-Atlantic Bight', ORIENTATION=60, ALIGNMENT=0.0, FONT_SIZE=CHARSIZE, COLOR=COLOR, /NORMAL, FONT_STYLE=0)
    T2 = TEXT(0.60, 0.74,'Gulf of!CMaine',                    ALIGNMENT=0.5, FONT_SIZE=CHARSIZE, COLOR=COLOR, /NORMAL, FONT_STYLE=0)
    T3 = TEXT(0.66, 0.58,'Georges!CBank',                     ALIGNMENT=0.5, FONT_SIZE=CHARSIZE, COLOR=COLOR, /NORMAL, FONT_STYLE=0)
    T4 = TEXT(0.50, 0.52,'Nantucket!CShoals',                 ALIGNMENT=0.5, FONT_SIZE=CHARSIZE, COLOR=COLOR, /NORMAL, FONT_STYLE=0)
    IM.SAVE,'D:\DATASETS\OC-SEA_AQU-LAC-NEC\ANNUAL-SEA_AQU-LAC-NEC-CHLOR_A-MEAN.PNG',RESOLUTION=600
    IM.CLOSE
  
  
  
    DATA   = STRUCT_SD_READ(!S.TEST+'SAMPLE-NEC-CHLOR_A.SAVE',STRUCT=STRUCT,SUBS=SUBS)
    W = WINDOW(DIMENSIONS=[2048,1024],LAYOUT=[2,1,0])
    BIMAGE = STRUCT_SD_2IMAGE_NG(STRUCT,/ADD_LAND,/ADD_COAST,SPECIAL_SCALE=SPECIAL_SCALE,/ADD_SENSOR,/ADD_COLORBAR,ADD_LABEL='SEAWIFS_TEST',/CURRENT,LAYOUT=[2,1,1])  
    BIMAGE = STRUCT_SD_2IMAGE_NG(STRUCT,/ADD_LAND,/ADD_COAST,SPECIAL_SCALE=SPECIAL_SCALE,/ADD_SENSOR,/ADD_DATEBAR, ADD_LABEL='SEAWIFS_TEST2',/CURRENT,LAYOUT=[2,1,2])
  ENDIF 
  
   IF DO_GLOBAL GE 1 THEN BEGIN    
    BUFFER = 0
    MAPS = ['ROBINSON','ROBINSON_180','GEQ']
    FILES = ['ANNUAL_1997_2010-N4AT-4-GEQ-SST-MEAN','ANNUAL-SEA_AQU-GEQ-CHLOR_A-OC-MEAN','ANNUAL-SA_N4AT-9_4-L3B-PPD-OPAL-MEAN','ANNUAL-SA_N4AT-9_4-L3B-PPD-VGPM2-MEAN']
    SPECIAL_SCALES = ['','','LOW','LOW']
    FOR F=0,N_ELEMENTS(FILES)-1 DO BEGIN 
      DATA   = STRUCT_SD_READ(!S.TEST+FILES(F)+'.SAVE',STRUCT=_STRUCT,SUBS=SUBS)   
      FOR N=0,N_ELEMENTS(MAPS)-1 DO BEGIN      
        PNGFILE = !S.TEST + REPLACE(FILES(F),['L3B','GEQ'],[MAPS(N),MAPS(N)])+'.PNG'
        IF FILE_TEST(PNGFILE) EQ 1 AND DO_GLOBAL EQ 1 THEN CONTINUE
        STRUCT = _STRUCT        
        BIMAGE = STRUCT_SD_2IMAGE_NG(STRUCT,BUFFER=BUFFER,MAP_OUT=MAPS(N),CONTOUR_COLOR=254,/ADD_CONTOUR,CONTOURS=[0,5,10,15,20,25,30],/ADD_LAND,/ADD_COAST,SPECIAL_SCALE=SPECIAL_SCALES(F),/ADD_COLORBAR,/ADD_SOURCE)
        BIMAGE.SAVE,PNGFILE,RESOLUTION=300
        BIMAGE.CLOSE
      ENDFOR
    ENDFOR          
  ENDIF 
  
  IF DO_REMAPS GE 1 THEN BEGIN    
    MAPS = ['MAB_GS','RI_SOUND','BI_SOUND','MASS_BAY','MAB','MAB_EXT','GOMN','GOM','NJ_COAST','LIS']
    MAPS = ['RI_SOUND','BI_SOUND','MASS_BAY']        
    FOR N=0,N_ELEMENTS(MAPS)-1 DO BEGIN
      DATA   = STRUCT_SD_READ(!S.TEST+'SAMPLE-NEC-CHLOR_A.SAVE',STRUCT=STRUCT,SUBS=SUBS)
      BIMAGE = STRUCT_SD_2IMAGE_NG(STRUCT,MAP_OUT=MAPS(N),/ADD_LAND,/ADD_COAST,SPECIAL_SCALE=SPECIAL_SCALE,/ADD_SENSOR,/ADD_COLORBAR,/ADD_DATEBAR,ADD_LABEL=MAPS(N),/ADD_SOURCE,SOURCE_COLOR=255)
    ENDFOR        
  ENDIF 
  
;  STOP
;  BIM    = IMAGE(BIMAGE,RGB_TABLE=RGB_TABLE,DIMENSIONS=[STRUCT.PX,STRUCT.PY],MARGIN=0)
;  
;  
;  
;  
;  
;  BAR    = COLOR_BAR_SCALE(PROD=STRUCT.PROD,/NO_UNIT,PAL=PAL,SPECIAL_SCALE=SPECIAL_SCALE,/STRUCT)
;  POS = [4,810,603,830] 
;  px= 600.0
;  py= 20.0;                                            _POS = [0.04,0.04,0.96,0.16] & _px= 650.0*SCALE_FACTOR & _py=100.0*SCALE_FACTOR & ENDELSE
;  dx = POS(2) - POS[0] + 1    ; Plot window size in pixels.
;  dy = POS(3) - POS[1] + 1
;  COLOR_RANGE = FLOAT([BAR.MINCOLOR,BAR.MAXCOLOR])
;  NCOLORS = COLOR_RANGE[1] - COLOR_RANGE[0] + 1
;  X = [BAR.MINVAL,BAR.MAXVAL]
;  SARR = X[0]+((X[1]-X[0])/256)*FINDGEN(256)                          ; scale the array to 256 intervals (adapted from the jhuapl routine maken)
;  Z = REFORM(((SARR - X[0])*FLOAT(COLOR_RANGE[1]-COLOR_RANGE[0])/(X[1]-X[0]) + COLOR_RANGE[0]),[256,1])<255  ; adapted from the jhuapl routine scalearray
;  SZ = SIZE(Z)
;  XX = FIX((256./(SZ[1]-1))*FINDGEN(DX))                        ; create a scaled x array
;  YY = FIX((256./(SZ(2)-1))*FINDGEN(DY))                        ; create a scaled y array
;      NX = SZ[1]
;      ny = sz(2)
;      xfrac = [0,1]
;      yfrac = [0,1]
;      xx = FIX(maken(xfrac[0]*nx,xfrac[1]*nx,dx))
;      yy = FIX(maken(yfrac[0]*ny,yfrac[1]*ny,dy))
; 
;  BARARR = INTERPOLATE(Z,XX,YY,/GRID)                                 ; interpolate to fill in the image array
;  BARIMG = IMAGE(BARARR,/CURRENT,MIN_VALUE=BAR.MINCOLOR,MAX_VALUE=BAR.MAX_COLOR,POSITION=POS,/DEVICE,RGB_TABLE=RGB_TABLE)    ; diplay the bar image then overplot the tick values                  
;  XTICKV = 10^BAR.TICKV                                                    
;  P      = PLOT(X,[0,1],/XLOG,XTICKVALUES=10^BAR.TICKV,XTICKNAME=BAR.TICKNAME,XTICKFONT_SIZE=18,POSITION=POS,/DEVICE,XRANGE=X,YRANGE=[0,1],XTICKLEN=0.25,MIN_VALUE=X[0],MAX_VALUE=X[1],XMAJOR=BAR.MAJOR,XMINOR=0,YMINOR=0,YMAJOR=0,XTITLE=BAR.TITLE,/NODATA,/CURRENT,AXIS_STYLE=1)
;   
;  
;  STOP
;;  x = maken(xfrac[0]*nx,xfrac[1]*nx,dx)
;;      y = maken(yfrac[0]*ny,yfrac[1]*ny,dy)
;;    xst = (xhi-xlo)/float(n-1)  ; Step size.
;;  return, xlo+xst*findgen(n)
;
;file1 = FILEPATH('Day.jpg', SUBDIRECTORY=['examples','data'])
;im1 = IMAGE(file1, BACKGROUND_COLOR="WHITE", IMAGE_DIMENSIONS=[360,180], IMAGE_LOCATION=[-180,-90], XRANGE=[-180,0], YRANGE=[-90,90], DIMENSIONS=[512,512], MARGIN=0)
;
;  
  
  IF DO_ELEVATION GE 1 THEN BEGIN
; Read image
    image = cgDemoData(7) ; World Elevation Data 
    image = Scale_Vector(image, 1, 2500L) 
    logImage = Alog10(image)   
    X = FLOAT([MIN(IMAGE),MAX(IMAGE)])
    XLOG = [MIN(LOGIMAGE),MAX(LOGIMAGE)]
  
; Create the color bar image  
    PX = 200 & PY = 20
    RGB_TABLE=33
    COLOR_RANGE = [0.0,255.0]
    NCOLORS = COLOR_RANGE[1] - COLOR_RANGE[0] + 1
    SARR = X[0]+((X[1]-X[0])/256)*FINDGEN(256)                          ; scale the array to 256 intervals (adapted from the jhuapl routine maken)
    Z = REFORM(((SARR - X[0])*FLOAT(COLOR_RANGE[1]-COLOR_RANGE[0])/(X[1]-X[0]) + COLOR_RANGE[0]),[256,1])<255  ; adapted from the jhuapl routine scalearray
    XX = FIX(COLOR_RANGE[0]+((COLOR_RANGE[1]-COLOR_RANGE[0])/(NCOLORS-1))*FINDGEN(PX))                         ; create a scaled x array
    YY = FIX(COLOR_RANGE[0]+((COLOR_RANGE[1]-COLOR_RANGE[0])/(NCOLORS-1))*FINDGEN(PY))                         ; create a scaled y array
    BARARR = INTERPOLATE(Z,XX,YY,/GRID)                                 ; interpolate to fill in the image array

; Linear example
    W = WINDOW(DIMENSIONS=[800,800],LAYOUT=[2,1,1])
    IMG = IMAGE(IMAGE,RGB_TABLE=RGB_TABLE,/CURRENT,LAYOUT=[2,1,1],TITLE='Linear')
    CB = COLORBAR(TARGET=IMG,TITLE='IDL')      
    POS = CB.POSITION                                                   ; determine position for the second colorbar
    POS[1] = pos[1]-.1
    POS(3) = POS(3)-.1      
    BARIMG = IMAGE(BARARR,/CURRENT,POSITION=POS,RGB_TABLE=RGB_TABLE)    ; diplay the bar image then overplot the tick values                                                                      
    P      = PLOT(X,[0,1],POSITION=POS,XRANGE=X,YRANGE=[0,1],XTICKLEN=0.25,MIN_VALUE=X[0],MAX_VALUE=X[1],XMINOR=4,YMINOR=0,YMAJOR=0,XTITLE='CUSTOM',/NODATA,/CURRENT,AXIS_STYLE=1)
   
; Log example   
    IMG2 = IMAGE(LOGIMAGE,RGB_TABLE=RGB_TABLE,/CURRENT,LAYOUT=[2,1,2],TITLE='Log Scales')
    CB = COLORBAR(TARGET=IMG2,TITLE='IDL')      
    POS = CB.POSITION                                                  
    POS[1] = pos[1]-.1
    POS(3) = POS(3)-.1      
    BARIMG = IMAGE(BARARR,/CURRENT,POSITION=POS,RGB_TABLE=RGB_TABLE)                                                                               
    P = PLOT(XLOG,[0,1],/XLOG,POSITION=POS,XRANGE=X,YRANGE=[0,1],XTICKLEN=0.25,MIN_VALUE=X[0],MAX_VALUE=X[1],XMINOR=4,YMINOR=0,YMAJOR=0,XTITLE='CUSTOM',/NODATA,/CURRENT,AXIS_STYLE=1)
 
; Example for David Fanning   
     image = cgDemoData(7) ; World Elevation Data 
     image = Scale_Vector(image, 1, 2500L) 
     logImage = Alog10(image) 
     s = Size(image, /Dimensions) 
     cgDisplay, 600, 400, Title='Logarithmic Color Bar' 
     LoadCT, 33, /Silent, NColors=254 
     pos = [0.1, 0.1, 0.8, 0.9] 
     cgImage, BytScl(logImage, Top=253), Position=pos, /Keep_Aspect 
     cgPlot, [0], [0], /NoErase, XRange=[0,s[0]], YRange=[0,s[1]], $ 
        XStyle=1, YStyle=1, Color=cgColor('black', 255), Position=pos 
     cgColorbar, /YLOG, YTICKS=0, Range=[Min(image), Max(image)], $ 
        NColors=254, Color=cgColor('black', 255), /Vertical 
     ;cgImageInfo, image   
   ENDIF
  
  
  
;  PLOT_DEMO
;  PSFILE = !S.TEST+'PLOT_DEMO.PS'
;  PS_2PNG,PSFILE,IMAGEOUT=IMAGEOUT,/IMAGEONLY,DPI=600



  IF DO_COLOR_EXAMPLES GE 1 THEN BEGIN
    COLORS = TAG_NAMES(!COLOR)
    BLANK = BYTARR(300,50) & BLANK(*) = 245
    W = WINDOW(DIMENSIONS=[850,1100],LAYOUT=[3,60,1],BACKGROUND=245)
    FOR I = 0, N_ELEMENTS(COLORS)-1 DO BEGIN
      !NULL = IMAGE(BLANK,/CURRENT,LAYOUT=[3,60,I+13],TITLE=COLORS(I),FONT_SIZE=16,FONT_STYLE=1,FONT_COLOR=!COLOR.(I))    
    ENDFOR
  ENDIF    
   
  
  IF DO_COLORBAR1 GE 1 THEN BEGIN
  
    W = WINDOW(DIMENSIONS=[800,800],LAYOUT=[2,1,1])
  
;   LINEAR EXAMPLE  
    ARR    = FLTARR(200,200) 
    FOR I = 0, 199 DO ARR(*,I) = (0+(100/199.)*FINDGEN(200))            ; scale the array to 200 intervals ranging from 0 to 100 (adapted from the jhuapl routine maken)     
    X = [MIN(ARR),MAX(ARR)]
    IM = IMAGE(ARR,/CURRENT,RGB_TABLE=34,LAYOUT=[2,1,1],TITLE='LINEAR') ; display the image
    CB = COLORBAR(TARGET=IM,TITLE='IDL')                                ; add standard colorbar
    POS = CB.POSITION                                                   ; determine position for the second colorbar
    pos[1] = pos[1]-.1
    POS(3) = POS(3)-.1    
    PX = 200 & PY = 20
    SARR = 1+(200./255.)*FINDGEN(256)                                   ; scale the array to 256 intervals (adapted from the jhuapl routine maken)    
    Z = REFORM(((SARR - X[0])*FLOAT(255)/(X[1]-X[0]) + 0),[256,1])<255  ; adapted from the jhuapl routine scalearray
    XX = FIX(0+(255./255.)*FINDGEN(PX))                                 ; create a scaled x array
    YY = FIX(0+(255./255.)*FINDGEN(PY))                                 ; create a scaled y array
    BARARR = INTERPOLATE(Z,XX,YY,/GRID)                                 ; interpolate to fill in the image array
    BARIMG = IMAGE(BARARR,/CURRENT,POSITION=POS,RGB_TABLE=34)           ; diplay the bar image
                                                                        ; overplot the tick values
    P      = PLOT(X,[0,1],POSITION=POS,XRANGE=X,YRANGE=[0,1],XTICKLEN=0.25,MIN_VALUE=X[0],MAX_VALUE=X[1],XMINOR=4,YMINOR=0,YMAJOR=0,XTITLE='CUSTOM',/NODATA,/CURRENT,AXIS_STYLE=1)
   
;   LOG SCALED EXAMPLE
    ARR    = FLTARR(200,200)    
    for i = 0, 199 do arr(*,i) = (-2+(4/199.)*FINDGEN(200)) ; Scale the array to 200 intervals ranging from -2 to 2 (adapted from the jhuapl routine maken)     
    X = 10^[MIN(ARR),MAX(ARR)]
    ARR = 10^(ARR)
    IM = IMAGE(ARR,/CURRENT,RGB_TABLE=34,LAYOUT=[2,1,2],TITLE='LOG')
    CB = COLORBAR(TARGET=IM,TITLE='IDL')
    POS = CB.POSITION
    POS[1] = POS[1]-.1
    POS(3) = POS(3)-.1    
    PX = 200 & PY = 20
    SARR = -2+(2./255.)*FINDGEN(256) ; Scale the array to 256 intervals - adapted from the jhuapl routine maken    
    Z = REFORM(((SARR - X[0])*FLOAT(255)/(X[1]-X[0]) + 0),[256,1])<255  ; Adapted from the jhuapl routine scalearray
    XX = FIX(0+(255./255.)*FINDGEN(PX))
    YY = FIX(0+(255./255.)*FINDGEN(PY))
    BARARR = INTERPOLATE(Z,XX,YY,/GRID)
    BARIMG = IMAGE(BARARR,/CURRENT,POSITION=POS,RGB_TABLE=34)
    P      = PLOT(X,[0,1],/XLOG,POSITION=POS,XRANGE=X,YRANGE=[0,1],XTICKLEN=0.25,MIN_VALUE=X[0],MAX_VALUE=X[1],XMINOR=4,YMINOR=0,YMAJOR=0,XTITLE='CUSTOM',/NODATA,/CURRENT,AXIS_STYLE=1)
    P.XTICKNAME=['.01','.1','1','10','100']
  ENDIF   
     
  IF DO_COLORBAR2 GE 1 THEN BEGIN
    ARR    = FLTARR(200,200)  
    FOR I = 0, 199 DO ARR(*,I) = MAKEN(1,200,200)
    X = [MIN(ARR),MAX(ARR)]
    IM = IMAGE(ARR,/CURRENT,RGB_TABLE=34,LAYOUT=[2,1,1],TITLE='LINEAR')
    CB = COLORBAR(TARGET=IM,TITLE='IDL')
    POS = CB.POSITION
    POS[1] = POS[1]-.1
    POS(3) = POS(3)-.1    
    PX = 200 & PY = 20
    Z = REFORM(SCALEARRAY(MAKEN(X[0],X[1],256),X[0],X[1],0,255),[256,1])<255
    BARARR = INTERPOLATE(Z,FIX(MAKEN(0.0,256.,PX)),FIX(MAKEN(0.0,256.,PY)),/GRID)
    BARIMG = IMAGE(BARARR,/CURRENT,POSITION=POS,RGB_TABLE=34)
    P      = PLOT(X,[0,1],POSITION=POS,XRANGE=X,YRANGE=[0,1],XTICKLEN=0.25,MIN_VALUE=X[0],MAX_VALUE=X[1],XMINOR=4,YMINOR=0,YMAJOR=0,xTITLE='CUSTOM',/NODATA,/CURRENT)
   
    LRR    = FLTARR(200,200)    
    FOR I = 0, 199 DO LRR(*,I) = 10^(MAKEN(-2,2,200))
    XX = ALOG10([MIN(LRR),MAX(LRR)])
    IM2 = IMAGE(LRR,/CURRENT,RGB_TABLE=34,LAYOUT=[2,1,2],TITLE='LOG')
    CB = COLORBAR(TARGET=IM2,TITLE='IDL')
    POS = CB.POSITION
    POS[1] = POS[1]-.1
    POS(3) = POS(3)-.1    
    PX = 200 & PY = 20
    Z = REFORM(SCALEARRAY(MAKEN(XX[0],XX[1],256),XX[0],XX[1],0,255),[256,1])<255
    BARLRR = INTERPOLATE(Z,FIX(MAKEN(0.0,256.,PX)),FIX(MAKEN(0.0,256.,PY)),/GRID)
    BARIMG2 = IMAGE(BARLRR,/CURRENT,POSITION=POS,RGB_TABLE=34)
    P      = PLOT(XX,[0,1],POSITION=POS,XRANGE=XX,YRANGE=[0,1],XTICKLEN=0.25,MIN_VALUE=X[0],MAX_VALUE=X[1],XMINOR=4,YMINOR=0,YMAJOR=0,xTITLE='CUSTOM',/NODATA,/CURRENT)
    P.XTICKNAME=['.01','.1','1','10','100']
  ENDIF    
    
    ; idl example
  
  ;sample image for new colorbar as per Q4. Need to 
;hide the image so only its associated colorbar is 
;displayed
it=image(/test,RGB_TABLE=4, hide=1)
cb=colorbar(target=it, title='Original colorbar',position=[0.5,0.7,0.75,0.75] )

;sample dataset for other colorbar
sample=float(dist(256))
bytedata= alog(sample)

;overplot this image and its colorbar onto
;hidden image
im = IMAGE(bytedata,/overplot,RGB_TABLE=4)

;create colorbar from bytedata
cb = COLORBAR(target=im, tickvalues=[0.01,0.03,0.1,0.3,1.0,3.0,10.0,30.0], title='Log Data with no cb.scale,0.15,1.0',position=[.0,.55,.7,.6])
cb = COLORBAR(target=im, tickvalues=[0.01,0.03,0.1,0.3,1.0,3.0,10.0,30.0], title='Log Data with cb.scale,0.15,1.0',position=[.5,.15,.75,.2])
 ;scale down the 'x' size for the color bar to fit
cb.scale,0.15, 1.0
  
  
  stop
  
  
  

; IDL example  
;  file1 = FILEPATH('Night.jpg', SUBDIRECTORY=['examples','data'])
;  file2 = FILEPATH('Day.jpg',   SUBDIRECTORY=['examples','data'])
;  
;  ; The image spans [-180,180], [-90,90], with a lower-left pixel at [-180,-90]. Restrict the range to one hemisphere.
;  im1 = IMAGE(file1,BACKGROUND_COLOR='white',IMAGE_DIMENSIONS=[360,180],IMAGE_LOCATION=[-180,-90],XRANGE=[-180,0],YRANGE=[-90,90],DIMENSIONS=[512,512], MARGIN=0)
;
;  ; Overplot another image, same dimensions.
;  im2 = IMAGE(file2, /OVERPLOT,IMAGE_DIMENSIONS=[360,180],IMAGE_LOCATION=[-180,-90],TRANSPARENCY=50)
;
;  t = TEXT(-175, 80, '$\it Day/Night$',/DATA, FONT_SIZE=20, color='white')
;  ; Fade between the two.
;  for i=-100,100 do im2.TRANSPARENCY=abs(i)
 

; Posted to the IDL Forum
;Hello,
;
;I have just started using the new graphics routines in IDL 8.0/8.1 and am trying to incorporate them into an extensive set of customized plotting and image type routines.  I am able to use the IMAGE function to display some log-normally distributed data, however I am unable to create a colorbar that reflects the log-transformed data.  
;
;Here is a simplified example:
;; Read the data array
;; Convert the scaled float array (using ALOG10) to a byte array
;im = IMAGE(bytedata)
;cb = COLORBAR(target=im,tickvalues=[0.01,0.03,0.1,0.3,1.0,3.0,10.0,30.0],tickname=['.01','.03','.1','.3','1','3','10','30'], title='Log Data')
;
;Some specific questions:
;1) How do you scale the color bar so that it reflects the scaled data?
;2) If tickvalues are supplied, can you also input ticknames?  In the above example, the supplied ticknames are not used and instead the ticknames are derived from the tickvalues.  The only way I have been able to use the ticknames is to remove the tickvalues keyword.
;3) Is it possible to set minimum and maximum color or value ranges?  For example, in one of my commonly used rgb_tables, the 0 value is black and above 250 are various shades of gray.  How do I set it so that mincolor=1 and maxcolor=250?
;4) Is it possible to create a colorbar that is independent of some data?  It would be very useful to be able to create a colorbar just using a user supplied data range instead of being directly linked to a specfic data field.  There are times when I need to create stand alone colorbars and I can't figure out how to do this with the COLORBAR function.
;
;Thank you for your assistance,
;Kim

  

  
  stop
  
  
  END



