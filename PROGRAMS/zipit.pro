; $ID:	ZIPIT.PRO,	2020-06-30-17,	USER-KJWH	$
;##########################################################################################
PRO ZIPIT,FILES,ZFILE=ZFILE,ZP=ZP,GZ=GZ,BZ=BZ,DIR_OUT=DIR_OUT,VERBOSE=VERBOSE
;+
; THIS PROGRAM COMPRESSES OR UNCOMPRESSES A FILES
; SYNTAX:
;   ZIPIT, FILES=FILES
; OUTPUT:
;   COMPRESSED FILE[S] ... OR UNCOMPRESSED FILE[S]
; ARGUMENTS:
;   FILES : NAMES OF FILES (WITH WILDCARDS IF NEEDED)

; KEYWORDS:
;    ZFILE: NAME FOR THE OUTPUT ZIP FILE TO CONTAIN ALL THE INPUT FILES
;    ZP   : USE FILE_ZIP > *.ZIP
;    GZ   : USE FILE_GZIP > *.GZ
;    BZ   : USE BZIP2    >  *.BZ2
; DIR_OUT : DIRECTORY FOR OUTPUT
; VERBOSE : PASSED TO FILE_ZIP OR FILE_UNZIP
    
; EXAMPLES:  SEE ZIPIT_DEMO

; CATEGORY:
;   FILES
;   
; NOTES: DO NOT PROVIDE A ZFILE IF YOU ARE MAKING A GZ OUTPUT
;        BOTH THE EXE AND DLL

; MODIFICATION HISTORY:
;   JAN 1,  2015 - WRITTEN BY: J.E.O'REILLY [BASED ON ZIP.PRO]
;   JAN 6,  2015 - JOR:  TESTED UNDER WINDOWS OS
;   JAN 7,  2015 - JOR:  STREAMLINED
;   JAN 9,  2015 - JOR:  ADDED BZ2 BLOCKS
;   JAN 14, 2015 - KJWH: ADDED UNIX BZ2 COMMANDS 
;   FEB 13, 2015 - JOR:  ;===> ADD DIR OUT TO ZFILE IF NEEDED
                         ;===> ADD EXT TO ZFILE IF NEEDED
;   FEB 24, 2015 - KJWH: FIXED ZFILE BUG
;                        IF KEY(ZFILE) THEN IF (FILE_PARSE(ZFILE)).DIR EQ '' THEN ZFILE = DIR_OUT + ZFILE        
;   MAY 12, 2015 - KJWH: IN CASE(PROG) STATEMENT, CHANGED 'BUNZIP2' TO 'FILE_BUNZIP2'     
;                        DOING FILE_TEST FOR DIR_OUT BEFORE UNZIPPING        
;                        IN FILE_BUNZIP2 - NOW COPY THE COMPRESSED FILE TO DIR_OUT TO MAKE IT FASTER                  

;##########################################################################################
;-

;*******************
ROUTINE_NAME='ZIPIT'
;******************* 

  SL = PATH_SEP()

;===> DEFAULTS    SPAWN
  CASE !S.OS OF
    'WINDOWS': BEGIN
      BZ2_EXE= 'C:\BZ2\GNUWIN32\BIN\BUNZIP2.EXE'
      IF FILE_TEST(BZ2_EXE) EQ 0 THEN MESSAGE,"ERROR: 'BUNZIP2.EXE' CAN NOT BE FOUND"
      BZIP_CMD = 'C:\BZ2\GNUWIN32\BIN\BZIP2'
      BUNZIP_CMD = 'C:\BZ2\GNUWIN32\BIN\BUNZIP2'
    END 
    'UNIX': BEGIN
      BZIP_CMD    = 'bzip2 '
      BUNZIP_CMD  = 'bunzip2 '
    END
  ENDCASE    
  
  UNZIPS = ['FILE_UNZIP','FILE_GUNZIP','FILE_BUNZIP2']
  EXTS   = [       'ZIP',     'GZ',         'BZ2']
  IF NONE(FILES) THEN MESSAGE,'ERROR: MUST PROVIDE FILE NAMES'
  IF MAX(STRPOS(FILES,'*')) GE 0 THEN FILES=FILE_SEARCH(FILES)

;===> DEFAULT IS ZP- USE FILE_ZIP
  IF KEY(ZP) THEN PROG = 'FILE_ZIP'
  IF KEY(GZ) THEN PROG = 'FILE_GZIP'
  IF KEY(BZ) THEN PROG = 'FILE_BZIP'

;===> IF ANY FILES HAVE ANY OF THE EXTS THEN OVERRIDE PROG AND UNZIP
  FILE_EXTS =STRUPCASE((PARSE_IT(FILES)).EXT)
  OK =WHERE_IN(EXTS,FILE_EXTS,COUNT)
  IF COUNT GT 1 THEN MESSAGE,'ERROR: FILE_EXTS MUST ALL BE THE SAME'
  IF COUNT EQ 1 THEN PROG = UNZIPS[OK] 
  IF COUNT EQ 0 THEN BEGIN
    PRINT, 'FILE EXTENSION DOES NOT MATCH ZIP FILE EXTENSION'
    GOTO, DONE
  ENDIF

  IF NONE(DIR_OUT) THEN  DIR_OUT = (PARSE_IT(FILES[0])).DIR & DIR_TEST,DIR_OUT
  ;===> ADD DIR OUT TO ZFILE IF NEEDED
  IF KEY(ZFILE) THEN IF (FILE_PARSE(ZFILE)).DIR EQ '' THEN ZFILE = DIR_OUT + ZFILE
; CCCCCCCCCCCCCC
  CASE (PROG) OF

;##################### 
  'FILE_ZIP': BEGIN
;#####################      
    IF KEY(ZFILE) THEN BEGIN
      ;===> ADD EXT TO ZFILE IF NEEDED
      IF (FILE_PARSE(ZFILE)).EXT EQ '' THEN ZFILE = ZFILE + '.ZIP'
      FILE_ZIP,FILES,ZFILE,VERBOSE=VERBOSE
      IF KEY(VERBOSE) THEN PRINT,'FILES: ' +ARR_2STR(FILES,DELIM = ';') +' ARE ZIPPED TO:  ' +ZFILE
    ENDIF ELSE BEGIN
      ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
      FOR  NTH = 0,N_ELEMENTS(FILES)-1 DO BEGIN
        FILE = FILES[NTH]
        FILEOUT = DIR_OUT + (FILE_PARSE(FILE)).NAME + '.ZIP'
        FILE_ZIP,FILE,FILEOUT,VERBOSE=VERBOSE
        IF KEY(VERBOSE) THEN PFILE,FILEOUT
      ENDFOR;FOR  NTH = 0,NOF(FILES) DO BEGIN
      ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
    ENDELSE;IF KEY(ZFILE) THEN BEGIN
   
  END; 'FILE_UNZIP'

;##################### 
  'FILE_UNZIP': BEGIN
;##################### 

    FILE_UNZIP,FILES,DIR_OUT,VERBOSE=VERBOSE
    IF KEY(VERBOSE) THEN PRINT,'FILES IN ' +ARR_2STR(FILES) +' ARE UNZIPPED IN:  ' +DIR_OUT
   
  END; 'FILE_UNZIP'
  ;||||||||||||||||
  
;##################### 
  'FILE_GZIP': BEGIN
;##################### 
; 
 ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
    FOR  NTH = 0,N_ELEMENTS(FILES)-1 DO BEGIN
      FILE = FILES[NTH]
      FILEOUT = DIR_OUT + (FILE_PARSE(FILE)).NAME_EXT + '.gz'
      FILE_GZIP,FILE,FILEOUT,VERBOSE=VERBOSE
      IF KEY(VERBOSE) THEN PFILE,FILEOUT
    ENDFOR;FOR  NTH = 0,NOF(FILES) DO BEGIN
 ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
    IF KEY(VERBOSE) THEN PRINT,'FILES IN ' +ARR_2STR(FILES,DELIM=';') +' ARE GZIPPED IN:  ' +DIR_OUT
  END; 'FILE_GZIP'
  ;|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

;##################### 
  'FILE_GUNZIP': BEGIN
;##################### 
 
 ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
 FOR  NTH = 0,N_ELEMENTS(FILES)-1 DO BEGIN
   FILE = FILES[NTH]
   FILEOUT = DIR_OUT + (FILE_PARSE(FILE)).NAME
   FILE_GUNZIP,FILE,FILEOUT,VERBOSE=VERBOSE
   IF KEY(VERBOSE) THEN PFILE,FILEOUT
 ENDFOR;FOR  NTH = 0,NOF(FILES) DO BEGIN
 ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
    
  END; 'FILE_GUNZIP'
  
;#####################
  'FILE_BZIP': BEGIN
;#####################

    ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
    FOR  NTH = 0,N_ELEMENTS(FILES)-1 DO BEGIN
      FILE = FILES[NTH]
      FILEOUT = DIR_OUT + (FILE_PARSE(FILE)).NAME_EXT + STRLOWCASE('.bz2')
      IF !S.OS EQ 'WINDOWS' THEN CMD = BZIP_CMD + '  '   + FILE + ' -z -k -f'+ ' ' 
      IF !S.OS EQ 'UNIX'    THEN CMD = BZIP_CMD + ' -c ' + FILE + ' > ' + FILEOUT
      SPAWN, CMD,RESULT,ERROR & IF VERBOSE EQ 1 AND ERROR NE '' THEN PLIST,ERROR  
      IF KEY(VERBOSE) THEN PFILE,FILEOUT
    ENDFOR;FOR  NTH = 0,NOF(FILES) DO BEGIN
    ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
    IF KEY(VERBOSE) THEN PRINT,'FILES IN ' +ARR_2STR(FILES,DELIM=';') +' ARE BZIPPED IN:  ' +DIR_OUT
    
  END; 'FILE_BZIP'
  ;|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
  
;#####################
  'FILE_BUNZIP2': BEGIN
;#####################
    
    ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
    FOR  NTH = 0,NOF(FILES)-1 DO BEGIN
      FP = FILE_PARSE(FILES[NTH])
      IF DIR_OUT NE FP.DIR THEN _DIR_OUT = DIR_OUT ELSE _DIR_OUT = FP.DIR
      FILEOUT = _DIR_OUT + FP.NAME
      IF FILE_TEST(FILEOUT) EQ 1 AND NOT KEYWORD_SET(OVERWRITE) THEN CONTINUE
      IF _DIR_OUT NE FP.DIR THEN FILE_COPY, FP.FULLNAME, _DIR_OUT, /OVERWRITE  ; COPY COMPRESSED FILE TO DIR_OUT BEFORE UNZIPPING TO MAKE IT FASTER
      _FILEOUT = _DIR_OUT + FP.NAME_EXT
      CMD = BUNZIP_CMD + '  '  + _FILEOUT + ' -d -k -f'+ ' ' 
      SPAWN, CMD,RESULT,ERROR & PL,ERROR
      ;===> IF UNCOMPRESSED FILE EXISTS THEN MOVE IT TO FILEOUT 
      NAME = REPLACE(FILES[NTH],[STRUPCASE('.BZ2'),STRLOWCASE('.BZ2')],['',''])
      IF FILE_TEST(NAME) THEN FILE_MOVE,NAME,FILEOUT,VERBOSE=VERBOSE,/ALLOW_SAME,/OVERWRITE
      IF KEY(VERBOSE) THEN PFILE,FILEOUT
    ENDFOR;FOR  NTH = 0,NOF(FILES) DO BEGIN
    ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
    IF KEY(VERBOSE) THEN PRINT,'FILES IN ' +ARR_2STR(FILES,DELIM=';') +' ARE BUNZIPPED IN:  ' +DIR_OUT
    
  END; 'FILE_BUNZIP'
  ELSE: BEGIN
  END
  ENDCASE

  DONE:

END; #####################  END OF ROUTINE ################################

