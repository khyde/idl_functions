; $ID:	MAPS_SET.PRO,	2020-06-30-17,	USER-KJWH	$
;+
;#############################################################################################################
	PRO MAPS_SET,MAPP,STRUCT=STRUCT,PX=PX,PY=PY,BKG_COLOR=BKG_COLOR,VERBOSE=VERBOSE
;  
; NAME:
;		MAPS_SET
;
; PURPOSE:  CALL IDL'S MAP_SET BY READING THE NEW MAPS_MASTER.CSV DATABASE 
;
; CATEGORY:	MAPS  FAMILY
;
; CALLING SEQUENCE: MAPS_SET,MAPP
;
; INPUTS: MAPP..... MAP NAME IN MASTER MAPS DATABASE
;		
; OPTIONAL INPUTS:
;		NONE:	
;		
; KEYWORD PARAMETERS:
;   STRUCT..... A MAPS STRUCTURE MADE BY USING MAPS_STRUCT [INPUT]
;   PX......... WIDTH IN PIXELS [INPUT]
;   PY......... HEIGHT IN PIXELS  [INPUT]
;   BKG_COLOR.. COLOR TO INITIALIZE GRAPHICS DEVICE [ERASES TO BKG_COLOR IF PRESENT] [INPUT]
;   VERBOSE.... EXECUTE ANY PRINT COMMANDS
;   
; OUTPUTS: INITIALIZES MAP_SET,[& ZWIN IF NEEDED]
;	
; COPYRIGHT:
; Copyright (C) 2018, Department of Commerce, National Oceanic and Atmospheric Administration, National Marine Fisheries Service,
;   Northeast Fisheries Science Center, Narragansett Laboratory.
;   This software may be used, copied, or redistributed as long as it is not sold and this copyright notice is reproduced on each copy made.
;   This routine is provided AS IS without any express or implied warranties whatsoever.
;
;   This program was written by John E. O'Reilly, DOC/NOAA/NMFS/NEFSC Narragansett, RI
;          with assistance from Kimberly Hyde, DOC/NOAA/NMFS/NEFSC Narragansett, RI, kimberly.hyde@noaa.gov.  Inquiries should be directed to kimberly.hyde@noaa.gov.
;
;  MODIFICATION HISTORY:
;     Written: November 23, 2013 by John E. O'Reilly, NOAA/NEFSC/Narragansett Laboratory, 28 Tarzwell Drive, 02882
;     Modified:
;       MAR 15, 2016 - JEOR: 1) DISCOVERED THAT USING KEY NAME= 'LAMBERTCONIC' IN MAP_SET GIVES DIFFERENT RESULTS THAN WHEN USING SPECIFIC MAP PROJECTIONS LIKE:'/CONIC' OR '/CYLINDRICAL'
;                            2) SO, NOW MAKING CALLS TO MAP_SET MORE LIKE OUR OLD MAP_*.PRO PROGRAMS
;                            3) NOW USING PROJECTION-SPECIFIC KEYWORDS TO MAP_SET [NO LONGER USING KEYWORD NAME]
;                            4) COMBINED TWO CALLS TO MAP_SET INTO ONE CALL [LIMIT VS SCALE]
;                            5) FILLED MAP_SET KEYWORDS WITH: MAP PROJECTION TYPE, STANDARD_PARALLELS, SCALE, LIMIT, ETC.
;                            6) STREAMLINED PROGRAM LOGIC
;                            7) DELETED EARLIER PROGRAM MODIFICATION NOTES [THEY ARE NO LONGER RELEVANT AFTER STREANLINING]
;                            8) IF MAPP EQ 'HAMMER' THEN BEGIN [MAP_HAMMER HAS NO ROT]
;                            9) IF MAPP EQ 'MAP_EQ_NATL' THEN BEGIN [MAP_EQ_NATL HAS HAS NO ROT]
;                           10) IF MAPP EQ NEA [SPECIAL CASE 'WHOLE_MAP?]
;       JUN 30, 2016 - JEOR: IF NUMBER(S.SCALE) AND PX_MSTR NE PX_ AND PY_MSTR NE PY_ THEN SCALE = DOUBLE(SCALE)*FLOAT(PX_MSTR)/PX_
;       MAR 01, 2019 - KJWH: Updated formatting    
;                            Added COPYRIGHT information              
;                       
;                       
;#################################################################################
;-
;***************************
  ROUTINE_NAME  = 'MAPS_SET'
;***************************

;===> CONSTANTS
  POSITION=[0.0, 0.0, 1.0, 1.0]
  NOBORDER = 1
  !P.MULTI[0] = -1 ; TO MATCH OLD MAPS

;===> MAPP OR STRUCT MUST BE PROVIDED
  IF NONE(MAPP) AND NONE(STRUCT) THEN  MESSAGE,'ERROR: MAPP OR STRUCT MUST BE PROVIDED'
  IF  KEY(MAPP) AND NONE(STRUCT) THEN S = MAPS_READ(MAPP)
  IF NONE(MAPP) AND KEY(STRUCT)  THEN MAPP = STRUCT.MAP
  IF KEY(STRUCT) THEN S = STRUCT
  IF IDLTYPE(S) NE 'STRUCT' THEN MESSAGE,'ERROR: STRUCT MUST BE A MAPS STRUCTURE'
  
  IF KEY(VERBOSE) THEN PFILE,S.MAP+ '  MAP',/M

;####################################################################
;===> TYPES OF PROJECTIONS USED AT NARR [PROJ TAG IN MAPS_MASTER.CSV]
  IF S.PROJ EQ  'CYLINDRICAL'   THEN  CYLINDRICAL   = 1
  IF S.PROJ EQ  'HAMMERAITOFF'  THEN  HAMMERAITOFF  = 1
  IF S.PROJ EQ  'LAMBERTCONIC'  THEN  CONIC         = 1; THIS MUST BE 'CONIC' NOT 'LAMBERTCONIC'
  IF S.PROJ EQ  'MERCATOR'      THEN  MERCATOR      = 1
  IF S.PROJ EQ  'MOLLWEIDE'     THEN  MOLLWEIDE     = 1
  IF S.PROJ EQ  'ORTHOGRAPHIC'  THEN  ORTHOGRAPHIC  = 1
  IF S.PROJ EQ  'ROBINSON'      THEN  ROBINSON      = 1
  IF S.PROJ EQ  'SINUSOIDAL'    THEN  SINUSOIDAL    = 1
  IF S.PROJ EQ  'STEREOGRAPHIC' THEN  STEREOGRAPHIC = 1
;||||||||||||||||||||||||||||||||||||||||||||||||||||


;===> STANDARD_PARALLELS?
  IF S.PAR_LOW NE '' AND S.PAR_UPP NE '' THEN STANDARD_PARALLELS = FLOAT([S.PAR_LOW,S.PAR_UPP])

;===> ISOTROPIC ?
  IF S.ISOTROPIC EQ '1' THEN ISOTROPIC = 1

;===> STANDARD PX,PY IN MASTER
  PX_MSTR = LONG(S.PX)
  PY_MSTR = LONG(S.PY)

;===>NON-STANDARD PX AND PY INPUT ?
  IF KEY(PX) THEN  PX_ = PX ELSE PX_ = PX_MSTR   
  IF KEY(PY) THEN  PY_ = PY ELSE PY_ = PY_MSTR  

;===> SCALE?
  IF NUMBER(S.SCALE) THEN  SCALE = DOUBLE(S.SCALE)

;===> MODIFY SCALE?
  IF NUMBER(S.SCALE) AND PX_MSTR NE PX_ AND PY_MSTR NE PY_ THEN SCALE = DOUBLE(SCALE)*FLOAT(PX_MSTR)/PX_

;===> ANY LIMIT? [NOTE CAN HAVE EITHER LIMIT OR SCALE PASSED TO MAP_SET-NOT BOTH]
  IF TOTAL(NUMBER([S.LATMIN,S.LONMIN,S.LATMAX,S.LONMAX])) EQ 4 AND S.SCALE EQ MISSINGS(S.SCALE)  THEN LIMIT = DOUBLE([S.LATMIN,S.LONMIN,S.LATMAX,S.LONMAX])

;===> SET UP Z-BUFFER IF NOT SET
  IF !D.NAME NE 'Z' THEN BEGIN
    OLD_WIN = !D.NAME 
    ZWIN,INTARR([PX_,PY_])
  ENDIF;IF !D.NAME NE 'Z' THEN BEGIN

;===> IF MAPP EQ HAMMER THEN ROT IS NOT PROVIDED TO MAP_SET
  IF MAPP EQ 'HAMMER' THEN BEGIN
    MAP_SET, 0,180,/HAMMER,ISOTROPIC = 1,/NOBORDER
    GOTO,DO_BKG
  ENDIF;IF MAPP EQ 'HAMMER' THEN BEGIN
  
;===> IF MAPP EQ EQ_NATL THEN ROT IS NOT PROVIDED TO MAP_SET
  IF MAPP EQ 'EQ_NATL' THEN BEGIN
    MAP_SET, /CYLINDRICAL, 0,0, LIMIT=[0.0, -100.0, 60.0, 0.0], ISOTROPIC = 1, POSITION=[0.0, 0.0, 1.0, 1.0],/NOBORDER
    GOTO,DO_BKG
  ENDIF;IF MAPP EQ 'EQ_NATL' THEN BEGIN
  
;===> IF MAPP EQ NEA [SPECIAL CASE 'WHOLE_MAP?]
  IF MAPP EQ 'NEA' THEN BEGIN
     MAP_SET,0,0,0,/CYLINDRICAL,ISOTROPIC=0,LIMIT=[ 33.88782, -76.09071,44.11254 ,-62.90947],$
      /WHOLE_MAP,POSITION=POSITION,/NOBORDER
      GOTO,DO_BKG
  ENDIF;IF MAPP EQ 'NEA' THEN BEGIN
  
  MAP_SET,S.P0_LAT,S.P0_LON,S.ROT,$   
    CONIC = CONIC, $
    LAMBERT = LAMBERT, $
    GNOMIC = GNOMIC, $
    AZIMUTHAL = AZIMUTH, $
    SATELLITE = SATELLITE, $
    CYLINDRICAL = CYLINDRICAL, $
    MERCATOR = MERCATOR, $
    MILLER_CYLINDRICAL=MILLER, $
    MOLLWEIDE = MOLLWEIDE, $
    SINUSOIDAL = SINUSOIDAL, $
    AITOFF = AITOFF, $
    HAMMER = HAMMER, $
    ALBERS = ALBERS, $
    TRANSVERSE_MERCATOR = UTM, $
    ROBINSON = ROBINSON, $
    GOODESHOMOLOSINE = GOODES, $
    ELLIPSOID = ELLIPS,$
    STEREOGRAPHIC = STEREOGRAPHIC, $
    ORTHOGRAPHIC = ORTHOGRAPHIC, $  
    STANDARD_PARALLELS=STANDARD_PARALLELS,$      
    SCALE=SCALE,LIMIT = LIMIT,$
    ISOTROPIC = ISOTROPIC,$
    POSITION = POSITION,$
    NOBORDER = NOBORDER 
   
 DO_BKG: 

;===> ERASE ONLY WHEN BKG_COLOR IS PRESENT
  IF KEY(BKG_COLOR) THEN ERASE,FIRST(BKG_COLOR)
  

END; #####################  END OF ROUTINE ################################
