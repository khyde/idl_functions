; $ID:	PRO_MAIN.PRO,	2020-07-01-12,	USER-KJWH	$
;+
; ######################################################################### 
  PRO PRO_MAIN


; THIS PROGRAM IS A MAIN ROUTINE FOR MAINTAINING OUR IDL PROGRAMS 


; HISTORY:
;     APR 26,2014,WRITTEN BY: J.E. O'REILLY
;     OCT 2,2014,JOR ADDED STEP DO_DELETE_NAMED
;-
; #########################################################################

;*****************************
ROUTINE_NAME  = 'PRO_MAIN'
;*****************************

; SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
; SSSSS       S W I T C H E S      CONTROLLING WHICH PROCESSING STEPS TO DO SSSSS
;SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS	
; 0 (DO NOT DO THE STEP)
;	1 (DO THE STEP)
; 2 (DO THE STEP AND OVERWRITE ANY OUTPUT IF IT ALREAD EXISTS)
; 3 (STOP IN THE STEP)
; 4 ( PROCESS ONLY FIRST 4 FILES
; 5 (REVERSE THE SETS STRUCTURE  

;SSSSS   SWITCHES     SSSSS
; 

  DO_DELETE_NAMED   = 1
  DO_DELETE_TARGETS =	1
  PRO_2OBSOLETE 		= 0
  IMG_2OBSOLETE  	  = 0
  DO_LOWER_PRO 		  = 0
  DO_MOVE2OBSOLETE  = 0
  DO_DELETE_NON_PROS = 0
  
;SSSSS     END OF SWITCHES     SSSSS
;
;
;***********************************
IF DO_DELETE_NAMED GE 1 THEN BEGIN
;***********************************
    , 'DO_DELETE_NAMED'
    OVERWRITE = DO_DELETE_NAMED EQ 2 & IF DO_DELETE_NAMED EQ 3 THEN STOP
    TARGETS = ['MEAN.PRO','IDL_MEAN.PRO','LIST.PRO','LIST - COPY.PRO']
    ;TARGETS = [TARGETS,'

    DRIVES = GET_DRIVE_NAMES()
    ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
    FOR _DRIVE = 0,N_ELEMENTS(DRIVES)-1 DO BEGIN
      DRIVE = DRIVES(_DRIVE)
      PATH = DRIVE.DRIVE + 'IDL\PROGRAMS\' & PRINT,'DELETING TARGETS FROM  : ' + PATH
      IF FILE_TEST(PATH,/DIRECTORY) EQ 1 THEN BEGIN

      FILES_PRO = FILE_SEARCH(PATH,'*.PRO') & PN,FILES_PRO,'PROGRAMS'
    
     ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
     FOR NTH = 0, N_ELEMENTS(TARGETS)-1 DO BEGIN
       TARGET = TARGETS[NTH]
       OK = WHERE(STRUPCASE(FILES_PRO) EQ STRUPCASE(PATH + TARGET),COUNT)
       IF COUNT GE 1 THEN BEGIN
         FILE = FILES_PRO[OK]
         FILE_DELETE,FILE,/VERBOSE        
       ENDIF ELSE BEGIN
         PRINT, ' NONE FOUND FOR ' + TARGET        
       ENDELSE;IF COUNT GE 1 THEN BEGIN
     ENDFOR;FOR NTH = 0, N_ELEMENTS(TARGETS)-1 DO BEGIN
     ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
     
   ENDIF;IF FILE_TEST(DISK,/DIRECTORY) EQ 1 THEN BEGIN
 ENDFOR;FOR _DRIVE = 0,N_ELEMENTS(DRIVES)-1 DO BEGIN   
    , 'DO_DELETE_NAMED'
  ENDIF ; IF DO_DELETE_NAMED GE 1 THEN BEGIN
; ||||||||||||||||||||||||||||||||||||

;***********************************
IF DO_DELETE_TARGETS GE 1 THEN BEGIN
  ;***********************************
  , 'DO_DELETE_TARGETS'
  OVERWRITE = DO_DELETE_TARGETS EQ 2 & IF DO_DELETE_TARGETS EQ 3 THEN STOP
  TARGETS = ['BURRFISH','SUNFISH','FLOUNDER','LOLIGO','SWORDFISH','STARFISH','COPY OF']
  ;TARGETS = [TARGETS,'

  DRIVES = GET_DRIVE_NAMES()
  ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
  FOR _DRIVE = 0,N_ELEMENTS(DRIVES)-1 DO BEGIN
    DRIVE = DRIVES(_DRIVE)
    PATH = DRIVE.DRIVE + 'IDL\PROGRAMS\' & PRINT,'CHECKING  : ' + PATH
    IF FILE_TEST(PATH,/DIRECTORY) EQ 1 THEN BEGIN

      FILES_PRO = FILE_SEARCH(PATH,'*.PRO') & PN,FILES_PRO

      ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
      FOR NTH = 0, N_ELEMENTS(TARGETS)-1 DO BEGIN
        TARGET = TARGETS[NTH]
        OK = WHERE_STRING(FILES_PRO,TARGET,COUNT)
        IF COUNT GE 1 THEN BEGIN
          FILES = FILES_PRO[OK]
          FN = FILE_PARSE(FILES)
          NAMES = FN.NAME
          PL, NAMES
          T = '  DELETE THESE FILES  '+ STRJOIN(NAMES + ' ')
          YN =DIALOG_MESSAGE(T,/QUESTION)
          IF STRUPCASE(YN) EQ 'YES' THEN BEGIN
            FILE_DELETE,FILES,/VERBOSE
          ENDIF;IF STRUPCASE(YN) EQ 'YES' THEN BEGIN


        ENDIF ELSE BEGIN
          PRINT, ' NONE FOUND FOR ' + TARGET

        ENDELSE;IF COUNT GE 1 THEN BEGIN
      ENDFOR;FOR NTH = 0, N_ELEMENTS(TARGETS)-1 DO BEGIN
      ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF

    ENDIF;IF FILE_TEST(DISK,/DIRECTORY) EQ 1 THEN BEGIN
  ENDFOR;FOR _DRIVE = 0,N_ELEMENTS(DRIVES)-1 DO BEGIN
  , 'DO_DELETE_TARGETS'
ENDIF ; IF DO_DELETE_TARGETS GE 1 THEN BEGIN
; ||||||||||||||||||||||||||||||||||||



; ****************************
IF DO_DELETE_NON_PROS GE 1 THEN BEGIN
  ; ****************************
  , 'DO_DELETE_NON_PROS'
  OVERWRITE = DO_DELETE_NON_PROS EQ 2 & IF DO_DELETE_NON_PROS EQ 3 THEN STOP
  DRIVES = GET_DRIVE_NAMES()
  ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
  FOR _DRIVE = 0,N_ELEMENTS(DRIVES)-1 DO BEGIN
    DRIVE = DRIVES(_DRIVE)
    PATH = DRIVE.DRIVE + 'IDL\PROGRAMS\' & PRINT,'CHECKING  : ' + PATH
    IF FILE_TEST(PATH,/DIRECTORY) EQ 1 THEN BEGIN

      FILES = FILE_SEARCH(PATH,'*.*') & PN,FILES
      FN = FILE_PARSE(FILES)
      EXT = STRUPCASE(FN.EXT)
     
        OK_NON_PRO = WHERE(EXT NE 'PRO',COUNT_NON_PRO)
        IF COUNT_NON_PRO GE 1 THEN BEGIN
          TRASH = FILES(OK_NON_PRO) & PL, TRASH         
            FILE_DELETE,TRASH,/VERBOSE


        ENDIF ELSE BEGIN
          PRINT, ' NONE FOUND FOR ' + TARGET

        ENDELSE;IF COUNT GE 1 THEN BEGIN
     

    ENDIF;IF FILE_TEST(DISK,/DIRECTORY) EQ 1 THEN BEGIN
  ENDFOR;FOR _DRIVE = 0,N_ELEMENTS(DRIVES)-1 DO BEGIN
  , 'DO_DELETE_NON_PROS'
ENDIF ; IF DO_DELETE_NON_PROS GE 1 THEN BEGIN
; ||||||||||||||||||||||||||||||||||||

; ****************************
  IF PRO_2OBSOLETE GE 1 THEN BEGIN
; ****************************
    , 'PRO_2OBSOLETE'
    OVERWRITE = PRO_2OBSOLETE EQ 2  & IF PRO_2OBSOLETE EQ 3 THEN STOP 
    DIR_OBSOLETE = REPLACE(!S.PROGRAMS,'PROGRAMS','OBSOLETE')
    TXT_FILE = "C:\IDL\IDL-KIM\KHYDE_OBSOLETE_PROGRAMS_20140418.txt" 
    TXT = READ_TXT(TXT_FILE)
    FN = FILE_PARSE(TXT)
    NAMES = FN.NAME
    PL,NAMES
    T = '  MOVE THESE FILES TO OBSOLETE '+ STRJOIN(NAMES + ' ')
    YN =DIALOG_MESSAGE(T,/QUESTION)
    IF STRUPCASE(YN) EQ 'YES' THEN BEGIN
      FILES = !S.PROGRAMS + NAMES + '.PRO'
      OK = WHERE(FILE_TEST(FILES) EQ 1,COUNT)
      IF COUNT GE 1 THEN FILES = FILES[OK] ELSE STOP
      FILE_MOVE,FILES,DIR_OBSOLETE,/VERBOSE
    ENDIF;IF STRUPCASE(YN) EQ 'YES' THEN BEGIN
    
    , 'PRO_2OBSOLETE'
  ENDIF ; IF PRO_2OBSOLETE GE 1 THEN BEGIN
; ||||||||||||||||||||||||||||||||||||||||
; 
; 
; ****************************
IF IMG_2OBSOLETE GE 1 THEN BEGIN
  ; ****************************
  , 'IMG_2OBSOLETE'
  OVERWRITE = IMG_2OBSOLETE EQ 2  & IF IMG_2OBSOLETE EQ 3 THEN STOP
  DIR_OBSOLETE = REPLACE(!S.IMAGES,'IMAGES','OBSOLETE')
  TXT_FILE =  "C:\IDL\IDL-KIM\KHYDE_OBSOLETE_IMAGES_20140418.txt"
  TXT = READ_TXT(TXT_FILE)
  FN = FILE_PARSE(TXT)
  NAMES = FN.NAME_EXT
  PL,NAMES
  T = '  MOVE THESE FILES TO OBSOLETE '+ STRJOIN(NAMES + ' ')
  YN =DIALOG_MESSAGE(T,/QUESTION)
  IF STRUPCASE(YN) EQ 'YES' THEN BEGIN
    FILES =   !S.IMAGES +FN.FULLNAME
    OK = WHERE(FILE_TEST(FILES) EQ 1,COUNT)
    IF COUNT GE 1 THEN FILES = FILES[OK]
    FILE_MOVE,FILES,DIR_OBSOLETE,/VERBOSE
  ENDIF;IF STRUPCASE(YN) EQ 'YES' THEN BEGIN

  , 'IMG_2OBSOLETE'
ENDIF ; IF IMG_2OBSOLETE GE 1 THEN BEGIN
; ||||||||||||||||||||||||||||||||||||

; ****************************
IF IMG_2OBSOLETE GE 1 THEN BEGIN
  ; **************************
  , 'IMG_2OBSOLETE'
  OVERWRITE = IMG_2OBSOLETE EQ 2  & IF IMG_2OBSOLETE EQ 3 THEN STOP
  
  , 'IMG_2OBSOLETE'
ENDIF ; IF IMG_2OBSOLETE GE 1 THEN BEGIN
; ||||||||||||||||||||||||||||||||||||

; ****************************
IF DO_LOWER_PRO GE 1 THEN BEGIN
; ****************************
  , 'DO_LOWER_PRO'
  OVERWRITE = DO_LOWER_PRO EQ 2 & IF DO_LOWER_PRO EQ 3 THEN STOP
  FILES = FILE_SEARCH(!S.PROGRAMS ,'*.PRO' ,FOLD_CASE=0)
  PN,FILES
   FILE_DOC,FILES,QUIET=QUIET
 
    
  , 'DO_LOWER_PRO'
ENDIF ; IF DO_LOWER_PRO GE 1 THEN BEGIN
; ||||||||||||||||||||||||||||||||||||



END; #####################  END OF ROUTINE ################################
