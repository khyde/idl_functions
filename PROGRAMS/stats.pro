; $ID:	STATS.PRO,	2020-07-08-15,	USER-KJWH	$

;#############################################################################
FUNCTION STATS ,ARRAY,$		
               STATS_OUT=STATS_OUT,$
               MISSING=MISSING,$
               PARAMS=PARAMS,$
               DECIMALS=DECIMALS,$
               FILE=FILE,$
               APPEND=APPEND,$              
               NOTES=NOTES,$
               EVEN=EVEN,$
               TRANSFORM=TRANSFORM,$
               ERROR=ERROR,ALL=ALL,$
               NO_STATSTRING=NO_STATSTRING,$
               BASIC = BASIC,$
               _EXTRA=_EXTRA
;+
; NAME:
;       STATS
;
; PURPOSE:
;      COMPUTES UNIVARIATE STATISTICS:
;         MINIMUM
;         MAXIMUM
;         MEDIAN(50%)
;         ARITHMETIC MEAN
;         GEOMETRIC MEAN [ IF TRANSFORM IS ALOG OR ALOG10 ]
;         VARIANCE
;         STANDARD DEVIATION
;         MEAN ABSOLUTE DEVIATION
;         COEFFICIENT OF VARIATION
;         SKEWNESS
;         KURTOSIS
;
;
; CATEGORY:
;      STATISTICS
;
; CALLING SEQUENCE:
;       RESULT = STATS(ARRAY)
;
; EXAMPLES:
;       X= [10] & S=STATS(X) & ST,S ; ONLY ONE VALUE
;       X= [10] & S=STATS(X,TRANSFORM = 'ALOG10') & HELP,/STRUCT,S ; ONLY ONE VALUE, TRANSFORM PROVIDED
;       X= [10] & S=STATS(X,TRANSFORM = 'ALOG') & HELP,/STRUCT,S ; ONLY ONE VALUE, TRANSFORM PROVIDED;       
;       X= [10] & S=STATS(X) & HELP,/STRUCT,S 
;       S = STATS([1,2,3,4,5,6]) & HELP,/STRUCT,S
;       HELP,/STRUCT,STATS([0,1,2,3]); NOTE THAT THE MEAN IS 1.5 AND THE MED IS 2
;       HELP,/STRUCT,STATS([0,1,2,3],/EVEN); NOTE THAT THE MEAN IS 1.5 AND THE MED IS 1.5 SINCE EVEN IS SET
;       HELP,/STRUCT,STATS([0,1,2,3],MISSING = 3); NOTE MAX IS 2 AND MEAN IS 1
;       HELP,/STRUCT,STATS(RANDOMN(SEED,1000000)); NOTE THE MEAN,MED,SKEW,KURTOSIS ARE VERY CLOSE TO ZERO AND VAR& STD CLOSE TO 1.0
;       S = STATS([1,2,3,4,5,6],/NO_STATSTRING) & HELP,/STRUCT,S
;       S = STATS([1,2,3,4,5,6],PARAMS = [0,1,3,5,6]) & HELP,/STRUCT,S

;       
; INPUTS:
;       ARRAY: NUMERIC SCALAR OR VECTOR
;
; KEYWORD PARAMETERS:
;       STATS_OUT: A TEXT STRING OF THE STATISTICS TO OUTPUT.  THE DEFAULT IS 
;       MISSING:   VALUE FOR MISSING DATA (THIS VALUE WILL BE EXCLUDED FROM THE STATISTICS.
;
;       PARAMS:    A VECTOR INDICATING WHICH STATISTICAL RESULTS,
;                  (AND THEIR SEQUENCE OR ORDER), WILL BE PLACED INTO
;                  THE TAG STRING VARIABLE: STATSTRING
;                  FOR SUBSEQUENT USE BY THE PROGRAM CALLING STATS
;       BASIC:     THE VERY BASIC PARAMETERS: 
;                  [BASIC_STATS = ['N','MIN','MAX','MED','AMEAN','GMEAN']
;
;                  (NOTE THE USER MAY SPECIFY VALUES FOR PARAMS IN ANY ORDER):
; #####################################################################################                 
;              0:N
;              1:MIN
;              2:SUB_MIN
;              3:MAX
;              4:SUB_MAX
;              5:SUM
;              6:SPAN
;              7:MED
;              8:MEAN
;              9:AMEAN
;              10:VAR
;              11:STD
;              12:CV
;              13:MDEV
;              14:SKEW
;              15:KURT
;              16:GMEAN
;              17:GMED
;              18:GVAR
;              19:GSTD
;              20:GCV
;              21:GMDEV
;              22:GSKEW
;              23:GKURT
;              24:TRANSFORM
;              25:STATSTRING
;              26:NOTES      
;                  
;                  
;                  
;                  
;            0:    N (NUMBER OF OBSERVATIONS IN ARRAY)
;            1:    MINIMUM
;						 2:		 SUBSCRIPT OF THE MINIMUM VALUE
;            3:    MAXIMUM
;						 4:		 SUBSCRIPT OF THE MAXIMUM VALUE
;            5:    MEDIAN (50%)
;            6:    MEAN (IF TRANSFORM IS SET[1], THEN THE MEAN = GEOMETRIC MEAN, ELSE MEAN = ARITHMETIC MEAN)
;            7:    VARIANCE
;            8:    STANDARD DEVIATION
;            9:    COEFFICIENT OF VARIATION
;           12:    MEAN ABSOLUTE DEVIATION
;           13:    SKEWNESS
;           14:    KURTOSIS
;						15:		 TRANSFORMATION TYPE (ALOG, ALOG10, '')
;
;       DECIMALS:  NUMBER OF DESIRED DECIMAL PLACES IN THE STATSTRING TAG
;                  (DOES NOT INFLUENCE FORMAT OF OTHER STRUCTURE TAGS)
;
;       FILE:      FULL NAME OF FILE TO WRITE ALL STATISTICAL RESULTS [TO A CSV FILE]
;
;       APPEND:    APPENDS STATISTICS TO AN EXISTING CSV FILE
;
;
;       NOTES:     USER MAY ADD TEXT STRING IDENTIFYING SUBSET OR ANY OTHER IDENTIFYER
;                  TO FIRST LINE OF HEADING
;
;       EVEN:      IF THIS KEYWORD IS USED THEN WHEN ARRAY HAS EVEN NUMBER OF ELEMENTS
;                  THE MEDIAN IS THE AVERAGE OF THE MIDDLE 2 ELEMENTS.
;                  (THIS IS SAME AS IDL EVEN KEYWORD WHEN USING MEDIAN
;;
;				MATH:			 USED FOR SPECIAL CASE PRODS SUCH AS GRAD_MAG_RATIO
;
;				TRANSFORM: USE THIS KEYWORD TO TRANSFORM THE DATA (ALOG OR ALOG10) PRIOR TO CALCULATING THE MEAN
;				           NOTE THAT THE MIN,MAX,SUM,MED ARE ANTILOGGED IN THE OUTPUT STATS STRUCTURE
;				           BUT CV,STD,SKEW,KURT AND VAR ARE COMPUTED FROM RAW INPUT DATA
;
;       
;       ALL:     RETURNS THE ACTUAL VALUES FOR THE MIN,SUB_MIN,MAX,SUB_MAX [!NOT JUST THOSE FROM THE NON-MISSING DATA ]
;                   NOTE: THIS GIVES THE ABOVE RESULTS RELATIVE TO THE ORIGINAL INPUT DATA [ ARRAY ], 
;                   BEFORE REMOVING THE MISSING VALUES.
;                   
;       NO_STATSTRING: STATSTRING WILL BE NULL IN STAT.STATSTRING  
;       
;
;   
;
; OUTPUTS:
;       A STRUCTURE CONTAINING THE VARIOUS STATISTICS:
;       N = NUMBER OF OBSERVATIONS IN ARRAY
;       MINIMUM,MAXIMUM, ARRAY SUBSCRIPTS OF THE MIN AND MAX (SUB_MIN,SUB_MAX)
;       MEDIAN (50%),ARITHMETIC MEAN,GEOMETRIC MEAN [IF TRANSFORM]
;       VARIANCE,STANDARD DEVIATION(STD),COEFFICIENT OF VARIATION(CV)
;       MEAN ABSOLUTE DEVIATION(MDEV),SKEWNESS(SKEW),KURTOSIS(KURT)
;

; MODIFICATION HISTORY:
;  WRITTEN OCTOBER 24,1994, J.E. O'REILLY, NOAA, NARRAGANSETT, RI
;  APRIL 27,1995 RETURNS STATS
;  MAY 20,1995 RETURNS STATS.N = 0 IF ONLY 1 OBSERVATION AND IT IS EQUAL TO MISSING)
;                        					
;  JAN 30,1996 ELIMINATES INFINITE DATA FROM ARRAY BEFORE COMPUTING STATISTICS
;    					IF MISSING NOT SUPPLIED THEN SETS MISSING TO INFINITY (!VALUE.D_INFINITY);
;             ADDED KEYWORD MIDDLE (MEDIAN IS AVERAGE OF THE TWO MIDDLE VALUES IN AN EVEN-NUMBERED ARRAY
;  JULY 17,1996,JOR,  ADDED STATSTRING TO STRUCTURE (USEFUL WITH IDL'S XYOUTS)
;  AUG 9,1996,JOR,  ADDED PARAMS,FILE,ETC. SO STATS WORKS LIKE STATS2.PRO
;  DEC 4,1997  REPLACED KEYWORD MIDDLE WITH EVEN TO MATCH IDL MEDIAN PROGRAM
;              ALSO NO LONGER SORT DATA TO FIND MIDDLE FOR MEDIAN WHEN PROVIDING AN EVEN-NUMBERED ARRAY
;  APR 11,2000 CHANGED 'IF KEYWORD_SET(MISSING) TO IF N_ELEMENTS(MISSING) NE 1 THEN
;  JUN 2, 2003,TD 		REPLACE STRTRIM(STRING WITH STRTRIM IF FORMAT NOT SPECIFIC
;  JUN 14, 2006,JOR 	ADDED SUB_MIN AND SUB_MAX
;  OCT 5, 2006,KJHW 	FIXED THE OUTPUT TEXT STRING TO INCLUDE SUB_MIN AND SUB_MAX
;  JAN 3, 2007,JOR 	ELIMINATED KEYWORD QUIET, NOW USING SHOW IF WANT TO DISPLAY RESULTS
;  APRIL 2, 2009,KJWH 	ADDED TRANSFORM, PROD & MATH KEYWORDS AND AMEAN & GMEAN TO THE STATS STRUCTURE
;  OCT 27,2009,TD    GET STAT_TRANSFORM FROM SD_USE_TRANSFORM FIRST, THEN CHECK IF TRANSFORM KEYWORD SET
;	 DEC 31,2010,JOR:  MAJOR OVERHAUL OF PROGRAM TO USE IDL'S MOMENT FUNCTION
;				             STREAMLINED PROGRAM 
;				             FIXED: FOR I = 0,N_ELEMENTS(STAT) -1 DO BEGIN TO FOR I = 0,N_TAGSS(STAT) -1 DO BEGIN
;				            
;	MAR 4,2012,JOR,UPPERCASE; REMOVED REFERENCES TO STAT.(19) 
;	APR 23,2012,JOR REMOVED STAT_TRANSFORM = SD_USE_TRANSFORM(PROD,MATH=MATH)
;                         BECAUSE PROD IS REQUIRED AND 
;                         STATS SHOULD BE EASY TO RUN ON ANY ARRAY WITHOUT SPECIFYING TOO MANY PARAMETERS.
;                                
; MAY 20,2012,JOR, ADDED KEYWORDS ALL,
;                         ADDED MORE SWITCHES[DO_SUBS]TO STATS_DEMO TO DEMONSTRATE EFFECTS OF  KEYWORD ALL
; OCT 23,2012,JOR,CHANGED SUBSCRIPTS FOR SUB_MIN AND SUB_MAX TO UNSIGNED LONG TYPE:
;                     ;===>  SUB_MIN:MISSINGS(0UL),$
;                            SUB_MAX:MISSINGS(0UL),$
; DEC 5,2012,JOR ADDED KEYWORD NO_STATSTRING,FORMATTING
; FIXED MAJOR BUG: CHANGED  FOR I = 0,N_ELEMENTS(PARAMS)-1 TO:
;                           FOR I = 0,N_ELEMENTS(PARAMS)-2 DO BEGIN [ TO AVOID DUPLICATE STATSTRING]
; DEC 23,2012,JOR DELETED : PRINT,'I:   ',I
; MAY 11,2013,JOR, ### ADDED SUM TO SUITE OF STATISTICS
; MAY 28,2013,JOR CHANGED THE OUTPUT IN SHOW FROM A FORMATTED PRINT TO HELP,STAT [ FOR READABILITY]
; JUN 12,2013,JOR: ####   CHANGED PHILOSOPHY OF STATS TO AGREE WITH HOW STATS_ARRAYS WORKS 
;                         WITH TRANSFORM
;                         WHEN TRANSFORM IS 'ALOG' OR 'ALOG10. DATA ARE LOG-TRANSFORMED
  ;                       AND THE  MIN,MAX,MED,MEAN AND SUM ARE RETURNED ANTI-LOGGED
  ;                       BUT ! THE VAR, STD,CV ARE NOT ANTILOGGED ! 
; AUG 3,2014,JOR OVERHAULED AND STREAMLINED PROGRAM LOGIC
; AUG 4,2013,JOR  REMOVED KEYWORD SHOW [NOT NEEDED ANYMORE]
;                 FIXED BUG: CHANGED  FOR I = 0,N_ELEMENTS(PARAMS)-2 DO BEGIN TO FOR I = 0,N_ELEMENTS(PARAMS)-1 DO BEGIN
;                 ADDED MORE EXAMPLES AND TESTED EXAMPLES
; AUG 6,2013,JOR ADDED BACK KEYWORDS PROD AND MATH TO BE COMPATIBLE WITH KIM'S VERSION OF STATS
;                 RESTORED STAT_TRANSFORM = SD_USE_TRANSFORM(PROD,MATH=MATH)
; AUG 10,2013,JOR ADDED SPAN
; AUG 28,2013,JOR:  
;                   NOW WRITES STATS TO A CSV FILE [ INSTEAD OF PRINTF ]
;                   STRUCT_2CSV,FILE,STAT,APPEND = APPEND & PFILE,FILE,/W
;                   ADDED NOTES TO THE STAT STRUCTURE
; AUG 30,2013,JOR : REPLAQCED SYSTIME WITH DATE_NOW
;                 IF N_ELEMENTS(NOTES) EQ 0 THEN NOTES = DATE_NOW() ELSE 
; SEP 9,2013,JOT REMOVED TAG  STAT.ASTD; 
;                 FIXED:  IF COUNT GE 1 THEN DATA = TEMPORARY(DATA[OK]) ELSE DATA(*) = MISSING [TO KEEP DATA AS AN ARRAY]
; SEP 20,2013,JOR:STRUCT_2CSV,FILE,STAT,APPEND = 1 & PFILE,FILE,/W
; SEP 21,2013,JOR:FIXED:IF  J GE 1 AND J LE (N_TAGNAME-2) THEN _FORMAT = FORMAT ELSE _FORMAT = ''
; FEB 26,2014,JOR ADDED KEYWORD BASIC
; MAY 18, 2015 - KJWH: UPDATED geometric coefficient of variation calculation - GEOCV(data)
;                      CLEANED UP redundant code
;                      REMOVED keywords PROD and MATH because the STAT_TRANSFORM generated by SD_USE_TRANSFORM was later overwritten
; JUN 23, 2017 - KJWH: Added IF N_ELEMENTS(DATA) EQ 1 AND DATA[0] EQ MISSINGS(DATA) THEN RETURN, STAT  
; DEC 05, 2017 - KJWH: Updated formatting
;                      Removed redundant calls to check for missing data
;                      Changed the parameter name DATA to ARR to avoid conflicts with    
; DEC 06, 2017 - KJWH: Changed IF COUNT GE 1 THEN ARR = TEMPORARY(ARR[OK]) ELSE ARR(*) = MISSING to IF COUNT_DATA GE 1 THEN ARR = TEMPORARY(ARR[OK]) ELSE ARR = MISSING so that STAT.N will end up being 0                                      
; FEB 08, 2018 - KJWH: Added STD to the BASIC_STATS      
; DEC 17, 2019 - KJWH: Changed the missings value of SUB_MIN and SUB_MAX from MISSINGS(0UL) to -99999L                  
; JUN 30, 2020 - KJWH: Added STATS_OUT option to specify which stats are returned
;                      Added COMPILE_OPT IDL2
;-
;************************
  ROUTINE_NAME  = 'STATS'
;************************
  
  COMPILE_OPT IDL2
  
  IF NONE(TRANSFORM) THEN STAT_TRANSFORM = '' ELSE STAT_TRANSFORM = TRANSFORM
  IF NONE(MISSING) THEN MISSING = MISSINGS(0.0D) ELSE MISSING = DOUBLE(MISSING)  ; CHECK KEYWORD MISSING, IF VALUE FOR MISSING NOT PROVIDED MAKE MISSING !VALUES.D_INFINITY
  FORMAT = ''
  IF N_ELEMENTS(DECIMALS) EQ 1 THEN IF DECIMALS GE 1 AND DECIMALS LE 14 THEN FORMAT='(D30.'+ STRTRIM(DECIMALS,2) + ')' ; CHECK KEYWORD DECIMALS FOR OUTPUT FORMAT
 
  IF N_ELEMENTS(STATS_OUT) EQ 0 THEN STATS_OUT = []  ; DEFINE STATS IF SPECIFIC STATS ARE PROVIDED
  IF KEYWORD_SET(BASIC) AND STATS_OUT EQ [] THEN STATS_OUT = ['N','MIN','MAX','MED','AMEAN','GMEAN','STD'] ; DEFINE STATS IF BASIC OUTPUT REQUESTED
  
  ARR = DOUBLE(ARRAY)                                         ; COPY ARRAY INTO DATA VARIABLE (THIS KEEPS ORIGINAL ARRAY UNCHANGED)
  ALL_DATA = ARR                                              ; HOLD ALL THE DATA FOR DETERMINING THE ACTUAL SUBSCRIPTS FOR MIN AND MAX
  
  
;******************************************************************
;===> CONSTRUCT A STRUCTURE TO HOLD STATISTICAL RESULTS [STAT]
;******************************************************************
  STAT = {N:0UL,$
    MIN:MISSING,$
    SUB_MIN:-99999L,$
    MAX:MISSING,$
    SUB_MAX:-99999L,$
    SUM:MISSING,$
    SPAN:MISSING,$
    MED:MISSING,$
    MEAN:MISSING,$
    AMEAN:MISSING,$
    
    VAR:MISSING,$
    STD:MISSING,$
    CV:MISSING,$
    MDEV:MISSING,$
    SKEW:MISSING,$
    KURT:MISSING,$
    
  ; STATS FROM ALOG(DATA)    
    GMEAN:MISSING,$
    GMED:MISSING,$
    GVAR:MISSING,$
    GSTD:MISSING,$
    GCV:MISSING,$
    GMDEV:MISSING,$
    GSKEW:MISSING,$
    GKURT:MISSING,$
       
    TRANSFORM:'',$
    STATSTRING:'',$
    NOTES:''}

; ===> REMOVE NON-FINITE VALUES AND EXIT IF NO VALID DATA ARE FOUND
  OK = WHERE(FINITE(ARR),COUNT_DATA)  ; CHECK FOR FINITE DATA
  IF COUNT_DATA GE 1 THEN ARR = TEMPORARY(ARR[OK]) ELSE ARR = MISSING
  IF KEY(ALL) THEN ARR=ALL_DATA ;  NEGATE ABOVE IF KEYWORD ALL IS SET   
    
  STAT.N = N_ELEMENTS(ARR)
  SZ = SIZE(ARR)
  IF STAT.N EQ 1 AND SZ[0] EQ 0 THEN STAT.N = 0
  IF STAT.N EQ 1 AND ARR[0] EQ MISSING THEN STAT.N = 0
  IF N_ELEMENTS(ARR) EQ 1 AND ARR[0] EQ MISSINGS(ARR) THEN GOTO, DONE ; ONLY ONE VARIABLE, WHICH IS "MISSING"
  
; ===> CALCULATE STATS    
  M = MOMENT(ARR, /DOUBLE , KURTOSIS=KURT, MDEV=MDEV , MEAN=MEAN , /NAN , SDEV=STD , SKEWNESS=SKEW , VARIANCE=VAR )
  STAT.SUM = TOTAL(ARR)
  STAT.SPAN = SPAN(ARR)
  
;CCCCCCCCCCCCCCCCCCCCCCCC
  CASE 1 OF
    (STAT.N EQ 0): BEGIN
      STAT.MIN      = MISSING
      STAT.SUB_MIN  = MISSING
      STAT.MAX      = MISSING
      STAT.SUB_MAX  = MISSING
      STAT.MEAN     = MISSING
      STAT.AMEAN    = MISSING
      STAT.MED      = MISSING
      STAT.STD      = MISSING
      STAT.CV       = MISSING
    END;(STAT.N EQ 0): BEGIN
  
   (STAT.N EQ 1): BEGIN
      STAT.MIN      = ARR[0]
      STAT.SUB_MIN  = 0
      STAT.MAX      = ARR[0]
      STAT.SUB_MAX  = 0
      STAT.MEAN     = ARR[0]
      STAT.AMEAN    = ARR[0]
      STAT.MED      = ARR[0]
      STAT.STD      = MISSING
      STAT.CV       = MISSING     
    END;(STAT.N EQ 1): BEGIN
 
    (STAT.N GE 2): BEGIN
      STAT.MIN     = MIN(ARR,SUB_MIN, MAX=MAXDATA, SUBSCRIPT_MAX=SUB_MAX)
      STAT.SUB_MIN = SUB_MIN
      STAT.MAX     = MAXDATA
      STAT.SUB_MAX = SUB_MAX
      STAT.MED   = MEDIAN(ARR, EVEN=EVEN);  IF EVEN IS SET THEN PASS IT TO MEDIAN
    END;(STAT.N GE 2): BEGIN
  ENDCASE;CASE 1 OF
  
   STAT.MEAN  = MEAN 
   STAT.AMEAN = MEAN 
   STAT.VAR   = VAR
   STAT.STD   = STD
   STAT.CV   = 100.0*STAT.STD/STAT.MEAN  
   STAT.MDEV = MDEV
   STAT.SKEW = SKEW
   STAT.KURT = KURT
   
;########################################################
;################ LOG TRANSFORM #########################
;########################################################
  IF STAT_TRANSFORM NE 'ALOG10' THEN BEGIN
    OK = WHERE(ARR LE 0, COUNT)
    IF COUNT GE 1 THEN BEGIN ; ===> CHANGE ANY VALUES LE ZERO TO INFINITY BEFORE ALOG TRANSFORM
      LDATA=ARR
      LDATA[OK] = !VALUES.F_INFINITY 
      LDATA = ALOG(ARR)
    ENDIF ELSE LDATA = ALOG(ARR) ;IF COUNT GE 1 THEN BEGIN
    
    M =MOMENT(LDATA, /DOUBLE, KURTOSIS=GKURT, MDEV=GMDEV, MEAN=GMEAN, /NAN, SDEV=GSTD, SKEWNESS=GSKEW, VARIANCE=GVAR)
    STAT.GMEAN = EXP(GMEAN)
    STAT.GMED  = EXP(MEDIAN(LDATA))
    STAT.GVAR  = EXP(GVAR)
    STAT.GSTD  = EXP(GSTD)
    STAT.GCV   = GEOCV(ARR)  
    STAT.GMDEV = GMDEV
    STAT.GSKEW = GSKEW
    STAT.GKURT = GKURT
    STAT.TRANSFORM = 'ALOG'
  ENDIF ELSE BEGIN
  
    OK = WHERE(ARR LE 0,COUNT)
    IF COUNT GE 1 THEN BEGIN ; ===> CHANGE ANY VALUES LE ZERO TO INFINITY BEFORE ALOG TRANSFORM
      LDATA=ARR
      LDATA[OK] = !VALUES.F_INFINITY 
      LDATA = ALOG10(ARR)
    ENDIF ELSE LDATA = ALOG10(ARR) ;IF COUNT GE 1 THEN BEGIN
    M = MOMENT(LDATA, /DOUBLE, KURTOSIS=GKURT, MDEV=GMDEV, MEAN=GMEAN, /NAN, SDEV=GSTD, SKEWNESS=GSKEW, VARIANCE=GVAR)
    STAT.GMEAN = 10^(GMEAN)
    STAT.GMED  = 10^MEDIAN(LDATA)
    STAT.GVAR  = 10^(GVAR)
    STAT.GSTD  = 10^(GSTD)
    STAT.GCV   = GEOCV(LDATA,TRANSFORM='ALOG10')
    STAT.GMDEV = GMDEV
    STAT.GSKEW = GSKEW
    STAT.GKURT = GKURT
    STAT.TRANSFORM = 'ALOG10'
  ENDELSE;IF STAT_TRANSFORM NE 'ALOG10' THEN BEGIN


; ######################################################################################
; FILL STATSTRING WITH TAG VALUES IN STATS
  IF NOT KEYWORD_SET(NO_STATSTRING) THEN BEGIN

    TAGNAMES=TAG_NAMES(STAT)
    N_TAGNAME=N_ELEMENTS(TAGNAMES)
    IF N_ELEMENTS(PARAMS) EQ 0 THEN PARAMS=INDGEN(N_TAGNAME) ELSE BEGIN ; DEFAULT IS ALL STATS PARAMETERS
      OK = WHERE(PARAMS GE 0 AND PARAMS LE (N_TAGNAME-2),COUNT)
      IF COUNT GE 1 THEN PARAMS = PARAMS[OK] ELSE PARAMS=INDGEN(N_TAGNAME)
    ENDELSE
  
;   FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF  
    FOR I = 0,N_ELEMENTS(PARAMS)-1 DO BEGIN
    	J = PARAMS[I]; THIS ALLOWS THE USER TO CONTROL THE ORDER
      IF  J GE 1 AND J LE (N_TAGNAME-2) THEN _FORMAT = FORMAT ELSE _FORMAT = ''
        STAT.STATSTRING = STAT.STATSTRING+ '!C' + STRTRIM(TAGNAMES[J],2)+ ': ' + STRTRIM(STRING(STAT.(J),FORMAT=_FORMAT),2)
    ENDFOR;FOR I = 0,N_ELEMENTS(PARAMS)-2 DO BEGIN
;   FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
  
  ENDIF;IF NOT KEYWORD_SET(NO_STATSTRING) THEN BEGIN
;|||||||||||||||||||||||||||||||||||||||||||||||||
  IF N_ELEMENTS(NOTES) EQ 0 THEN NOTES = DATE_NOW() ELSE $
                                 NOTES = NOTES +' ' + DATE_NOW()
  STAT.NOTES = NOTES
                  
  DONE:               
                 
  IF KEYWORD_SET(STATS_OUT) THEN STAT = STRUCT_COPY(STAT,STATS_OUT)
  
; ===> WRITE A CSV A FILE WITH STATISTICS
  IF KEYWORD_SET(FILE) THEN BEGIN
    FN = FILE_PARSE(FILE)
    FILE = FN.DIR + FN.NAME + '.CSV' ;===> REMOVE ANY EXTENSIONS AND ADD CSV
    STRUCT_2CSV,FILE,STAT,APPEND = 1 & PFILE,FILE,/W
  ENDIF;IF KEYWORD_SET(FILE) THEN BEGIN
    
  RETURN, STAT  

END; #####################  END OF ROUTINE ################################

