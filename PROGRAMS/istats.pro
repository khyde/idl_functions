; $ID:	ISTATS.PRO,	2020-07-08-15,	USER-KJWH	$
;+
; ######################################################################### 
  PRO ISTATS, FILES, WIDTH=WIDTH, FRACT_GOOD=FRACT_GOOD, DIR_OUT=DIR_OUT, METHOD=METHOD, DATERANGE=DATERANGE, REVERSE=REVERSE, VERBOSE=VERBOSE, PLOT=PLOT, OVERWRITE=OVERWRITE

;  PURPOSE:  THIS PROGRAM GENERATES IMAGE STATS [ISTATS:MEAN,MEDIAN,STD,NUM,ETC.]
;            FOR A MOVING WINDOW CENTERED ON EACH PIXEL

; INPUTS:
;        FILES

; CATEGORY: ISTATS FAMILY [IMAGE STATS]

; KEYWORDS:
;          WIDTH... WIDTH IN PIXEL OF MOVING BOX USED TO COMPUTE THE STD
;          FRACT_GOOD...THE MINIMUM REQUIRED FRACTION OF THE NUMBER WITHIN THE MEDIAN BOX
;               THAT MUST BE GOOD DATA (NOT MISSING OR NAN) TO COMPUTE A STD OR MEAN FOR THAT PIXEL

; EXAMPLE:
;       DIR = FIX_PATH(!S.DATASETS + 'OC-SEAWIFS-MLAC\NEC\STATS\CHLOR_A-OC4\')  & FILES = FLS(DIR + 'D_2004*MEAN.SAVE') & HELP, FILES 
;       ISTATS,FILES(0:3),/PLOT
;    
;     
  

; MODIFICATION HISTORY:
;     FEB 26, 2015 WRITTEN BY: J.E. O'REILLY
;     FEB 27, 2015,JOR&KJWH, ADDED FRACT_GOOD, DEFAULT = 0.40,BARPLOT
;     MAR  1, 2015,JOR CHANGED NAME FROM IMG_STD TO ISTATS
;     MAR  2, 2015,JOR OUTPUT SAV AND PNG OF ISTATS:  STATS_ =  ['NUM','AVG','STD','CV']
;     MAR  2, 2015 - KJWH: FIXED AROUND CALCULATION ERROR: AROUND = (WIDTH-1)/2
;                          ADDED DIR_OUT, VERBOSE, DATERANGE, REVERSE, OVERWRITE, METHOD AND PLOT KEYWORDS
;                          ADDED A CONTINUE IF THE CENTER PIXEL IS MISSING
;                          SAVING SINGLE OUTPUT FILE
;                          REMOVED /XLOG FROM THE BARPLOT
;     MAR  2, 2015 - JOR: ADDED RATIO
;===> IGNORE THE DATA AT XP,YP WHEN COMPUTING THE MEDIAN
;     RATIO(XP,YP) =  DATA(XP,YP)/ MEDIAN(BOX_SET[WHERE(BOX_SET NE MISSINGS(BOX_SET) AND BOX_SET NE DATA(XP,YP))])
;     MAR 3,2015,JOR      REMOVED  AND BOX_SET NE DATA(XP,YP)
;     MAR 4,2015,JOR      OK = WHERE(BOX_SET EQ DATA(XP,YP), COUNT)
;                         IF COUNT GE 1 THEN BOX_SET(OK[0]) = !VALUES.F_NAN  
  

;                     




; #########################################################################

;************************
  ROUTINE_NAME  = 'ISTATS'
;************************

  IF NONE(FILES) THEN MESSAGE,'ERROR: FILES ARE REQUIRED'

;===> DEFAULTS
  IF NONE(DIR_OUT) THEN DIR_OUT = !S.DEMO + ROUTINE_NAME + PATH_SEP() & DIR_TEST,DIR_OUT
  IF NONE(WIDTH) THEN WIDTH = 3
  IF NONE(FRACT_GOOD) THEN FRACT_GOOD = 0.50
  BOX = [WIDTH,WIDTH]
  BOX = BOX >3
  TOTAL_PIXELS = BOX[0]*BOX[1]
  AROUND = (WIDTH-1)/2
  
  IF KEY(DATERANGE) THEN FILES = DATE_SELECT(FILES,DATERANGE[0],DATERANGE[1])
  IF KEY(REVERSE)   THEN FILES = REVERSE(FILES)
  
  ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
  FOR _FILE = 0,N_ELEMENTS(FILES)-1 DO BEGIN
    AFILE = FILES(_FILE)
    FN = FILE_PARSE(AFILE)
    TXT = 'ISTATS_' + ROUNDS(BOX[0]) + 'X' +ROUNDS(BOX[1])
    SAVEFILE = DIR_OUT + REPLACE(FN.NAME,'MEAN',TXT) + '.SAV'
    PNGFILE  = DIR_OUT + FN.NAME + '.PNG'
    
    IF FILE_MAKE(AFILE,SAVEFILE,OVERWRITE=OVERWRITE) EQ 0 THEN CONTINUE;>>>>>>>>>>>>>>>>>>>>>>>>>
    DATA = STRUCT_READ(AFILE)
    SZ = SIZEXYZ(DATA)  & PX = SZ.PX & PY = SZ.PY  
    ;===> MAKE ARRAYS TO HOLD NUM,MEAN,STD, AND CV
    NUM = REPLICATE(0,[PX,PY])
    AVG = REPLICATE(MISSINGS(DATA),[PX,PY])
    MED = REPLICATE(MISSINGS(DATA),[PX,PY])
    STD = REPLICATE(MISSINGS(DATA),[PX,PY])
    CV  = REPLICATE(MISSINGS(DATA),[PX,PY])
    RATIO  = REPLICATE(MISSINGS(DATA),[PX,PY])

    LAST_PX = PX-1L
    LAST_PY = PY-1L
    ;FFFFFFFFFFFFFFFFFFFFFFF
    FOR YP = 0,PY-1 DO BEGIN
      IF KEY(VERBOSE) THEN POF,YP,PY
      ;FFFFFFFFFFFFFFFFFFFFFFF
      FOR XP = 0,PX-1 DO BEGIN
        IF DATA(XP,YP) EQ MISSINGS(DATA) THEN CONTINUE ; ===> SKIP IF CENTER PIXEL IS MISSINGS
        
        ;===> GET PIXELS FROM DATA FROM A BOX AREA CENTERED AT THE XP,YP LOCATION
        BOXL = (XP - AROUND) > 0
        BOXR = (XP + AROUND) < LAST_PX
        BOXB = (YP - AROUND) > 0
        BOXT = (YP + AROUND) < LAST_PY
        BOX_SET   = DATA(BOXL:BOXR, BOXB:BOXT)
        IF NOF(BOX_SET) LT TOTAL_PIXELS THEN CONTINUE ; ===> MUST HAVE COMPLETE SET OF PIXELS
        
        N = TOTAL(FINITE(BOX_SET))
        NUM(XP,YP) = N 
        IF  N/NOF(BOX_SET) LT FRACT_GOOD THEN CONTINUE; ===> MUST HAVE FRACT_GOOD TO COMPUTE AVG,STD & CV
    
        ;===>ASSIGN ISTATS RESULTS TO  ARRAYS
        AVG(XP,YP) = MEAN(  BOX_SET, /NAN )
        MED(XP,YP) = MEDIAN(BOX_SET[WHERE(FINITE(BOX_SET))])
        STD(XP,YP) = STDDEV(BOX_SET, /NAN ) 
        CV(XP,YP)  = 100.0 * STD(XP,YP)/AVG(XP,YP)
        
        OK = WHERE(BOX_SET EQ DATA(XP,YP), COUNT)  ;===> IGNORE THE DATA AT XP,YP WHEN COMPUTING THE MEDIAN BY CHANGING THE VALUE TO NAN
        IF COUNT GE 1 THEN BOX_SET(OK[0]) = !VALUES.F_NAN  ;IT DOES NOT MATTER IF WE FIND SEVERAL VALUES IN THE BOX_SET EQUAL TO DATA(XP,YP) AS LONG AS WE REMOVE ONLY ONE OF THEM
        RATIO(XP,YP) =  DATA(XP,YP)/ MEDIAN(BOX_SET[WHERE(FINITE(BOX_SET))])

      ENDFOR;FOR XP = 0,PX-1 DO BEGIN
    ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF   
    ENDFOR;FOR YP = 0,PY-1 DO BEGIN
    ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
    ;===> SAVE ALL THE ISTATS IN A SINGLE SAV FILE
    STRUCT_WRITE, DATA, FILE=SAVEFILE, NUM=NUM, AVG=AVG, MED=MED, STD=STD, CV=CV, RATIO=RATIO, INFILE=AFILE, BOX_AROUND=WIDTH, ROUTINE_NAME=ROUTINE_NAME 

    IF KEY(PLOT) THEN BEGIN ; ===> MAKE A SAV,PNG & FREQ PNG OF THE NUM,AVG,STD, AND CV
      FA = PARSE_IT(AFILE,/ALL)
      PRODS_2PNG,AFILE,PROD=FA.PROD,/BUFFER,/ADD_NAME, PNGFILE=PNGFILE ; PNG OF ORIGINAL DATA
      STATS_ =  ['RATIO','NUM','AVG','MED','STD','CV']
      ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
      FOR NTH = 0,NOF(STATS_)-1 DO BEGIN
        NAME = STATS_[NTH]
        IF NAME EQ 'NUM'   THEN PROD = 'NUM_0_'+ROUNDS(TOTAL_PIXELS)
        IF NAME EQ 'AVG'   THEN PROD = FA.PROD  
        IF NAME EQ 'MED'   THEN PROD = FA.PROD 
        IF NAME EQ 'STD'   THEN PROD = 'STD_0_10'
        IF NAME EQ 'CV'    THEN PROD = 'PERCENT_0_20'
        IF NAME EQ 'RATIO' THEN PROD = 'RATIO'
        
        IF NAME EQ 'NUM' THEN PAL = 'PAL_Y10' ELSE PAL = 'PAL_BR'
        STATPNG  = REPLACE(SAVEFILE,'.SAV','-'+NAME+'.PNG')     
        PRODS_2PNG,SAVEFILE,TAG=NAME,PROD=PROD,/BUFFER,/OVERWRITE,/ADD_NAME, PNGFILE=STATPNG, PAL=PAL ;===> MAKE A PNG OF EACH ISTAT
  
        ;===> MAKE A PLOT OF THE FREQ DISTRIBUTION
        PLT = REPLACE(SAVEFILE,[TXT,'.SAV'],[TXT+'-'+NAME+'-FREQ','.PNG'])
        A = EXECUTE('DATA = ' + NAME)
        NBINS = 0 > MAX(DATA,/NAN) <  30
        FREQ = HISTOGRAM((DATA),NBINS = NBINS,/NAN,LOCATIONS = X)
        P=BARPLOT(X,FREQ,FILL_COLOR = 'MIDNIGHT_BLUE',XTITLE =NAME,YTITLE = 'FREQ',TITLE = NAME,/YLOG,OUTLINE = 0,/BUFFER)
        PLT_GRIDS,P
        P.SAVE,PLT
      ENDFOR;FOR NTH = 0,NOF(STATS_)-1 DO BEGIN
      ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
    ENDIF  
  ENDFOR;FOR _FILE = 0,N_ELEMENTS(FILES)-1 DO BEGIN
  ;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF


END; #####################  END OF ROUTINE ################################
