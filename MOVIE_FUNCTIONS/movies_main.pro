; $ID:	MOVIES_MAIN.PRO,	2021-04-15-17,	USER-KJWH	$
PRO MOVIES_MAIN

;+
; NAME:
;   MOVIES_MAIN
;
; PURPOSE:;
;   This procedure is create movies using the new movie making capabilities in IDL 8.1
;
; NOTES:
;
; MODIFICATION HISTORY:
;     Written May 16, 2011 by K.J.W.Hyde, 28 Tarzwell Drive, NMFS, NOAA 02882 (kimberly.hyde@noaa.gov)
;-
; ****************************************************************************************************
  ROUTINE_NAME = 'MOVIES_MAIN'
  DO_REMAP          = 0
  DO_NEC            = 0
  DO_SST            = 0
  DO_3YEAR_COMBO    = 1
  DO_EVENTS         = 0
  DO_SEASONS        = 0
  DO_REGIONS        = 0
  DO_REGIONS_DOY    = 0
  DO_GLOBAL         = 0
  DO_COMBOS         = 0
  DO_COMBOS_DOY     = 0
  DO_SPR_COMPOSITE  = 0 ; Added 3/18/2014 to show multiple years of the same season in a single animation
  DO_MULTI_YEAR_COMPOSITE = 0 ; Added 3/26/2014 to show multiple years in a single animation
  DO_SIZE_COMPOSITE = 0 ; Added 4/22/2104 to show the seaonal (MONTH) changes of total chlorophyll, microplankton and nanoplankton
  
  
  SL = DELIMITER(/PATH)

  IF DO_REMAP EQ 1 THEN BEGIN
  
;    FILES = FILE_SEARCH(!S.DATASETS+'SST-PAT-4\L3B\TS_IMAGES\SST\SAVE\D_*.SAVE')
;    DIR_OUT = !S.DATASETS+'SST-PAT-4\NEC\TS_IMAGES\SST\SAVE\'
;    M=STRUCT_SD_REMAP(FILES=FILES,DIR_OUT=DIR_OUT,MAP_OUT='NEC',OVERWRITE=OVERWRITE)
;    
;   
  ENDIF
  
  IF DO_NEC GE 1 THEN BEGIN   
    RESOLUTION = 200    
    PAL = 'PAL_BR'
    MAP_IN = 'NEC'
    MAP_OUT = 'NEC'
    
    ADD_BATHY = 0
    BATHY_COLOR = 0
    ADD_OUTLINE = 1
    OUTLINE_FILE = !S.SUBAREAS + 'SUBAREAS_EXTRA/MASK_SUBAREA-'+MAP_OUT+'-PXY_1024_1024-ECOREGIONS_FULL_NO_ESTUARIES.PNG'
        
    ADD_MASK = 0
   ; MASK = STRUCT_SD_READ(!S.SUBAREAS + 'MASK_SUBAREA-'+MAP_OUT+'-PXY_1024_1024-ECOREGIONS_FULL_NO_ESTUARIES.SAVE',STRUCT=STRUCT,MAP_OUT=MAP_OUT)
   ; MASK_SUBS = WHERE(MASK EQ 36 AND MASK NE MISSINGS(MASK))
    
    ADD_TITLE_PAGE = 1
    
    
    DATE_START  = 20170101
    DATE_END    = 20171231 
    DO_MOVIE    = [0,           1]   
    DATASETS    = ['MODISA']
    DIR_TYPE    = ['OC']
    PERIODS     = ['D']
    FILE_TYPE   = ['INTERP']
    MAPS        = ['NEC']
    FONTSIZE    = [24]
    BATHS       = [100]    
    FPS         = [10]
    N_TITLE     = [10]
    SPECIAL_SCALE = ['.03_33']    
    PRODS       = ['CHLOR_A-PAN']
    USE_PROD    = ['CHLOR_A']
    PROD_TITLES = ['Chlorophyll']
    TITLE_COLOR = ['BLACK']    
    TITLES      = 'Northeast Shelf Chlorophyll'
    TITLE_DATES = 'January 1, 2017 - December 31, 2017'
    
    
    FOR NTH = 0, N_ELEMENTS(DATASETS)-1 DO BEGIN 
      IF DO_MOVIE[NTH] EQ 0 THEN CONTINUE
      IF ADD_MASK EQ 1 THEN FILEEXTRA = '-OFFSHORE_MASK' ELSE FILEEXTRA = ''   
      IF SPECIAL_SCALE[NTH] NE '' THEN FILEEXTRA = FILEEXTRA + '-SS_' + SPECIAL_SCALE[NTH]
      FILEEXTRA = FILEEXTRA + '-RES_' + NUM2STR(RESOLUTION)
      DIR_IN      = !S.DATASETS + DIR_TYPE[NTH] + SL + DATASETS[NTH] + SL + MAP_IN  + SL
      DIR_OUT     = !S.DATASETS + DIR_TYPE[NTH] + SL + DATASETS[NTH] + SL + MAP_OUT + SL
      
      CASE FILE_TYPE[NTH] OF
        'INTERP' : BEGIN
           DIR_SEARCH = FILE_TYPE[NTH] + '_SAVE' + SL + PRODS[NTH] + SL + 'SAVE' + SL 
           TARGET = '*.SAV'
           DIR_BROWSE = DIR_OUT + FILE_TYPE[NTH] + '_BROWSE' + SL + PRODS[NTH] + SL 
           DIR_MOVIES = DIR_OUT + FILE_TYPE[NTH] + '_MOVIES' + SL + PRODS[NTH] + SL 
         END  
        'SAVE':       BEGIN
          DIR_SEARCH = FILE_TYPE + SL + PRODS[NTH] + SL
          TARGET = '*.SAV*'
          DIR_BROWSE = DIR_OUT + 'BROWSE' + SL + PRODS[NTH] + SL
          DIR_MOVIES = DIR_OUT + 'MOVIES' + SL + PRODS[NTH] + SL
        END
        'STATS':      BEGIN
          DIR_SEARCH = FILE_TYPE + SL + PRODS[NTH] + SL
          TARGET     = '*MEAN.SAV*'
          DIR_BROWSE = DIR_OUT + 'BROWSE_STATS' + SL + PRODS[NTH] + SL
          DIR_MOVIES = DIR_OUT + 'MOVIES_STATS' + SL + PRODS[NTH] + SL 
        END
      ENDCASE 
      DIR_TEST,[DIR_BROWSE,DIR_MOVIES]
     
      STAT_FILE   = FILE_SEARCH(FIX_PATH(DIR_IN + 'STATS' + SL + PRODS[NTH] + SL + 'ANNUAL*'+MAP_IN+'*' + PRODS[NTH] + '*-STATS.SAV'))
      IF FILE_TEST(STAT_FILE) EQ 1 AND KEY(ADD_TITLE_PAGE) EQ 1 THEN BEGIN
        STAT    = STRUCT_READ(STAT_FILE,STRUCT=CHL_STRUCT,MAP_OUT=MAP_OUT)
        FT      = PARSE_IT(STAT_FILE,/ALL)          
        TITLEFILE = DIR_MOVIES+MAP_OUT + '-DD_'+NUM2STR(DATE_START)+'-'+NUM2STR(DATE_END)+'-'+PRODS[NTH]+'-TITLE_SLIDE'+FILEEXTRA+'.PNG'
        IF FILE_TEST(TITLEFILE) EQ 0 OR GET_MTIME(TITLEFILE) LT GET_MTIME(STAT_FILE) THEN BEGIN 
          TITLE_IMG = STRUCT_SD_2IMAGE_NG(CHL_STRUCT,USE_PROD=USE_PROD[NTH],ADD_MASK=ADD_MASK,MASK_SUBS=MASK_SUBS,MASK_COLOR=255,/ADD_LAND,/ADD_COAST,ADD_OUTLINE=ADD_OUTLINE,OUTLINE_THICK=1,OUTLINE_FILE=OUTLINE_FILE,OUTLINE_COLOR=0,ADD_BATHY=ADD_BATHY,BATHS=BATHS,BATHY_COLOR=255,OVERWRITE=OVERWRITE,SPECIAL_SCALE=SPECIAL_SCALE,/BUFFER)          
          T1 = TEXT(0.5,0.50,TITLES[NTH],            COLOR=TITLE_COLOR[NTH],FONT_SIZE=FONTSIZE,ALIGNMENT=0.5,/NORMAL,TARGET=TITLE_IMG,FONT_STYLE='BOLD')
          T2 = TEXT(0.5,0.45,TITLE_DATES,            COLOR=TITLE_COLOR[NTH],FONT_SIZE=FONTSIZE,ALIGNMENT=0.5,/NORMAL,TARGET=TITLE_IMG,FONT_STYLE='BOLD')
          T3 = TEXT(0.5,0.40,UNITS(PROD_TITLES[NTH]),COLOR=TITLE_COLOR[NTH],FONT_SIZE=FONTSIZE,ALIGNMENT=0.5,/NORMAL,TARGET=TITLE_IMG,FONT_STYLE='BOLD')      
          PRINT, 'Writing file: ' + TITLEFILE
          TITLE_IMG.SAVE,TITLEFILE,RESOLUTION=RESOLUTION,BIT_DEPTH=2
          TITLE_IMG.CLOSE
        ENDIF  
      ENDIF  
      
      FOR PTH = 0, N_ELEMENTS(PERIODS)-1 DO BEGIN  
              
        FILES = FILE_SEARCH(DIR_IN + DIR_SEARCH + PERIODS(PTH) + '_*' + PRODS[NTH] + TARGET)          
        FILES = DATE_SELECT(FILES,[DATE_START,DATE_END])
        IF FILES EQ [] THEN CONTINUE
        PNGFILES = []        
        FOR N=0, N_ELEMENTS(FILES)-1 DO BEGIN
          FC = PARSE_IT(FILES(N))
          PNGFILE = DIR_BROWSE+REPLACE(FC.NAME,MAP_IN,MAPS[NTH])+FILEEXTRA+'.PNG'
          PNGFILES = [PNGFILES,PNGFILE]
          IF FILE_MAKE(FILES(N),PNGFILE,OVERWRITE=OVERWRITE) EQ 0 THEN CONTINUE
          DATA = STRUCT_READ(FILES(N),STRUCT=STRUCT,MAP_OUT=MAP_OUT)        
          NIMAGE = STRUCT_SD_2IMAGE_NG(STRUCT,USE_PROD=USE_PROD[NTH],/ADD_COLORBAR,/ADD_DATEBAR,ADD_MASK=ADD_MASK,MASK_SUBS=MASK_SUBS,MASK_COLOR=255,/ADD_LAND,/ADD_COAST,ADD_OUTLINE=ADD_OUTLINE,OUTLINE_THICK=2,OUTLINE_FILE=OUTLINE_FILE,OUTLINE_COLOR=0,ADD_BATHY=ADD_BATHY,BATHS=BATHS,BATHY_COLOR=BATHY_COLOR,OVERWRITE=OVERWRITE,SPECIAL_SCALE=SPECIAL_SCALE[NTH],/BUFFER)          
          CB_POS = [20,940,620,960]
       ;   POS = nimage.POSITION
       ;   CB_POS = [POS[0],POS(3),POS(2),POS(3)+0.03]
  ;        PRODS_COLORBAR, USE_PROD, IMG=NIMAGE, POSITION=CB_POS, FONT_SIZE=FONT_SIZE,/device
          PRINT, 'Writing file: ' + PNGFILE
          NIMAGE.SAVE,PNGFILE,RESOLUTION=RESOLUTION,BIT_DEPTH=2
          NIMAGE.CLOSE
        ENDFOR              
                
        MOVIE_FILE = MAPS[NTH] + '-'+PERIODS(PTH)+'_'+NUM2STR(DATE_START)+'-'+NUM2STR(DATE_END)+'-'+PRODS[NTH]+'-FPS_'+NUM2STR(FPS)+FILEEXTRA+['.MP4','.AVI']
        FOR M =0, N_ELEMENTS(MOVIE_FILE)-1 DO IF FILE_TEST(DIR_MOVIES+MOVIE_FILE(M)) EQ 0 OR GET_MTIME(DIR_MOVIES+MOVIE_FILE(M)) LT MAX(GET_MTIME(PNGFILES)) THEN $
          MAKE_FF_MOVIE,FILES=PNGFILES,DIR_OUT=DIR_MOVIES,PAL=PAL,KBPS=KBPS,FPS=FPS,MAP=MAPS[NTH],YOFFSET=YOFFSET,$
                TITLE_FILE_PNG=TITLEFILE,N_TITLE=N_TITLE,TITLE_SLIDE=ADD_TITLE_PAGE,MOVIE_FILE=MOVIE_FILE(M)
      ENDFOR
    ENDFOR  
 
  ENDIF
  
  IF DO_SST GE 1 THEN BEGIN
    RESOLUTION = 96
    PAL = 'PAL_DEFAULT'
    MAP_IN = 'NEC'
    MAP_OUT = 'NEC'
    TITLE_FILE = 'FIRST_PNG' ; 'STAT_FILE'        
    
    ADD_BATHY = 1
    ADD_OUTLINE = 1
    OUTLINE_FILE = !S.OUTLINES + 'MASK_SUBAREA-'+MAP_OUT+'-PXY_1024_1024-ESTUARY_SHELF_LME-OUTLINE.PNG'
    
    ADD_MASK = 0
   ; MASK = STRUCT_SD_READ(!S.IMAGES + 'MASK_SUBAREA-'+MAP_OUT+'-PXY_1024_1024-ECOREGIONS_FULL_NO_ESTUARIES.SAVE',STRUCT=STRUCT,MAP_OUT=MAP_OUT)
   ; MASK_SUBS = WHERE(MASK EQ 36 AND MASK NE MISSINGS(MASK)) 
    IF ADD_MASK EQ 1 THEN FILEEXTRA = '-OFFSHORE_MASK' ELSE FILEEXTRA = ''
        
    DATE_START  = 20170101
    DATE_END    = 20191231
    DIR         = !S.SST
    DATASETS    = ['MUR']
    PERIODS     = ['D']
    FILE_TYPE   = ['SAVE']
    MAPS        = ['NEC']
    FONTSIZE    = [20]
    BATHS       = ['100']
    FPS         = [20]
    N_TITLE     = [10]
    SPECIAL_SCALE = ['']
    PRODS       = ['SST']
    PROD_TITLES = ['TEMPERATURE']
    TITLES      = ['SEA SURFACE TEMPERATURE']
    TITLE_DATES = '2017 - 2019'
    FOR NTH = 0, N_ELEMENTS(DATASETS)-1 DO BEGIN
      DIR_IN      = FIX_PATH(DIR + DATASETS[NTH] + SL + MAP_IN[NTH] + SL)
      DIR_OUT     = FIX_PATH(!S.PROJECTS + 'MOVIES' + SL + DATASETS[NTH] + SL + MAP_OUT[NTH] + SL) 
      CASE FILE_TYPE OF
        'SAVE': BEGIN
          DIR_SAVE    = DIR_IN  + FILE_TYPE + SL + PRODS + SL
          DIR_BROWSE  = DIR_OUT + 'BROWSE'  + SL + PRODS + SL 
          DIR_MOVIES  = DIR_OUT + 'MOVIES'  + SL + PRODS + SL 
          END
        'TS_IMAGES': BEGIN
          DIR_SAVE    = DIR_IN  + FILE_TYPE + SL + PRODS[NTH] + SL +'SAVE'   + SL
          DIR_BROWSE  = DIR_OUT + FILE_TYPE + SL + PRODS[NTH] + SL +'BROWSE' + SL
          DIR_MOVIES  = DIR_OUT + FILE_TYPE + SL + 'MOVIES' + SL
          END  
      ENDCASE
      DIR_TEST, [DIR_BROWSE, DIR_MOVIES]
       
      STAT_FILE   = FILE_SEARCH(FIX_PATH(DIR_IN + 'STATS' + SL + PRODS[NTH] + SL + 'ANNUAL*'+MAP_IN+'*' + PRODS[NTH] + '-MEAN.SAVE'))                
      FOR PTH = 0, N_ELEMENTS(PERIODS)-1 DO BEGIN
        FILES    = FILE_SEARCH(FIX_PATH(DIR_SAVE + PERIODS(PTH) + '_*'+PRODS[NTH]+'*.SAV'))
        FILES    = DATE_SELECT(FILES,[DATE_START,DATE_END])
        PNGFILES = []
        FOR N=0, N_ELEMENTS(FILES)-1 DO BEGIN
          FC = PARSE_IT(FILES(N))
          PNGFILE = REPLACE(FC.NAME,MAP_IN,MAPS[NTH])+FILEEXTRA+'.PNG'
          PNGFILES = [PNGFILES,DIR_BROWSE+PNGFILE]
          IF FILE_MAKE(FILES(N),DIR_BROWSE+PNGFILE,OVERWRITE=OVERWRITE) EQ 0 THEN CONTINUE                    
          PRODS_2PNG, FILES(N), PROD='SST_5_30', /ADD_CB, /ADD_DB, /ADD_BATHY, DEPTH=-100, PNGFILE=PNGFILE, DB_POS = [0.50,0.02, 0.99,0.07],/BUFFER, DIR_OUT=DIR_BROWSE
          ;STRUCT_SD_2PNG_NG,FILES(N),PNGFILE=PNGFILE,DIR_OUT=DIR_BROWSE,MAP_OUT=MAP_OUT[NTH],/ADD_DATEBAR,/ADD_COLORBAR,ADD_MASK=ADD_MASK,MASK_SUBS=MASK_SUBS,MASK_COLOR=255,/ADD_LAND,/ADD_COAST,ADD_OUTLINE=ADD_OUTLINE,OUTLINE_THICK=2,OUTLINE_FILE=OUTLINE_FILE,OUTLINE_COLOR=0,ADD_BATHY=ADD_BATHY,BATHS=BATHS[NTH],BATHY_COLOR=255,OVERWRITE=OVERWRITE,SPECIAL_SCALE=SPECIAL_SCALE,RESOLUTION=RESOLUTION,/BUFFER         
        ENDFOR
        
        IF TITLE_FILE EQ 'FIRST_PNG' THEN STAT_FILE = FILES[0]
        IF FILE_TEST(STAT_FILE) EQ 1 THEN BEGIN
          STAT    = STRUCT_SD_READ(STAT_FILE,STRUCT=CHL_STRUCT,MAP_OUT=MAP_OUT)
          FT      = PARSE_IT(STAT_FILE,/ALL)
          TITLEFILE = DIR_MOVIES+MAP_OUT[NTH] + '-DD_'+NUM2STR(DATE_START)+'-'+NUM2STR(DATE_END)+'-'+PRODS[NTH]+'-TITLE_SLIDE'+FILEEXTRA+'.PNG'
          IF FILE_TEST(TITLEFILE) EQ 0 OR GET_MTIME(TITLEFILE) LT GET_MTIME(STAT_FILE) THEN BEGIN
            TITLE_IMG = STRUCT_SD_2IMAGE_NG(CHL_STRUCT,ADD_MASK=ADD_MASK,MASK_SUBS=MASK_SUBS,MASK_COLOR=255,/ADD_LAND,/ADD_COAST,ADD_OUTLINE=ADD_OUTLINE,OUTLINE_THICK=1,OUTLINE_FILE=OUTLINE_FILE,OUTLINE_COLOR=0,ADD_BATHY=ADD_BATHY,BATHS=BATHS[NTH],BATHY_COLOR=255,OVERWRITE=OVERWRITE,SPECIAL_SCALE=SPECIAL_SCALE,/BUFFER)
            T1 = TEXT(0.5,0.50,TITLES[NTH],            COLOR='BLACK',FONT_SIZE=FONTSIZE[NTH],ALIGNMENT=0.5,/NORMAL,TARGET=TITLE_IMG)
            T2 = TEXT(0.5,0.45,TITLE_DATES,            COLOR='BLACK',FONT_SIZE=FONTSIZE[NTH],ALIGNMENT=0.5,/NORMAL,TARGET=TITLE_IMG)
            T3 = TEXT(0.5,0.40,UNITS(PROD_TITLES[NTH]),COLOR='BLACK',FONT_SIZE=FONTSIZE[NTH],ALIGNMENT=0.5,/NORMAL,TARGET=TITLE_IMG)
            PRINT, 'Writing file: ' + TITLEFILE
            TITLE_IMG.SAVE,TITLEFILE,RESOLUTION=RESOLUTION,BIT_DEPTH=2
            TITLE_IMG.CLOSE
          ENDIF
        ENDIF
        
        MOVIE_FILE = MAPS[NTH] + '-'+PERIODS(PTH)+'_'+NUM2STR(DATE_START)+'-'+NUM2STR(DATE_END)+'-'+PRODS[NTH]+'-FPS_'+NUM2STR(FPS)+FILEEXTRA+['.MP4','.AVI']
        FOR M =0, N_ELEMENTS(MOVIE_FILE)-1 DO IF FILE_TEST(DIR_MOVIES+MOVIE_FILE(M)) EQ 0 OR GET_MTIME(DIR_MOVIES+MOVIE_FILE(M)) LT MAX(GET_MTIME(PNGFILES)) THEN $
          MAKE_FF_MOVIE,FILES=PNGFILES,DIR_OUT=DIR_MOVIES,PAL=PAL,KBPS=KBPS,FPS=FPS[NTH],MAP=MAPS[NTH],YOFFSET=YOFFSET,$
          TITLE_FILE_PNG=TITLEFILE,N_TITLE=N_TITLE,TITLE_SLIDE=1,MOVIE_FILE=MOVIE_FILE(M)
      ENDFOR
    ENDFOR
    stop
  ENDIF
  
  IF DO_3YEAR_COMBO GE 1 THEN BEGIN
    RESOLUTION = 96
    PAL = 'PAL_DEFAULT'
    MAP_IN = 'NEC'
    MAP_OUT = 'NEC'
    TITLE_FILE = 'FIRST_PNG' ; 'STAT_FILE'

    ADD_BATHY = 1
    ADD_OUTLINE = 1
    OUTLINE_FILE = !S.OUTLINES + 'MASK_SUBAREA-'+MAP_OUT+'-PXY_1024_1024-ESTUARY_SHELF_LME-OUTLINE.PNG'

    ADD_MASK = 0
    ; MASK = STRUCT_SD_READ(!S.IMAGES + 'MASK_SUBAREA-'+MAP_OUT+'-PXY_1024_1024-ECOREGIONS_FULL_NO_ESTUARIES.SAVE',STRUCT=STRUCT,MAP_OUT=MAP_OUT)
    ; MASK_SUBS = WHERE(MASK EQ 36 AND MASK NE MISSINGS(MASK))
    IF ADD_MASK EQ 1 THEN FILEEXTRA = '-OFFSHORE_MASK' ELSE FILEEXTRA = ''

    YEAR1  = '2017'
    YEAR2  = '2018'
    YEAR3  = '2019'
    DIR         = !S.SST
    DATASETS    = ['MUR']
    PERIODS     = ['D']
    FILE_TYPE   = ['SAVE']
    MAPS        = ['NEC']
    FONTSIZE    = [20]
    BATHS       = ['100']
    FPS         = [10]
    N_TITLE     = [10]
    SPECIAL_SCALE = ['']
    PRODS       = ['SST']
    PROD_TITLES = ['TEMPERATURE']
    TITLES      = ['SEA SURFACE TEMPERATURE']
    TITLE_DATES = '2017 - 2019'
    FOR NTH = 0, N_ELEMENTS(DATASETS)-1 DO BEGIN
      DIR_IN      = FIX_PATH(DIR + DATASETS[NTH] + SL + MAP_IN[NTH] + SL)
      DIR_OUT     = FIX_PATH(!S.PROJECTS + 'MOVIES' + SL + DATASETS[NTH] + SL + MAP_OUT[NTH] + SL)
      CASE FILE_TYPE OF
        'SAVE': BEGIN
          DIR_SAVE    = DIR_IN  + FILE_TYPE + SL + PRODS + SL
          DIR_BROWSE  = DIR_OUT + 'BROWSE'  + SL + PRODS + SL
          DIR_MOVIES  = DIR_OUT + 'MOVIES'  + SL + PRODS + SL
        END
        'TS_IMAGES': BEGIN
          DIR_SAVE    = DIR_IN  + FILE_TYPE + SL + PRODS[NTH] + SL +'SAVE'   + SL
          DIR_BROWSE  = DIR_OUT + FILE_TYPE + SL + PRODS[NTH] + SL +'BROWSE' + SL
          DIR_MOVIES  = DIR_OUT + FILE_TYPE + SL + 'MOVIES' + SL
        END
      ENDCASE
      DIR_TEST, [DIR_BROWSE, DIR_MOVIES]

      STAT_FILE   = FILE_SEARCH(FIX_PATH(DIR_IN + 'STATS' + SL + PRODS[NTH] + SL + 'ANNUAL*'+MAP_IN+'*' + PRODS[NTH] + '-MEAN.SAVE'))
      FOR PTH = 0, N_ELEMENTS(PERIODS)-1 DO BEGIN
        FILES1   = FILE_SEARCH(FIX_PATH(DIR_SAVE + PERIODS(PTH) + '_' + YEAR1 + '*'+PRODS[NTH]+'*.SAV'))
        
        PNGFILES = []
        FOR N=0, N_ELEMENTS(FILES1)-1 DO BEGIN
          FC = PARSE_IT(FILES1(N))
          FILE2   = REPLACE(FILES1(N),'D_'+YEAR1, 'D_'+YEAR2)
          FILE3   = REPLACE(FILES1(N),'D_'+YEAR1, 'D_'+YEAR3)
          PNGFILE = DIR_BROWSE + REPLACE(FC.NAME,MAP_IN,MAPS[NTH])+FILEEXTRA+'.PNG'
          PNGFILE = REPLACE(PNGFILE,FC.PERIOD,YEAR1+'_'+YEAR3+'_'+DATE_2DOY(FC.DATE_START,/PAD))
          PNGFILES = [PNGFILES,PNGFILE]
          IF FILE_MAKE(FILES1(N),PNGFILE,OVERWRITE=OVERWRITE) EQ 0 THEN CONTINUE
          
          W = WINDOW(DIMENSIONS=[848,320],BUFFER=1)
          IF EXISTS(FILES1(N)) THEN PRODS_2PNG, FILES1(N), PROD='SST_5_30', /ADD_CB, /ADD_BATHY, DEPTH=-100, IMG_POS=[20, 25,276,281],  /DEVICE,/CURRENT, /ADD_DB, DB_POS = [0.35,0.02, 0.65,0.06],/NO_YEAR
          IF EXISTS(FILE2) THEN PRODS_2PNG, FILE2, PROD='SST_5_30', /ADD_CB, /ADD_BATHY, DEPTH=-100, IMG_POS=[296,25,552,281], /DEVICE,/CURRENT
          IF EXISTS(FILE3) THEN PRODS_2PNG, FILE3, PROD='SST_5_30', /ADD_CB, /ADD_BATHY, DEPTH=-100, IMG_POS=[572,25,828,281], /DEVICE,/CURRENT
          T1 = TEXT(148,285,YEAR1,/DEVICE,ALIGNMENT=0.5,FONT_SIZE=14)
          T2 = TEXT(424,285,YEAR2,/DEVICE,ALIGNMENT=0.5,FONT_SIZE=14)
          T3 = TEXT(700,285,YEAR3,/DEVICE,ALIGNMENT=0.5,FONT_SIZE=14)
          W.SAVE, PNGFILE
          W.CLOSE
          PFILE, PNGFILE
          ;STRUCT_SD_2PNG_NG,FILES(N),PNGFILE=PNGFILE,DIR_OUT=DIR_BROWSE,MAP_OUT=MAP_OUT[NTH],/ADD_DATEBAR,/ADD_COLORBAR,ADD_MASK=ADD_MASK,MASK_SUBS=MASK_SUBS,MASK_COLOR=255,/ADD_LAND,/ADD_COAST,ADD_OUTLINE=ADD_OUTLINE,OUTLINE_THICK=2,OUTLINE_FILE=OUTLINE_FILE,OUTLINE_COLOR=0,ADD_BATHY=ADD_BATHY,BATHS=BATHS[NTH],BATHY_COLOR=255,OVERWRITE=OVERWRITE,SPECIAL_SCALE=SPECIAL_SCALE,RESOLUTION=RESOLUTION,/BUFFER
        ENDFOR

        MOVIE_FILE = DIR_MOVIES + MAPS[NTH] + '-'+PERIODS(PTH)+'_'+YEAR1+'_'+YEAR3+'-'+PRODS[NTH]+'-FPS_'+NUM2STR(FPS)+FILEEXTRA+['.MP4','.AVI']
        FOR M =0, N_ELEMENTS(MOVIE_FILE)-1 DO BEGIN
          IF FILE_MAKE(PNGFILES,MOVIE_FILE(M),OVERWRITE=OVERWRITE) EQ 1 THEN BEGIN
           MOVIE, PNGFILES, MOVIE_FILE=MOVIE_FILE(M), FPS=FPS
        ;  MAKE_FF_MOVIE,FILES=PNGFILES,DIR_OUT=DIR_MOVIES,PAL=PAL,KBPS=KBPS,FPS=FPS[NTH],MAP=MAPS[NTH],YOFFSET=YOFFSET,$
        ;  TITLE_FILE_PNG=TITLEFILE,N_TITLE=N_TITLE,TITLE_SLIDE=1,MOVIE_FILE=MOVIE_FILE(M)
          ENDIF
        ENDFOR
      ENDFOR
    ENDFOR
    stop
  ENDIF
  
  
 
  IF DO_EVENTS GE 1 THEN BEGIN
    OVERWRITE = DO_EVENTS GT 1
    PAL='PAL_BR'
    PAL_SW3,R,G,B
    VERSION = 'V2'
    BUFFER = 1
    DO_EVENT   = [1,0,0,0,1,1]
    EVENTS     = ['UPWELLING','WCR',   'UPWELLING','UPWELLING','UPWELLING','UPWELLING']
    MPS        = ['NJ_COAST', 'NEC',   'MAB',      'NJ_COAST', 'NJ_COAST', 'NJ_COAST']   
    DATE_START = [20140701,   20050410, 20020601,   20020601,   20110701,   20170701]
    DATE_END   = [20140731,   20051115, 20020930,   20020930,   20110930,   20170731]
    N_REPEAT   = [1,1,1,1]
    CHL_PROD   = 'CHLOR_A_'+['0.1_60','0.3_33','0.1_60','0.1_60','0.1_60','0.1_60']
    SST_PROD   = 'SST_'    +['15_25', '',      '15_25', '15_25', '18_26', '15_25'] 
    CHL_DIR    = !S.OC  + 'MODISA' + SL + 'L3B2' + SL + 'INTERP_SAVE' + SL + 'CHLOR_A-PAN' + SL
    SST_DIR    = !S.SST + 'MUR'    + SL + 'L3B2' + SL + 'SAVE'        + SL + 'SST'         + SL     
    CHL_FILES = FLS(CHL_DIR + 'D_*.SAV') 
    SST_FILES = FLS(SST_DIR + 'D_*.SAV') 
    
    FOR NTH = 0, N_ELEMENTS(EVENTS)-1 DO BEGIN  
      IF DO_EVENT[NTH] EQ 0 THEN CONTINUE
      DIR_MOVIES  = !S.PROJECTS + 'MOVIES' + SL + 'EVENTS' + SL + VERSION + SL + MPS[NTH] + '-' + EVENTS[NTH] + SL 
      DIR_COMBO   = DIR_MOVIES + 'COMBO' + SL
      DIR_TEST,[DIR_MOVIES,DIR_COMBO]
    
      CFILES = DATE_SELECT(CHL_FILES,[DATE_START[NTH],DATE_END[NTH]]) & FPC = PARSE_IT(CFILES)
      SFILES = DATE_SELECT(SST_FILES,[DATE_START[NTH],DATE_END[NTH]]) & FPS = PARSE_IT(SFILES)
      DATE_ALL   = [FPC.DATE_START,FPS.DATE_START]
      DATE_ALL = DATE_ALL[SORT(DATE_ALL)]
      FILE_LABEL = 'CHLOR_A-SST'
      DD='DD_'+STRMID(DATE_START[NTH],0,8)+'_' +STRMID(DATE_END[NTH],0,8)
      UN = UNIQ(DATE_ALL)
      N_IMAGES = NUM2STR(N_ELEMENTS(UN))
      
      CBS = []
      FOR UNTH = 0L, N_ELEMENTS(FPC)-1L DO BEGIN
        AN = UN(UNTH)
        ADATE = DATE_ALL(AN)
        BDATE = STRMID(ADATE,0,8)
        CFILE = CFILES[WHERE(FPC.DATE_START EQ ADATE,/NULL)]
        SFILE = SFILES[WHERE(FPS.DATE_START EQ ADATE,/NULL)]
        PNGFILE=DIR_COMBO+'D_'+BDATE+'-'+MPS[NTH]+'-'+FILE_LABEL+'-'+'COMBO.PNG'
        CBS = [CBS,PNGFILE]
        IF FILE_MAKE([CFILE,SFILE],PNGFILE,OVERWRITE=OVERWRITE) EQ 0 THEN CONTINUE
        
        CASE MPS[NTH] OF
          'NJ_COAST': DIMS = [1000,500]
          'MAB': DIMS = [1470,882]
          'NEC': DIMS = [1536,768]
        ENDCASE

        W = WINDOW(DIMENSIONS=DIMS,LAYOUT=[2,1,0],MARGIN=0,BUFFER=BUFFER)
        PRODS_2PNG,CFILE, /ADD_CB, PROD=CHL_PROD[NTH],CB_TITLE=UNITS('CHLOROPHYLL'),MAPP=MPS[NTH], /CURRENT, MARGIN=0, IMG_POS=[0,0,0.5,1.0]
        PRODS_2PNG,SFILE, /ADD_CB, PROD=SST_PROD[NTH],CB_TITLE=UNITS('TEMPERATURE'),MAPP=MPS[NTH], /CURRENT, MARGIN=0, IMG_POS=[0.5,0,1.0,1.0], /ADD_DB, DB_POS=[0.35,0.94,0.65,0.985], DB_SIZE=14
        PRINT, 'Writing file: ' + PNGFILE
        W.SAVE,PNGFILE,RESOLUTION=100,BIT_DEPTH=2
        W.CLOSE ;& I1.CLOSE & I2.CLOSE
      ENDFOR  
                            
      MOVIE_FILE = EVENTS[NTH] + '-DD_'+NUM2STR(DATE_START[NTH])+'-'+NUM2STR(DATE_END[NTH])+'-'+MPS[NTH]+'-CHLOR_A-SST'+['.AVI','.MP4']
      FOR M=0, N_ELEMENTS(MOVIE_FILE)-1 DO BEGIN
        IF FILE_MAKE(CBS,DIR_MOVIES+MOVIE_FILE(M),OVERWRITE=OVERWRITE) EQ 0 THEN CONTINUE
          MAKE_FF_MOVIE,FILES=CBS,DIR_OUT=DIR_MOVIES,PAL=PAL,KBPS=KBPS,FPS=10,YOFFSET=YOFFSET,TITLE_FILE_PNG='',N_TITLE=15,MOVIE_FILE=MOVIE_FILE(M)
      ENDFOR
    ENDFOR
  ENDIF


  

  IF DO_SEASONS GE 1 THEN BEGIN   
 
    BATHS = 100
    CHARSIZE = 2.5
    POSITION = [0.05, 0.57,0.95, 0.92]
    PAL = 'PAL_SW3'
    PAL_SW3,R,G,B

    FILES       = FILE_SEARCH(!S.DATASETS+'OC-SEAWIFS-MLAC-NEC\TS_IMAGES\SAVE\D_*.SAVE')
    FP          = PARSE_IT(FILES)
    CHL_FILE    = !S.DATASETS+'OC-SEAWIFS-MLAC-NEC\stats\ANNUAL-SEAWIFS-REPRO6-MLAC-NEC-CHLOR_A-OC4-MEAN.SAVE'    
    FT          = PARSE_IT(CHL_FILE,/ALL)
    DIR_BROWSE  = !S.DATASETS+'OC-SEAWIFS-MLAC-NEC\TS_IMAGES\BROWSE\'    
    DIR_MOVIES  = !S.DATASETS+'OC-SEAWIFS-MLAC-NEC\TS_IMAGES\MOVIES\'
    
    MAPS        = ['GOMN','GOMN','GOMN','GOMN','GOMN','MAB','MAB','GOMN','MAB','GOMN']
    SFACTOR     = 1.0
    NREPEAT     = 3
    SEASON      = ['SPRING','SPRING','SPRING','SPRING','SPRING','SUMMER','SUMMER','FALL','FALL','FALL']
    DATE_START  = [20020301,20030301,20050301,20060301,20100301,20010601,20010601,20000801,20050801,20070801]
    DATE_END    = [20020531,20030531,20050531,20060531,20100531,20010930,20010930,20001031,20051031,20071031]    
    TITLE_DATE  = ['March 01, 2002 - May 31, 2002',$
                  'March 01, 2003 - May 31, 2003',$
                  'March 01, 2005 - May 31, 2005',$
                  'March 01, 2006 - May 31, 2006',$
                  'March 01, 2010 - May 31, 2010',$
                  'June 01, 2001 - September 30, 2001',$
                  'June 01, 2001 - September 30, 2001',$
                  'August 01, 2000 - October 31, 2000',$
                  'August 01, 2005 - October 31, 2005',$
                  'August 01, 2007 - October 31, 2007']
    
    
    FOR NTH = 0L, N_ELEMENTS(MAPS)-1 DO BEGIN          
      TITLEFILE = DIR_MOVIES+SEASON[NTH] + '-DD_'+NUM2STR(DATE_START[NTH])+'-'+NUM2STR(DATE_END[NTH])+'-'+MAPS[NTH]+'CHLOR_A-TITLE_SLIDE.PNG'
      IF FILE_TEST(TITLEFILE) EQ 0 OR GET_MTIME(TITLEFILE) LT GET_MTIME(CHL_FILE) THEN BEGIN 
        CHL       = STRUCT_SD_READ(CHL_FILE,STRUCT=CHL_STRUCT)
        TITLE_IMG = STRUCT_SD_2IMAGE_NG(CHL_STRUCT,MAP_OUT=MAPS[NTH],/ADD_LAND,/ADD_COAST,/ADD_BATHY,BATHS=BATHS,BATHY_COLOR=255,OVERWRITE=OVERWRITE,SPECIAL_SCALE='MEDIUM',/BUFFER)
        TITLE_TXT = SEASON[NTH] + '  PHYTOPLANKTON  BLOOM'
        T1 = TEXT(0.5,0.55,TITLE_TXT,           COLOR='BLACK',FONT_SIZE=24,ALIGNMENT=0.5,/NORMAL,TARGET=TITLE_IMG)
        T2 = TEXT(0.5,0.45,TITLE_DATE[NTH],     COLOR='BLACK',FONT_SIZE=24,ALIGNMENT=0.5,/NORMAL,TARGET=TITLE_IMG)
        T3 = TEXT(0.5,0.35,UNITS('CHLOROPHYLL'),COLOR='BLACK',FONT_SIZE=24,ALIGNMENT=0.5,/NORMAL,TARGET=TITLE_IMG)      
        PRINT, 'Writing file: ' + TITLEFILE
        TITLE_IMG.SAVE,TITLEFILE,RESOLUTION=150,BIT_DEPTH=2
        TITLE_IMG.CLOSE
      ENDIF  
            
      FP = PARSE_IT(FILES) & CFILES = FILES[WHERE(STRMID(FP.DATE_START,0,8) GE DATE_START[NTH] AND STRMID(FP.DATE_END,0,8) LE DATE_END[NTH],COUNT)]
      PNGFILES = []  
      FOR N=0, N_ELEMENTS(CFILES)-1 DO BEGIN
        FC = PARSE_IT(CFILES(N),/ALL)
        PNGFILE = REPLACE(FC.DIR,'SAVE','BROWSE')+REPLACE(FC.NAME,FC.MAP,MAPS[NTH])+'.PNG'
        PNGFILES = [PNGFILES,PNGFILE]
        IF FILE_TEST(PNGFILE) EQ 1 AND GET_MTIME(PNGFILE) GT FC.MTIME THEN CONTINUE
        DATA = STRUCT_SD_READ(CFILES(N),STRUCT=STRUCT)        
        NIMAGE = STRUCT_SD_2IMAGE_NG(STRUCT,/ADD_LAND,/ADD_COAST,SPECIAL_SCALE=SPECIAL_SCALE,MAP_OUT=MAPS[NTH],/ADD_COLORBAR,PAL=PAL,/ADD_DATEBAR,/ADD_BATHY,BATHS=100,BATHY_COLOR=255,/BUFFER)
        PRINT, 'Writing file: ' + PNGFILE
        NIMAGE.SAVE,PNGFILE,RESOLUTION=150,BIT_DEPTH=2
        NIMAGE.CLOSE
      ENDFOR    
      OUTFILES = []
      FOR RR=0, NREPEAT-1 DO OUTFILES = [OUTFILES,PNGFILES]          
      MOVIE_FILE = SEASON[NTH] + '-DD_'+NUM2STR(DATE_START[NTH])+'-'+NUM2STR(DATE_END[NTH])+'-'+MAPS[NTH]+'-CHLOR_A'+['.AVI','.MP4']      
      FOR M =0, N_ELEMENTS(MOVIE_FILE)-1 DO IF FILE_TEST(DIR_MOVIES+MOVIE_FILE(M)) EQ 0 OR GET_MTIME(DIR_MOVIES+MOVIE_FILE(M)) LT MAX(GET_MTIME(PNGFILES)) THEN $             
        MAKE_FF_MOVIE,FILES=OUTFILES,DIR_OUT=DIR_MOVIES,PAL=PAL,KBPS=KBPS,FPS=10,MAP=MAPS[NTH],YOFFSET=YOFFSET,$
              TITLE_FILE_PNG=TITLEFILE,N_TITLE=15,/TITLE_SLIDE,MOVIE_FILE=MOVIE_FILE(M)
    
    ENDFOR  
 
  ENDIF
  
  IF DO_REGIONS GE 1 THEN BEGIN   
        
    PAL = 'PAL_SW3'    
    BUFFER = 1
    
    TITLE_DATES = 'July 1, 2010 - September 30, 2010'
    DATE_START  = 20100701
    DATE_END    = 20100930    
    DO_DATASET  = [0,               0,               0,               0,          0,           1,         0,               0           ]
    REFRESH     = [0,               0,               0,               0,          0,           0,         0,               0           ]
    RESOLUTION  = [125,             200,             200,             125,        200,         200,       200,             200         ]
    ARCHIVE     = [1,                1,               1,              0,          1,           0,         1,               1            ]
    DATASETS    = ['OC-SEA_AQU-LAC','OC-SEA_AQU-LAC','OC-MODIS-LAC','SST-MUR-1KM','SST-PAT-4','SST-MUR-1KM','OC-SEA_AQU-LAC','SST-PAT-4' ]
    DIR_IN      = ['TS_IMAGES',     'TS_IMAGES',     'TS_IMAGES',     'SAVE',     'TS_IMAGES','SAVE',     'TS_IMAGES',     'TS_IMAGES' ] 
    MAP_IN      = ['NEC',           'NEC',           'NEC',           'NEC',      'NEC',      'NEC',      'GOMN',          'GOMN'      ]
    MAPS        = ['NEC',           'MASS_BAY',      'RI_SOUND',      'NEC',      'MASS_BAY', 'RI_SOUND', 'GOMN',          'GOMN'      ]
    PXPY        = ['',              '',              '480_480',       '',         '',         '480_480',  '',              ''          ]    
    FONTSIZE    = [24,              22,              5,              24,         22,          18,        20,              20          ]
    BATHS       = [100,             50,              50,              100,        50,          50,        100,             100         ]    
    FPS         = [25,              25,              25,              25,         25,          25,        25,              25          ]
    CB_SCALE    = [1,               '',              1,               1,          '',          1,         1,               1           ]
    SPEC_SCALES = ['NARROW',        'VERY_NARROW',   'VERY_NARROW',   '',         'LOW',       'NARROW_HIGH',     'NARROW',        'LOW'       ]    
    PRODS       = ['CHLOR_A-OC',    'CHLOR_A-OC',    'CHLOR_A-PAN',    'SST',      'SST',       'SST',     'CHLOR_A-PAN',   'SST-N_11UM']
    PROD_TITLES = ['CHLOROPHYLL',   'CHLOROPHYLL',   'CHLOROPHYLL',   'TEMP',     'TEMP',      'TEMP',    'CHLOROPHYLL',   'TEMP'      ]
    TITLES      = ['Northeast US Continental Shelf','Massachusetts Bay','Rhode Island Sound','Northeast US Continental Shelf','Massachusetts Bay','Rhode Island Sound','Gulf of Maine','Gulf of Maine']
    
    FOR NTH = 0, N_ELEMENTS(DATASETS)-1 DO BEGIN
      IF DO_DATASET[NTH] EQ 0 THEN CONTINUE
      DIR         = !S.DATASETS + DATASETS[NTH] + SL + MAP_IN[NTH] + SL + DIR_IN[NTH] + SL + PRODS[NTH] + SL
      IF ARCHIVE[NTH] EQ 1 THEN DIR = REPLACE(DIR,'DATASETS','DATASETS_ARCHIVE')
      IF DIR_IN[NTH] EQ 'TS_IMAGES' THEN BEGIN
        DIR_BROWSE  = REPLACE(DIR,MAP_IN[NTH],MAPS[NTH]) + 'BROWSE' + SL & IF FILE_TEST(DIR_BROWSE,/DIR) EQ 0 THEN FILE_MKDIR, DIR_BROWSE   
        DIR_MOVIES  = REPLACE(DIR,MAP_IN[NTH],MAPS[NTH]) + 'MOVIES' + SL & IF FILE_TEST(DIR_MOVIES,/DIR) EQ 0 THEN FILE_MKDIR, DIR_MOVIES
      ENDIF ELSE BEGIN
        DIR_BROWSE  = REPLACE(DIR,[DIR_IN[NTH],MAP_IN[NTH]],['BROWSE',MAPS[NTH]]) & IF FILE_TEST(DIR_BROWSE,/DIR) EQ 0 THEN FILE_MKDIR, DIR_BROWSE   
        DIR_MOVIES  = REPLACE(DIR,[DIR_IN[NTH],MAP_IN[NTH]],['MOVIES',MAPS[NTH]]) & IF FILE_TEST(DIR_MOVIES,/DIR) EQ 0 THEN FILE_MKDIR, DIR_MOVIES
      ENDELSE   
      
;      PX_OUT = [] & PY_OUT = []
;      IF PXPY[NTH] NE '' THEN BEGIN
;        XY = STRSPLIT(PXPY[NTH],'_',/EXTRACT)
;        PX_OUT = XY[0]
;        PY_OUT = XY[1]
;      ENDIF  
      
      STAT_FILE    = FILE_SEARCH(REPLACE(DIR,DIR_IN[NTH],'STATS') + 'ANNUAL*' + VALID_MAPS(DATASETS[NTH]) + '-' + PRODS[NTH] + '-MEAN.SAVE')
      IF FILE_TEST(STAT_FILE) EQ 1 THEN BEGIN
        STAT    = STRUCT_SD_READ(STAT_FILE,STRUCT=CHL_STRUCT)
        FT      = PARSE_IT(STAT_FILE,/ALL)          
        TITLEFILE  = DIR_MOVIES+MAPS[NTH] + '-DD_'+NUM2STR(DATE_START)+'-'+NUM2STR(DATE_END)+'-'+PRODS[NTH]+'-TITLE_SLIDE.PNG'
        NOTEXTFILE = DIR_MOVIES+MAPS[NTH] + '-DD_'+NUM2STR(DATE_START)+'-'+NUM2STR(DATE_END)+'-'+PRODS[NTH]+'-NO_TEXT.PNG'
        IF FILE_TEST(TITLEFILE) EQ 0 OR FILE_TEST(NOTEXTFILE) EQ 0 OR GET_MTIME(TITLEFILE) LT FT.MTIME OR GET_MTIME(NOTEXTFILE) LT FT.MTIME THEN BEGIN 
          TITLE_IMG = STRUCT_SD_2IMAGE_NG(CHL_STRUCT,MAP_OUT=MAPS[NTH],PX_OUT=PX_OUT,PY_OUT=PY_OUT,/ADD_LAND,/ADD_COAST,/ADD_BATHY,BATHS=BATHS[NTH],BATHY_COLOR=255,OVERWRITE=OVERWRITE,SPECIAL_SCALE=SPEC_SCALES[NTH],/BUFFER)          
          TITLE_IMG.SAVE,NOTEXTFILE,RESOLUTION=RES,BIT_DEPTH=2        
          T1 = TEXT(0.5,0.50,TITLES[NTH],            COLOR='BLACK',FONT_SIZE=FONTSIZE[NTH],ALIGNMENT=0.5,/NORMAL,TARGET=TITLE_IMG)
          T2 = TEXT(0.5,0.45,TITLE_DATES,            COLOR='BLACK',FONT_SIZE=FONTSIZE[NTH],ALIGNMENT=0.5,/NORMAL,TARGET=TITLE_IMG)
          T3 = TEXT(0.5,0.40,UNITS(PROD_TITLES[NTH]),COLOR='BLACK',FONT_SIZE=FONTSIZE[NTH],ALIGNMENT=0.5,/NORMAL,TARGET=TITLE_IMG)      
          PRINT, 'Writing file: ' + TITLEFILE 
          TITLE_IMG.SAVE,TITLEFILE,RESOLUTION=RESOLUTION[NTH],BIT_DEPTH=2
          TITLE_IMG.CLOSE
        ENDIF  
      ENDIF ELSE TITLEFILE = '' 
       
      IF DIR_IN[NTH] EQ 'TS_IMAGES' THEN FILES = FILE_SEARCH(DIR + 'SAVE' + SL + '*D_*.SAV*') ELSE FILES    = FILE_SEARCH(DIR + SL + '*D_*.SAV*')             
      FP       = PARSE_IT(FILES) & CFILES = DATE_SELECT(FILES,[DATE_START,DATE_END])
      PNGFILES = []        
      FOR N=0, N_ELEMENTS(CFILES)-1 DO BEGIN
        FC = PARSE_IT(CFILES(N))
        PNGFILE = DIR_BROWSE+REPLACE(FC.NAME,MAP_IN[NTH],MAPS[NTH])+'.PNG'
        PNGFILES = [PNGFILES,PNGFILE]
        IF FILE_TEST(PNGFILE) EQ 1 AND GET_MTIME(PNGFILE) GT GET_MTIME(CFILES(N)) AND REFRESH[NTH] EQ 0 THEN CONTINUE
        DATA = STRUCT_SD_READ(CFILES(N),STRUCT=STRUCT)        
        NIMAGE = STRUCT_SD_2IMAGE_NG(STRUCT,PX_OUT=PX_OUT,PY_OUT=PY_OUT,/ADD_LAND,/ADD_COAST,SPECIAL_SCALE=SPEC_SCALES[NTH],/ADD_COLORBAR,SCALE_FACTOR=CB_SCALE[NTH],MAP_OUT=MAPS[NTH],COLORBAR_TITLE=UNITS(PROD_TITLES[NTH]),PAL=PAL,/ADD_DATEBAR,/ADD_BATHY,BATHS=100,BATHY_COLOR=255,BUFFER=BUFFER)
        PRINT, 'Writing file ' + NUM2STR(N+1) + ' of ' + NUM2STR(N_ELEMENTS(CFILES)) + ': ' + PNGFILE
        NIMAGE.SAVE,PNGFILE,RESOLUTION=RESOLUTION[NTH],BIT_DEPTH=2
        NIMAGE.CLOSE
      ENDFOR              
              
      MOVIE_FILE = MAPS[NTH] + '-DD_'+NUM2STR(DATE_START)+'-'+NUM2STR(DATE_END)+'-'+PRODS[NTH]+['.MP4','.AVI']
      FOR M =0, N_ELEMENTS(MOVIE_FILE)-1 DO IF FILE_TEST(DIR_MOVIES+MOVIE_FILE(M)) EQ 0 OR GET_MTIME(DIR_MOVIES+MOVIE_FILE(M)) LT MAX(GET_MTIME(PNGFILES)) THEN $
        MAKE_FF_MOVIE,FILES=PNGFILES,DIR_OUT=DIR_MOVIES,PAL=PAL,KBPS=KBPS,FPS=FPS[NTH],MAP=MAPS[NTH],YOFFSET=YOFFSET,$
              TITLE_FILE_PNG=TITLEFILE,N_TITLE=15,TITLE_SLIDE=1,MOVIE_FILE=MOVIE_FILE(M)
    
    ENDFOR   
  ENDIF
  
  IF DO_REGIONS_DOY GE 1 THEN BEGIN
  
    PAL = 'PAL_SW3'
    BUFFER = 1
    
    DATE_START  = 20030101
    DATE_END    = 20071231
    DO_DATASET  = [0,               0,               0,               0,          0,           0,         1,               0           ]
    REFRESH     = [0,               0,               0,               0,          0,           0,         0,               0           ]
    RESOLUTION  = [125,             200,             200,             125,        200,         200,       200,             200         ]
    DATASETS    = ['OC-SEA_AQU-LAC','OC-SEA_AQU-LAC','OC-SEA_AQU-LAC','SST-PAT-4','SST-PAT-4','SST-PAT-4','OC-SEA_AQU-LAC','SST-PAT-4' ]
    DIR_IN      = ['STATS',     'STATS',     'STATS',     'STATS','STATS','STATS','STATS',     'STATS' ]
    MAP_IN      = ['NEC',           'NEC',           'RI_SOUND',      'NEC',      'NEC',      'RI_SOUND', 'GOMN',          'GOMN'      ]
    MAPS        = ['NEC',           'MASS_BAY',      'RI_SOUND',      'NEC',      'MASS_BAY', 'RI_SOUND', 'GOMN',          'GOMN'      ]
    FONTSIZE    = [24,              22,              18,              24,         22,          18,        20,              20          ]
    BATHS       = [100,             50,              50,              100,        50,          50,        100,             100         ]
    FPS         = [25,              25,              25,              25,         25,          25,        25,              25          ]
    CB_SCALE    = [1,               '',              1,               1,          '',          1,         1,               1           ]
    SPEC_SCALES = ['NARROW',        'VERY_NARROW',   'VERY_NARROW',   '',         'LOW',       'LOW',     'NARROW',        'LOW'       ]
    PRODS       = ['CHLOR_A-OC',    'CHLOR_A-OC',    'CHLOR_A-OC',    'SST',      'SST',       'SST',     'CHLOR_A-PAN',   'SST-N_11UM']
    PROD_TITLES = ['CHLOROPHYLL',   'CHLOROPHYLL',   'CHLOROPHYLL',   'TEMP',     'TEMP',      'TEMP',    'CHLOROPHYLL',   'TEMP'      ]
    TITLES      = ['Northeast US Continental Shelf','Massachusetts Bay','Rhode Island Sound','Northeast US Continental Shelf','Massachusetts Bay','Rhode Island Sound','Gulf of Maine','Gulf of Maine']
  ;  TITLE_DATES = 'January 1, 2003 - December 31, 2007'
    FOR NTH = 0, N_ELEMENTS(DATASETS)-1 DO BEGIN
      IF DO_DATASET[NTH] EQ 0 THEN CONTINUE
      DIR         = !S.DATASETS + DATASETS[NTH] + SL + MAP_IN[NTH] + SL + DIR_IN[NTH] + SL + PRODS[NTH] + SL
      IF DIR_IN[NTH] EQ 'TS_IMAGES' THEN BEGIN
        DIR_BROWSE  = REPLACE(DIR,MAP_IN[NTH],MAPS[NTH]) + 'BROWSE' + SL & IF FILE_TEST(DIR_BROWSE,/DIR) EQ 0 THEN FILE_MKDIR, DIR_BROWSE
        DIR_MOVIES  = REPLACE(DIR,MAP_IN[NTH],MAPS[NTH]) + 'MOVIES' + SL & IF FILE_TEST(DIR_MOVIES,/DIR) EQ 0 THEN FILE_MKDIR, DIR_MOVIES
      ENDIF ELSE BEGIN
        DIR_BROWSE  = REPLACE(DIR,[DIR_IN[NTH],MAP_IN[NTH]],['BROWSE',MAPS[NTH]]) & IF FILE_TEST(DIR_BROWSE,/DIR) EQ 0 THEN FILE_MKDIR, DIR_BROWSE
        DIR_MOVIES  = REPLACE(DIR,[DIR_IN[NTH],MAP_IN[NTH]],['MOVIES',MAPS[NTH]]) & IF FILE_TEST(DIR_MOVIES,/DIR) EQ 0 THEN FILE_MKDIR, DIR_MOVIES
      ENDELSE
      
      STAT_FILE    = FILE_SEARCH(REPLACE(DIR,DIR_IN[NTH],'STATS') + 'ANNUAL*' + VALID_MAPS(DATASETS[NTH]) + '-' + PRODS[NTH] + '-MEAN.SAVE')
      IF FILE_TEST(STAT_FILE) EQ 1 THEN BEGIN
        STAT    = STRUCT_SD_READ(STAT_FILE,STRUCT=CHL_STRUCT)
        FT      = PARSE_IT(STAT_FILE,/ALL)
        TITLEFILE  = DIR_MOVIES+MAPS[NTH] + '-ANNUAL_'+NUM2STR(DATE_START)+'-'+NUM2STR(DATE_END)+'-'+PRODS[NTH]+'-TITLE_SLIDE.PNG'
        NOTEXTFILE = DIR_MOVIES+MAPS[NTH] + '-ANNUAL_'+NUM2STR(DATE_START)+'-'+NUM2STR(DATE_END)+'-'+PRODS[NTH]+'-NO_TEXT.PNG'
        IF FILE_TEST(TITLEFILE) EQ 0 OR FILE_TEST(NOTEXTFILE) EQ 0 OR GET_MTIME(TITLEFILE) LT FT.MTIME OR GET_MTIME(NOTEXTFILE) LT FT.MTIME THEN BEGIN
          TITLE_IMG = STRUCT_SD_2IMAGE_NG(CHL_STRUCT,MAP_OUT=MAPS[NTH],/ADD_LAND,/ADD_COAST,/ADD_BATHY,BATHS=BATHS[NTH],BATHY_COLOR=255,OVERWRITE=OVERWRITE,SPECIAL_SCALE=SPEC_SCALES[NTH],/BUFFER)
          TITLE_IMG.SAVE,NOTEXTFILE,RESOLUTION=RES,BIT_DEPTH=2
          T1 = TEXT(0.5,0.50,TITLES[NTH],            COLOR='BLACK',FONT_SIZE=FONTSIZE[NTH],ALIGNMENT=0.5,/NORMAL,TARGET=TITLE_IMG)
    ;      T2 = TEXT(0.5,0.45,TITLE_DATES,            COLOR='BLACK',FONT_SIZE=FONTSIZE[NTH],ALIGNMENT=0.5,/NORMAL,TARGET=TITLE_IMG)
          T3 = TEXT(0.5,0.40,UNITS(PROD_TITLES[NTH]),COLOR='BLACK',FONT_SIZE=FONTSIZE[NTH],ALIGNMENT=0.5,/NORMAL,TARGET=TITLE_IMG)
          PRINT, 'Writing file: ' + TITLEFILE
          TITLE_IMG.SAVE,TITLEFILE,RESOLUTION=RESOLUTION[NTH],BIT_DEPTH=2
          TITLE_IMG.CLOSE
        ENDIF
      ENDIF ELSE TITLEFILE = ''
      
      FILES = FILE_SEARCH(DIR + 'DOY*MEAN.SAVE')
      FP       = PARSE_IT(FILES)
      DP = DATE_PARSE(FP.DATE_START)
      FILES = FILES[SORT(DP.IDOY)]
      PNGFILES = []
      FOR N=0, N_ELEMENTS(FILES)-1 DO BEGIN
        FC = PARSE_IT(FILES(N))
        PNGFILE = DIR_BROWSE+REPLACE(FC.NAME,MAP_IN[NTH],MAPS[NTH])+'.PNG'
        PNGFILES = [PNGFILES,PNGFILE]
        IF FILE_TEST(PNGFILE) EQ 1 AND GET_MTIME(PNGFILE) GT GET_MTIME(FILES(N)) AND REFRESH[NTH] EQ 0 THEN CONTINUE
        DATA = STRUCT_SD_READ(FILES(N),STRUCT=STRUCT)
        NIMAGE = STRUCT_SD_2IMAGE_NG(STRUCT,/ADD_LAND,/ADD_COAST,SPECIAL_SCALE=SPEC_SCALES[NTH],SCALE_FACTOR=CB_SCALE[NTH],MAP_OUT=MAPS[NTH],/ADD_COLORBAR,COLORBAR_TITLE=UNITS(PROD_TITLES[NTH]),PAL=PAL,/ADD_DATEBAR,/ADD_BATHY,BATHS=100,BATHY_COLOR=255,BUFFER=BUFFER)
        PRINT, 'Writing file ' + NUM2STR(N+1) + ' of ' + NUM2STR(N_ELEMENTS(CFILES)) + ': ' + PNGFILE
        NIMAGE.SAVE,PNGFILE,RESOLUTION=RESOLUTION[NTH],BIT_DEPTH=2
        NIMAGE.CLOSE
      ENDFOR
      
      MOVIE_FILE = MAPS[NTH] + '-DOY_'+NUM2STR(DATE_START)+'-'+NUM2STR(DATE_END)+'-'+PRODS[NTH]+['.MP4','.AVI']
      FOR M =0, N_ELEMENTS(MOVIE_FILE)-1 DO IF FILE_TEST(DIR_MOVIES+MOVIE_FILE(M)) EQ 0 OR GET_MTIME(DIR_MOVIES+MOVIE_FILE(M)) LT MAX(GET_MTIME(PNGFILES)) THEN $
        MAKE_FF_MOVIE,FILES=PNGFILES,DIR_OUT=DIR_MOVIES,PAL=PAL,KBPS=KBPS,FPS=FPS[NTH],MAP=MAPS[NTH],YOFFSET=YOFFSET,$
        TITLE_FILE_PNG=TITLEFILE,N_TITLE=15,TITLE_SLIDE=1,MOVIE_FILE=MOVIE_FILE(M)
        
    ENDFOR
  ENDIF
  
  IF DO_GLOBAL GE 1 THEN BEGIN
    PAL = 'PAL_SW3'
    PAL_SW3,R,G,B
    BUFFER         = 1
    MAP_OUT        = 'ROBINSON'
    DATE_START     = '20060101'
    DATE_END       = '20071231'
    TITLE_DATES    = 'January 1, 2006 - December 31, 2007'
    FPS            = 25
    RES            = 70
    DO_DATASET     = [1,           1]
    DATASETS       = ['SST-PAT-4', 'OC-SAM-9_4']
    PX_OUT         = [1365,         1365]
    PY_OUT         = [682,          682]
    MAPS           = ['GEQ',       'GEQ']        
    PRODS          = ['SST-N_11UM','CHLOR_A-OC']  
    ANN_MAP        = ['GEQ',       'GEQ']  
    SPECIAL_SCALES = ['',          'MEDIUM']    
    TITLES         = ['',          '']
    PROD_TITLES    = ['TEMP',      'CHLOROPHYLL']
    TITLE_COLORS   = ['BLACK',     'YELLOW']
      
    FOR NTH=0, N_ELEMENTS(DATASETS)-1 DO BEGIN
      IF DO_DATASET[NTH] EQ 0 THEN CONTINUE      
      PXY         = 'PXY_'+NUM2STR(PX_OUT[NTH])+'_'+NUM2STR(PY_OUT[NTH])
      DIR         = !S.DATASETS + DATASETS[NTH] + SL + MAPS[NTH] + SL + 'TS_IMAGES' + SL + PRODS[NTH] + SL
      DIR_BROWSE  = DIR+'BROWSE' + SL & IF FILE_TEST(DIR_BROWSE,/DIR) EQ 0 THEN FILE_MKDIR, DIR_BROWSE    
      DIR_MOVIES  = DIR+'MOVIES' + SL & IF FILE_TEST(DIR_MOVIES,/DIR) EQ 0 THEN FILE_MKDIR, DIR_MOVIES       
      ANN_FILE    = FILE_SEARCH(!S.DATASETS + DATASETS[NTH] + SL + ANN_MAP[NTH] + SL + 'STATS' + SL + PRODS[NTH] + SL + 'ANNUAL*'+PRODS[NTH]+'*-MEAN.SAVE')
      IF ANN_FILE[0] NE '' THEN BEGIN        
        FT      = PARSE_IT(ANN_FILE[0],/ALL)          
        TITLEFILE  = DIR_MOVIES+'DD_'+NUM2STR(DATE_START)+'-'+NUM2STR(DATE_END)+'-'+MAP_OUT+'-'+PXY+'-'+PRODS[NTH]+'-TITLE_SLIDE.PNG'
        NOTEXTFILE = DIR_MOVIES+'DD_'+NUM2STR(DATE_START)+'-'+NUM2STR(DATE_END)+'-'+MAP_OUT+'-'+PXY+'-'+PRODS[NTH]+'-NO_TEXT.PNG'
        IF FILE_TEST(TITLEFILE) EQ 0 OR FILE_TEST(NOTEXTFILE) EQ 0 OR GET_MTIME(TITLEFILE) LT FT.MTIME OR GET_MTIME(NOTEXTFILE) LT FT.MTIME THEN BEGIN 
          ANN     = STRUCT_SD_READ(ANN_FILE[0],STRUCT=ANN_STRUCT)
          TITLE_IMG = STRUCT_SD_2IMAGE_NG(ANN_STRUCT,MAP_OUT=MAP_OUT,PX_OUT=PX_OUT[NTH],PY_OUT=PY_OUT[NTH],/ADD_LAND,OVERWRITE=OVERWRITE,SPECIAL_SCALE=SPECIAL_SCALES[NTH],BUFFER=BUFFER)  
          TITLE_IMG.SAVE,NOTEXTFILE,RESOLUTION=RES,BIT_DEPTH=2        
          T1 = TEXT(0.5,0.70,TITLES[NTH],            COLOR=TITLE_COLORS[NTH],FONT_SIZE=24,ALIGNMENT=0.5,/NORMAL,TARGET=TITLE_IMG)
          T2 = TEXT(0.5,0.65,TITLE_DATES,            COLOR=TITLE_COLORS[NTH],FONT_SIZE=28,FONT_STYLE='BOLD',ALIGNMENT=0.5,/NORMAL,TARGET=TITLE_IMG)
          T3 = TEXT(0.5,0.60,UNITS(PROD_TITLES[NTH]),COLOR=TITLE_COLORS[NTH],FONT_SIZE=26,FONT_STYLE='BOLD',ALIGNMENT=0.5,/NORMAL,TARGET=TITLE_IMG)  
          T4 = TEXT(0.92,0.015, 'NOAA/NMFS/NEFSC!CNarragansett,RI',COLOR='BLACK',FONT_SIZE=16,ALIGNMENT=0.5,FONT_STYLE='BOLD',/NORMAL,TARGET=TITLE_IMG)    
          TITLE_IMG.SAVE,TITLEFILE,RESOLUTION=RES,BIT_DEPTH=2
          TITLE_IMG.CLOSE
        ENDIF  
      ENDIF  

      FILES    = FILE_SEARCH(DIR + 'SAVE' + SL + 'D_*'+PRODS[NTH]+'*.SAVE')      
      CFILES   = DATE_SELECT(FILES,DATE_START,DATE_END)
      PNGFILES = [] 
 
      FOR N=0, N_ELEMENTS(CFILES)-1 DO BEGIN
        FC = PARSE_IT(CFILES(N),/ALL)
        PNGFILE = REPLACE(FC.DIR,'SAVE','BROWSE')+REPLACE(FC.NAME,FC.MAP,MAP_OUT+'-'+PXY)+'.PNG'
        PNGFILES = [PNGFILES,PNGFILE]
        IF UPDATE_CHECK(INFILES=CFILES(N),OUTFILES=PNGFILE) EQ 0 THEN CONTINUE
        DATA = STRUCT_SD_READ(CFILES(N),STRUCT=STRUCT)        
        NIMAGE = STRUCT_SD_2IMAGE_NG(STRUCT,MAP_OUT=MAP_OUT,PX_OUT=PX_OUT[NTH],PY_OUT=PY_OUT[NTH],/ADD_LAND,SPECIAL_SCALE=SPECIAL_SCALE,/ADD_COLORBAR,PAL=PAL,/ADD_DATEBAR,BATHY_COLOR=255,BUFFER=BUFFER)
        PRINT, 'Writing file ' + NUM2STR(N+1) + ' of ' + NUM2STR(N_ELEMENTS(CFILES)) + ': ' + PNGFILE
        NIMAGE.SAVE,PNGFILE,RESOLUTION=RES,BIT_DEPTH=2
        NIMAGE.CLOSE
      ENDFOR                  
              
      MOVIE_FILE = MAP_OUT+'-'+PXY+'-DD_'+NUM2STR(DATE_START)+'-'+NUM2STR(DATE_END)+'-'+PRODS[NTH]+['.AVI','.MP4']
      FOR M =0, N_ELEMENTS(MOVIE_FILE)-1 DO IF FILE_TEST(DIR_MOVIES+MOVIE_FILE(M)) EQ 0 OR GET_MTIME(DIR_MOVIES+MOVIE_FILE(M)) LT MAX(GET_MTIME(PNGFILES)) THEN $ 
        MAKE_FF_MOVIE,FILES=PNGFILES,DIR_OUT=DIR_MOVIES,PAL=PAL,KBPS=KBPS,FPS=FPS,MAP=MAP_OUT,YOFFSET=YOFFSET,$
              TITLE_FILE_PNG=TITLEFILE,N_TITLE=15,/TITLE_SLIDE,MOVIE_FILE=MOVIE_FILE(M)
    
    ENDFOR    
  ENDIF
  
  
  IF DO_COMBOS GE 1 THEN BEGIN
    OVERWRITE = DO_COMBOS GT 1
    PAL='PAL_SW3'
    PAL_SW3,R,G,B
    FPS = 20
    DO_MAP = [1,     0,     1,        0,    0,        0,    0]
    MAPS =   ['GOMN','NEC','RI_SOUND','EC','MASS_BAY','NEC','NEC']   
    DIMS = LIST()
    DIMS.ADD, [1280,640]
    DIMS.ADD, [1536,768]         
    DIMS.ADD, [1008,504]    
    DIMS.ADD, [1344,672]
    DIMS.ADD, [1536,768]
    DIMS.ADD, [1536,768]
    DIMS.ADD, [1536,768]   
    CDATASETS = ['OC-SEA_AQU-LAC','OC-SEA_AQU-LAC','OC-MODIS-LAC','OC-SEA_AQU-LAC','OC-SEA_AQU-LAC','SST-AVHRR-4','OC-MODIS-LAC']
    SDATASETS = ['SST-PAT-4',     'SST-PAT-4',     'SST-MUR-1KM',   'SST-PAT-4',     'SST-PAT-4',     'SST-MUR-1KM','PP-SA-1KM']
    CDIR_IN   = ['TS_IMAGES',     'TS_IMAGES',     'TS_IMAGES',     'TS_IMAGES',     'TS_IMAGES',     'TS_IMAGES',  'TS_IMAGES'] 
    SDIR_IN   = ['TS_IMAGES',     'TS_IMAGES',     'BROWSE',     'TS_IMAGES',     'TS_IMAGES',     'BROWSE',     'BROWSE'] 
    PRODS1    = ['CHLOR_A-PAN',   'CHLOR_A-OC',    'CHLOR_A-PAN',    'CHLOR_A-OC',    'CHLOR_A-OC',    'SST',        'CHLOR_A-PAN']
    PRODS2    = ['SST-N_11UM',    'SST',           'SST',           'SST',           'SST',           'SST',        'PPD-VGPM2'] 
    RES       = [200,             93,              120,             93,              125,             93,           200]
    DATE_START  = 20100701
    DATE_END    = 20100930  
    FOR NTH=0,N_ELEMENTS(MAPS)-1 DO BEGIN
      IF DO_MAP[NTH] EQ 0 THEN CONTINUE
      IF CDIR_IN[NTH] EQ 'TS_IMAGES' THEN CDIR = 'TS_IMAGES' + SL + PRODS1[NTH] + SL + 'BROWSE' + SL ELSE CDIR = CDIR_IN[NTH] + SL + PRODS1[NTH] + SL
      IF SDIR_IN[NTH] EQ 'TS_IMAGES' THEN SDIR = 'TS_IMAGES' + SL + PRODS2[NTH] + SL + 'BROWSE' + SL ELSE SDIR = SDIR_IN[NTH] + SL + PRODS2[NTH] + SL
      CHL_DIR   = REPLACE(!S.DATASETS + CDATASETS[NTH] + SL + MAPS[NTH] + SL + CDIR,'DATASETS/','DATASETS_ARCHIVE/')
      IF SDATASETS[NTH] EQ 'SST-MUR-1KM' THEN SST_DIR = !S.DATASETS + SDATASETS[NTH] + SL + MAPS[NTH] + SL + SDIR $
                                         ELSE SST_DIR = REPLACE(!S.DATASETS + SDATASETS[NTH] + SL + MAPS[NTH] + SL + SDIR,'DATASETS/','DATASETS_ARCHIVE/') 
      DIR_MOVIES  = !S.PROJECTS + 'MOVIES' + SL 
      DIR_COMBO   = !S.PROJECTS + 'MOVIES' + SL + 'COMBO_BROWSE' + SL & IF FILE_TEST(DIR_COMBO,/DIR) EQ 0 THEN FILE_MKDIR, DIR_COMBO
      CTITLEFILE = FILE_SEARCH(!S.DATASETS+CHL_DIR+'MOVIES'+SL+MAPS[NTH] + '-DD_'+NUM2STR(DATE_START)+'-'+NUM2STR(DATE_END)+'-'+PRODS1[NTH]+'*-TITLE_SLIDE.PNG')
      STITLEFILE = FILE_SEARCH(!S.DATASETS+SST_DIR+'MOVIES'+SL+MAPS[NTH] + '-DD_'+NUM2STR(DATE_START)+'-'+NUM2STR(DATE_END)+'-'+PRODS2[NTH]+'*-TITLE_SLIDE.PNG') 
      TITLE_PNGFILE = DIR_MOVIES + 'TITLE_BROWSE' + SL + MAPS[NTH] + '-DD_'+NUM2STR(DATE_START)+'-'+NUM2STR(DATE_END)+'-COMBO-TITLE_SLIDE.PNG'
;      IF FILE_TEST(TITLE_PNGFILE) EQ 0 OR GET_MTIME(TITLE_PNGFILE) LT GET_MTIME(CTITLEFILE) OR GET_MTIME(TITLE_PNGFILE) LT GET_MTIME(STITLEFILE) THEN BEGIN
;        CIMAGE = READALL(CTITLEFILE)
;        SIMAGE = READALL(STITLEFILE)
;        W = WINDOW(DIMENSIONS=DIMS[NTH],LAYOUT=[2,1,0],MARGIN=0,/BUFFER)
;        CI = IMAGE(CIMAGE,LAYOUT=[2,1,1],/CURRENT,DIMENSIONS=DIMS[NTH],MARGIN=0)
;        SI = IMAGE(SIMAGE,LAYOUT=[2,1,2],/CURRENT,DIMENSIONS=DIMS[NTH],MARGIN=0)
;        PRINT, 'Writing file: ' + TITLE_PNGFILE
;        W.SAVE,TITLE_PNGFILE,RESOLUTION=RES[NTH],BIT_DEPTH=2
;        W.CLOSE 
;      ENDIF  
      
      CHL_FILES = FILE_SEARCH(CHL_DIR + 'D_*-'+MAPS[NTH]+'*-'+PRODS1[NTH] + '*.PNG') 
      SST_FILES = FILE_SEARCH(SST_DIR + 'D_*-'+MAPS[NTH]+'*-'+PRODS2[NTH] + '*.PNG')               
      CPNGS = DATE_SELECT(CHL_FILES,[DATE_START,DATE_END])  & FC = FILE_ALL(CPNGS) 
      SPNGS = DATE_SELECT(SST_FILES,[DATE_START,DATE_END])  & FS = FILE_ALL(SPNGS)      
      
      BLANK=READALL(FC[0].FULLNAME)
      SZ=SIZE(BLANK)
      BLANK(0,*,*) = R(252)
      BLANK(1,*,*) = G(252)
      BLANK(2,*,*) = B(252)
      
      DATE_ALL   = [FC.DATE_START,FS.DATE_START]      
      DATE_ALL = DATE_ALL[SORT(DATE_ALL)]
      FILE_LABEL = PRODS1[NTH] + '-' +PRODS2[NTH]
      DD='DD_'+STRMID(DATE_START,0,8)+'_' +STRMID(DATE_END,0,8)
      UN = UNIQ(DATE_ALL)
      N_IMAGES = NUM2STR(N_ELEMENTS(UN))   
      COMBOS = []   
      FOR UNTH = 0L, N_ELEMENTS(FC)-1L DO BEGIN
        AN = UN(UNTH)
        ADATE = DATE_ALL(AN)
        BDATE = STRMID(ADATE,0,8)
        OK1 = WHERE(FC.DATE_START EQ ADATE,COUNT1)
        OK2 = WHERE(FS.DATE_START EQ ADATE,COUNT2)
        PNGFILE=DIR_COMBO+'D_'+BDATE+'-'+MAPS[NTH]+'-'+FILE_LABEL+'-'+'COMBO.PNG'
        COMBOS = [COMBOS,PNGFILE]
        FA_PNG=FILE_ALL(PNGFILE)
        IF COUNT1 EQ 1 AND COUNT2 EQ 0 AND FA_PNG.SIZE GT 0 THEN IF FC(OK1).MTIME LT FA_PNG.MTIME AND OVERWRITE EQ 0 THEN CONTINUE
        IF COUNT1 EQ 0 AND COUNT2 EQ 1 AND FA_PNG.SIZE GT 0 THEN IF FC(OK2).MTIME LT FA_PNG.MTIME AND OVERWRITE EQ 0 THEN CONTINUE
  ;      IF COUNT1 EQ 1 AND COUNT2 EQ 1 AND FA_PNG.SIZE GT 0 THEN IF FC(OK1).MTIME LT FA_PNG.MTIME AND FLS(OK2).MTIME LT FA_PNG.MTIME AND OVERWRITE EQ 0 THEN CONTINUE
        IF COUNT1 EQ 1 THEN IMAGE1 = READALL(FC(OK1).FULLNAME) ELSE IMAGE1 = BLANK & SZ1 = SIZE(IMAGE1)
    ;    IF COUNT2 EQ 1 THEN IMAGE2 = READALL(FLS(OK2).FULLNAME) ELSE IMAGE2 = BLANK & SZ2 = SIZE(IMAGE2)
                
        W = WINDOW(DIMENSIONS=DIMS[NTH],LAYOUT=[2,1,0],MARGIN=0,/BUFFER)
        I1 = IMAGE(IMAGE1,LAYOUT=[2,1,1],/CURRENT,DIMENSIONS=DIMS[NTH],MARGIN=0)
        I2 = IMAGE(IMAGE2,LAYOUT=[2,1,2],/CURRENT,DIMENSIONS=DIMS[NTH],MARGIN=0)
        PRINT, 'Writing file: ' + PNGFILE
        W.SAVE,PNGFILE,RESOLUTION=RES[NTH],BIT_DEPTH=2
        W.CLOSE ;& I1.CLOSE & I2.CLOSE
      ENDFOR ;  FOR NTH = 0L, N_ELEMENTS(UN)-1L DO BEGIN
                       
      MOVIE_FILE = MAPS[NTH] + '-DD_'+NUM2STR(DATE_START)+'-'+NUM2STR(DATE_END)+FILE_LABEL+['.MP4','.AVI']
      FOR M=0, N_ELEMENTS(MOVIE_FILE)-1 DO IF FILE_TEST(DIR_MOVIES+MOVIE_FILE(M)) EQ 0 OR GET_MTIME(DIR_MOVIES+MOVIE_FILE(M)) LT MAX(GET_MTIME(COMBOS)) THEN BEGIN
          MAKE_FF_MOVIE,FILES=COMBOS,DIR_OUT=DIR_MOVIES,PAL=PAL,KBPS=KBPS,FPS=5,MAP=MAPS[NTH],YOFFSET=YOFFSET,$
              TITLE_FILE_PNG=TITLE_PNGFILE,N_TITLE=10,N_END=10,/TITLE_SLIDE,MOVIE_FILE=MOVIE_FILE(M)
      ENDIF        
     
    ENDFOR
  ENDIF
  
  IF DO_COMBOS_DOY GE 1 THEN BEGIN
    OVERWRITE = DO_COMBOS_DOY GT 1
    PAL='PAL_BR'
    PAL_SW3,R,G,B
    FPS = 20
    DO_MAP = [0,     1,     0,        0,    0]
    MAPS =   ['GOMN','NEC','RI_SOUND','EC','MASS_BAY']
    DIMS = LIST()
    DIMS.ADD, [1280,640]
    DIMS.ADD, [1536,768]
    DIMS.ADD, [1008,504]
    DIMS.ADD, [1344,672]
    DIMS.ADD, [1536,768]
    CDATASETS = ['OC-SEA_AQU-LAC','OC-SEA_AQU-LAC','OC-SEA_AQU-LAC','OC-SEA_AQU-LAC','OC-SEA_AQU-LAC']
    SDATASETS = ['SST-PAT-4',     'SST-PAT-4',    'SST-PAT-4',    'SST-PAT-4',    'SST-PAT-4']
    CPRODS    = ['CHLOR_A-PAN',   'CHLOR_A-OC',    'CHLOR_A-OC',    'CHLOR_A-OC',    'CHLOR_A-OC']
    SPRODS    = ['SST-N_11UM',    'SST',           'SST',           'SST',           'SST']
    RES       = [200,             93,              120,             93,              125]
    DATE_START  = 20030101
    DATE_END    = 20071231
    FOR NTH=0,N_ELEMENTS(MAPS)-1 DO BEGIN
      IF DO_MAP[NTH] EQ 0 THEN CONTINUE
      CHL_DIR   = CDATASETS[NTH] + SL + MAPS[NTH] + SL 
      SST_DIR   = SDATASETS[NTH] + SL + MAPS[NTH] + SL 
      DIR_MOVIES  = !S.PROJECTS + 'MOVIES' + SL
      DIR_COMBO   = !S.PROJECTS + 'MOVIES' + SL + 'COMBO_BROWSE' + SL & IF FILE_TEST(DIR_COMBO,/DIR) EQ 0 THEN FILE_MKDIR, DIR_COMBO
      
      CTITLEFILE = FILE_SEARCH(!S.DATASETS+CHL_DIR+'MOVIES'+SL+CPRODS[NTH]+SL+MAPS[NTH] + '-ANNUAL*'+'-CHLOR_A*-TITLE_SLIDE.PNG')
      STITLEFILE = FILE_SEARCH(!S.DATASETS+SST_DIR+'MOVIES'+SL+SPRODS[NTH]+SL+MAPS[NTH] + '-ANNUAL*'+'-SST*-TITLE_SLIDE.PNG')
      TITLE_PNGFILE = DIR_MOVIES + 'TITLE_BROWSE' + SL + MAPS[NTH] + '-DOY_'+NUM2STR(DATE_START)+'-'+NUM2STR(DATE_END)+'-COMBO-TITLE_SLIDE.PNG'
      IF FILE_TEST(TITLE_PNGFILE) EQ 0 OR GET_MTIME(TITLE_PNGFILE) LT GET_MTIME(CTITLEFILE) OR GET_MTIME(TITLE_PNGFILE) LT GET_MTIME(STITLEFILE) THEN BEGIN
        CIMAGE = READALL(CTITLEFILE)
        SIMAGE = READALL(STITLEFILE)
        W = WINDOW(DIMENSIONS=DIMS[NTH],LAYOUT=[2,1,0],MARGIN=0,/BUFFER)
        CI = IMAGE(CIMAGE,LAYOUT=[2,1,1],/CURRENT,DIMENSIONS=DIMS[NTH],MARGIN=0)
        SI = IMAGE(SIMAGE,LAYOUT=[2,1,2],/CURRENT,DIMENSIONS=DIMS[NTH],MARGIN=0)
        PRINT, 'Writing file: ' + TITLE_PNGFILE
        W.SAVE,TITLE_PNGFILE,RESOLUTION=RES[NTH],BIT_DEPTH=2
        W.CLOSE
      ENDIF
      
      CHL_FILES = FILE_SEARCH(!S.DATASETS + CHL_DIR + 'BROWSE' + SL +CPRODS[NTH] + SL + 'DOY_*-'+MAPS[NTH]+'-'+CPRODS[NTH] + '-MEAN.PNG') & FC = PARSE_IT(CHL_FILES)
      SST_FILES = FILE_SEARCH(!S.DATASETS + SST_DIR + 'BROWSE' + SL +SPRODS[NTH] + SL + 'DOY_*-'+MAPS[NTH]+'-'+SPRODS[NTH] + '-MEAN.PNG') & FS = PARSE_IT(SST_FILES)
      
      DPC = DATE_PARSE(FC.DATE_START)
      ;CPNGS = CHL_FILES[SORT(DPC.IDOY)]
      ;FC = PARSE_IT(CPNGS)
      DPS = DATE_PARSE(FS.DATE_START)
      ;SPNGS = SST_FILES[SORT(DPS.IDOY)]
      ;FS = PARSE_IT(SPNGS)
      
      BLANK=READALL(FC[0].FULLNAME)
      SZ=SIZE(BLANK)
      BLANK(0,*,*) = R(252)
      BLANK(1,*,*) = G(252)
      BLANK(2,*,*) = B(252)
      
      DATE_ALL   = [DPC.IDOY,DPS.IDOY]
      DATE_ALL = DATE_ALL[SORT(DATE_ALL)]
      FILE_LABEL = 'CHLOR_A-SST'
      ;DD='DOY_'+STRMID(DATE_START,0,8)+'_' +STRMID(DATE_END,0,8)
      UN = UNIQ(DATE_ALL)
      N_IMAGES = NUM2STR(N_ELEMENTS(UN))
      COMBOS = []
      FOR UNTH = 0L, N_ELEMENTS(FC)-1L DO BEGIN
        AN = UN(UNTH)
        ADATE = DATE_ALL(AN)
        ;BDATE = DATE_2IDOY(ADATE)
        OK1 = WHERE(DPC.IDOY EQ ADATE,COUNT1)
        OK2 = WHERE(DPS.IDOY EQ ADATE,COUNT2)
        PNGFILE=DIR_COMBO+'DOY_'+ADATE+'-'+MAPS[NTH]+'-'+FILE_LABEL+'-'+'COMBO.PNG'
        COMBOS = [COMBOS,PNGFILE]
        FA_PNG=FILE_ALL(PNGFILE)
        IF COUNT1 EQ 1 AND COUNT2 EQ 0 AND FA_PNG.SIZE GT 0 THEN IF FC(OK1).MTIME LT FA_PNG.MTIME AND OVERWRITE EQ 0 THEN CONTINUE
        IF COUNT1 EQ 0 AND COUNT2 EQ 1 AND FA_PNG.SIZE GT 0 THEN IF FC(OK2).MTIME LT FA_PNG.MTIME AND OVERWRITE EQ 0 THEN CONTINUE
    ;    IF COUNT1 EQ 1 AND COUNT2 EQ 1 AND FA_PNG.SIZE GT 0 THEN IF FC(OK1).MTIME LT FA_PNG.MTIME AND FLS(OK2).MTIME LT FA_PNG.MTIME AND OVERWRITE EQ 0 THEN CONTINUE
        IF COUNT1 EQ 1 THEN IMAGE1 = READALL(FC(OK1).FULLNAME) ELSE IMAGE1 = BLANK & SZ1 = SIZE(IMAGE1)
   ;     IF COUNT2 EQ 1 THEN IMAGE2 = READALL(FLS(OK2).FULLNAME) ELSE IMAGE2 = BLANK & SZ2 = SIZE(IMAGE2)
        
        W = WINDOW(DIMENSIONS=DIMS[NTH],LAYOUT=[2,1,0],MARGIN=0,/BUFFER)
        I1 = IMAGE(IMAGE1,LAYOUT=[2,1,1],/CURRENT,DIMENSIONS=DIMS[NTH],MARGIN=0)
        I2 = IMAGE(IMAGE2,LAYOUT=[2,1,2],/CURRENT,DIMENSIONS=DIMS[NTH],MARGIN=0)
        PRINT, 'Writing file: ' + PNGFILE
        W.SAVE,PNGFILE,RESOLUTION=RES[NTH],BIT_DEPTH=2
        W.CLOSE ;& I1.CLOSE & I2.CLOSE
      ENDFOR ;  FOR NTH = 0L, N_ELEMENTS(UN)-1L DO BEGIN
      
      MOVIE_FILE = MAPS[NTH] + '-DOY_'+NUM2STR(DATE_START)+'-'+NUM2STR(DATE_END)+'-CHLOR_A-SST'+['.MP4','.AVI']
      FOR M=0, N_ELEMENTS(MOVIE_FILE)-1 DO IF FILE_TEST(DIR_MOVIES+MOVIE_FILE(M)) EQ 0 OR GET_MTIME(DIR_MOVIES+MOVIE_FILE(M)) LT MAX(GET_MTIME(COMBOS)) THEN BEGIN
        MAKE_FF_MOVIE,FILES=COMBOS,DIR_OUT=DIR_MOVIES,PAL=PAL,KBPS=KBPS,FPS=20,MAP=MAPS[NTH],YOFFSET=YOFFSET,$
          TITLE_FILE_PNG=TITLE_PNGFILE,N_TITLE=15,/TITLE_SLIDE,MOVIE_FILE=MOVIE_FILE(M)
      ENDIF
      
    ENDFOR
  ENDIF
  

  
  IF DO_SPR_COMPOSITE GE 1 THEN BEGIN
    OVERWRITE = DO_SPR_COMPOSITE GT 1
    PAL='PAL_SW3'
    PAL_SW3,R,G,B
    RGB_TABLE = CPAL_READ(PAL)
    FPS = 10
    RES = 200
    BUFFER = 1
    
    MAP_OUT = ['GOMN']
    MAP_IN  = ['NEC']
    
    DO_PRODS = [1,1]
    PRODS = ['CHLOR_A-PAN','SST-N_11UM']
    DATASETS = ['OC-SEA_AQU-LAC','SST-PAT-4']
    SS = ['.03_50','']
    CBAR_TITLE = UNITS(['CHLA','TEMP'])
    
    YEARS = YEAR_RANGE('1998','2012',/STRING)
    DIF = 200
    XPOS = [10, 220,430,640,850,10, 220,430,640,850,10, 220,430,640,850]
    YPOS = [480,480,480,480,480,270,270,270,270,270,60,60,60,60,60]
    FOR NTH=0,N_ELEMENTS(MAP_OUT)-1 DO BEGIN
      FOR PTH=0,N_ELEMENTS(PRODS)-1 DO BEGIN
        DIR   = DATASETS(PTH) + SL + MAP_IN[NTH] + SL + 'TS_IMAGES' + SL + PRODS(PTH) + SL
        
        DIR_MOVIES  = !S.PROJECTS + 'MOVIES' + SL
        DIR_COMBO   = !S.PROJECTS + 'MOVIES' + SL + 'SPRING_COMBO_BROWSE' + SL & DIR_TEST,DIR_COMBO
       
;        CTITLEFILE = FILE_SEARCH(!S.DATASETS+CHL_DIR+'MOVIES'+SL+CPRODS[NTH]+SL+MAPS[NTH] + '-SPRING*'+'-CHLOR_A*-TITLE_SLIDE.PNG')
;        STITLEFILE = FILE_SEARCH(!S.DATASETS+SST_DIR+'MOVIES'+SL+SPRODS[NTH]+SL+MAPS[NTH] + '-SPRING*'+'-SST*-TITLE_SLIDE.PNG')
;        TITLE_PNGFILE = DIR_MOVIES + 'TITLE_BROWSE' + SL + MAPS[NTH] + '-SPRING_'+NUM2STR(MIN(YEARS))+'-'+NUM2STR(MAX(YEARS))+'-COMBO-TITLE_SLIDE.PNG'
;        IF UPDATE_CHECK(INFILES=[CTITLEFILE,STITLEFILE],OUTFILES=TITLE_PNGFILE) EQ 1 OR OVERWRITE EQ 1 THEN BEGIN
;          CIMAGE = READALL(CTITLEFILE)
;          SIMAGE = READALL(STITLEFILE)
;          W = WINDOW(DIMENSIONS=DIMS[NTH],LAYOUT=[2,1,0],MARGIN=0,/BUFFER)
;          CI = IMAGE(CIMAGE,LAYOUT=[2,1,1],/CURRENT,DIMENSIONS=DIMS[NTH],MARGIN=0)
;          SI = IMAGE(SIMAGE,LAYOUT=[2,1,2],/CURRENT,DIMENSIONS=DIMS[NTH],MARGIN=0)
;          PRINT, 'Writing file: ' + TITLE_PNGFILE
;          W.SAVE,TITLE_PNGFILE,RESOLUTION=RES[NTH],BIT_DEPTH=2
;          W.CLOSE
;        ENDIF
        
        FILES  = FILE_SEARCH(!S.DATASETS + DIR + 'SAVE' + SL + 'D_*-'+MAP_IN[NTH]+'-'+PRODS(PTH) + '-INTERP-TS_IMAGES.SAVE') & FPC = PARSE_IT(FILES)
        CFILES = FILES[WHERE(FPC.YEAR_START GE MIN(YEARS) AND DATE_2DOY(FPC.DATE_START) GE DATE_2DOY('20200201') AND FPC.YEAR_END LE MAX(YEARS) AND DATE_2DOY(FPC.DATE_START) LE DATE_2DOY('20200531'))]  & FC  = PARSE_IT(CFILES) 
        
        FILE_LABEL = 'SPRING-'+PRODS(PTH)
        DD='YY_'+MIN(YEARS)+'0201'+'_' +MAX(YEARS)+'0531'
        BLANK=STRUCT_SD_READ(FC[0].FULLNAME)
        SZ=SIZE(BLANK)
        BLANK(0,*,*) = R(252)
        BLANK(1,*,*) = G(252)
        BLANK(2,*,*) = B(252)
        
        DP = DATE_PARSE(FC.DATE_START)
        DOY = DP.IDOY   
        SETS = WHERE_SETS(DOY)
        N_IMAGES = NUM2STR(N_ELEMENTS(SETS))   
        COMBOS = []
        FOR STH = 0L, N_ELEMENTS(SETS)-1L DO BEGIN
          SUBS = WHERE_SETS_SUBS(SETS(STH))
          SET  = FC(SUBS)
          SET  = SET[SORT(SET.YEAR_START)]
          ADOY = SETS(STH).VALUE
          
          PNGFILE=DIR_COMBO+'DOY_'+ADOY+'-'+MAP_OUT[NTH]+'-'+FILE_LABEL+'-'+'COMBO.PNG'
          COMBOS = [COMBOS,PNGFILE]
          IF UPDATE_CHECK(INFILES=SET.FULLNAME,OUTFILES=PNGFILE) EQ 0 AND NOT KEYWORD_SET(OVERWRITE) THEN CONTINUE
          W = WINDOW(DIMENSIONS=[1060,700],BUFFER=BUFFER)
          T = TEXT(0.5,0.975,'Day of Year ' + ADOY,ALIGNMENT=0.5,FONT_SIZE=15,FONT_STYLE='BOLD')
          FOR YTH=0L, N_ELEMENTS(YEARS)-1 DO BEGIN
            INSERT_BLANK = 0
            POS = [XPOS(YTH),YPOS(YTH),XPOS(YTH)+DIF,YPOS(YTH)+DIF]
            AYEAR = YEARS(YTH)
            OK = WHERE(SET.YEAR_START EQ AYEAR,COUNT)
            IF COUNT EQ 1 THEN DATA = STRUCT_SD_READ(SET[OK].FULLNAME,STRUCT=STRUCT,MAP_OUT=MAP_OUT) ELSE INSERT_BLANK=1
            IF INSERT_BLANK EQ 1 THEN IM = IMAGE(BLANK,POSITION=POS,RGB_TABLE=RGB_TABLE,/DEVICE,/CURRENT) $
                                 ELSE IM = STRUCT_SD_2IMAGE_NG(STRUCT,IMG_POSITION=POS,SPECIAL_SCALE=SS(PTH),/ADD_LAND,/ADD_COAST,/DEVICE,/CURRENT)
            T = TEXT(POS[0]+5,POS(3)-20,AYEAR,FONT_STYLE='BOLD',/DEVICE)
          ENDFOR
          BAR = DATE_BAR_NG(YDOY_2DATE('2020',ADOY),/NO_YEAR,BACKGROUND=255,CHARSIZE=14,CHARTHICK=2,LINE_COLOR=240,LINE_THICK=4,PX=10,PY=56,XDIM=510,YDIM=30, GRACE=grace, CUT=CUT,/CURRENT)
          CBAR = COLOR_BAR_SCALE_NG(PROD=VALIDS('PRODS',PRODS(PTH)),SPECIAL_SCALE=SS(PTH),PX=550,PY=37,CHARSIZE=10,BACKGROUND=255,XDIM=500,YDIM=20,PAL=PAL,$
                        TITLE=CBAR_TITLE(PTH),HORIZONTAL=1,BOTTOM=1,FONT='HELVETICA',/CURRENT)
          PRINT, 'Writing file: ' + PNGFILE
          W.SAVE,PNGFILE,RESOLUTION=RES[NTH],BIT_DEPTH=2
          W.CLOSE 
        ENDFOR ;  
        
        TITLE_PNGFILE = ''
        MOVIE_FILE = MAP_OUT[NTH]+'-'+FILE_LABEL+'-'+'COMBO'+['.MP4','.AVI']
        FOR M=0, N_ELEMENTS(MOVIE_FILE)-1 DO IF FILE_TEST(DIR_MOVIES+MOVIE_FILE(M)) EQ 0 OR GET_MTIME(DIR_MOVIES+MOVIE_FILE(M)) LT MAX(GET_MTIME(COMBOS)) THEN BEGIN
          MAKE_FF_MOVIE,FILES=COMBOS,DIR_OUT=DIR_MOVIES,PAL=PAL,KBPS=KBPS,FPS=20,MAP=MAP_OUT,YOFFSET=YOFFSET,$
            TITLE_FILE_PNG=TITLE_PNGFILE,N_TITLE=15,TITLE_SLIDE=0,MOVIE_FILE=MOVIE_FILE(M)
        ENDIF
        
      ENDFOR
    ENDFOR  
  ENDIF ; DO_SPR_COMPOSITE
  
  
  
  IF DO_MULTI_YEAR_COMPOSITE GE 1 THEN BEGIN
    OVERWRITE = DO_MULTI_YEAR_COMPOSITE GT 1
    PAL='PAL_SW3'
    PAL_SW3,R,G,B
    RGB_TABLE = CPAL_READ(PAL)
    FPS = 5
    RES = 200
    BUFFER = 1
    BLANK_COLOR = 252
    
    DATA_TYPE = ['DAILY']
    
    MAPS_OUT = ['NEC']
    MAPS_IN  = ['NEC']
    
    DO_PRODS   = [1,            0,           0,               0,                0]
    PRODS      = ['SST',        'SST-N_11UM','CHLOR_A-PAN',   'CHLOR_A-PAN',    'CHLOR_A-PAN']
    DATASETS   = ['SST-MUR-1KM','SST-PAT-4', 'OC-SEA_AQU-LAC','OC-SEAWIFS-MLAC','OC-MODIS-LAC']
    MINYEAR    = ['2003',       '1998',      '1998',          '1998',           '2003']
    MAXYEAR    = ['2014',       '2012',      '2012',          '2010',           '2014']
    SS         = ['','','','']
    CBAR_TITLE = UNITS(['TEMP','TEMP','CHLA','CHLA','CHLA'])
    
    
    DIF = 200
    SPACE = 20
    
    
    FOR DTH=0, N_ELEMENTS(DATA_TYPE)-1 DO BEGIN
      FOR NTH=0,N_ELEMENTS(MAPS_OUT)-1 DO BEGIN
        MAP_OUT = MAPS_OUT[NTH]
        MAP_IN  = MAPS_IN[NTH]
        FOR PTH=0,N_ELEMENTS(PRODS)-1 DO BEGIN
          IF DO_PRODS(PTH) EQ 0 THEN CONTINUE
          XPOS = [10, 220,430,640,850,10, 220,430,640,850,10, 220,430,640,850]
          YPOS = [480,480,480,480,480,270,270,270,270,270,60,60,60,60,60]
          DIMENSIONS = [1060,700] 
          YEARS = YEAR_RANGE(MINYEAR(PTH),MAXYEAR(PTH),/STRING)
   IF N_ELEMENTS(YEARS) EQ 12 THEN BEGIN 
     XPOS = [10, 220,430,640,10, 220,430,640,10, 220,430,640]
     YPOS = [480,480,480,480,270,270,270,270,60,60,60,60]
     DIMENSIONS = [850,700]
   ENDIF      
          CASE DATA_TYPE(DTH) OF
            'INTERP': DIR   = DATASETS(PTH) + SL + MAP_IN + SL + 'TS_IMAGES' + SL + PRODS(PTH) + SL + 'SAVE' + SL
            'DAILY' : DIR   = DATASETS(PTH) + SL + MAP_IN + SL + 'SAVE'      + SL + PRODS(PTH) + SL 
          ENDCASE
          
          DIR_MOVIES  = !S.PROJECTS + 'MOVIES' + SL
          DIR_COMBO   = !S.PROJECTS + 'MOVIES' + SL + 'MULTI_YEAR_COMBO_BROWSE-'+DATA_TYPE(DTH) + SL & DIR_TEST,DIR_COMBO
                    
          SZ=MAPS_SIZE(MAP_OUT)
          BLANK = BYTARR(SZ.PX,SZ.PY)
          BLANK(*) = BLANK_COLOR
                      
          ANN_FILES = FILE_SEARCH(!S.DATASETS + DATASETS(PTH) + SL + MAP_IN + SL + 'STATS' + SL + PRODS(PTH) + SL + 'A_*'+PRODS(PTH)+'*-MEAN.SAVE')        
          AFILES    = DATE_SELECT(ANN_FILES,MIN(YEARS),MAX(YEARS)) & FA = PARSE_IT(AFILES)
          TITLE_PNGFILE = DIR_COMBO + MAP_OUT + '-MULTI_YEAR_'+NUM2STR(MIN(YEARS))+'-'+NUM2STR(MAX(YEARS))+'-'+DATASETS(PTH)+'-'+PRODS(PTH)+'-COMBO-TITLE_SLIDE.PNG'
          IF UPDATE_CHECK(INFILES=[AFILES],OUTFILES=TITLE_PNGFILE) EQ 1 OR OVERWRITE EQ 1 THEN BEGIN          
            W = WINDOW(DIMENSIONS=DIMENSIONS,BUFFER=BUFFER)
            T = TEXT(0.5,0.975,MIN(YEARS) + ' - ' + MAX(YEARS) ,ALIGNMENT=0.5,FONT_SIZE=15,FONT_STYLE='BOLD')
            FOR YTH=0L, N_ELEMENTS(YEARS)-1 DO BEGIN
              INSERT_BLANK = 0
              POS = [XPOS(YTH),YPOS(YTH),XPOS(YTH)+DIF,YPOS(YTH)+DIF]
              AYEAR = YEARS(YTH)
              OK = WHERE(FA.YEAR_START EQ AYEAR,COUNT)
              IF COUNT EQ 1 THEN DATA = STRUCT_SD_READ(FA[OK].FULLNAME,STRUCT=STRUCT,MAP_OUT=MAP_OUT) ELSE INSERT_BLANK=1
              IF INSERT_BLANK EQ 1 THEN IM = IMAGE(BLANK,POSITION=POS,RGB_TABLE=RGB_TABLE,/DEVICE,/CURRENT) $
              ELSE IM = STRUCT_SD_2IMAGE_NG(STRUCT,IMG_POSITION=POS,SPECIAL_SCALE=SS(PTH),/ADD_LAND,/ADD_COAST,/DEVICE,/CURRENT)
              T = TEXT(POS[0]+5,POS(3)-20,AYEAR,FONT_STYLE='BOLD',/DEVICE)
            ENDFOR
            BAR = DATE_BAR_NG(YDOY_2DATE('2020',ADOY),/NO_YEAR,BACKGROUND=255,CHARSIZE=14,CHARTHICK=2,LINE_COLOR=240,LINE_THICK=4,PX=10,PY=56,XDIM=(DIMENSIONS[0]-SPACE*2)/2,YDIM=30, GRACE=grace, CUT=CUT,/CURRENT)
            CBAR = COLOR_BAR_SCALE_NG(PROD=VALIDS('PRODS',PRODS(PTH)),SPECIAL_SCALE=SS(PTH),PX=DIMENSIONS[0]/2,PY=37,CHARSIZE=10,BACKGROUND=255,XDIM=(DIMENSIONS[0]-SPACE*2)/2,YDIM=20,PAL=PAL,$
              TITLE=CBAR_TITLE(PTH),HORIZONTAL=1,BOTTOM=1,FONT='HELVETICA',/CURRENT)
            PRINT, 'Writing file: ' + TITLE_PNGFILE
            W.SAVE,TITLE_PNGFILE,RESOLUTION=RES,BIT_DEPTH=2
            W.CLOSE
          ENDIF
          
          CASE DATA_TYPE(DTH) OF
            'INTERP': TARGET = '-INTERP-TS_IMAGES.SAVE'
            'DAILY' : TARGET = '.SAVE'
          ENDCASE
          
          FILE_LABEL = DATASETS(PTH) + '-' + PRODS(PTH) + '-' + DATA_TYPE(DTH)          
          FILES  = FILE_SEARCH(!S.DATASETS + DIR + 'D_*-'+MAP_IN+'-*'+PRODS(PTH) + TARGET) 
          IF N_ELEMENTS(FILES) EQ 1 THEN CONTINUE 
          CFILES = DATE_SELECT(FILES,MIN(YEARS),MAX(YEARS))
          FC  = PARSE_IT(CFILES)
          DP  = DATE_PARSE(FC.DATE_START)
          
          DD='YY_'+MIN(YEARS)+'0201'+'_' +MAX(YEARS)+'0531'          
          DOY = DP.IDOY
          SETS = WHERE_SETS(DOY)
          N_IMAGES = NUM2STR(N_ELEMENTS(SETS))
          COMBOS = []
          FOR STH = 0L, N_ELEMENTS(SETS)-1L DO BEGIN
            ADOY = SETS(STH).VALUE
            SUBS = WHERE_SETS_SUBS(SETS(STH))
            SET  = FC(SUBS)            
            SET  = SET[SORT(SET.YEAR_START)]
            
            PNGFILE=DIR_COMBO+'DOY_'+ADOY+'-'+MAP_OUT+'-'+FILE_LABEL+'-COMBO.PNG'
            COMBOS = [COMBOS,PNGFILE]
            IF UPDATE_CHECK(INFILES=SET.FULLNAME,OUTFILES=PNGFILE) EQ 0 AND NOT KEYWORD_SET(OVERWRITE) THEN CONTINUE
            W = WINDOW(DIMENSIONS=DIMENSIONS,BUFFER=BUFFER)
            T = TEXT(0.5,0.975,'Day of Year ' + ADOY,ALIGNMENT=0.5,FONT_SIZE=15,FONT_STYLE='BOLD')
            FOR YTH=0L, N_ELEMENTS(YEARS)-1 DO BEGIN
              INSERT_BLANK = 0
              POS = [XPOS(YTH),YPOS(YTH),XPOS(YTH)+DIF,YPOS(YTH)+DIF]
              AYEAR = YEARS(YTH)
              OK = WHERE(SET.YEAR_START EQ AYEAR,COUNT)
              IF COUNT EQ 1 THEN DATA = STRUCT_SD_READ(SET[OK].FULLNAME,STRUCT=STRUCT,MAP_OUT=MAP_OUT) ELSE INSERT_BLANK=1
              IF INSERT_BLANK EQ 1 THEN IM = IMAGE(BLANK,POSITION=POS,RGB_TABLE=RGB_TABLE,/DEVICE,/CURRENT) $
              ELSE IM = STRUCT_SD_2IMAGE_NG(STRUCT,IMG_POSITION=POS,SPECIAL_SCALE=SS(PTH),/ADD_LAND,/ADD_COAST,/DEVICE,/CURRENT)
              T = TEXT(POS[0]+5,POS(3)-20,AYEAR,FONT_STYLE='BOLD',/DEVICE)
            ENDFOR
            BAR = DATE_BAR_NG(YDOY_2DATE('2020',ADOY),/NO_YEAR,BACKGROUND=255,CHARSIZE=14,CHARTHICK=2,LINE_COLOR=240,LINE_THICK=4,PX=10,PY=56,XDIM=(DIMENSIONS[0]-SPACE*2)/2,YDIM=30, GRACE=grace, CUT=CUT,/CURRENT)
            CBAR = COLOR_BAR_SCALE_NG(PROD=VALIDS('PRODS',PRODS(PTH)),SPECIAL_SCALE=SS(PTH),PX=DIMENSIONS[0]/2,PY=37,CHARSIZE=10,BACKGROUND=255,XDIM=(DIMENSIONS[0]-SPACE*2)/2,YDIM=20,PAL=PAL,$
              TITLE=CBAR_TITLE(PTH),HORIZONTAL=1,BOTTOM=1,FONT='HELVETICA',/CURRENT)
            PRINT, 'Writing file: ' + PNGFILE
            W.SAVE,PNGFILE,RESOLUTION=RES,BIT_DEPTH=2
            W.CLOSE
          ENDFOR ;
                  
          MOVIE_FILE = MAP_OUT+'-'+FILE_LABEL+'-'+'COMBO'+['.MP4'];,'.AVI']
          FOR M=0, N_ELEMENTS(MOVIE_FILE)-1 DO IF UPDATE_CHECK(INFILES=COMBOS,OUTFILES=DIR_MOVIES+MOVIE_FILE(M)) EQ 1 THEN BEGIN
            MAKE_FF_MOVIE,FILES=COMBOS,DIR_OUT=DIR_MOVIES,PAL=PAL,KBPS=KBPS,FPS=20,MAP=MAP_OUT,YOFFSET=YOFFSET,$
              TITLE_FILE_PNG=TITLE_PNGFILE,N_TITLE=15,TITLE_SLIDE=1,END_FILE_PNG=TITLE_PNGFILE,N_END=10,END_SLIDE=1,MOVIE_FILE=MOVIE_FILE(M)
          ENDIF         
        ENDFOR
      ENDFOR
    ENDFOR  
  ENDIF ; DO_SPR_COMPOSITE
  
  
  
  IF DO_SIZE_COMPOSITE GE 1 THEN BEGIN
    OVERWRITE = DO_SIZE_COMPOSITE GT 1
    PAL='PAL_SW3'
    PAL_SW3,R,G,B
    RGB_TABLE = CPAL_READ(PAL)
    FPS = 10
    REPEAT_PNGFILE = 10
    RES = 600
    BUFFER = 1
    BLANK_COLOR = 252
    
    DIR_MOVIES  = !S.PROJECTS + 'MOVIES' + SL
    DIR_COMBO   = !S.PROJECTS + 'MOVIES' + SL + 'MONTH_PHYTO_SIZE_COMBO_BROWSE' + SL & DIR_TEST,DIR_COMBO

    DATA_TYPE = 'STATS'
    TARGET    = 'MEAN.SAVE'
    
    MAP_OUT = ['NORWAY']
    MAP_IN  = ['GEQ']
    
    DO_PRODS   = [0,                0,                0,                      0]
    PRODS      = ['SIZE_CHL',       'SIZE_CHL_PER',   'SIZE_PP',              'SIZE_PP_PER']
    DATASETS   = ['OC-SEAWIFS-9','OC-SEAWIFS-9','PP-SEAWIFS-PAT-9','PP-SEAWIFS-PAT-9']
    FOR P=0, N_ELEMENTS(PRODS) -1 DO BEGIN
      IF DO_PRODS(P) EQ 0 THEN CONTINUE
      DIR   = DATASETS(P) + SL + MAP_IN + SL + DATA_TYPE + SL 
      FILE_LABEL = DATASETS(P) + '-' + PRODS(P) + '-' + DATA_TYPE
      CASE PRODS(P) OF 
        'SIZE_CHL': BEGIN
          CPROD = 'CHLOR_A-PAN'
          MPROD = 'MICRO-PAN'
          NPROD = 'NANOPICO-PAN'
          SS    = ['','','']
          UPRODS = ['CHLOR_A','CHLOR_A','CHLOR_A']
          CBAR_TITLE = UNITS('CHLA')
          SINGLE_CBAR = 1
        END
        'SIZE_CHL_PER': BEGIN
          CPROD = 'CHLOR_A-PAN'
          MPROD = 'MICRO_PERCENTAGE-PAN'
          NPROD = 'NANOPICO_PERCENTAGE-PAN'
          SS    = ['','','']
          UPRODS = ['CHLOR_A','PERCENT','PERCENT']
          CBAR_TITLE = [UNITS('CHLA'),'Percent Microplankton (%)', 'Percent Nano+Picoplankton (%)']
          SINGLE_CBAR = 0
        END
        'SIZE_PP': BEGIN
          CPROD = 'PPD-VGPM2'
          MPROD = 'MICROPP-MARMAP_PAN_VGPM2'
          NPROD = 'NANOPICOPP-MARMAP_PAN_VGPM2'
          SS    = ['','','']
          UPRODS = ['PPD','PPD','PPD']
          CBAR_TITLE = UNITS('PRIMARY_PRODUCTION')
          SINGLE_CBAR = 1
        END
        'SIZE_PP_PER': BEGIN
          CPROD = 'PPD-VGPM2'
          MPROD = 'MICROPP_PERCENTAGE-MARMAP_PAN_VGPM2'
          NPROD = 'NANOPICOPP_PERCENTAGE-MARMAP_PAN_VGPM2'
          SS    = ['','','']
          UPRODS = ['PPD','PERCENT','PERCENT']
          CBAR_TITLE = [UNITS('PRIMARY_PRODUCTION'),'Percent Microplankton (%)', 'Percent Nano+Picoplankton (%)']
          SINGLE_CBAR = 0
        END
      ENDCASE
      
      DIF = 256
      XPOS = [0,256,512]
      YPOS = 80
      CPOS = [XPOS[0],YPOS,XPOS[0]+DIF,YPOS+DIF]  
      MPOS = [XPOS[1],YPOS,XPOS[1]+DIF,YPOS+DIF]
      NPOS = [XPOS(2),YPOS,XPOS(2)+DIF,YPOS+DIF]
      
      FILESC  = FILE_SEARCH(!S.MAIN + 'DATASETS_ARCHIVE' + SL + DIR + CPROD + SL + 'ANNUAL*-'+MAP_IN+'-*'+CPROD + '*' + TARGET)
      FILESM  = FILE_SEARCH(!S.MAIN + 'DATASETS_ARCHIVE' + SL + DIR + MPROD + SL + 'ANNUAL*-'+MAP_IN+'-*'+MPROD + '*' + TARGET)
      FILESN  = FILE_SEARCH(!S.MAIN + 'DATASETS_ARCHIVE' + SL + DIR + NPROD + SL + 'ANNUAL*-'+MAP_IN+'-*'+NPROD + '*' + TARGET)      
      TITLE_PNGFILE = DIR_COMBO+'ANNUAL-'+MAP_OUT+'-'+FILE_LABEL+'-COMBO.PNG'
      IF UPDATE_CHECK(INFILES=[FILESC,FILESM,FILESN],OUTFILES=TITLE_PNGFILE) EQ 1 OR OVERWRITE EQ 1 THEN BEGIN
        W = WINDOW(DIMENSIONS=[768,370],BUFFER=BUFFER)        
        CDATA = STRUCT_SD_READ(FILESC,STRUCT=CSTRUCT,MAP_OUT=MAP_OUT)
        MDATA = STRUCT_SD_READ(FILESM,STRUCT=MSTRUCT,MAP_OUT=MAP_OUT)
        NDATA = STRUCT_SD_READ(FILESN,STRUCT=NSTRUCT,MAP_OUT=MAP_OUT)
        
        IMC = STRUCT_SD_2IMAGE_NG(CSTRUCT,IMG_POSITION=CPOS,USE_PROD=UPRODS[0],SPECIAL_SCALE=SS[0],/ADD_LAND,/ADD_COAST,/DEVICE,/CURRENT)
        IMM = STRUCT_SD_2IMAGE_NG(MSTRUCT,IMG_POSITION=MPOS,USE_PROD=UPRODS[1],SPECIAL_SCALE=SS[1],/ADD_LAND,/ADD_COAST,/DEVICE,/CURRENT)
        IMN = STRUCT_SD_2IMAGE_NG(NSTRUCT,IMG_POSITION=NPOS,USE_PROD=UPRODS(2),SPECIAL_SCALE=SS(2),/ADD_LAND,/ADD_COAST,/DEVICE,/CURRENT)
        TC = TEXT(CPOS[0]+5,CPOS(3)-20,'TOTAL',FONT_STYLE='BOLD',/DEVICE)
        TM = TEXT(MPOS[0]+5,MPOS(3)-20,'MICROPLANKTON',FONT_STYLE='BOLD',/DEVICE)
        TN = TEXT(NPOS[0]+5,NPOS(3)-20,'NANO+PICOPLANKTON',FONT_STYLE='BOLD',/DEVICE)
        
        IF SINGLE_CBAR EQ 1 THEN  CBAR = COLOR_BAR_SCALE_NG(PROD=UPRODS[0],SPECIAL_SCALE=SS[0],PX=192,PY=50,CHARSIZE=12,BACKGROUND=255,XDIM=384,YDIM=20,PAL=PAL,$
          TITLE=CBAR_TITLE[0],HORIZONTAL=1,BOTTOM=1,FONT='HELVETICA',/CURRENT) ELSE BEGIN          
          CBAR = COLOR_BAR_SCALE_NG(PROD=UPRODS[0],SPECIAL_SCALE=SS[0],PX=CPOS[0]+20,PY=50,CHARSIZE=11,BACKGROUND=255,XDIM=216,YDIM=20,PAL=PAL,TITLE=CBAR_TITLE[0],HORIZONTAL=1,BOTTOM=1,FONT='HELVETICA',/CURRENT)
          CBAR = COLOR_BAR_SCALE_NG(PROD=UPRODS[1],SPECIAL_SCALE=SS[1],PX=MPOS[0]+20,PY=50,CHARSIZE=11,BACKGROUND=255,XDIM=216,YDIM=20,PAL=PAL,TITLE=CBAR_TITLE[1],HORIZONTAL=1,BOTTOM=1,FONT='HELVETICA',/CURRENT)
          CBAR = COLOR_BAR_SCALE_NG(PROD=UPRODS(2),SPECIAL_SCALE=SS(2),PX=NPOS[0]+20,PY=50,CHARSIZE=11,BACKGROUND=255,XDIM=216,YDIM=20,PAL=PAL,TITLE=CBAR_TITLE(2),HORIZONTAL=1,BOTTOM=1,FONT='HELVETICA',/CURRENT)            
        ENDELSE    
        PRINT, 'Writing file: ' + TITLE_PNGFILE
        W.SAVE,TITLE_PNGFILE,RESOLUTION=RES,BIT_DEPTH=2
        W.CLOSE
      ENDIF
            
      FILESC  = FILE_SEARCH(!S.MAIN + 'DATASETS_ARCHIVE' + SL + DIR + CPROD + SL + 'MONTH_*-'+MAP_IN+'-*'+CPROD + '*' + TARGET)
      FILESM  = FILE_SEARCH(!S.MAIN + 'DATASETS_ARCHIVE' + SL + DIR + MPROD + SL + 'MONTH_*-'+MAP_IN+'-*'+MPROD + '*' + TARGET)
      FILESN  = FILE_SEARCH(!S.MAIN + 'DATASETS_ARCHIVE' + SL + DIR + NPROD + SL + 'MONTH_*-'+MAP_IN+'-*'+NPROD + '*' + TARGET)
      IF N_ELEMENTS(FILESC) EQ 1 THEN CONTINUE
      FILES = [FILESC,FILESM,FILESN]
      FC = PARSE_IT(FILES)      
      SETS = WHERE_SETS(FC.MONTH_START)
      N_IMAGES = NUM2STR(N_ELEMENTS(SETS))
      COMBOS = []
      FOR STH = 0L, N_ELEMENTS(SETS)-1L DO BEGIN
        AMON = SETS(STH).VALUE
        SUBS = WHERE_SETS_SUBS(SETS(STH))
        SET  = FC(SUBS)        
        CFILE = SET(WHERE(SET.SUB EQ CPROD)).FULLNAME
        MFILE = SET(WHERE(SET.SUB EQ MPROD)).FULLNAME
        NFILE = SET(WHERE(SET.SUB EQ NPROD)).FULLNAME
        FP = PARSE_IT(CFILE)
        
        PNGFILE=DIR_COMBO+FP.PERIOD+'-'+MAP_OUT+'-'+FILE_LABEL+'-COMBO.PNG'
        COMBOS = [COMBOS,REPLICATE(PNGFILE,REPEAT_PNGFILE)]
        IF UPDATE_CHECK(INFILES=[CFILE,MFILE,NFILE],OUTFILES=PNGFILE) EQ 0 AND NOT KEYWORD_SET(OVERWRITE) THEN CONTINUE
        W = WINDOW(DIMENSIONS=[768,370],BUFFER=BUFFER)
        T = TEXT(0.5,0.925,STRUPCASE(MONTH_NAMES(AMON)),ALIGNMENT=0.5,FONT_SIZE=15,FONT_STYLE='BOLD')                     
        CDATA = STRUCT_SD_READ(CFILE,STRUCT=CSTRUCT,MAP_OUT=MAP_OUT)
        MDATA = STRUCT_SD_READ(MFILE,STRUCT=MSTRUCT,MAP_OUT=MAP_OUT)
        NDATA = STRUCT_SD_READ(NFILE,STRUCT=NSTRUCT,MAP_OUT=MAP_OUT)
        
        IMC = STRUCT_SD_2IMAGE_NG(CSTRUCT,IMG_POSITION=CPOS,USE_PROD=UPRODS[0],SPECIAL_SCALE=SS[0],/ADD_LAND,/ADD_COAST,/DEVICE,/CURRENT)
        IMM = STRUCT_SD_2IMAGE_NG(MSTRUCT,IMG_POSITION=MPOS,USE_PROD=UPRODS[1],SPECIAL_SCALE=SS[1],/ADD_LAND,/ADD_COAST,/DEVICE,/CURRENT)
        IMN = STRUCT_SD_2IMAGE_NG(NSTRUCT,IMG_POSITION=NPOS,USE_PROD=UPRODS(2),SPECIAL_SCALE=SS(2),/ADD_LAND,/ADD_COAST,/DEVICE,/CURRENT)
        TC = TEXT(CPOS[0]+5,CPOS(3)-20,'TOTAL',FONT_STYLE='BOLD',/DEVICE)
        TM = TEXT(MPOS[0]+5,MPOS(3)-20,'MICROPLANKTON',FONT_STYLE='BOLD',/DEVICE)
        TN = TEXT(NPOS[0]+5,NPOS(3)-20,'NANO+PICOPLANKTON',FONT_STYLE='BOLD',/DEVICE)
        
        IF SINGLE_CBAR EQ 1 THEN  CBAR = COLOR_BAR_SCALE_NG(PROD=UPRODS[0],SPECIAL_SCALE=SS[0],PX=192,PY=50,CHARSIZE=12,BACKGROUND=255,XDIM=384,YDIM=20,PAL=PAL,$
          TITLE=CBAR_TITLE[0],HORIZONTAL=1,BOTTOM=1,FONT='HELVETICA',/CURRENT) ELSE BEGIN
          
          CBAR = COLOR_BAR_SCALE_NG(PROD=UPRODS[0],SPECIAL_SCALE=SS[0],PX=CPOS[0]+20,PY=50,CHARSIZE=11,BACKGROUND=255,XDIM=216,YDIM=20,PAL=PAL,TITLE=CBAR_TITLE[0],HORIZONTAL=1,BOTTOM=1,FONT='HELVETICA',/CURRENT)
          CBAR = COLOR_BAR_SCALE_NG(PROD=UPRODS[1],SPECIAL_SCALE=SS[1],PX=MPOS[0]+20,PY=50,CHARSIZE=11,BACKGROUND=255,XDIM=216,YDIM=20,PAL=PAL,TITLE=CBAR_TITLE[1],HORIZONTAL=1,BOTTOM=1,FONT='HELVETICA',/CURRENT)
          CBAR = COLOR_BAR_SCALE_NG(PROD=UPRODS(2),SPECIAL_SCALE=SS(2),PX=NPOS[0]+20,PY=50,CHARSIZE=11,BACKGROUND=255,XDIM=216,YDIM=20,PAL=PAL,TITLE=CBAR_TITLE(2),HORIZONTAL=1,BOTTOM=1,FONT='HELVETICA',/CURRENT)
            
        ENDELSE    
        PRINT, 'Writing file: ' + PNGFILE
        W.SAVE,PNGFILE,RESOLUTION=RES,BIT_DEPTH=2
        W.CLOSE
      ENDFOR ;
            
      MOVIE_FILE = MAP_OUT+'-'+FILE_LABEL+'-'+'COMBO-FPS_'+NUM2STR(FPS)+['.MP4'];,'.AVI']
      FOR M=0, N_ELEMENTS(MOVIE_FILE)-1 DO IF UPDATE_CHECK(INFILES=COMBOS,OUTFILES=DIR_COMBO+MOVIE_FILE(M)) EQ 1 THEN BEGIN
        MAKE_FF_MOVIE,FILES=COMBOS,DIR_OUT=DIR_COMBO,PAL=PAL,KBPS=KBPS,FPS=FPS,MAP=MAP_OUT,YOFFSET=YOFFSET,$
          TITLE_FILE_PNG=TITLE_PNGFILE,N_TITLE=15,TITLE_SLIDE=0,END_FILE_PNG=TITLE_PNGFILE,N_END=10,END_SLIDE=0,MOVIE_FILE=MOVIE_FILE(M)
      ENDIF
    ENDFOR
    
  ENDIF  ; DO_SIZE_COMPOSITE
  
   stop
  
  
  END




