; $ID:	VALID_PERIODS.PRO,	2020-06-30-17,	USER-KJWH	$
FUNCTION VALID_PERIODS,INFO ,VALID=VALID, LEN=LEN
;+
;;#########################################################################
;
; THIS FUNCTION RETURNS THE PERIODS BASED ON THE ALLOWABLE PERIODS


; EXAMPLES:
;     P,VALID_PERIODS(['D_19970508','D_19970508'])
;     P,VALID_PERIODS(['D_19970508','D_19970508'],/VALID)
;     ST,VALID_PERIODS('O1997128-L3b_DAY_CHL')
;     
;     
; MODIFICATION HISTORY:
;   FEB 22,2001 WRITTEN BY: J.E. O'REILLY, T. DUCAS, NOAA, 28 TARZWELL DRIVE, NARRAGANSETT, RI 02882
;   JUL 22,2002 JOR ADDED AVHRR_PERIODS > AVHRR
;   AUG 8 2002  JOR (STILL CHANGING AVHRR TO WORK)
;   OCT 21, 2002  ADDED N17,N18 ETC
;   NOV 15, 2010 DWM ARGUMENT /OLD_PARSER TELLS SYSTEM TO USE OLD PERIOD EXTRACTION ROUTINE.
;                 THE NEW EXTRACTION ROUTINE ELIMINATES THE '!', BUT DOES NOT WORK WITH DOWNLOADED HDF FILENAMES.
;                 USER MUST CALL VALID_PERIODS THROUGH PARSE_IT KNOWING WHICH FILES THEY ARE DEALING WITH.
;                 IF USING "PRODUCTS" THEN USE THE NEW VERSION.  IF USING DOWNLOADED HDF FILES, THEN USE THE OLD.
;   FEB 11,2014,JOR REMOVED ALL REFERENCES AND CODE RELATED TO OLD_PARSER
;   OCT 23,2015,JOR NO LONGER RETURNS A STRUCTURE BUT THE PERIOD TAG:




;-
;***************************
ROUTINE_NAME='VALID_PERIODS'
;***************************
  DELIM = DELIMITER(/DASH)
; *******************************************************************************
; *******************   ALLOWABLE PERIODS ***************************************
; *******************************************************************************
  PERIOD_CODE = VALID_PERIOD_CODES();PERIOD_CODE_LEN=PERIOD_CODE_LEN, FIRST_LEN=FIRST_LEN,  SECOND_LEN=SECOND_LEN,PERIOD_TYPE = PERIOD_TYPE)


  IF NONE(INFO) THEN RETURN, PERIOD_CODE


  TEXT = STRARR(N_ELEMENTS(INFO))
  _VALID = INTARR(N_ELEMENTS(INFO))
  _VALID(*) = 0

  S_PER = PERIOD_2STRUCT(STRUPCASE(INFO))

  IF KEYWORD_SET(VALID) THEN BEGIN
    OK = WHERE(S_PER.DATE_START NE '',COUNT)
    IF COUNT GE 1 THEN _VALID[OK] = 1
    IF N_ELEMENTS(_VALID) EQ 1 THEN RETURN, _VALID[0] ELSE RETURN, _VALID
  ENDIF
  RETURN, S_PER.PERIOD

END; #####################  END OF ROUTINE ################################
