; $ID:	PLT_TOPO.PRO,	2020-06-30-17,	USER-KJWH	$
; 
FUNCTION PLT_TOPO, MAPP, LEVELS, THICKS=THICKS, COLORS=COLORS, VERBOSE=VERBOSE, VIEW=VIEW, FACT=FACT, SMO=SMO, PNGFILE=PNGFILE, PAL=PAL, LABEL=LABEL
; #########################################################################; 
;+
; PURPOSE:  THIS PROGRAM READS TOPO 'DEG' FILES AND PLOTS LON, LAT DATA

; CATEGORY: PLT_ FAMILY;
;
; CALLING SEQUENCE: 
;
; INPUTS: MAPP ..... STANDARD MAP NAME
;         LEVELS.... ELEVATIONS [VALUES GE 0 ] OR DEPTHS [LT 0] [METERS, MAY BE MULTIPLE VALUES]
;
;
; KEYWORDS:
;     THICKS..... ARRAY OF LINE THICKNESS FOR LEVELS [DEPTHS]
;     COLORS..... ARRAY OF COLORS FOR LEVELS [DEPTHS]
;     VERBOSE.... PRINTS PROGRAM PROGRESS 
;     FACT........USED TO DETERMINE THE PXY SIZE:'PXY_8640_4320','PXY_34560_17280', OR 'PXY_43200_21600' 
;     SMO........ WIDTH TO USE TO SMOOTH CONTOUR CURVES [IF NONE THEN NO SMOOTHING DONE]
;     BYT........ BYTE ARRAY PASSED TO THIS PROGRAM [E.G. FROM TOPO_VIEW]
;     PAL........ PAL PROGRAM NAME
;     LABEL...... LABEL CONTOUR LINES USING XYOUTS

; OUTPUTS: PLOTS THE DEPTH CONTOURS AND MAKES A PNG
;
;; EXAMPLES:
;      TP = PLT_TOPO('NEC',-[10,20,50,100,200,1000,2000],FACT = 10,COLOR = 230)
;      TP = PLT_TOPO('EC', -[10,20,50,100,200,1000,2000],FACT = 4,COLOR = 230)
;
; MODIFICATION HISTORY:
;     DEC 24, 2015  WRITTEN BY: J.E. O'REILLY
;     DEC 30, 2015 - JEOR: Refinements
;     JAN 06, 2016 - JEOR: Added keywords FACT (factor) to check if the byte value is provided
;     JAN 10, 2016 - JEOR: Added keywords LABEL, FONT_HELVETICA, and CHARSIZE
;     MAY 31, 2017 - KJWH: Changed the name from PLT_DEG to PLT_TOPO to make it more clear that the program is plotting the topography/bathymetry
;                          Removed FONT_HELVETICA
;                          Reorganized and updated formatting
;     FEB 19, 2019 - KWJH: Changed from a program to a function to return the bathy lines  
;                          Now can plot the bathy line(s) using the keyword VIEW and/or save the image if the PNGFILE keyword is supplied
;                          Now returns a blank images with just the bathy lines
;                          Updated formatting 
;-
; #########################################################################

;************************
  ROUTINE_NAME  = 'PLT_TOPO'
;************************
  IF NONE(MAPP) OR NONE(LEVELS) THEN MESSAGE,'ERROR: MUST PROVIDE MAPP & LEVELS'
  
  IF NONE(FACT) THEN FACT = 10
  IF NONE(LABEL) THEN LABEL = 1
  IF NONE(CHARSIZE) THEN CHARSIZE = 2.0
  IF NONE(VERBOSE) THEN VERBOSE = 0
  
  IF NONE(THICKS) THEN THICKS = REPLICATE(1,NOF(LEVELS))
  IF NOF(THICKS) NE NOF(LEVELS) THEN THICKS = REPLICATE(THICKS[0],NOF(LEVELS))
  IF NONE(COLORS) THEN COLORS = REPLICATE(1,NOF(LEVELS))
  IF NOF(COLORS) NE NOF(LEVELS) THEN COLORS = REPLICATE(COLORS[0],NOF(LEVELS))
  IF WHERE(COLORS EQ 255,/NULL) NE [] THEN FILL = 0 ELSE FILL = 255
  IF NONE(MIN_PTS) THEN MIN_PTS = 100 ; MIN NUM OF POINTS NEEDED TO LABEL A CONTOUR
  

  
;===> ALL THE DEG FILES WERE MADE USING THE SMI MAP AT VARIOUS RESOLUTIONS [PX & PY]
  M = MAPS_SIZE(MAPP) & PX = M.PX & PY = M.PY

;===> MAKE A PXY STRING TO USE WHEN FINDING THE DEG FILES
  PXY = 'PXY_' + ROUNDS(PX*FACT) + '_' + ROUNDS(PY* FACT)

  CLOSE,/ALL
  FMT = '(2F16.5)'
  NUM = 0.0
  TT = TOPO_TAGS(MAPP,LEVELS)
  TOPO_2DEG, MAPP, LEVELS, OUTFILES=FILES
  IF N_ELEMENTS(FILES) LT 1 THEN GOTO,DONE;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
  
  MAPS_SET, MAPP
  ERASE,255
  MASK = READ_LANDMASK(MAPP)
  OK = WHERE(MASK EQ 0,COUNT)
  IF COUNT GE 1 THEN MASK[OK] = 255
  ;IF NONE(PAL) THEN PAL_LANDMASK,R,G,B  ELSE CALL_PROCEDURE,PAL,R,G,B
  
  
  BLANK = MAPS_BLANK(MAPP,FILL=FILL)
  TV, BLANK
  IF NONE(PAL) THEN PAL_BATHY,R,G,B    ELSE CALL_PROCEDURE,PAL,R,G,B
  
;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
  FOR NTH = 0,NOF(LEVELS)-1 DO BEGIN
    LEVEL = LEVELS[NTH]
    THICK = THICKS[NTH]
    COLOR = COLORS[NTH]
    TT = TOPO_TAGS(MAPP,LEVEL) 
    OK = WHERE_STRING(FILES,TT.TAG + '-',COUNT)
    IF COUNT NE 1 THEN CONTINUE;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    FILE = FILES[OK]
    IF KEY(VERBOSE) THEN PFILE,FILE,/R
    OPENR,LUN,FILE,/GET_LUN
    WHILE NOT EOF(LUN) DO BEGIN
      READF,LUN,NUM,LEVEL,FORMAT=FMT
      LONS = DBLARR(NUM) & LONS[*] = MISSINGS(LONS)
      LATS = DBLARR(NUM) & LATS[*] = MISSINGS(LATS)
      READF,LUN,LONS,LATS,FORMAT=FMT
      IF KEY(SMO) THEN BEGIN
        LONS = SMOOTH(LONS,SMO <NOF(LONS)-1)
        LATS = SMOOTH(LATS,SMO <NOF(LATS)-1)
      ENDIF;IF KEY(SMO) THEN BEGIN
      PLOTS,LONS,LATS,COLOR = COLOR,THICK = THICK
    ENDWHILE;WHILE NOT EOF(LUN) DO BEGIN
    CLOSE,LUN    
  ENDFOR;FOR NTH = 0,NOF(LEVELS)-1 DO BEGIN
;FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
  IM = TVRD()
  ZWIN
  
  OK = WHERE(IM NE 255)
  MASK[OK] = IM[OK]
  
  IF KEY(VIEW) THEN IMGR, MASK, PROD='DEPTH'
  
  IF VERBOSE THEN  PFILE,PNGFILE
  IF KEY(PNGFILE) THEN WRITE_PNG,PNGFILE,IM,R,G,B
  
  RETURN, IM

  DONE:
END; #####################  END OF ROUTINE ################################
